{"version":3,"sources":["core/converters/json.ts","core/interpreters/sql.ts","core/interpreters/code.ts","state/State.ts","reducers/reducers.ts","store/persistence.ts","store/store.ts","themes/themes.ts","components/Header.tsx","components/source/RequestHeader.tsx","components/source/RequestSource.tsx","components/LateralMenu.tsx","components/App.tsx","registerServiceWorker.ts","index.tsx","core/logging/logger.ts","actions/actions.ts","hooks/hooks.ts","store/selectors.ts","components/common/ErrorBoundary.tsx","core/converters/string.ts","models/array.ts","components/App.module.scss"],"names":["jsonBeautify","str","trim","parsed","jsonParseSafe","JSON","stringify","error","logError","safeStr","replace","parse","map","v","fields","source","constructor","nodes","Star","Array","isArray","x","mapObject","executeQuery","sqlTree","sourceDataObject","fromPath","name","values","length","shift","result","_","chain","get","value","filter","where","conditions","leftValue","left","rightValue","right","operation","compareOperands","orderBy","order","orderings","undefined","direction","take","limit","toLowerCase","path","newPath","computePath","toLocaleLowerCase","startsWith","endsWith","includes","substring","indexOf","mapped","temp","forEach","field","val","index","alias","key","value2","codeEvaluation","sourceString","queryString","mode","jsEvaluation","Error","e","sqlEvaluation","window","lodash","code","evaluatedQuery","eval","apply","getDefaultAppState","initialStateJson","defaultAppState","emptyState","text","autoFormat","query","output","match","obj","objSize","searchTerm","selectedTab","table","columns","displayedColumns","isModalOpen","groupBy","rootReducer","rootState","action","type","newState","newOutputState","state","active","computeOutput","previousState","errorMessage","message","outputObject","keyMap","d","Object","is","keys","arrayElementName","sort","ax","b","localeCompare","tab","containsTerm","src","filteredObj","containsIgnoreCase","from","k","getOwnPropertyNames","propertyName","propertyNameContains","splice","groupByList","gb","rootReducers","combineReducers","app","undoable","undoType","redoType","userSettings","globalTheme","editorTheme","theme","persist","storage","getStorage","toBeSaved","setItem","toast","warn","prettyPrintBytes","load","getDefault","savedStateString","getItem","loadFromStorage","merge","localStorage","sessionStorage","configureStore","appState","userSettingsState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","past","present","future","_latestUnfiltered","group","subscribe","appstate","getState","themeDeps","Map","importThemeStyleCustom","themeLoader","next","availableGeneralThemes","availableEditorThemes","ThemeDropDownItem","props","setTheme","reloadOnChange","onClick","useCallback","setTimeout","location","reload","DropdownItem","connect","currentTheme","getTheme","currentEditorTheme","getEditorTheme","setGeneralTheme","switchTheme","setEditorTheme","switchEditorTheme","memo","withErrorBoundary","useToggleState","isOpen","switchIsOpen","dropDownIsOpen","toggleDropdown","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","Dropdown","toggle","DropdownToggle","nav","caret","DropdownMenu","header","NavItem","NavLink","version","RenderHeaderInput","onRemove","onChange","id","onKeyChange","target","onValueChange","onRemoveCallback","placeholder","Button","outline","HeaderList","headers","h","onChangeCallback","setSource","updateSource","onFinish","useChangeEventState","method","setMethod","url","setUrl","body","setBody","useState","setHeaders","setError","hasBody","setHasBody","submit","a","request","Request","fetch","json","customToString","FormGroup","htmlFor","defaultValue","Form","inline","hidden","block","Alert","stack","getSourceAutoFormat","canUndo","getCanUndo","canRedo","getCanRedo","getQueryMode","onFileContentReady","onReset","resetEditor","onClear","clearEditor","onUndo","undo","onRedo","redo","changeAutoFormat","updateAutoFormatSource","setQueryMode","updateQueryMode","dropdownIsOpen","modalIsOpen","toggleModal","modeOpen","switchModeOpen","setJsMode","setSqlMode","handleFileChange","logInfo","files","fileReader","FileReader","onload","toString","readAsText","handleAutoFormatChange","ButtonGroup","vertical","size","disabled","Label","check","ButtonDropdown","style","display","Modal","role","ModalHeader","ModalBody","ModalFooter","SourceEditor","lazy","Output","QueryEditor","App","fallback","styles","Boolean","hostname","Promise","all","promises","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","payload","console","info","updateQuery","toggleOutputTableModal","updateTableColumns","updateTableGroupBy","updateSearchTerm","updateOutputTabSelection","initial","setValue","initialValue","event","getOutputErrorMessage","getOutputIsArray","getOutputActiveTab","getOutputObject","getOutputObjectSize","getOutputSearchTerm","getOutputSearchMatch","getisOutputTableModalOpen","getdisplayedColumns","getOutputarray","getColumns","getGroupBy","getQueryText","getSourceText","ErrorBoundary","this","setState","notify","children","position","hideProgressBar","autoClose","Component","Wrapped","join","part","UNITS","toLocaleString","locale","signed","Number","isFinite","TypeError","isNegative","prefix","numberStr","exponent","Math","min","floor","log10","pow","toPrecision","numberString","unit","module","exports"],"mappings":"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","file":"static/js/main.f3e70e43.chunk.js","sourcesContent":["import { logError } from 'core/logging/logger'\n\nexport const jsonBeautify = (str: string) => {\n  if (!str || str.trim() === '') {\n    return ''\n  }\n\n  const parsed = jsonParseSafe(str)\n  if (typeof parsed === 'string') {\n    return parsed\n  }\n\n  try {\n    return JSON.stringify(parsed, null, 2)\n  } catch (error) {\n    logError(error, str)\n  }\n  return str\n}\n\nexport const jsonParseSafe = (str: string) => {\n  if (!str || str.trim() === '') {\n    return null\n  }\n\n  const safeStr = str\n    .replace(/\\\\n/g, '\\\\n')\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, '\\\\&')\n    .replace(/\\\\r/g, '\\\\r')\n    .replace(/\\\\t/g, '\\\\t')\n    .replace(/\\\\b/g, '\\\\b')\n    .replace(/\\\\f/g, '\\\\f')\n  // .replace(/[\\u0000-\\u0019]+/g, '')\n\n  try {\n    return JSON.parse(safeStr)\n  } catch (error) {\n    return str\n  }\n}\n","import _ from 'lodash'\nimport { parse, nodes, Op, Field, SQLTree, Source } from 'sql-parser'\nimport { jsonParseSafe } from '../converters/json'\n\nexport const computePath = (path: string[]) => {\n  if (!path || path.length === 0) {\n    return []\n  }\n  if (path[0] === 'data') {\n    const newPath = [...path]\n    newPath.shift()\n    return newPath\n  }\n\n  return path\n}\n\nexport const sqlEvaluation = (sourceString: string, queryString: string) => {\n  try {\n    const sqlTree = parse(queryString.replace(/--(.*?)(\\n|$)/gm, ''))\n    if (sqlTree.source.name.values[0] !== 'data') {\n      return new Error(`${sqlTree.source.name.values[0]} table does not exist`)\n    }\n\n    const sourceDataObject = jsonParseSafe(sourceString)\n\n    const result = executeQuery(sqlTree, sourceDataObject)\n\n    return JSON.stringify(result)\n  } catch (e) {\n    return e as Error\n  }\n}\n\nconst map = (v: object, fields: Field[], source: Source) => {\n  if (fields[0].constructor === nodes.Star) {\n    return v\n  }\n\n  if (Array.isArray(v)) {\n    return v.map(x => mapObject(fields, x, source))\n  }\n\n  return mapObject(fields, v, source)\n}\n\nconst executeQuery = (sqlTree: SQLTree, sourceDataObject: object) => {\n  let fromPath: string[] = []\n\n  if (sqlTree.source.name.values && sqlTree.source.name.values.length > 1) {\n    if (sqlTree.source.name.values[0] === 'data') {\n      fromPath = [...sqlTree.source.name.values]\n      fromPath.shift()\n    }\n  }\n\n  let result = _.chain(sourceDataObject)\n\n  if (fromPath && fromPath.length > 0) {\n    result = result.get(fromPath)\n  }\n  sourceDataObject = result.value()\n  if (_.isArray(sourceDataObject)) {\n    return result\n      .filter(v => {\n        if (!sqlTree.where || !sqlTree.where.conditions) {\n          return true\n        }\n        const leftValue = sqlTree.where.conditions.left\n        const rightValue = sqlTree.where.conditions.right\n        const operation = sqlTree.where.conditions.operation\n        return compareOperands(operation, leftValue, rightValue, v)\n      })\n      .orderBy(\n        sqlTree.order ? sqlTree.order.orderings.map(x => x.value.value) : undefined,\n        sqlTree.order ? sqlTree.order.orderings.map(x => x.direction) : undefined\n      )\n      .map(v => map(v, sqlTree.fields, sqlTree.source))\n      .take(\n        sqlTree.limit && typeof sqlTree.limit.value.value === 'number' ? sqlTree.limit.value.value : 999999999999999\n      )\n      .value()\n  } else {\n    return map(sourceDataObject, sqlTree.fields, sqlTree.source)\n  }\n}\n\nconst compareOperands = (operation: string | null, left: Op, right: Op, value: object): boolean => {\n  if (!operation) {\n    return false\n  }\n\n  if (operation.toLowerCase() === 'or') {\n    return (\n      compareOperands(left.operation, left.left, left.right, value) ||\n      compareOperands(right.operation, right.left, right.right, value)\n    )\n  }\n\n  if (operation.toLowerCase() === 'and') {\n    return (\n      compareOperands(left.operation, left.left, left.right, value) &&\n      compareOperands(right.operation, right.left, right.right, value)\n    )\n  }\n\n  if (!left.value) {\n    return false\n  }\n\n  const leftValue = _.get(value, computePath(left.values))\n\n  if (operation === '=' && leftValue === right.value) {\n    return true\n  }\n  if (operation.toLowerCase() === 'is' && leftValue === right.value) {\n    return true\n  }\n  if (operation === '!=' && leftValue !== right.value) {\n    return true\n  }\n  if (operation.toLowerCase() === 'is not' && leftValue !== right.value) {\n    return true\n  }\n  if (operation === '<>' && leftValue !== right.value) {\n    return true\n  }\n\n  if (operation.toLocaleLowerCase() === 'like' && typeof right.value === 'string' && typeof leftValue === 'string') {\n    if (right.value.startsWith('%') && right.value.endsWith('%')) {\n      if (leftValue.includes(right.value.substring(1, right.value.length - 1))) {\n        return true\n      }\n    } else if (right.value.startsWith('%')) {\n      if (leftValue.endsWith(right.value.substring(right.value.indexOf('%') + 1))) {\n        return true\n      }\n    } else if (right.value.endsWith('%')) {\n      if (leftValue.startsWith(right.value.substring(0, right.value.indexOf('%')))) {\n        return true\n      }\n    }\n  }\n\n  if (right.value) {\n    if (operation === '>' && leftValue > right.value) {\n      return true\n    }\n    if (operation === '>=' && leftValue >= right.value) {\n      return true\n    }\n    if (operation === '<' && leftValue < right.value) {\n      return true\n    }\n    if (operation === '<=' && leftValue <= right.value) {\n      return true\n    }\n  }\n\n  if (\n    operation.toLowerCase() === 'in' &&\n    Array.isArray(right.value) &&\n    right.value.filter(x => x.value === leftValue).length > 0\n  ) {\n    return true\n  }\n\n  return false\n}\n\nconst mapObject = (fields: Field[], mapped: object, source: Source) => {\n  const temp: {\n    [key: string]: any\n  } = {}\n  fields.forEach(field => {\n    const value = _.get(\n      mapped,\n      field.field.values.filter((val, index) => !(index === 0 && source.alias && val === source.alias.value))\n    )\n    let key = field.field.value\n    if (field.field.value2) {\n      key = field.field.value2\n    }\n    if (field.name) {\n      key = field.name.value\n    }\n    temp[key] = value\n  })\n  mapped = temp\n  return mapped\n}\n","import { QueryMode } from 'state/State'\nimport { sqlEvaluation } from './sql'\nimport lodash from 'lodash'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode) => {\n  if (!sourceString || !queryString) {\n    return ''\n  }\n  if (mode === 'Javascript') {\n    return jsEvaluation(sourceString, queryString)\n  } else if (mode === 'SQL') {\n    return sqlEvaluation(sourceString, queryString)\n  }\n\n  return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string): null | string | Error => {\n  if (!sourceString || sourceString.trim() === '') {\n    return null\n  }\n\n  if (!queryString || queryString.trim() === '') {\n    return null\n  }\n\n  try {\n    ;(window as any)._ = lodash\n    const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString}) \n      `\n    // eslint-disable-next-line\n    const evaluatedQuery = eval.apply(null, [code]) // DANGEROUS\n    const type = typeof evaluatedQuery\n    if (type !== 'string') {\n      return null\n    }\n    return evaluatedQuery as string\n  } catch (error) {\n    return error\n  } finally {\n    ;(window as any)._ = undefined\n  }\n}\n","import initialStateJson from './default-state.json'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\nimport { DeepReadonly } from 'utility-types'\nimport { PropType as PropertyTypeOf } from 'core/misc/utils'\nimport { StateWithHistory } from 'redux-undo'\n\nexport type itemType = any\n\nexport type All = PropertyTypeOf<AppState>\nexport type AppState = DeepReadonly<{\n  source?: SourceState\n  query?: QueryState\n  output?: OupoutState\n  error?: Error\n}>\nexport type QueryState = DeepReadonly<{\n  text?: string\n  mode?: QueryMode\n}>\nexport type SourceState = DeepReadonly<{\n  text?: string\n  autoFormat?: boolean\n}>\nexport type OupoutState = DeepReadonly<{\n  searchTerm?: string\n  match?: boolean\n  selectedTab?: tabType\n  obj?: object | null\n  objSize?: number\n  errorMessage?: string\n  table?: OupoutTableState\n}>\nexport type OupoutTableState = DeepReadonly<{\n  isArray?: boolean\n  isModalOpen?: boolean\n  displayedColumns?: readonly string[]\n  columns?: readonly string[]\n  groupBy?: readonly string[]\n}>\nexport type UserSettingsState = DeepReadonly<{\n  globalTheme?: GeneralTheme\n  editorTheme?: EditorTheme\n}>\n\nexport type tabType = 'RawJson' | 'Table'\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type RootState = DeepReadonly<{\n  app?: StateWithHistory<AppState>\n  userSettings?: UserSettingsState\n}>\n\nexport const getDefaultAppState = () => initialStateJson as AppState\nexport const defaultAppState = initialStateJson as AppState\nexport const getDefaultUserSettingsState = () =>\n  ({\n    globalTheme: 'pulse',\n    editorTheme: 'github',\n  } as const)\n\nexport const emptyState = {\n  source: { text: '', autoFormat: true },\n  query: { text: '', mode: 'SQL' },\n  output: {\n    match: false,\n    obj: {},\n    objSize: 2,\n    searchTerm: '',\n    selectedTab: 'RawJson',\n    table: {\n      isArray: false,\n      columns: [],\n      displayedColumns: [],\n      isModalOpen: false,\n      groupBy: [],\n    },\n  },\n} as const\n","import { combineReducers } from 'redux'\nimport { Action } from 'actions/actions'\nimport { codeEvaluation } from 'core/interpreters/code'\nimport { jsonParseSafe, jsonBeautify } from 'core/converters/json'\nimport {\n  OupoutState,\n  getDefaultAppState,\n  itemType,\n  getDefaultUserSettingsState,\n  QueryMode,\n  tabType,\n  emptyState,\n  AppState,\n  UserSettingsState,\n  OupoutTableState,\n  defaultAppState,\n  SourceState,\n  QueryState,\n} from 'state/State'\nimport { containsIgnoreCase } from 'core/converters/string'\nimport { arrayElementName } from 'models/array'\nimport undoable from 'redux-undo'\n\nexport const rootReducer = (rootState = getDefaultAppState(), action: Action) => {\n  if (action.type === 'CLEAR_EDITOR') {\n    return emptyState\n  }\n\n  const newState =\n    rootState && rootState.query && rootState.source\n      ? {\n          ...rootState,\n          query: query(rootState.query, action),\n          source: source(rootState.source, action),\n        }\n      : {}\n\n  const newOutputState = output(rootState, newState, action)\n  return {\n    ...newState,\n    output: {\n      ...newOutputState,\n      table: table(newOutputState ? newOutputState.table : {}, action),\n    },\n  }\n}\n\nexport const source = (state: SourceState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_SOURCE_TEXT':\n      return {\n        ...state,\n        text: state && state.autoFormat ? jsonBeautify(action.source.trim()) : action.source,\n      }\n    case 'UPDATE_AUTOFORMAT_SOURCE':\n      return {\n        ...state,\n        text: action.active\n          ? state && state.text && jsonBeautify(state.text.trim())\n          : state && state.text\n          ? state.text\n          : '',\n        autoFormat: action.active,\n      }\n    default:\n      return state\n  }\n}\n\nexport const userSettings = (state: UserSettingsState | undefined = getDefaultUserSettingsState(), action: Action) => {\n  switch (action.type) {\n    case 'SWITCH_GLOBAL_THEME':\n      return { ...state, globalTheme: action.theme }\n    case 'SWITCH_EDITOR_THEME':\n      return { ...state, editorTheme: action.theme }\n    default:\n      return state\n  }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_QUERY':\n      return {\n        ...state,\n        text: action.query,\n      }\n    case 'UPDATE_QUERY_MODE':\n      return {\n        ...state,\n        mode: action.mode,\n        text:\n          action.mode === 'SQL'\n            ? defaultAppState && defaultAppState.query\n              ? defaultAppState.query.text\n              : ''\n            : \"// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// you can use lodash helper functions. see https://lodash.com/docs/\\n// ex: _.chain(data).orderBy('age', 'desc')\\n\\n      data\\n    \",\n      } as const\n    default:\n      return state\n  }\n}\n\nexport const computeOutput = (\n  previousState: OupoutState,\n  sourceString: string,\n  queryString: string,\n  action: Action,\n  mode: QueryMode\n) => {\n  const text = codeEvaluation(sourceString, queryString, mode)\n\n  if (!text) {\n    return {\n      selectedTab: 'RawJson',\n      obj: null,\n      objSize: 0,\n      searchTerm: '',\n      match: false,\n      table: {\n        isArray: false,\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    } as const\n  }\n  if (text instanceof Error) {\n    return {\n      selectedTab: 'RawJson',\n      obj: null,\n      objSize: 0,\n      searchTerm: '',\n      match: false,\n      errorMessage: text.message,\n      table: {\n        isArray: false,\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    } as const\n  }\n\n  let displayedColumns = new Array<string>()\n  const outputObject: itemType[] | object = jsonParseSafe(text)\n  if (Array.isArray(outputObject)) {\n    const keyMap: { [key: string]: string } = {}\n    outputObject.forEach(d => {\n      if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n        const keysToAdd = d ? (typeof d === 'object' ? Object.keys(d) : [arrayElementName]) : []\n        keysToAdd.forEach(key => (keyMap[key] = key))\n      }\n    })\n    displayedColumns = Object.keys(keyMap)\n      .filter(key => key && typeof key === 'string' && key.trim() !== '')\n      .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n  }\n  const isModalOpen =\n    previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n      ? previousState && !previousState.table.isModalOpen\n      : previousState && previousState.table\n      ? previousState.table.isModalOpen\n      : false\n\n  let selectedTab: tabType = Array.isArray(outputObject) ? 'Table' : 'RawJson'\n\n  if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n    selectedTab = action.tab\n  }\n  return {\n    selectedTab,\n    obj: outputObject,\n    objSize: text ? text.length : 0,\n    searchTerm: '',\n    match: false,\n    table: {\n      isArray: Array.isArray(outputObject),\n      isModalOpen,\n      displayedColumns,\n      columns: displayedColumns,\n      groupBy: [],\n    },\n  } as const\n}\n\nexport const output = (previousState: AppState, newState: AppState, action: Action) => {\n  switch (action.type) {\n    case 'EVALUATE_CODE':\n    case 'UPDATE_QUERY':\n    case 'UPDATE_SOURCE_TEXT':\n      if (\n        previousState &&\n        previousState.source &&\n        newState &&\n        newState.source &&\n        previousState.query &&\n        newState.query &&\n        previousState.source.text === newState.source.text &&\n        previousState.query.text === newState.query.text\n      ) {\n        return previousState.output\n      }\n      if (newState && newState.output) {\n        return computeOutput(\n          newState.output,\n          newState.source && newState.source.text ? newState.source.text : '',\n          newState.query && newState.query.text ? newState.query.text : '',\n          action,\n          newState.query && newState.query.mode ? newState.query.mode : 'SQL'\n        )\n      }\n      break\n    case 'TOGGLE_OUTPUT_TABLE_MODAL':\n      return newState\n        ? {\n            ...newState.output,\n            table: {\n              ...(newState.output ? newState.output.table : {}),\n              isModalOpen: newState.output && newState.output.table ? !newState.output.table.isModalOpen : false,\n            },\n          }\n        : {}\n    case 'UPDATE_OUTPUT_TAB_SELECTION':\n      if (newState) {\n        return {\n          ...newState.output,\n          selectedTab: action.tab,\n        }\n      }\n      break\n    case 'UPDATE_OUTPUT_SEARCH_TERM':\n      if (newState && newState.output) {\n        return {\n          ...filter(newState.output, action.searchTerm),\n          searchTerm: action.searchTerm,\n          selectedTab: 'RawJson',\n        } as const\n      }\n      break\n    default:\n      if (newState && newState.output) {\n        return computeOutput(\n          newState.output,\n          newState.source && newState.source.text ? newState.source.text : '',\n          newState.query && newState.query.text ? newState.query.text : '',\n          action,\n          newState.query && newState.query.mode ? newState.query.mode : 'SQL'\n        )\n      }\n      break\n  }\n  return {}\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n  if (typeof src !== 'string' && typeof src !== 'object') {\n    return { match: false, filteredObj: src }\n  }\n\n  if (typeof src === 'string') {\n    if (containsIgnoreCase(src, searchTerm)) {\n      return { match: true, filteredObj: src }\n    }\n    return { match: false, filteredObj: src }\n  }\n  const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n  const keys = Array.isArray(obj)\n    ? Array.from({ length: obj.length }, (_, k) => k)\n    : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n  let result = false\n\n  for (const propertyName of keys) {\n    const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n    if (propertyNameContains) {\n      result = true\n      continue\n    }\n    const child = obj[propertyName]\n    const { match, filteredObj } = containsTerm(child, searchTerm)\n    if (propertyNameContains || match) {\n      result = true\n      obj[propertyName] = filteredObj\n    } else {\n      if (Array.isArray(obj) && typeof propertyName === 'number') {\n        obj.splice(propertyName, 1)\n      } else {\n        delete obj[propertyName]\n      }\n    }\n  }\n  if (!result) {\n    if (!Array.isArray(obj)) {\n      ;(keys as string[]).forEach((propertyName: string) => delete obj[propertyName])\n    } else {\n      obj.length = 0\n    }\n  }\n  return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n  if (!searchTerm || searchTerm.trim() === '' || !state) {\n    return { ...state, match: false }\n  }\n  const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n  if (match) {\n    return { ...state, obj: filteredObj, match }\n  }\n\n  return state\n}\n\nexport const table = (state: OupoutTableState | undefined, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      let groupByList = state && state.groupBy ? state.groupBy : []\n      groupByList.forEach(groupBy => {\n        if (action.columns.indexOf(groupBy) === -1) {\n          groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n        }\n      })\n      return {\n        ...state,\n        displayedColumns: action.columns,\n        groupBy: groupByList,\n      }\n    case 'UPDATE_TABLE_GROUP_BY':\n      return {\n        ...state,\n        groupBy: action.groupBy\n          .filter(gb => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1)\n          .filter(gb => gb !== 'Group by...'),\n      }\n    default:\n      return state\n  }\n}\n\nexport const rootReducerReset = (state = getDefaultAppState(), action: Action) => {\n  if (action.type === 'RESET_EDITOR') {\n    return rootReducer({ ...getDefaultAppState() }, action)\n  }\n  return rootReducer(state, action)\n}\nconst rootReducers = combineReducers({\n  app: undoable(rootReducerReset, { undoType: 'APP_UNDO', redoType: 'APP_REDO' }),\n  userSettings,\n})\nexport default rootReducers\n","import { AppState, UserSettingsState, getDefaultAppState, getDefaultUserSettingsState } from 'state/State'\nimport { logError } from 'core/logging/logger'\nimport lodash from 'lodash'\nimport { toast } from 'react-toastify'\nimport { prettyPrintBytes } from 'core/converters/string'\n\nexport const persistAppState = (appstate: AppState) => {\n  persist('keyrier-json.app.state', appstate)\n}\n\nexport const persistUserSettings = (userSettings: UserSettingsState) => {\n  persist('keyrier-json.user.settings', userSettings)\n}\n\nexport const getUserSettings = () => load('keyrier-json.user.settings') as UserSettingsState\nexport const getAppState = () => load('keyrier-json.app.state') as AppState\n\ntype StorageKey = 'keyrier-json.app.state' | 'keyrier-json.user.settings'\n\nconst persist = (key: StorageKey, value: object | undefined) => {\n  const storage = getStorage()\n  if (!storage) {\n    toast.warn(\"Browser does'nt support required storage\")\n    return\n  }\n  const toBeSaved = JSON.stringify(value)\n  try {\n    storage.setItem(key, toBeSaved)\n  } catch (error) {\n    toast.warn(`Error while saving ${key} to storage. size: ${prettyPrintBytes(toBeSaved.length)}`)\n  }\n}\n\nconst loadFromStorage = (key: StorageKey) => {\n  const storage = getStorage()\n  if (storage) {\n    return storage.getItem(key)\n  }\n  return null\n}\n\nconst getDefault = (key: StorageKey) => {\n  switch (key) {\n    case 'keyrier-json.app.state':\n      return getDefaultAppState()\n    case 'keyrier-json.user.settings':\n      return getDefaultUserSettingsState()\n    default:\n      throw new Error(`no defaul value for ${key}`)\n  }\n}\n\nconst load = (key: StorageKey) => {\n  let state = getDefault(key)\n  try {\n    const savedStateString = loadFromStorage(key)\n    if (savedStateString) {\n      state = JSON.parse(savedStateString)\n      state = lodash.merge({}, state)\n    }\n  } catch (error) {\n    logError(error)\n  }\n\n  return state\n}\n\nconst getStorage = () => {\n  if (window.localStorage) {\n    return window.localStorage\n  }\n  if (window.sessionStorage) {\n    return window.sessionStorage\n  }\n  return null\n}\n","import { createStore, compose } from 'redux'\nimport rootReducers from 'reducers/reducers'\nimport { persistAppState, persistUserSettings, getAppState, getUserSettings } from './persistence'\n\nexport const configureStore = () => {\n  const appState = getAppState()\n  const userSettingsState = getUserSettings()\n\n  const composeEnhancers =\n    typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose\n\n  const store = createStore(\n    rootReducers,\n    {\n      app: {\n        past: [],\n        present: appState,\n        future: [],\n        _latestUnfiltered: appState,\n        group: undefined,\n        index: undefined,\n        limit: undefined,\n      },\n      userSettings: userSettingsState,\n    },\n    composeEnhancers()\n  )\n\n  store.subscribe(() => {\n    persistAppState(store.getState().app.present)\n    persistUserSettings(store.getState().userSettings)\n  })\n\n  return store\n}\n","import { logError } from 'core/logging/logger'\n\nexport const themeDeps = new Map([\n  [\n    'materia' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css'),\n  ],\n  [\n    'darkly' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css'),\n  ],\n  [\n    'sandstone' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css'),\n  ],\n  [\n    'cosmo' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css'),\n  ],\n  [\n    'cyborg' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css'),\n  ],\n  [\n    'flatly' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css'),\n  ],\n  [\n    'journal' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css'),\n  ],\n  [\n    'litera' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css'),\n  ],\n  [\n    'lumen' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css'),\n  ],\n  ['lux' as const, () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css')],\n  [\n    'minty' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css'),\n  ],\n  [\n    'pulse' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css'),\n  ],\n  [\n    'simplex' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css'),\n  ],\n  [\n    'slate' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css'),\n  ],\n  [\n    'solar' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css'),\n  ],\n  [\n    'spacelab' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css'),\n  ],\n  [\n    'superhero' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css'),\n  ],\n  [\n    'united' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css'),\n  ],\n  [\n    'yeti' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css'),\n  ],\n])\n\nexport const importThemeStyleCustom = (theme: GeneralTheme | null) => {\n  if (theme) {\n    const themeLoader = themeDeps.get(theme)\n    if (themeLoader) {\n      return themeLoader()\n    }\n  }\n\n  logError(`${theme}: theme is not defined`)\n\n  return themeDeps\n    .values()\n    .next()\n    .value()\n}\n\nexport const availableGeneralThemes = [\n  'materia',\n  'darkly',\n  'sandstone',\n  'cosmo',\n  'cyborg',\n  'flatly',\n  'journal',\n  'litera',\n  'lumen',\n  'lux',\n  'minty',\n  'pulse',\n  'simplex',\n  'slate',\n  'solar',\n  'spacelab',\n  'superhero',\n  'united',\n  'yeti',\n] as const\nexport type GeneralTheme = typeof availableGeneralThemes[number]\n\nexport const availableEditorThemes = ['github', 'monokai', 'tomorrow', 'solarized_dark', 'terminal'] as const\nexport type EditorTheme = typeof availableEditorThemes[number]\n","import * as React from 'react'\nimport { version } from '../../package.json'\nimport { GeneralTheme, availableGeneralThemes, availableEditorThemes, EditorTheme } from 'themes/themes'\nimport { switchTheme, switchEditorTheme } from 'actions/actions'\nimport { connect } from 'react-redux'\nimport { getTheme, getEditorTheme } from 'store/selectors'\nimport { RootState } from 'state/State'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavItem,\n  NavLink,\n  Dropdown,\n} from 'reactstrap'\nimport { withErrorBoundary } from './common/ErrorBoundary'\nimport { memo, useCallback, FC } from 'react'\n\ninterface Props {\n  setGeneralTheme: typeof switchTheme\n  setEditorTheme: typeof switchEditorTheme\n  currentTheme: GeneralTheme | null\n  currentEditorTheme: EditorTheme\n}\n\nconst Header: FC<Props> = ({ setGeneralTheme, currentTheme, setEditorTheme, currentEditorTheme }) => {\n  const [isOpen, switchIsOpen] = useToggleState()\n  const [dropDownIsOpen, toggleDropdown] = useToggleState()\n\n  return (\n    <>\n      <Navbar color=\"dark\" dark={true} expand=\"md\">\n        <NavbarBrand href=\"/\">Keyrier JSON</NavbarBrand>\n        <NavbarToggler onClick={switchIsOpen} />\n        <Collapse isOpen={isOpen} navbar={true}>\n          <Nav className=\"ml-auto\" navbar={true}>\n            <Dropdown isOpen={dropDownIsOpen} toggle={toggleDropdown}>\n              <DropdownToggle nav={true} caret={true}>\n                Theme\n              </DropdownToggle>\n              <DropdownMenu right={true}>\n                <DropdownItem header={true}>Choose editor theme</DropdownItem>\n                {availableEditorThemes.map((theme, index) => (\n                  <ThemeDropDownItem\n                    setTheme={setEditorTheme}\n                    key={index}\n                    active={currentEditorTheme === theme}\n                    theme={theme}\n                    reloadOnChange={false}\n                  />\n                ))}\n                <DropdownItem header={true}>Choose general theme</DropdownItem>\n\n                {availableGeneralThemes.map((theme, index) => (\n                  <ThemeDropDownItem\n                    setTheme={setGeneralTheme}\n                    key={index}\n                    active={currentTheme === theme}\n                    theme={theme}\n                    reloadOnChange={true}\n                  />\n                ))}\n              </DropdownMenu>\n            </Dropdown>\n            <NavItem>\n              <NavLink href=\"https://github.com/magoo-magoo/keyrier-json/releases/latest\">v{version}</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://github.com/magoo-magoo/keyrier-json\">GitHub</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </>\n  )\n}\n\ntype ThemeDropDownItemProps<T extends GeneralTheme | EditorTheme> = {\n  theme: T\n  active: boolean\n  setTheme: (v: T) => void\n  reloadOnChange: boolean\n}\n\nconst ThemeDropDownItem = <T extends GeneralTheme | EditorTheme>(props: ThemeDropDownItemProps<T>) => {\n  const { theme, active, setTheme, reloadOnChange } = props\n  const onClick = useCallback(() => {\n    setTheme(theme)\n    if (reloadOnChange) {\n      setTimeout(() => window.location.reload())\n    }\n  }, [theme, setTheme, reloadOnChange])\n  return (\n    <DropdownItem active={active} onClick={onClick}>\n      {theme}\n    </DropdownItem>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  currentTheme: getTheme(state),\n  currentEditorTheme: getEditorTheme(state),\n})\n\nexport default connect(\n  mapStateToProps,\n  { setGeneralTheme: switchTheme, setEditorTheme: switchEditorTheme }\n)(memo(withErrorBoundary(Header)))\n","import * as React from 'react'\nimport { Button } from 'reactstrap'\nimport { memo, useCallback, ChangeEvent, FC } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\ninterface Props {\n  header: [string, string]\n  id: number\n  onChange: (h: [string, string]) => void\n  onRemove: (h: [string, string]) => void\n}\n\nexport const RenderHeaderInput: FC<Props> = memo(\n  withErrorBoundary(({ header, onRemove, onChange, id }) => {\n    const [key, value] = header\n\n    const onKeyChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([e.target.value, value]), [\n      onChange,\n      value,\n    ])\n    const onValueChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([key, e.target.value]), [\n      onChange,\n      key,\n    ])\n    const onRemoveCallback = useCallback(() => onRemove(header), [onRemove, header])\n\n    return (\n      <div className=\"row align-items-center\">\n        <div className=\"col-sm-5\">\n          <input\n            className=\"form-control-lg form-control\"\n            value={key}\n            id={`headerName${id}`}\n            type=\"text\"\n            name={`headerName${id}`}\n            placeholder=\"enter an name\"\n            onChange={onKeyChange}\n          />\n        </div>\n        <div className=\"col-sm-5\">\n          <input\n            className=\"form-control-lg form-control\"\n            value={value}\n            type=\"text\"\n            name={`headerValue${id}`}\n            id={`headerValue${id}`}\n            placeholder=\"enter an value\"\n            onChange={onValueChange}\n          />\n        </div>\n        <div className=\"col-sm-2\">\n          <Button outline={true} color=\"danger\" onClick={onRemoveCallback}>\n            remove\n          </Button>\n        </div>\n      </div>\n    )\n  })\n)\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { connect } from 'react-redux'\nimport { updateSource } from 'actions/actions'\nimport { customToString } from 'core/converters/string'\nimport { RenderHeaderInput } from './RequestHeader'\nimport { useState, memo, useCallback, FC } from 'react'\nimport { Alert, FormGroup, Form, Button } from 'reactstrap'\nimport { useToggleState, useChangeEventState } from 'hooks/hooks'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\n\ninterface Props {\n  onFinish: () => void\n  setSource: (src: string) => void\n}\n\nconst HttpRequestSource: FC<Props> = ({ onFinish, setSource }) => {\n  const [method, setMethod] = useChangeEventState('GET')\n  const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n  const [body, setBody] = useChangeEventState('')\n  const [headers, setHeaders] = useState([['Accept', 'application/json'] as [string, string]])\n  const [error, setError] = useState(null as TypeError | null)\n  const [hasBody, setHasBody] = useToggleState()\n\n  const submit = useCallback(async () => {\n    const requestInit: RequestInit = {\n      method,\n      headers,\n      body: hasBody ? body : null,\n    }\n    const request = new Request(url, requestInit)\n    setError(null)\n\n    let json: string\n    try {\n      const result = await fetch(request)\n      json = await result.json()\n    } catch (e) {\n      logError('HttpRequestSource.submit', e)\n      setError(e)\n      return\n    }\n    setSource(customToString(json))\n    onFinish()\n  }, [method, url, body, headers, hasBody, setError, setSource, onFinish])\n\n  return (\n    <div id=\"HttpRequestSource\">\n      <FormGroup>\n        <label htmlFor=\"requestMethod\">Method</label>\n        <select\n          className=\"form-control-lg form-control\"\n          defaultValue={method}\n          name=\"requestMethod\"\n          id=\"requestMethod\"\n          onChange={setMethod}\n        >\n          <option>GET</option>\n          <option>POST</option>\n          <option>PUT</option>\n          <option>OPTIONS</option>\n        </select>\n      </FormGroup>\n      <FormGroup>\n        <label htmlFor=\"requestUrl\">Request URL</label>\n        <input\n          defaultValue={url}\n          className=\"form-control-lg form-control\"\n          type=\"url\"\n          name=\"requestUrl\"\n          id=\"requestUrl\"\n          placeholder=\"enter an URL\"\n          onChange={setUrl}\n        />\n      </FormGroup>\n      <div className=\"position-relative form-check\">\n        <label className=\"form-check-label\">\n          <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n        </label>\n      </div>\n      <Form inline={true} hidden={!hasBody}>\n        <FormGroup>\n          <label>Body</label>\n          <input className=\"form-control-lg form-control\" type=\"textarea\" value={body} onChange={setBody} />{' '}\n        </FormGroup>\n      </Form>\n      <label htmlFor=\"headers\">Request headers</label>{' '}\n      <Button\n        outline={true}\n        color=\"primary\"\n        onClick={() => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']])}\n      >\n        Add header\n      </Button>\n      <br />\n      <br />\n      <HeaderList headers={headers} onChange={setHeaders} />\n      <br />\n      <Button block={true} color=\"primary\" onClick={submit}>\n        Submit\n      </Button>\n      {error && (\n        <Alert color=\"danger\">\n          Error: {error.message ? error.message : ''}\n          {error.stack ? error.stack : ''}\n        </Alert>\n      )}\n    </div>\n  )\n}\n\ntype HeaderListProps = {\n  headers: Array<[string, string]>\n  onChange: (headers: Array<[string, string]>) => void\n}\n\nconst HeaderList: FC<HeaderListProps> = ({ headers, onChange }) => {\n  const onRemove = useCallback((header: [string, string]) => onChange(headers.filter(h => h !== header)), [\n    headers,\n    onChange,\n  ])\n  const onChangeCallback = useCallback(\n    (header: [string, string]) => {\n      const index = headers.indexOf(header)\n      headers[index] = { ...header }\n      onChange([...headers])\n    },\n    [headers, onChange]\n  )\n  return (\n    <>\n      {headers.map((header, index) => (\n        <RenderHeaderInput header={header} key={index} id={index} onChange={onChangeCallback} onRemove={onRemove} />\n      ))}\n    </>\n  )\n}\n\nexport default connect(\n  null,\n  { setSource: updateSource }\n)(withErrorBoundary(memo(HttpRequestSource)))\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  updateSource,\n  resetEditor,\n  clearEditor,\n  updateAutoFormatSource,\n  undo,\n  redo,\n  updateQueryMode,\n} from 'actions/actions'\nimport HttpRequestSource from './source/RequestSource'\nimport { logInfo } from 'core/logging/logger'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  ButtonGroup,\n  Label,\n} from 'reactstrap'\nimport { memo, useCallback, FC, ChangeEvent } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport { getSourceAutoFormat, getCanUndo, getCanRedo, getQueryMode } from 'store/selectors'\nimport { RootState, QueryMode } from 'state/State'\n\ninterface Props {\n  onFileContentReady: typeof updateSource\n  changeAutoFormat: typeof updateAutoFormatSource\n  onReset: typeof resetEditor\n  onClear: typeof clearEditor\n  setQueryMode: typeof updateQueryMode\n  mode: QueryMode\n  onUndo: typeof undo\n  onRedo: typeof redo\n  canRedo: boolean\n  canUndo: boolean\n  autoFormat: boolean\n}\n\nconst LateralMenu: FC<Props> = ({\n  onReset,\n  onFileContentReady,\n  onClear,\n  autoFormat,\n  changeAutoFormat,\n  onRedo,\n  onUndo,\n  canRedo,\n  canUndo,\n  setQueryMode,\n  mode,\n}) => {\n  const [dropdownIsOpen, toggleDropdown] = useToggleState()\n  const [modalIsOpen, toggleModal] = useToggleState()\n  const [modeOpen, switchModeOpen] = useToggleState()\n  const setJsMode = useCallback(() => setQueryMode('Javascript'), [setQueryMode])\n  const setSqlMode = useCallback(() => setQueryMode('SQL'), [setQueryMode])\n  const handleFileChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      logInfo('onFileChange')\n      toggleDropdown()\n      if (e.target.files && e.target.files.length > 0) {\n        const fileReader = new FileReader()\n        logInfo('e.target.files', e.target.files[0].name)\n        fileReader.onload = () => {\n          if (fileReader.result) {\n            onFileContentReady(fileReader.result.toString())\n          }\n        }\n        fileReader.readAsText(e.target.files[0])\n      }\n    },\n    [toggleDropdown, onFileContentReady]\n  )\n\n  const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n  return (\n    <>\n      <ButtonGroup className=\"mt-5\" vertical={true}>\n        <ButtonGroup vertical={false}>\n          <Button\n            className=\"d-flex justify-content-center align-content-between\"\n            color=\"secondary\"\n            size={'sm'}\n            onClick={onUndo}\n            disabled={!canUndo}\n          >\n            <i className=\"material-icons mr-1 md-18\">undo</i>\n            <span>Undo</span>\n          </Button>\n          <Button\n            className=\"d-flex justify-content-center align-content-between\"\n            color=\"secondary\"\n            size={'sm'}\n            onClick={onRedo}\n            disabled={!canRedo}\n          >\n            Redo\n            <i className=\"material-icons mr-1 md-18\">redo</i>\n          </Button>\n        </ButtonGroup>\n        <br />\n        <br />\n        <Label\n          className=\"d-flex justify-content-center align-content-between\"\n          check={true}\n          onClick={handleAutoFormatChange}\n        >\n          <i className=\"material-icons mr-1\">{autoFormat ? 'check_box' : 'check_box_outline_blank'}</i>\n          Auto format\n        </Label>\n        <br />\n        <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n          <DropdownToggle\n            className=\"d-flex justify-content-center align-content-between\"\n            size={'lg'}\n            id=\"import-menu-button\"\n            color=\"primary\"\n          >\n            <i className=\"material-icons mr-1 md-18\">unarchive</i>\n            Import\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem toggle={false}>\n              <label id=\"import-file\">\n                Browse JSON file...\n                <input\n                  type=\"file\"\n                  name=\"file\"\n                  id=\"sourceFile\"\n                  style={{ display: 'none' }}\n                  onChange={handleFileChange}\n                />\n              </label>\n            </DropdownItem>\n            <DropdownItem id=\"http-request\" onClick={toggleModal}>\n              <label>HTTP request</label>\n            </DropdownItem>\n          </DropdownMenu>\n        </ButtonDropdown>\n        <br />\n        <br />\n        <Button\n          className=\"d-flex justify-content-center align-content-between\"\n          color=\"secondary\"\n          size={'lg'}\n          onClick={onReset}\n        >\n          <div>\n            <i className=\"material-icons md-18 mr-1\">autorenew</i>\n          </div>\n          <div>Reset</div>\n        </Button>\n        <br />\n\n        <ButtonDropdown isOpen={modeOpen} toggle={switchModeOpen}>\n          <DropdownToggle className=\"d-flex justify-content-center align-content-between\" size={'lg'} color=\"secondary\">\n            <div>\n              <i className=\"material-icons md-18 mr-1\">settings</i>\n            </div>\n            <div>Mode</div>\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem header={true}>Choose query mode</DropdownItem>\n            <DropdownItem active={mode === 'Javascript'} onClick={setJsMode}>\n              Javascript\n            </DropdownItem>\n            <DropdownItem active={mode === 'SQL'} onClick={setSqlMode}>\n              SQL like (experimental)\n            </DropdownItem>\n          </DropdownMenu>\n        </ButtonDropdown>\n        <br />\n        <Button\n          className=\"d-flex justify-content-center align-content-between\"\n          color=\"danger\"\n          size={'lg'}\n          onClick={onClear}\n        >\n          <div>\n            <i className=\"material-icons md-18  mr-1\">clear</i>\n          </div>\n          <div>Clear</div>\n        </Button>\n      </ButtonGroup>\n      <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n        <ModalBody>\n          <HttpRequestSource onFinish={toggleModal} />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  autoFormat: getSourceAutoFormat(state),\n  canUndo: getCanUndo(state),\n  canRedo: getCanRedo(state),\n  mode: getQueryMode(state),\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n    onFileContentReady: updateSource,\n    onReset: resetEditor,\n    onClear: clearEditor,\n    onUndo: undo,\n    onRedo: redo,\n    changeAutoFormat: updateAutoFormatSource,\n    setQueryMode: updateQueryMode,\n  }\n)(memo(withErrorBoundary(LateralMenu)))\n","import styles from './App.module.scss'\nimport * as React from 'react'\nimport Header from './Header'\nimport { ToastContainer } from 'react-toastify'\nimport { lazy, Suspense } from 'react'\nimport LateralMenu from './LateralMenu'\nconst SourceEditor = lazy(() => import(/* webpackChunkName: \"SourceEditor\" */ 'components/source/SourceEditor'))\nconst Output = lazy(() => import(/* webpackChunkName: \"Output\" */ 'components/output/Output'))\nconst QueryEditor = lazy(() => import(/* webpackChunkName: \"QueryEditor\" */ 'components/query/QueryEditor'))\n\nexport const App = () => (\n  <>\n    <Header />\n    <div className=\"container\">\n      <h1 className=\"my-5\">Paste your JSON and Query it.</h1>\n      <div className=\"row\">\n        <div className=\"col-sm-2\">\n          <LateralMenu />\n        </div>\n        <div className=\"col-sm-10\">\n          <Suspense fallback={'loading...'}>\n            <SourceEditor />\n          </Suspense>\n          <div className=\"my-5\">\n            <Suspense fallback={'loading...'}>\n              <QueryEditor />\n            </Suspense>\n          </div>\n        </div>\n      </div>\n      <div className={`row ${styles.output}`}>\n        <div className=\"col\">\n          <Suspense fallback={'loading...'}>\n            <Output />\n          </Suspense>\n        </div>\n      </div>\n    </div>\n    <ToastContainer />\n  </>\n)\n\nexport default App\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.')\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.')\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { Provider } from 'react-redux'\nimport './index.scss'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport { configureStore } from 'store/store'\nimport * as React from 'react'\nimport { getTheme } from 'store/selectors'\nimport { importThemeStyleCustom } from 'themes/themes'\nimport App from 'components/App'\nimport { unregister } from 'registerServiceWorker'\n;(async () => {\n  const store = configureStore()\n\n  const promises = await Promise.all([\n    import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n    importThemeStyleCustom(getTheme(store.getState())),\n  ])\n\n  const ReactDOM = promises[0]\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n\n  unregister()\n})()\n","// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload?: any) => {\n  console.error('Keyrier error', error)\n  if (typeof payload !== 'undefined') {\n    console.error(payload)\n  }\n}\n\nexport const logWarning = (message: string, payload?: any) => {\n  if (typeof payload === 'undefined') {\n    console.warn(message)\n  }\n  console.warn(message, payload)\n}\n\nexport const logInfo = (message: string, payload?: any) => {\n  if (typeof payload === 'undefined') {\n    console.info(message)\n  }\n  console.info(message, payload)\n}\n","import { QueryMode, tabType } from 'state/State'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\n\nexport const updateAutoFormatSource = (active: boolean) =>\n    ({\n        active,\n        type: 'UPDATE_AUTOFORMAT_SOURCE',\n    } as const)\n\nexport const updateSource = (source: string) =>\n    ({\n        source,\n        type: 'UPDATE_SOURCE_TEXT',\n    } as const)\n\nexport const updateQuery = (query: string) =>\n    ({\n        query,\n        type: 'UPDATE_QUERY',\n    } as const)\n\nexport const resetEditor = () =>\n    ({\n        type: 'RESET_EDITOR',\n    } as const)\n\nexport const undo = () =>\n    ({\n        type: 'APP_UNDO',\n    } as const)\n\nexport const redo = () =>\n    ({\n        type: 'APP_REDO',\n    } as const)\n\nexport const clearEditor = () =>\n    ({\n        type: 'CLEAR_EDITOR',\n    } as const)\n\nexport const evaluateCode = () =>\n    ({\n        type: 'EVALUATE_CODE',\n    } as const)\n\nexport const toggleOutputTableModal = () =>\n    ({\n        type: 'TOGGLE_OUTPUT_TABLE_MODAL',\n    } as const)\n\nexport const updateTableColumns = (columns: string[]) =>\n    ({\n        columns,\n        type: 'UPDATE_TABLE_COLUMNS',\n    } as const)\n\nexport const updateTableGroupBy = (groupBy: string[]) =>\n    ({\n        groupBy,\n        type: 'UPDATE_TABLE_GROUP_BY',\n    } as const)\n\nexport const switchTheme = (theme: GeneralTheme) => ({\n    theme,\n    type: 'SWITCH_GLOBAL_THEME' as const,\n})\n\nexport const switchEditorTheme = (theme: EditorTheme) => ({\n    theme,\n    type: 'SWITCH_EDITOR_THEME' as const,\n})\n\nexport const updateSearchTerm = (searchTerm: string) =>\n    ({\n        searchTerm,\n        type: 'UPDATE_OUTPUT_SEARCH_TERM',\n    } as const)\n\nexport const updateQueryMode = (mode: QueryMode) =>\n    ({\n        mode,\n        type: 'UPDATE_QUERY_MODE',\n    } as const)\n\nexport const updateOutputTabSelection = (tab: tabType) =>\n    ({\n        tab,\n        type: 'UPDATE_OUTPUT_TAB_SELECTION',\n    } as const)\n\nexport type Action =\n    | ReturnType<typeof evaluateCode>\n    | ReturnType<typeof resetEditor>\n    | ReturnType<typeof clearEditor>\n    | ReturnType<typeof updateQuery>\n    | ReturnType<typeof toggleOutputTableModal>\n    | ReturnType<typeof updateTableColumns>\n    | ReturnType<typeof updateTableGroupBy>\n    | ReturnType<typeof switchTheme>\n    | ReturnType<typeof updateSearchTerm>\n    | ReturnType<typeof updateQueryMode>\n    | ReturnType<typeof updateOutputTabSelection>\n    | ReturnType<typeof updateSource>\n    | ReturnType<typeof updateAutoFormatSource>\n    | ReturnType<typeof switchEditorTheme>\n    | ReturnType<typeof undo>\n    | ReturnType<typeof redo>\n","import { useState, useCallback, ChangeEvent } from 'react'\n\nexport const useToggleState = (initial: boolean = false): readonly [boolean, () => void] => {\n  const [value, setValue] = useState(initial)\n  return [value, () => setValue(!value)]\n}\n\ntype HtmlElementHookable = HTMLSelectElement | HTMLInputElement\n\nexport const useChangeEventState = (\n  initialValue: string\n): readonly [string, (e: ChangeEvent<HtmlElementHookable>) => void] => {\n  const [value, setValue] = useState(initialValue)\n\n  const eventHandler = useCallback(\n    (event: ChangeEvent<HtmlElementHookable>) => {\n      if (event && event.target) {\n        setValue(event.target.value)\n      }\n    },\n    [setValue]\n  )\n\n  return [value, eventHandler]\n}\n","import { RootState } from 'state/State'\n\nexport const getOutputErrorMessage = (state: RootState) =>\n  state && state.app && state.app.present.output ? state.app.present.output.errorMessage : ''\n\nexport const getOutputIsArray = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.table\n    ? !!state.app.present.output.table.isArray\n    : false\nexport const getOutputActiveTab = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.selectedTab\n    ? state.app.present.output.selectedTab\n    : ('RawJson' as const)\nexport const getOutputObject = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.obj ? state.app.present.output.obj : {}\nexport const getOutputObjectSize = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.objSize\n    ? state.app.present.output.objSize\n    : 0\nexport const getOutputSearchTerm = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.searchTerm\nexport const getOutputSearchMatch = (state: RootState) =>\n  state && state.app && state.app.present.output ? !!state.app.present.output.match : false\nexport const getisOutputTableModalOpen = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.table\n    ? !!state.app.present.output.table.isModalOpen\n    : false\n\nexport const getTheme = (state: RootState) =>\n  state.userSettings && state.userSettings.globalTheme ? state.userSettings.globalTheme : ('pulse' as const)\nexport const getEditorTheme = (state: RootState) =>\n  state.userSettings && state.userSettings.editorTheme ? state.userSettings.editorTheme : ('github' as const)\n\nexport const getdisplayedColumns = (state: RootState) =>\n  state &&\n  state.app &&\n  state.app.present.output &&\n  state.app.present.output.table &&\n  state.app.present.output.table.displayedColumns\n    ? [...state.app.present.output.table.displayedColumns]\n    : []\nexport const getOutputarray = (state: RootState) =>\n  state && state.app && state.app.present.output && Array.isArray(state.app.present.output.obj)\n    ? [...state.app.present.output.obj]\n    : []\nexport const getColumns = (state: RootState) =>\n  state &&\n  state.app &&\n  state.app.present.output &&\n  state.app.present.output.table &&\n  state.app.present.output.table.columns\n    ? [...state.app.present.output.table.columns]\n    : []\nexport const getGroupBy = (state: RootState) =>\n  state &&\n  state.app &&\n  state.app.present.output &&\n  state.app.present.output.table &&\n  state.app.present.output.table.groupBy\n    ? [...state.app.present.output.table.groupBy]\n    : []\n\nexport const getQueryText = (state: RootState) =>\n  state && state.app && state.app.present.query && state.app.present.query.text ? state.app.present.query.text : ''\nexport const getQueryMode = (state: RootState) =>\n  state && state.app && state.app.present.query && state.app.present.query.mode\n    ? state.app.present.query.mode\n    : ('SQL' as const)\n\nexport const getSourceText = (state: RootState) =>\n  state && state.app && state.app.present.source && state.app.present.source.text ? state.app.present.source.text : ''\nexport const getSourceAutoFormat = (state: RootState) =>\n  state && state.app && state.app.present.source ? !!state.app.present.source.autoFormat : false\n\nexport const getCanRedo = (state: RootState) =>\n  state && state.app && state.app.future ? state.app.future.length !== 0 : false\nexport const getCanUndo = (state: RootState) =>\n  state && state.app && state.app.past ? state.app.past.length > 1 : false\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { toast } from 'react-toastify'\nimport { Component, ComponentType } from 'react'\n\nconst MISSING_ERROR = 'Error was swallowed during propagation.'\n\ntype State = {\n  error?: Error\n}\n\nclass ErrorBoundary extends Component<{}, State> {\n  public readonly state: State = {\n    error: undefined,\n  }\n\n  public componentDidCatch(error: Error | null, info: object) {\n    this.setState({ error: error || new Error(MISSING_ERROR) }, () => this.notify(info))\n  }\n\n  public render() {\n    const { children } = this.props\n    const { error } = this.state\n\n    if (error) {\n      return <>An error occured</>\n    }\n\n    return children\n  }\n\n  private notify(info: object) {\n    logError('An error occured', this.state.error)\n    logError('error info:', info)\n    toast.error(JSON.stringify(info), { position: 'bottom-right', hideProgressBar: true, autoClose: false })\n  }\n}\n\nexport const withErrorBoundary = <T extends {}>(Wrapped: ComponentType<T>) => (props: T) => (\n  <ErrorBoundary>\n    <Wrapped {...props} />\n  </ErrorBoundary>\n)\n","export const customToString = (obj: {}): string => {\n  if (Array.isArray(obj)) {\n    const array: any[] = obj\n    return array.map(e => customToString(e)).join(',')\n  }\n  if (typeof obj === 'object') {\n    return JSON.stringify(obj)\n  }\n  if (typeof obj === 'undefined') {\n    return ''\n  }\n  if (obj !== null && obj !== undefined) {\n    return obj.toString()\n  }\n\n  return ''\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n  if (!str || !part) {\n    return false\n  }\n  if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n    return true\n  }\n\n  return false\n}\n\nconst UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\nconst toLocaleString = (value: number, locale: boolean | string = false) => {\n  let result = value.toString()\n  if (typeof locale === 'string') {\n    result = value.toLocaleString(locale)\n  } else if (locale === true) {\n    result = value.toLocaleString()\n  }\n\n  return result\n}\n\nexport const prettyPrintBytes = (value: number, signed = false, locale: boolean | string = false) => {\n  if (!Number.isFinite(value)) {\n    throw new TypeError(`Expected a finite number, got ${typeof value}: ${value}`)\n  }\n  if (value === 0) {\n    return '0 B'\n  }\n  const isNegative = value < 0\n  const prefix = isNegative ? '-' : signed ? '+' : ''\n  if (isNegative) {\n    value = -value\n  }\n  if (value < 1) {\n    const numberStr = toLocaleString(value, locale ? locale : false)\n    return prefix + numberStr + ' B'\n  }\n  const exponent = Math.min(Math.floor(Math.log10(value) / 3), UNITS.length - 1)\n  value = Number((value / Math.pow(1024, exponent)).toPrecision(3))\n  const numberString = toLocaleString(value, locale ? locale : false)\n  const unit = UNITS[exponent]\n  return prefix + numberString + ' ' + unit\n}\n","export const arrayElementName = 'arrayElement'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"output\":\"App_output__Esw2u\"};"],"sourceRoot":""}