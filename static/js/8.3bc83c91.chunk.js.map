{"version":3,"sources":["../node_modules/fast-deep-equal/index.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../node_modules/react-debounce-input/lib/index.js","../node_modules/react-debounce-input/lib/Component.js","../node_modules/lodash.debounce/index.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js","../node_modules/reactstrap/es/Badge.js","../node_modules/reactstrap/es/CustomFileInput.js","../node_modules/reactstrap/es/CustomInput.js"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","TabContext","React","createContext","require","actions","init","defaultColumn","Cell","value","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","next","style","className","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","push","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","makeHeaderGroups","allColumns","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","minMax","average","median","unique","Set","uniqueCount","size","count","emptyArray","emptyObject","resetGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","setGroupBy","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","groupedValues","leafValues","columnValue","aggregatedValue","aggregateValueFn","aggregateValue","aggregateFn","aggregate","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValueByColumnID","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","sort","datetime","getTime","basic","resetSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","cannnotPreviousPage","cannotNextPage","topRowIndex","floor","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","from","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","addEventListener","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","flex","totalColumnsMinWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","DebounceInput","defineProperty","_react","_interopRequireDefault","_lodash","__esModule","_typeof","Symbol","iterator","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ownKeys","object","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","_defineProperties","descriptor","configurable","writable","_getPrototypeOf","o","setPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","_React$PureComponent","_this","_classCallCheck","Constructor","TypeError","this","_possibleConstructorReturn","event","oldValue","minLength","notify","forceNotify","onKeyDown","onBlur","debounceTimeout","doNotify","debouncedChangeFunc","isDebouncing","flush","cancel","_debounceTimeout","createNotifier","_inherits","subClass","superClass","create","_createClass","protoProps","staticProps","componentDidUpdate","_this$props","oldTimeout","stateValue","componentWillUnmount","maybeOnKeyDown","maybeOnBlur","_this$props2","element","forceNotifyByEnter","forceNotifyOnBlur","inputRef","maybeRef","createElement","PureComponent","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","freeGlobal","global","freeSelf","root","Function","objectToString","nativeMax","nativeMin","now","Date","isObject","toNumber","isSymbol","isObjectLike","other","isBinary","test","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","thisArg","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","propTypes","tag","tagPropType","activeTab","PropTypes","any","string","cssModule","TabContent","_Component","_inheritsLoose","getDerivedStateFromProps","nextProps","Tag","attributes","omit","classes","mapToCssModules","classNames","Provider","activeTabId","_extends","Component","polyfill","defaultProps","tabId","TabPane","getClasses","active","Consumer","_ref","color","pill","bool","innerRef","oneOfType","children","node","Badge","href","number","isRequired","label","valid","invalid","bsSize","htmlFor","array","CustomFileInput","_React$Component","files","bind","_proto","input","getSelectedFiles","multiple","file","name","parts","dataBrowse","customClass","validationClassNames","labelHtmlFor","inline","CustomInput","rest","wrapperClasses"],"mappings":"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","file":"static/js/8.3bc83c91.chunk.js","sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = React.createContext({});","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultColumn = {\n  Cell: ({ value = '' }) => value,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import React from 'react'\nimport { defaultColumn } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: () => <>&nbsp;</>,\n    Footer: () => <>&nbsp;</>,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(allColumns, defaultColumn) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = row => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    expandedRows.push(row)\n\n    if (expandSubRows && row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rows.forEach(handleRow)\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  let min = 0\n  let max = 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return (min + max) / 2\n}\n\nexport function unique(values) {\n  return [...new Set(values).values()]\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Get the columnValues to aggregate\n        const groupedValues = groupedRows.map(row => row.values[column.id])\n\n        // Get the columnValues to aggregate\n        const leafValues = leafRows.map(row => {\n          let columnValue = row.values[column.id]\n\n          if (!depth && column.aggregatedValue) {\n            const aggregateValueFn =\n              typeof column.aggregateValue === 'function'\n                ? column.aggregateValue\n                : userAggregations[column.aggregateValue] ||\n                  aggregations[column.aggregateValue]\n\n            if (!aggregateValueFn) {\n              console.info({ column })\n              throw new Error(\n                `React Table: Invalid column.aggregateValue option for column listed above`\n              )\n            }\n\n            columnValue = aggregateValueFn(columnValue, row, column)\n          }\n          return columnValue\n        })\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && row.canExpand\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length <= 1) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    const cannnotPreviousPage = newPageIndex < 0\n    const cannotNextPage =\n      pageCount === -1\n        ? page.length < state.pageSize\n        : newPageIndex > pageCount - 1\n\n    if (cannnotPreviousPage || cannotNextPage) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true } = instance\n\n    // Join the ids of deep rows\n    // to make a key, then manage all of the keys\n    // in a flat object\n    const row = rowsById[id]\n    const isSelected = row.isSelected\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && row.subRows) {\n        return row.subRows.forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  if (row.subRows && row.subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    row.subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = originalRow => ({})\nconst defaultInitialCellStateAccessor = originalRow => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId].original)\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(rowsById[rowId].original)\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row.original) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row.original)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(row.original)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n} from '../publicUtils'\n\nimport { getFirstDefined } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    document.addEventListener(events.moveEvent, events.moveHandler, {\n      passive: false,\n    })\n    document.addEventListener(events.upEvent, events.upHandler, {\n      passive: false,\n    })\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'ew-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width = columnResizing.columnWidths[header.id] || header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance({ plugins }) {\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n","\"use strict\";\n\nvar _require = require('./Component'),\n    DebounceInput = _require.DebounceInput;\n\nDebounceInput.DebounceInput = DebounceInput;\nmodule.exports = DebounceInput;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DebounceInput = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.debounce\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar DebounceInput =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(DebounceInput, _React$PureComponent);\n\n  function DebounceInput(props) {\n    var _this;\n\n    _classCallCheck(this, DebounceInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DebounceInput).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (event) {\n      event.persist();\n      var oldValue = _this.state.value;\n      var minLength = _this.props.minLength;\n\n      _this.setState({\n        value: event.target.value\n      }, function () {\n        var value = _this.state.value;\n\n        if (value.length >= minLength) {\n          _this.notify(event);\n\n          return;\n        } // If user hits backspace and goes below minLength consider it cleaning the value\n\n\n        if (oldValue.length > value.length) {\n          _this.notify(_objectSpread({}, event, {\n            target: _objectSpread({}, event.target, {\n              value: ''\n            })\n          }));\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (event) {\n      if (event.key === 'Enter') {\n        _this.forceNotify(event);\n      } // Invoke original onKeyDown if present\n\n\n      var onKeyDown = _this.props.onKeyDown;\n\n      if (onKeyDown) {\n        event.persist();\n        onKeyDown(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function (event) {\n      _this.forceNotify(event); // Invoke original onBlur if present\n\n\n      var onBlur = _this.props.onBlur;\n\n      if (onBlur) {\n        event.persist();\n        onBlur(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createNotifier\", function (debounceTimeout) {\n      if (debounceTimeout < 0) {\n        _this.notify = function () {\n          return null;\n        };\n      } else if (debounceTimeout === 0) {\n        _this.notify = _this.doNotify;\n      } else {\n        var debouncedChangeFunc = (0, _lodash[\"default\"])(function (event) {\n          _this.isDebouncing = false;\n\n          _this.doNotify(event);\n        }, debounceTimeout);\n\n        _this.notify = function (event) {\n          _this.isDebouncing = true;\n          debouncedChangeFunc(event);\n        };\n\n        _this.flush = function () {\n          return debouncedChangeFunc.flush();\n        };\n\n        _this.cancel = function () {\n          _this.isDebouncing = false;\n          debouncedChangeFunc.cancel();\n        };\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"doNotify\", function () {\n      var onChange = _this.props.onChange;\n      onChange.apply(void 0, arguments);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"forceNotify\", function (event) {\n      var debounceTimeout = _this.props.debounceTimeout;\n\n      if (!_this.isDebouncing && debounceTimeout > 0) {\n        return;\n      }\n\n      if (_this.cancel) {\n        _this.cancel();\n      }\n\n      var value = _this.state.value;\n      var minLength = _this.props.minLength;\n\n      if (value.length >= minLength) {\n        _this.doNotify(event);\n      } else {\n        _this.doNotify(_objectSpread({}, event, {\n          target: _objectSpread({}, event.target, {\n            value: value\n          })\n        }));\n      }\n    });\n\n    _this.isDebouncing = false;\n    _this.state = {\n      value: props.value || ''\n    };\n    var _debounceTimeout = _this.props.debounceTimeout;\n\n    _this.createNotifier(_debounceTimeout);\n\n    return _this;\n  }\n\n  _createClass(DebounceInput, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.isDebouncing) {\n        return;\n      }\n\n      var _this$props = this.props,\n          value = _this$props.value,\n          debounceTimeout = _this$props.debounceTimeout;\n      var oldTimeout = prevProps.debounceTimeout,\n          oldValue = prevProps.value;\n      var stateValue = this.state.value;\n\n      if (typeof value !== 'undefined' && oldValue !== value && stateValue !== value) {\n        // Update state.value if new value passed via props, yep re-render should happen\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          value: value\n        });\n      }\n\n      if (debounceTimeout !== oldTimeout) {\n        this.createNotifier(debounceTimeout);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.flush) {\n        this.flush();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          element = _this$props2.element,\n          _onChange = _this$props2.onChange,\n          _value = _this$props2.value,\n          _minLength = _this$props2.minLength,\n          _debounceTimeout = _this$props2.debounceTimeout,\n          forceNotifyByEnter = _this$props2.forceNotifyByEnter,\n          forceNotifyOnBlur = _this$props2.forceNotifyOnBlur,\n          onKeyDown = _this$props2.onKeyDown,\n          onBlur = _this$props2.onBlur,\n          inputRef = _this$props2.inputRef,\n          props = _objectWithoutProperties(_this$props2, [\"element\", \"onChange\", \"value\", \"minLength\", \"debounceTimeout\", \"forceNotifyByEnter\", \"forceNotifyOnBlur\", \"onKeyDown\", \"onBlur\", \"inputRef\"]);\n\n      var value = this.state.value;\n      var maybeOnKeyDown;\n\n      if (forceNotifyByEnter) {\n        maybeOnKeyDown = {\n          onKeyDown: this.onKeyDown\n        };\n      } else if (onKeyDown) {\n        maybeOnKeyDown = {\n          onKeyDown: onKeyDown\n        };\n      } else {\n        maybeOnKeyDown = {};\n      }\n\n      var maybeOnBlur;\n\n      if (forceNotifyOnBlur) {\n        maybeOnBlur = {\n          onBlur: this.onBlur\n        };\n      } else if (onBlur) {\n        maybeOnBlur = {\n          onBlur: onBlur\n        };\n      } else {\n        maybeOnBlur = {};\n      }\n\n      var maybeRef = inputRef ? {\n        ref: inputRef\n      } : {};\n      return _react[\"default\"].createElement(element, _objectSpread({}, props, {\n        onChange: this.onChange,\n        value: value\n      }, maybeOnKeyDown, {}, maybeOnBlur, {}, maybeRef));\n    }\n  }]);\n\n  return DebounceInput;\n}(_react[\"default\"].PureComponent);\n\nexports.DebounceInput = DebounceInput;\n\n_defineProperty(DebounceInput, \"defaultProps\", {\n  element: 'input',\n  type: 'text',\n  onKeyDown: undefined,\n  onBlur: undefined,\n  value: undefined,\n  minLength: 0,\n  debounceTimeout: 100,\n  forceNotifyByEnter: true,\n  forceNotifyOnBlur: true,\n  inputRef: undefined\n});","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\npolyfill(TabContent);\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.node,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nvar CustomFileInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CustomFileInput, _React$Component);\n\n  function CustomFileInput(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      files: null\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = CustomFileInput.prototype;\n\n  _proto.onChange = function onChange(e) {\n    var input = e.target;\n    var onChange = this.props.onChange;\n    var files = this.getSelectedFiles(input);\n\n    if (typeof onChange === 'function') {\n      onChange.apply(void 0, arguments);\n    }\n\n    this.setState({\n      files: files\n    });\n  };\n\n  _proto.getSelectedFiles = function getSelectedFiles(input) {\n    var multiple = this.props.multiple;\n\n    if (multiple && input.files) {\n      var files = [].slice.call(input.files);\n      return files.map(function (file) {\n        return file.name;\n      }).join(', ');\n    }\n\n    if (input.value.indexOf('fakepath') !== -1) {\n      var parts = input.value.split('\\\\');\n      return parts[parts.length - 1];\n    }\n\n    return input.value;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        label = _this$props.label,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        bsSize = _this$props.bsSize,\n        innerRef = _this$props.innerRef,\n        htmlFor = _this$props.htmlFor,\n        type = _this$props.type,\n        onChange = _this$props.onChange,\n        dataBrowse = _this$props.dataBrowse,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"label\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\", \"type\", \"onChange\", \"dataBrowse\"]);\n\n    var customClass = mapToCssModules(classNames(className, \"custom-file\"), cssModule);\n    var validationClassNames = mapToCssModules(classNames(invalid && 'is-invalid', valid && 'is-valid'), cssModule);\n    var labelHtmlFor = htmlFor || attributes.id;\n    var files = this.state.files;\n    return React.createElement(\"div\", {\n      className: customClass\n    }, React.createElement(\"input\", _extends({\n      type: \"file\"\n    }, attributes, {\n      ref: innerRef,\n      className: classNames(validationClassNames, mapToCssModules('custom-file-input', cssModule)),\n      onChange: this.onChange\n    })), React.createElement(\"label\", {\n      className: mapToCssModules('custom-file-label', cssModule),\n      htmlFor: labelHtmlFor,\n      \"data-browse\": dataBrowse\n    }, files || label || 'Choose file'), children);\n  };\n\n  return CustomFileInput;\n}(React.Component);\n\nCustomFileInput.propTypes = propTypes;\nexport default CustomFileInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nimport CustomFileInput from './CustomFileInput';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  inline: PropTypes.bool,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nfunction CustomInput(props) {\n  var className = props.className,\n      label = props.label,\n      inline = props.inline,\n      valid = props.valid,\n      invalid = props.invalid,\n      cssModule = props.cssModule,\n      children = props.children,\n      bsSize = props.bsSize,\n      innerRef = props.innerRef,\n      htmlFor = props.htmlFor,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"label\", \"inline\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\"]);\n\n  var type = attributes.type;\n  var customClass = mapToCssModules(classNames(className, \"custom-\" + type, bsSize ? \"custom-\" + type + \"-\" + bsSize : false), cssModule);\n  var validationClassNames = mapToCssModules(classNames(invalid && 'is-invalid', valid && 'is-valid'), cssModule);\n  var labelHtmlFor = htmlFor || attributes.id;\n\n  if (type === 'select') {\n    var _type = attributes.type,\n        rest = _objectWithoutPropertiesLoose(attributes, [\"type\"]);\n\n    return React.createElement(\"select\", _extends({}, rest, {\n      ref: innerRef,\n      className: classNames(validationClassNames, customClass)\n    }), children);\n  }\n\n  if (type === 'file') {\n    return React.createElement(CustomFileInput, props);\n  }\n\n  if (type !== 'checkbox' && type !== 'radio' && type !== 'switch') {\n    return React.createElement(\"input\", _extends({}, attributes, {\n      ref: innerRef,\n      className: classNames(validationClassNames, customClass)\n    }));\n  }\n\n  var wrapperClasses = classNames(customClass, mapToCssModules(classNames('custom-control', {\n    'custom-control-inline': inline\n  }), cssModule));\n  return React.createElement(\"div\", {\n    className: wrapperClasses\n  }, React.createElement(\"input\", _extends({}, attributes, {\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: innerRef,\n    className: classNames(validationClassNames, mapToCssModules('custom-control-input', cssModule))\n  })), React.createElement(\"label\", {\n    className: mapToCssModules('custom-control-label', cssModule),\n    htmlFor: labelHtmlFor\n  }, label), children);\n}\n\nCustomInput.propTypes = propTypes;\nexport default CustomInput;"],"sourceRoot":""}