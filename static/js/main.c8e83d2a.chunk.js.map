{"version":3,"sources":["core/logging/logger.ts","core/misc/utils.ts","components/common/GrabbleHeader.tsx","themes/themes.ts","components/Header.tsx","components/source/RequestHeader.tsx","components/source/RequestSource.tsx","components/LateralMenu.tsx","components/App.tsx","registerServiceWorker.ts","reducers/reducers.ts","store/persistence.ts","store/store.ts","index.tsx","config.ts","actions/actions.ts","state/State.ts","store/selectors.ts","hooks/hooks.ts","core/logging/performance.tsx","components/common/ErrorBoundary.tsx","core/converters/json.ts","core/converters/string.ts","components/common/GrabbleHeader.module.scss","components/App.module.scss","core/misc/debug.ts","models/array.ts","core/interpreters/code.ts","core/interpreters/sql/lexer.ts","core/interpreters/sql/parser.ts","core/interpreters/sql/actions-visitor.ts","core/interpreters/sql.ts"],"names":["logError","error","payload","console","logDebug","message","debug","logPerf","name","duration","customProperties","isDebugMode","appVersion","getAppVersion","version","location","window","href","logEvents","enqueue","queue","offset","this","length","item","push","slice","undefined","__PERF_EVENT_LOGS","GrabbleHeader","title","children","useMeasure","parentref","parentHeight","height","headerRef","ref","className","styles","draggable","CardHeader","style","background","grabber","overflowY","overflowX","themeDeps","Map","importThemeStyleCustom","theme","themeLoader","get","values","next","value","availableGeneralThemes","availableEditorThemes","ThemeDropDownItem","props","active","setTheme","reloadOnChange","onClick","useCallback","setTimeout","reload","DropdownItem","connect","mapStateToProps","state","currentTheme","getTheme","currentEditorTheme","getEditorTheme","setGeneralTheme","switchTheme","setEditorTheme","switchEditorTheme","memo","withErrorBoundary","withPerformance","Header","useToggleState","isOpen","switchIsOpen","dropDownIsOpen","toggleDropdown","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","role","Collapse","navbar","Nav","NavItem","Dropdown","toggle","DropdownToggle","nav","caret","DropdownMenu","right","header","map","index","key","NavLink","RenderHeaderInput","onRemove","onChange","id","onKeyChange","e","target","onValueChange","onRemoveCallback","type","placeholder","Button","outline","HeaderList","headers","filter","h","onChangeCallback","indexOf","setSource","updateSource","HttpRequestSource","onFinish","useChangeEventState","method","setMethod","url","setUrl","body","setBody","useState","setHeaders","setError","hasBody","setHasBody","submit","a","request","Request","fetch","result","json","customToString","FormGroup","htmlFor","defaultValue","Form","inline","hidden","block","Alert","stack","autoFormat","getSourceAutoFormat","canUndo","getCanUndo","canRedo","getCanRedo","mode","getQueryMode","onFileContentReady","onReset","resetEditor","onClear","clearEditor","onUndo","undo","onRedo","redo","changeAutoFormat","updateAutoFormatSource","setQueryMode","updateQueryMode","LateralMenu","dropdownIsOpen","modalIsOpen","toggleModal","handleFileChange","files","fileReader","FileReader","onload","toString","readAsText","handleAutoFormatChange","ButtonGroup","vertical","size","disabled","Label","check","ButtonDropdown","display","Modal","ModalHeader","ModalBody","ModalFooter","ResponsiveGridLayout","WidthProvider","Responsive","SourceEditor","lazy","Output","QueryEditor","layouts","getLayouts","updateGridLayouts","updateLayouts","App","autoSize","isResizable","draggableHandle","grabbleStyles","breakpoints","lg","cols","margin","containerPadding","rowHeight","onLayoutChange","_","newLayouts","verticalCompact","compactType","configuration","layout","keys","lateralMenuKey","appStyles","gridborder","sourceEditorKey","fallback","queryEditorKey","outputKey","Boolean","hostname","match","rootReducer","rootState","getDefaultAppState","action","emptyState","newState","query","source","newOutputState","output","ret","table","text","jsonBeautify","trim","initialStateJson","computeOutput","previousState","sourceString","queryString","codeEvaluation","Error","selectedTab","obj","objSize","searchTerm","errorMessage","isArray","isModalOpen","displayedColumns","columns","groupBy","Array","outputObject","jsonParseSafe","keyMap","forEach","d","Object","is","arrayElementName","sort","ax","b","toLowerCase","localeCompare","tab","containsTerm","src","filteredObj","containsIgnoreCase","from","k","getOwnPropertyNames","propertyName","propertyNameContains","splice","groupByList","gb","resetApp","rootReducers","combineReducers","app","undoable","perf","perfStart","perfEnd","undoType","redoType","limit","limitUndo","userSettings","getDefaultUserSettingsState","globalTheme","editorTheme","persist","localForage","setItem","toast","warn","getDefault","storageKey","appState","loadAppState","present","getItem","savedState","lodash","merge","loadUserSettings","getAppState","getUserSettings","persistAppState","appstate","persistUserSettings","configureStore","persistence","userSettingsState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","past","future","subscribe","getState","Promise","all","promises","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","bootstrap","catch","updateQuery","toggleOutputTableModal","updateTableColumns","updateTableGroupBy","updateSearchTerm","updateOutputTabSelection","debugMode","i","x","y","w","minW","minH","copyArrayOrEmpty","array","getOutputErrorMessage","getOutputIsArray","getOutputActiveTab","getOutputObject","getOutputObjectSize","getOutputSearchTerm","getOutputSearchMatch","getisOutputTableModalOpen","getdisplayedColumns","getOutputarray","getColumns","getGroupBy","getQueryText","getSourceText","getDebugMode","initial","setValue","initialValue","event","options","firstContentfulPaint","firstPaint","firstInputDelay","dataConsumption","largestContentfulPaint","navigationTiming","analyticsTracker","opt","metricName","data","browserTracker","logPrefix","logging","warning","debugging","perfume","Perfume","start","end","Component","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","ErrorBoundary","info","setState","notify","JSON","stringify","position","hideProgressBar","autoClose","Wrapped","str","parsed","safeStr","replace","parse","join","takeFirst","n","substring","part","toLocaleLowerCase","includes","UNITS","prettyPrintBytes","Number","isFinite","TypeError","isNegative","prefix","exponent","Math","min","floor","log10","pow","toPrecision","module","exports","__DEBUG__","jsEvaluation","sqlEvaluation","code","evaluatedQuery","eval","stringTokenRegex","RegExp","Identifier","createToken","pattern","WhiteSpace","group","Lexer","SKIPPED","Select","longer_alt","From","Where","Comma","Like","Limit","Null","In","IsNot","Is","NotLike","OrderBy","OrderByDirection","As","OrAnd","Star","Integer","StringToken","GreaterOrEqualThan","GreaterThan","LessOrEqualThan","LessThan","Equal","NotEqual","OpenParenthesis","CloseParenthesis","tokenVocabulary","SelectLexer","lex","inputText","lexingResult","tokenize","errors","labels","SelectParser","config","selectStatement","fromClause","selectClause","whereClause","relationalOperator","orderByClause","limitClause","atomicExpression","expression","subExpression","projection","RULE","OR","ALT","CONSUME","LABEL","OR1","OPTION","OR2","CONSUME1","AT_LEAST_ONE_SEP","SEP","DEF","SUBRULE","OPTION2","OPTION3","CONSUME2","MANY_SEP","SUBRULE2","performSelfAnalysis","CstParser","parserInstance","toAstVisitorInstance","validateVisitor","ctx","fields","visit","where","order","image","tokenType","convertStringTokenToJsString","splitPropertyPath","namePathArray","pathArray","namePropertyName","fieldPathArray","field","tableName","alias","conditions","parseInt","orderings","direction","left","operation","context","entries","token","getBaseCstVisitorConstructor","stringPath","String","split","sqlTree","toAst","cst","lexResult","input","tokens","cleanComment","SyntaxError","sourceDataObject","executeQuery","v","some","mapObject","fromPath","shift","chain","leftValue","rightValue","compareOperands","orderBy","take","operators","computePath","path","newPath","leftStr","rightStr","startsWith","endsWith","mapped","temp","val"],"mappings":"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","file":"static/js/main.c8e83d2a.chunk.js","sourcesContent":["import { isDebugMode } from 'core/misc/debug'\nimport { getAppVersion } from 'core/misc/utils'\n\n// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload?: any) => {\n    console.error('Keyrier', error)\n    if (typeof payload !== 'undefined') {\n        console.error(payload)\n    }\n}\n\nexport const logWarning = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.warn('Keyrier', message)\n    } else console.warn('Keyrier', message, payload)\n}\n\nexport const logDebug = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.debug('Keyrier', message)\n    } else console.debug('Keyrier', message, payload)\n}\n\nexport const logPerf = (name: string, duration?: number, customProperties?: any) => {\n    if (isDebugMode()) {\n        const appVersion = getAppVersion()\n        const payload = { name, duration, appVersion, ...customProperties, location: window.location.href }\n        logEvents.enqueue(payload)\n    }\n}\n\nclass Queue<T = any> {\n    // initialise the queue and offset\n    private queue: T[] = []\n    private offset = 0\n\n    // Returns the length of the queue.\n    public getLength() {\n        return this.queue.length - this.offset\n    }\n\n    // Returns true if the queue is empty, and false otherwise.\n    public isEmpty() {\n        return this.queue.length === 0\n    }\n\n    /* Enqueues the specified item. The parameter is:\n     *\n     * item - the item to enqueue\n     */\n    public enqueue(item: T) {\n        this.queue.push(item)\n    }\n\n    /* Dequeues an item and returns it. If the queue is empty, the value\n     * 'undefined' is returned.\n     */\n    public dequeue() {\n        // if the queue is empty, return immediately\n        if (this.queue.length === 0) {\n            return undefined\n        }\n\n        // store the item at the front of the queue\n        const item = this.queue[this.offset]\n\n        // increment the offset and remove the free space if necessary\n        if (++this.offset * 2 >= this.queue.length) {\n            this.queue = this.queue.slice(this.offset)\n            this.offset = 0\n        }\n\n        // return the dequeued item\n        return item\n    }\n\n    /* Returns the item at the front of the queue (without dequeuing it). If the\n     * queue is empty then undefined is returned.\n     */\n    public peek() {\n        return this.queue.length > 0 ? this.queue[this.offset] : undefined\n    }\n}\n\nexport const logEvents = new Queue()\n;(window as any).__PERF_EVENT_LOGS = logEvents\n","import { version } from '../../../package.json'\n\nexport const getAppVersion = () => version\n","import * as React from 'react'\nimport { FC, ReactElement } from 'react'\nimport { useMeasure } from 'react-use'\nimport { CardHeader } from 'reactstrap'\nimport styles from './GrabbleHeader.module.scss'\n\ntype Props = {\n    title: string\n    children: ReactElement\n}\n\nexport const GrabbleHeader: FC<Props> = ({ title, children }) => {\n    const [parentref, { height: parentHeight }] = useMeasure()\n    const [headerRef, { height: headerHeight }] = useMeasure()\n\n    const height = parentHeight - headerHeight * 2 - 2\n    return (\n        <div ref={parentref} className={`${styles.draggable} h-100 `}>\n            <div className=\"px-2\">\n                <CardHeader className=\"border-0 pr-0\" style={{ background: 'transparent' }}>\n                    <div ref={headerRef}>\n                        <u className=\"font-weight-bold text-large h5\">{title}</u>\n                        <span className={`float-right ${styles.grabber}`}>\n                            <i className=\"material-icons\">drag_indicator</i>\n                        </span>\n                    </div>\n                </CardHeader>\n                <div\n                    style={{\n                        height: `${height}px`,\n                        overflowY: 'auto',\n                        overflowX: 'hidden',\n                    }}\n                >\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { logError } from 'core/logging/logger'\n\nexport const themeDeps = new Map([\n    [\n        'materia',\n        () => import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css'),\n    ],\n    [\n        'darkly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css'),\n    ],\n    [\n        'sandstone',\n        () => import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css'),\n    ],\n    ['cosmo', () => import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css')],\n    [\n        'cyborg',\n        () => import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css'),\n    ],\n    [\n        'flatly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css'),\n    ],\n    [\n        'journal',\n        () => import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css'),\n    ],\n    [\n        'litera',\n        () => import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css'),\n    ],\n    ['lumen', () => import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css')],\n    ['lux', () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css')],\n    ['minty', () => import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css')],\n    ['pulse', () => import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css')],\n    [\n        'simplex',\n        () => import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css'),\n    ],\n    ['slate', () => import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css')],\n    ['solar', () => import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css')],\n    [\n        'spacelab',\n        () => import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css'),\n    ],\n    [\n        'superhero',\n        () => import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css'),\n    ],\n    [\n        'united',\n        () => import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css'),\n    ],\n    ['yeti', () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css')],\n] as const)\n\nexport const importThemeStyleCustom = (theme: GeneralTheme | null) => {\n    if (theme) {\n        const themeLoader = themeDeps.get(theme)\n        if (themeLoader) {\n            return themeLoader()\n        }\n    }\n\n    logError(`${theme}: theme is not defined`)\n\n    return themeDeps.values().next().value()\n}\n\nexport const availableGeneralThemes = [\n    'materia',\n    'darkly',\n    'sandstone',\n    'cosmo',\n    'cyborg',\n    'flatly',\n    'journal',\n    'litera',\n    'lumen',\n    'lux',\n    'minty',\n    'pulse',\n    'simplex',\n    'slate',\n    'solar',\n    'spacelab',\n    'superhero',\n    'united',\n    'yeti',\n] as const\nexport type GeneralTheme = typeof availableGeneralThemes[number]\n\nexport const availableEditorThemes = ['github', 'monokai', 'tomorrow', 'solarized_dark', 'terminal'] as const\nexport type EditorTheme = typeof availableEditorThemes[number]\n","import * as React from 'react'\nimport { version } from '../../package.json'\nimport { GeneralTheme, availableGeneralThemes, availableEditorThemes, EditorTheme } from 'themes/themes'\nimport { switchTheme, switchEditorTheme } from 'actions/actions'\nimport { connect } from 'react-redux'\nimport { getTheme, getEditorTheme } from 'store/selectors'\nimport { RootState } from 'state/State'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    Collapse,\n    Nav,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    NavItem,\n    NavLink,\n    Dropdown,\n} from 'reactstrap'\nimport { withErrorBoundary } from './common/ErrorBoundary'\nimport { memo, useCallback, FC } from 'react'\nimport { withPerformance } from 'core/logging/performance'\n\ninterface Props {\n    setGeneralTheme: typeof switchTheme\n    setEditorTheme: typeof switchEditorTheme\n    currentTheme: GeneralTheme | null\n    currentEditorTheme: EditorTheme\n}\n\nconst Header: FC<Props> = ({ setGeneralTheme, currentTheme, setEditorTheme, currentEditorTheme }) => {\n    const [isOpen, switchIsOpen] = useToggleState()\n    const [dropDownIsOpen, toggleDropdown] = useToggleState()\n\n    return (\n        <>\n            <Navbar color=\"dark\" dark={true} expand=\"md\">\n                <NavbarBrand href=\"/\">Keyrier JSON</NavbarBrand>\n                <NavbarToggler role=\"presentation\" onClick={switchIsOpen} />\n                <Collapse isOpen={isOpen} navbar={true}>\n                    <Nav className=\"ml-auto\" navbar={true}>\n                        <NavItem>\n                            <Dropdown isOpen={dropDownIsOpen} toggle={toggleDropdown}>\n                                <DropdownToggle nav={true} caret={true}>\n                                    Theme\n                                </DropdownToggle>\n                                <DropdownMenu right={true}>\n                                    <DropdownItem header={true}>Choose editor theme</DropdownItem>\n                                    {availableEditorThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setEditorTheme}\n                                            key={index}\n                                            active={currentEditorTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={false}\n                                        />\n                                    ))}\n                                    <DropdownItem header={true}>Choose general theme</DropdownItem>\n\n                                    {availableGeneralThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setGeneralTheme}\n                                            key={index}\n                                            active={currentTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={true}\n                                        />\n                                    ))}\n                                </DropdownMenu>\n                            </Dropdown>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json/releases/latest\">\n                                v{version}\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </>\n    )\n}\n\ntype ThemeDropDownItemProps<T extends GeneralTheme | EditorTheme> = {\n    theme: T\n    active: boolean\n    setTheme: (v: T) => void\n    reloadOnChange: boolean\n}\n\nconst ThemeDropDownItem = <T extends GeneralTheme | EditorTheme>(props: ThemeDropDownItemProps<T>) => {\n    const { theme, active, setTheme, reloadOnChange } = props\n    const onClick = useCallback(() => {\n        setTheme(theme)\n        if (reloadOnChange) {\n            setTimeout(() => window.location.reload())\n        }\n    }, [theme, setTheme, reloadOnChange])\n    return (\n        <DropdownItem active={active} onClick={onClick}>\n            {theme}\n        </DropdownItem>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    currentTheme: getTheme(state),\n    currentEditorTheme: getEditorTheme(state),\n})\n\nexport default connect(mapStateToProps, { setGeneralTheme: switchTheme, setEditorTheme: switchEditorTheme })(\n    memo(withErrorBoundary(withPerformance(Header, 'Header')))\n)\n","import * as React from 'react'\nimport { Button } from 'reactstrap'\nimport { memo, useCallback, ChangeEvent, FC } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\ninterface Props {\n    header: [string, string]\n    id: number\n    onChange: (h: [string, string]) => void\n    onRemove: (h: [string, string]) => void\n}\n\nexport const RenderHeaderInput: FC<Props> = memo(\n    withErrorBoundary(({ header, onRemove, onChange, id }) => {\n        const [key, value] = header\n\n        const onKeyChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([e.target.value, value]), [\n            onChange,\n            value,\n        ])\n        const onValueChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([key, e.target.value]), [\n            onChange,\n            key,\n        ])\n        const onRemoveCallback = useCallback(() => onRemove(header), [onRemove, header])\n\n        return (\n            <div className=\"row align-items-center\">\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={key}\n                        id={`headerName${id}`}\n                        type=\"text\"\n                        name={`headerName${id}`}\n                        placeholder=\"enter an name\"\n                        onChange={onKeyChange}\n                    />\n                </div>\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={value}\n                        type=\"text\"\n                        name={`headerValue${id}`}\n                        id={`headerValue${id}`}\n                        placeholder=\"enter an value\"\n                        onChange={onValueChange}\n                    />\n                </div>\n                <div className=\"col-sm-2\">\n                    <Button outline={true} color=\"danger\" onClick={onRemoveCallback}>\n                        remove\n                    </Button>\n                </div>\n            </div>\n        )\n    })\n)\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { connect } from 'react-redux'\nimport { updateSource } from 'actions/actions'\nimport { customToString } from 'core/converters/string'\nimport { RenderHeaderInput } from './RequestHeader'\nimport { useState, memo, useCallback, FC } from 'react'\nimport { Alert, FormGroup, Form, Button } from 'reactstrap'\nimport { useToggleState, useChangeEventState } from 'hooks/hooks'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\n\ninterface Props {\n    onFinish: () => void\n    setSource: (src: string) => void\n}\n\nconst HttpRequestSource: FC<Props> = ({ onFinish, setSource }) => {\n    const [method, setMethod] = useChangeEventState('GET')\n    const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n    const [body, setBody] = useChangeEventState('')\n    const [headers, setHeaders] = useState([['Accept', 'application/json'] as [string, string]])\n    const [error, setError] = useState(null as TypeError | null)\n    const [hasBody, setHasBody] = useToggleState()\n\n    const submit = useCallback(async () => {\n        const requestInit: RequestInit = {\n            method,\n            headers,\n            body: hasBody ? body : null,\n        }\n        const request = new Request(url, requestInit)\n        setError(null)\n\n        let json: string\n        try {\n            const result = await fetch(request)\n            json = await result.json()\n        } catch (e) {\n            logError('HttpRequestSource.submit', e)\n            setError(e)\n            return\n        }\n        setSource(customToString(json))\n        onFinish()\n    }, [method, url, body, headers, hasBody, setSource, onFinish])\n\n    return (\n        <div id=\"HttpRequestSource\">\n            <FormGroup>\n                <label htmlFor=\"requestMethod\">Method</label>\n                <select\n                    className=\"form-control-lg form-control\"\n                    defaultValue={method}\n                    name=\"requestMethod\"\n                    id=\"requestMethod\"\n                    onChange={setMethod}\n                >\n                    <option>GET</option>\n                    <option>POST</option>\n                    <option>PUT</option>\n                    <option>OPTIONS</option>\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <label htmlFor=\"requestUrl\">Request URL</label>\n                <input\n                    defaultValue={url}\n                    className=\"form-control-lg form-control\"\n                    type=\"url\"\n                    name=\"requestUrl\"\n                    id=\"requestUrl\"\n                    placeholder=\"enter an URL\"\n                    onChange={setUrl}\n                />\n            </FormGroup>\n            <div className=\"position-relative form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n                </label>\n            </div>\n            <Form inline={true} hidden={!hasBody}>\n                <FormGroup>\n                    <label>Body</label>\n                    <input\n                        className=\"form-control-lg form-control\"\n                        type=\"textarea\"\n                        value={body}\n                        onChange={setBody}\n                    />{' '}\n                </FormGroup>\n            </Form>\n            <label htmlFor=\"headers\">Request headers</label>{' '}\n            <Button\n                outline={true}\n                color=\"primary\"\n                onClick={() => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']])}\n            >\n                Add header\n            </Button>\n            <br />\n            <br />\n            <HeaderList headers={headers} onChange={setHeaders} />\n            <br />\n            <Button block={true} color=\"primary\" onClick={submit}>\n                Submit\n            </Button>\n            {error && (\n                <Alert color=\"danger\">\n                    Error: {error.message ? error.message : ''}\n                    {error.stack ? error.stack : ''}\n                </Alert>\n            )}\n        </div>\n    )\n}\n\ntype HeaderListProps = {\n    headers: Array<[string, string]>\n    onChange: (headers: Array<[string, string]>) => void\n}\n\nconst HeaderList: FC<HeaderListProps> = ({ headers, onChange }) => {\n    const onRemove = useCallback((header: [string, string]) => onChange(headers.filter(h => h !== header)), [\n        headers,\n        onChange,\n    ])\n    const onChangeCallback = useCallback(\n        (header: [string, string]) => {\n            const index = headers.indexOf(header)\n            headers[index] = { ...header }\n            onChange([...headers])\n        },\n        [headers, onChange]\n    )\n    return (\n        <>\n            {headers.map((header, index) => (\n                <RenderHeaderInput\n                    header={header}\n                    key={index}\n                    id={index}\n                    onChange={onChangeCallback}\n                    onRemove={onRemove}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default connect(null, { setSource: updateSource })(withErrorBoundary(memo(HttpRequestSource)))\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    updateSource,\n    resetEditor,\n    clearEditor,\n    updateAutoFormatSource,\n    undo,\n    redo,\n    updateQueryMode,\n} from 'actions/actions'\nimport HttpRequestSource from './source/RequestSource'\nimport { logDebug } from 'core/logging/logger'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    ButtonGroup,\n    Label,\n} from 'reactstrap'\nimport { memo, useCallback, FC, ChangeEvent } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport { getSourceAutoFormat, getCanUndo, getCanRedo, getQueryMode } from 'store/selectors'\nimport { RootState, QueryMode } from 'state/State'\nimport { withPerformance } from 'core/logging/performance'\n\ninterface Props {\n    onFileContentReady: typeof updateSource\n    changeAutoFormat: typeof updateAutoFormatSource\n    onReset: typeof resetEditor\n    onClear: typeof clearEditor\n    setQueryMode: typeof updateQueryMode\n    mode: QueryMode\n    onUndo: typeof undo\n    onRedo: typeof redo\n    canRedo: boolean\n    canUndo: boolean\n    autoFormat: boolean\n}\n\nconst LateralMenu: FC<Props> = ({\n    onReset,\n    onFileContentReady,\n    onClear,\n    autoFormat,\n    changeAutoFormat,\n    onRedo,\n    onUndo,\n    canRedo,\n    canUndo,\n    setQueryMode,\n    mode,\n}) => {\n    const [dropdownIsOpen, toggleDropdown] = useToggleState()\n    const [modalIsOpen, toggleModal] = useToggleState()\n    const handleFileChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            logDebug('onFileChange')\n            toggleDropdown()\n            if (e.target.files && e.target?.files?.length > 0) {\n                const fileReader = new FileReader()\n                logDebug('e.target.files', e.target.files[0].name)\n                fileReader.onload = () => {\n                    if (fileReader.result) {\n                        onFileContentReady(fileReader.result.toString())\n                    }\n                }\n                fileReader.readAsText(e.target.files[0])\n            }\n        },\n        [toggleDropdown, onFileContentReady]\n    )\n\n    const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n    return (\n        <>\n            <ButtonGroup className=\"d-flex\" vertical={true}>\n                <ButtonGroup vertical={false}>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onUndo}\n                        disabled={!canUndo}\n                    >\n                        <i className=\"material-icons mr-1 md-18\">undo</i>\n                        <span>Undo</span>\n                    </Button>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onRedo}\n                        disabled={!canRedo}\n                    >\n                        Redo\n                        <i className=\"material-icons mr-1 md-18\">redo</i>\n                    </Button>\n                </ButtonGroup>\n                <br />\n                <br />\n                <Label\n                    className=\"d-flex justify-content-center align-content-between\"\n                    check={true}\n                    onClick={handleAutoFormatChange}\n                >\n                    <i className=\"material-icons mr-1\">{autoFormat ? 'check_box' : 'check_box_outline_blank'}</i>\n                    Auto format\n                </Label>\n                <br />\n                <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n                    <DropdownToggle\n                        className=\"d-flex justify-content-center align-content-between\"\n                        size={'lg'}\n                        id=\"import-menu-button\"\n                        color=\"primary\"\n                    >\n                        <i className=\"material-icons mr-1 md-18\">unarchive</i>\n                        Import\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem toggle={false}>\n                            <label id=\"import-file\">\n                                Browse JSON file...\n                                <input\n                                    type=\"file\"\n                                    name=\"file\"\n                                    id=\"sourceFile\"\n                                    style={{ display: 'none' }}\n                                    onChange={handleFileChange}\n                                />\n                            </label>\n                        </DropdownItem>\n                        <DropdownItem id=\"http-request\" onClick={toggleModal}>\n                            <label>HTTP request</label>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n                <br />\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"secondary\"\n                    size={'lg'}\n                    onClick={onReset}\n                >\n                    <div>\n                        <i className=\"material-icons md-18 mr-1\">autorenew</i>\n                    </div>\n                    <div>Reset</div>\n                </Button>\n                <br />\n\n                {mode === 'Javascript' ? (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('SQL')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to SQL-like</div>\n                    </Button>\n                ) : (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('Javascript')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to JS</div>\n                    </Button>\n                )}\n\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"danger\"\n                    size={'lg'}\n                    onClick={onClear}\n                >\n                    <div>\n                        <i className=\"material-icons md-18  mr-1\">clear</i>\n                    </div>\n                    <div>Clear</div>\n                </Button>\n            </ButtonGroup>\n            <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n                <ModalBody>\n                    <HttpRequestSource onFinish={toggleModal} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    autoFormat: getSourceAutoFormat(state),\n    canUndo: getCanUndo(state),\n    canRedo: getCanRedo(state),\n    mode: getQueryMode(state),\n})\n\nexport default connect(mapStateToProps, {\n    onFileContentReady: updateSource,\n    onReset: resetEditor,\n    onClear: clearEditor,\n    onUndo: undo,\n    onRedo: redo,\n    changeAutoFormat: updateAutoFormatSource,\n    setQueryMode: updateQueryMode,\n})(memo(withErrorBoundary(withPerformance(LateralMenu, 'LateralMenu'))))\n","import { updateLayouts } from 'actions/actions'\nimport { configuration } from 'config'\nimport { withPerformance } from 'core/logging/performance'\nimport * as React from 'react'\nimport { FC, lazy, Suspense } from 'react'\nimport { Responsive, WidthProvider } from 'react-grid-layout'\nimport 'react-grid-layout/css/styles.css'\nimport { connect } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport { QueryMode } from 'state/State'\nimport { getLayouts, getQueryMode } from 'store/selectors'\nimport appStyles from './App.module.scss'\nimport { GrabbleHeader } from './common/GrabbleHeader'\nimport grabbleStyles from './common/GrabbleHeader.module.scss'\nimport Header from './Header'\nimport LateralMenu from './LateralMenu'\n\nconst ResponsiveGridLayout = WidthProvider(Responsive)\nconst SourceEditor = lazy(() => import(/* webpackChunkName: \"SourceEditor\" */ 'components/source/SourceEditor'))\nconst Output = lazy(() => import(/* webpackChunkName: \"Output\" */ 'components/output/Output'))\nconst QueryEditor = lazy(() => import(/* webpackChunkName: \"QueryEditor\" */ 'components/query/QueryEditor'))\n\ntype Props = {\n    mode: QueryMode\n    layouts: ReactGridLayout.Layouts\n    updateGridLayouts: typeof updateLayouts\n}\nconst App: FC<Props> = ({ mode, layouts, updateGridLayouts }) => {\n    const onLayoutChange = (_: ReactGridLayout.Layout[], newLayouts: ReactGridLayout.Layouts) => {\n        updateGridLayouts(newLayouts)\n    }\n    return (\n        <>\n            <Header />\n            <div className=\"container-fluid\">\n                <h1 className=\"my-5\">Paste your JSON and Query it.</h1>\n                <ResponsiveGridLayout\n                    autoSize={true}\n                    className=\"layout\"\n                    isResizable={true}\n                    layouts={layouts}\n                    draggableHandle={`.${grabbleStyles.grabber}`}\n                    breakpoints={{ lg: 0 }}\n                    cols={{ lg: 24 }}\n                    margin={[1, 1]}\n                    containerPadding={[10, 10]}\n                    rowHeight={25}\n                    onLayoutChange={onLayoutChange}\n                    verticalCompact={true}\n                    compactType=\"vertical\"\n                >\n                    <div key={configuration.layout.keys.lateralMenuKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"Options\">\n                            <LateralMenu />\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.sourceEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"1. Paste your JSON:\">\n                            <Suspense fallback={'loading...'}>\n                                <SourceEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.queryEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title={`2. Type your ${mode} query:`}>\n                            <Suspense fallback={'loading...'}>\n                                <QueryEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.outputKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"3. View your results:\">\n                            <Suspense fallback={'loading...'}>\n                                <Output />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                </ResponsiveGridLayout>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default connect(state => ({ mode: getQueryMode(state), layouts: getLayouts(state) }), {\n    updateGridLayouts: updateLayouts,\n})(withPerformance(App, 'App'))\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log('New content is available; please refresh.')\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log('Content is cached for offline use.')\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import { Action } from 'actions/actions'\nimport { configuration } from 'config'\nimport { jsonBeautify, jsonParseSafe } from 'core/converters/json'\nimport { containsIgnoreCase } from 'core/converters/string'\nimport { codeEvaluation } from 'core/interpreters/code'\nimport { perfEnd, perfStart } from 'core/logging/performance'\nimport { arrayElementName } from 'models/array'\nimport { combineReducers } from 'redux'\nimport undoable from 'redux-undo'\nimport initialStateJson from 'state/default-state.json'\nimport {\n    AppState,\n    emptyState,\n    getDefaultAppState,\n    getDefaultUserSettingsState,\n    itemType,\n    OupoutState,\n    OupoutTableState,\n    QueryMode,\n    QueryState,\n    SourceState,\n    tabType,\n    UserSettingsState,\n} from 'state/State'\n\nexport const rootReducer = (rootState = getDefaultAppState(), action: Action) => {\n    if (action.type === 'CLEAR_EDITOR') {\n        return emptyState\n    }\n    const newState =\n        rootState?.query && rootState?.source\n            ? ({\n                  ...rootState,\n                  query: query(rootState.query, action),\n                  source: source(rootState.source, action),\n              } as const)\n            : {}\n\n    const newOutputState = output(rootState, newState, action)\n    const ret = {\n        ...newState,\n        output: {\n            ...newOutputState,\n            table: table(newOutputState?.table ?? {}, action),\n        },\n    }\n\n    return ret\n}\n\nexport const source = (state: SourceState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_SOURCE_TEXT':\n            return {\n                ...state,\n                text: state?.autoFormat ? jsonBeautify(action.source.trim()) : action.source,\n            }\n        case 'UPDATE_AUTOFORMAT_SOURCE':\n            return {\n                ...state,\n                text: action.active ? jsonBeautify(state?.text?.trim()) : state?.text ?? '',\n                autoFormat: action.active,\n            }\n        default:\n            return state\n    }\n}\n\nexport const userSettings = (state: UserSettingsState | undefined = getDefaultUserSettingsState(), action: Action) => {\n    switch (action.type) {\n        case 'SWITCH_GLOBAL_THEME':\n            return { ...state, globalTheme: action.theme }\n        case 'SWITCH_EDITOR_THEME':\n            return { ...state, editorTheme: action.theme }\n        case 'UPDATE_LAYOUTS':\n            return { ...state, layouts: action.layouts }\n        default:\n            return state\n    }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n            return {\n                ...state,\n                text: action.query,\n            }\n        case 'UPDATE_QUERY_MODE':\n            return {\n                ...state,\n                mode: action.mode,\n                text:\n                    action.mode === 'SQL'\n                        ? initialStateJson.query.text\n                        : \"// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// you can use lodash helper functions. see https://lodash.com/docs/\\n// ex: _.chain(data).orderBy('age', 'desc')\\n\\n      data\\n    \",\n            } as const\n        default:\n            return state\n    }\n}\n\nexport const computeOutput = (\n    previousState: OupoutState,\n    sourceString: string,\n    queryString: string,\n    action: Action,\n    mode: QueryMode\n) => {\n    const text = codeEvaluation(sourceString, queryString, mode)\n\n    if (text instanceof Error) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            errorMessage: text.message,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n\n    let displayedColumns = new Array<string>()\n    const outputObject: itemType[] | object = jsonParseSafe(text)\n    if (Array.isArray(outputObject)) {\n        const keyMap: { [key: string]: string } = {}\n        outputObject.forEach(d => {\n            if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n                const keysToAdd = d ? (typeof d === 'object' ? Object.keys(d) : [arrayElementName]) : []\n                keysToAdd.forEach(key => (keyMap[key] = key))\n            }\n        })\n        displayedColumns = Object.keys(keyMap)\n            .filter(key => key && typeof key === 'string' && key.trim() !== '')\n            .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n    }\n    const isModalOpen =\n        previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n            ? previousState && !previousState.table.isModalOpen\n            : previousState && previousState.table\n            ? previousState.table.isModalOpen\n            : false\n\n    let selectedTab: tabType = Array.isArray(outputObject) ? 'Table' : 'RawJson'\n\n    if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n        selectedTab = action.tab\n    }\n    return {\n        selectedTab,\n        obj: outputObject,\n        objSize: text ? text.length : 0,\n        searchTerm: '',\n        match: false,\n        table: {\n            isArray: Array.isArray(outputObject),\n            isModalOpen,\n            displayedColumns,\n            columns: displayedColumns,\n            groupBy: [],\n        },\n    } as const\n}\n\nexport const output = (previousState: AppState, newState: AppState | null, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n        case 'UPDATE_SOURCE_TEXT':\n        case 'UPDATE_TABLE_COLUMNS':\n        case 'UPDATE_TABLE_GROUP_BY':\n            if (\n                previousState?.source?.text === newState?.source?.text &&\n                previousState?.query?.text === newState?.query?.text\n            ) {\n                return previousState.output\n            }\n            if (newState) {\n                return computeOutput(\n                    newState.output ?? {},\n                    newState.source?.text ? newState.source.text : '',\n                    newState.query?.text ? newState.query.text : '',\n                    action,\n                    newState.query?.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n        case 'TOGGLE_OUTPUT_TABLE_MODAL':\n            return newState\n                ? {\n                      ...newState.output,\n                      table: {\n                          ...(newState.output ? newState.output.table : {}),\n                          isModalOpen: newState.output?.table ? !newState.output.table.isModalOpen : false,\n                      },\n                  }\n                : {}\n        case 'UPDATE_OUTPUT_TAB_SELECTION':\n            if (newState) {\n                return {\n                    ...newState.output,\n                    selectedTab: action.tab,\n                }\n            }\n            break\n        case 'UPDATE_OUTPUT_SEARCH_TERM':\n            if (newState && newState.output) {\n                return {\n                    ...filter(newState.output, action.searchTerm),\n                    searchTerm: action.searchTerm,\n                    selectedTab: 'RawJson',\n                } as const\n            }\n            break\n        default:\n            if (newState?.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source?.text ? newState.source.text : '',\n                    newState.query?.text ? newState.query.text : '',\n                    action,\n                    newState.query?.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n    }\n    return {}\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n    if (typeof src !== 'string' && typeof src !== 'object') {\n        return { match: false, filteredObj: src }\n    }\n\n    if (typeof src === 'string') {\n        if (containsIgnoreCase(src, searchTerm)) {\n            return { match: true, filteredObj: src }\n        }\n        return { match: false, filteredObj: src }\n    }\n    const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n    const keys = Array.isArray(obj)\n        ? Array.from({ length: obj.length }, (_, k) => k)\n        : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n    let result = false\n\n    for (const propertyName of keys) {\n        const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n        if (propertyNameContains) {\n            result = true\n            continue\n        }\n        const child = obj[propertyName]\n        const { match, filteredObj } = containsTerm(child, searchTerm)\n        if (propertyNameContains || match) {\n            result = true\n            obj[propertyName] = filteredObj\n        } else {\n            if (Array.isArray(obj) && typeof propertyName === 'number') {\n                obj.splice(propertyName, 1)\n            } else {\n                delete obj[propertyName]\n            }\n        }\n    }\n    if (!result) {\n        if (!Array.isArray(obj)) {\n            ;(keys as string[]).forEach((propertyName: string) => delete obj[propertyName])\n        } else {\n            obj.length = 0\n        }\n    }\n    return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n    if (!searchTerm || searchTerm.trim() === '' || !state) {\n        return { ...state, match: false }\n    }\n    const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n    if (match) {\n        return { ...state, obj: filteredObj, match }\n    }\n\n    return state\n}\n\nconst table = (state: OupoutTableState | undefined, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_TABLE_COLUMNS':\n            let groupByList = state?.groupBy ? state.groupBy : []\n            groupByList.forEach(groupBy => {\n                if (action.columns.indexOf(groupBy) === -1) {\n                    groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n                }\n            })\n            return {\n                ...state,\n                displayedColumns: action.columns,\n                groupBy: groupByList,\n            }\n        case 'UPDATE_TABLE_GROUP_BY':\n            return {\n                ...state,\n                groupBy: action.groupBy\n                    .filter(gb => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1)\n                    .filter(gb => gb !== 'Group by...'),\n            }\n        default:\n            return state\n    }\n}\n\nexport const resetApp = (state = getDefaultAppState(), action: Action) => {\n    if (action.type === 'RESET_EDITOR') {\n        return rootReducer({ ...getDefaultAppState() }, action)\n    }\n    return rootReducer(state, action)\n}\n\nconst perf = (state = getDefaultAppState(), action: Action) => {\n    perfStart(`reduce - action: ${action.type}`)\n    const newState = resetApp(state, action)\n    perfEnd(`reduce - action: ${action.type}`)\n    return newState\n}\n\nconst rootReducers = combineReducers({\n    app: undoable(perf, { undoType: 'APP_UNDO', redoType: 'APP_REDO', limit: configuration.limitUndo }),\n    userSettings,\n})\nexport default rootReducers\n","import { configuration } from 'config'\nimport { logError } from 'core/logging/logger'\nimport localForage from 'localforage'\nimport lodash from 'lodash'\nimport { toast } from 'react-toastify'\nimport { StateWithHistory } from 'redux-undo'\nimport { AppState, getDefaultAppState, getDefaultUserSettingsState, UserSettingsState } from 'state/State'\n\nconst persistAppState = (appstate: StateWithHistory<AppState>) => {\n    persist(configuration.storageKey.appState, appstate)\n}\n\nconst persistUserSettings = (userSettings: UserSettingsState) => {\n    persist(configuration.storageKey.userSettings, userSettings)\n}\n\nconst getUserSettings = () => loadUserSettings(configuration.storageKey.userSettings) as Promise<UserSettingsState>\nconst getAppState = () => loadAppState(configuration.storageKey.appState) as Promise<StateWithHistory<AppState>>\n\nconst persist = async (key: string, value: object | undefined) => {\n    try {\n        await localForage.setItem(key, value)\n    } catch (error) {\n        toast.warn(`Error while saving ${key} to storage. ${error}`)\n    }\n}\n\nconst getDefault = (key: string) => {\n    switch (key) {\n        case configuration.storageKey.appState:\n            return getDefaultAppState()\n        case configuration.storageKey.userSettings:\n            return getDefaultUserSettingsState()\n        default:\n            throw new Error(`no defaul value for ${key}`)\n    }\n}\n\nconst loadAppState = async (key: string) => {\n    let present = getDefault(key)\n    try {\n        const savedState = await localForage.getItem<StateWithHistory<AppState>>(key)\n        return lodash.merge({ present }, savedState ?? {})\n    } catch (error) {\n        logError(error)\n    }\n\n    return {}\n}\nconst loadUserSettings = async (key: string) => {\n    let state = getDefault(key)\n    try {\n        const savedState = await localForage.getItem<UserSettingsState>(key)\n        return lodash.merge(state, savedState ?? {})\n    } catch (error) {\n        logError(error)\n    }\n\n    return {}\n}\n\nexport default {\n    getAppState,\n    getUserSettings,\n    persistAppState,\n    persistUserSettings,\n}\n","import rootReducers from 'reducers/reducers'\nimport { compose, createStore } from 'redux'\nimport persistence from './persistence'\n\nexport const configureStore = async () => {\n    const appState = await persistence.getAppState()\n    const userSettingsState = await persistence.getUserSettings()\n\n    const composeEnhancers =\n        typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n            ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n            : compose\n\n    const store = createStore(\n        rootReducers,\n        {\n            app: {\n                past: appState.past ?? [],\n                present: appState.present,\n                future: appState.future ?? [],\n            },\n            userSettings: userSettingsState,\n        },\n        composeEnhancers()\n    )\n\n    store.subscribe(() => {\n        persistence.persistAppState(store.getState().app)\n        persistence.persistUserSettings(store.getState().userSettings)\n    })\n\n    return store\n}\n","import App from 'components/App'\nimport { logDebug, logError } from 'core/logging/logger'\nimport * as React from 'react'\nimport { Provider } from 'react-redux'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport { unregister } from 'registerServiceWorker'\nimport { getTheme } from 'store/selectors'\nimport { configureStore } from 'store/store'\nimport { importThemeStyleCustom } from 'themes/themes'\nimport './index.scss'\nconst bootstrap = async () => {\n    const store = await configureStore()\n    const promises = await Promise.all([\n        import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n        importThemeStyleCustom(getTheme(store.getState())),\n    ])\n\n    const ReactDOM = promises[0]\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root') as HTMLElement\n    )\n    unregister()\n}\n\nbootstrap()\n    .then(() => logDebug('loaded'))\n    .catch(e => logError('boostrap error', e))\n","export const configuration = {\n    limitUndo: 9999,\n    storageKey: {\n        appState: 'keyrier-json.app.state',\n        userSettings: 'keyrier-json.user.settings',\n    },\n    layout: {\n        keys: {\n            lateralMenuKey: 'LateralMenu',\n            sourceEditorKey: 'SourceEditor',\n            queryEditorKey: 'QueryEditor',\n            outputKey: 'Output',\n        },\n    },\n} as const\n","import { QueryMode, tabType } from 'state/State'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\n\nexport const updateAutoFormatSource = (active: boolean) =>\n    ({\n        active,\n        type: 'UPDATE_AUTOFORMAT_SOURCE',\n    } as const)\n\nexport const updateSource = (source: string) =>\n    ({\n        source,\n        type: 'UPDATE_SOURCE_TEXT',\n    } as const)\n\nexport const updateQuery = (query: string) =>\n    ({\n        query,\n        type: 'UPDATE_QUERY',\n    } as const)\n\nexport const resetEditor = () =>\n    ({\n        type: 'RESET_EDITOR',\n    } as const)\n\nexport const undo = () =>\n    ({\n        type: 'APP_UNDO',\n    } as const)\n\nexport const redo = () =>\n    ({\n        type: 'APP_REDO',\n    } as const)\n\nexport const clearEditor = () =>\n    ({\n        type: 'CLEAR_EDITOR',\n    } as const)\n\nexport const toggleOutputTableModal = () =>\n    ({\n        type: 'TOGGLE_OUTPUT_TABLE_MODAL',\n    } as const)\n\nexport const updateTableColumns = (columns: string[]) =>\n    ({\n        columns,\n        type: 'UPDATE_TABLE_COLUMNS',\n    } as const)\n\nexport const updateTableGroupBy = (groupBy: string[]) =>\n    ({\n        groupBy,\n        type: 'UPDATE_TABLE_GROUP_BY',\n    } as const)\n\nexport const switchTheme = (theme: GeneralTheme) => ({\n    theme,\n    type: 'SWITCH_GLOBAL_THEME' as const,\n})\n\nexport const switchEditorTheme = (theme: EditorTheme) => ({\n    theme,\n    type: 'SWITCH_EDITOR_THEME' as const,\n})\n\nexport const updateLayouts = (layouts: ReactGridLayout.Layouts) => ({\n    layouts,\n    type: 'UPDATE_LAYOUTS' as const,\n})\n\nexport const updateSearchTerm = (searchTerm: string) =>\n    ({\n        searchTerm,\n        type: 'UPDATE_OUTPUT_SEARCH_TERM',\n    } as const)\n\nexport const updateQueryMode = (mode: QueryMode) =>\n    ({\n        mode,\n        type: 'UPDATE_QUERY_MODE',\n    } as const)\n\nexport const updateOutputTabSelection = (tab: tabType) =>\n    ({\n        tab,\n        type: 'UPDATE_OUTPUT_TAB_SELECTION',\n    } as const)\n\nexport type Action =\n    | ReturnType<typeof resetEditor>\n    | ReturnType<typeof clearEditor>\n    | ReturnType<typeof updateQuery>\n    | ReturnType<typeof toggleOutputTableModal>\n    | ReturnType<typeof updateTableColumns>\n    | ReturnType<typeof updateTableGroupBy>\n    | ReturnType<typeof switchTheme>\n    | ReturnType<typeof updateSearchTerm>\n    | ReturnType<typeof updateQueryMode>\n    | ReturnType<typeof updateLayouts>\n    | ReturnType<typeof updateOutputTabSelection>\n    | ReturnType<typeof updateSource>\n    | ReturnType<typeof updateAutoFormatSource>\n    | ReturnType<typeof switchEditorTheme>\n    | ReturnType<typeof undo>\n    | ReturnType<typeof redo>\n","import { configuration } from 'config'\nimport { StateWithHistory } from 'redux-undo'\nimport { EditorTheme, GeneralTheme } from 'themes/themes'\nimport { DeepReadonly } from 'utility-types'\nimport initialStateJson from './default-state.json'\n\nexport type itemType = any\n\nexport type AppState = DeepReadonly<{\n    source?: SourceState\n    query?: QueryState\n    output?: OupoutState\n    error?: Error\n}>\nexport type QueryState = DeepReadonly<{\n    text?: string\n    mode?: QueryMode\n}>\nexport type SourceState = DeepReadonly<{\n    text?: string\n    autoFormat?: boolean\n}>\nexport type OupoutState = DeepReadonly<{\n    searchTerm?: string\n    match?: boolean\n    selectedTab?: tabType\n    obj?: object | null\n    objSize?: number\n    errorMessage?: string\n    table?: OupoutTableState\n}>\nexport type OupoutTableState = DeepReadonly<{\n    isArray?: boolean\n    isModalOpen?: boolean\n    displayedColumns?: readonly string[]\n    columns?: readonly string[]\n    groupBy?: readonly string[]\n}>\nexport type UserSettingsState = DeepReadonly<{\n    globalTheme?: GeneralTheme\n    editorTheme?: EditorTheme\n    debugMode?: boolean\n    layouts: ReactGridLayout.Layouts\n}>\n\nexport type tabType = 'RawJson' | 'Table'\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type RootState = DeepReadonly<{\n    app?: StateWithHistory<AppState>\n    userSettings?: UserSettingsState\n}>\n\nexport const getDefaultAppState = () => initialStateJson as AppState\nexport const defaultAppState = initialStateJson as AppState\nexport const getDefaultUserSettingsState = () =>\n    ({\n        globalTheme: 'pulse',\n        editorTheme: 'github',\n        debugMode: false,\n        layouts: {\n            lg: [\n                { i: configuration.layout.keys.lateralMenuKey, x: 18, y: 0, w: 3, h: 20, minW: 3, minH: 20 },\n                { i: configuration.layout.keys.sourceEditorKey, x: 3, y: 0, w: 7, h: 15, minW: 5, minH: 10 },\n                { i: configuration.layout.keys.queryEditorKey, x: 10, y: 0, w: 7, h: 15, minW: 5, minH: 10 },\n                { i: configuration.layout.keys.outputKey, x: 3, y: 15, w: 14, h: 30, minW: 12, minH: 15 },\n            ],\n        },\n    } as const)\n\nexport const emptyState = {\n    source: { text: '', autoFormat: true },\n    query: { text: '', mode: 'SQL' },\n    output: {\n        match: false,\n        obj: {},\n        objSize: 2,\n        searchTerm: '',\n        selectedTab: 'RawJson',\n        table: {\n            isArray: false,\n            columns: [],\n            displayedColumns: [],\n            isModalOpen: false,\n            groupBy: [],\n        },\n    },\n} as const\n","import { getDefaultUserSettingsState, RootState } from 'state/State'\n\nconst copyArrayOrEmpty = <T = {}>(array: readonly T[] | null | undefined) => {\n    if (!array) {\n        return [] as T[]\n    }\n\n    return [...array] as T[]\n}\n\nexport const getOutputErrorMessage = (state: RootState) => state?.app?.present?.output?.errorMessage ?? ''\nexport const getOutputIsArray = (state: RootState) => !!state?.app?.present?.output?.table?.isArray\nexport const getOutputActiveTab = (state: RootState) => state?.app?.present?.output?.selectedTab ?? ('RawJson' as const)\nexport const getOutputObject = (state: RootState) => state?.app?.present?.output?.obj ?? {}\nexport const getOutputObjectSize = (state: RootState) => state?.app?.present?.output?.objSize ?? 0\nexport const getOutputSearchTerm = (state: RootState) => state?.app?.present?.output?.searchTerm\nexport const getOutputSearchMatch = (state: RootState) => !!state?.app?.present?.output?.match\nexport const getisOutputTableModalOpen = (state: RootState) => !!state?.app?.present?.output?.table?.isModalOpen\n\nexport const getTheme = (state: RootState) =>\n    state?.userSettings?.globalTheme ?? getDefaultUserSettingsState().globalTheme\nexport const getEditorTheme = (state: RootState) =>\n    state?.userSettings?.editorTheme ?? getDefaultUserSettingsState().editorTheme\nexport const getLayouts = (state: RootState) =>\n    (state?.userSettings?.layouts ?? getDefaultUserSettingsState().layouts) as ReactGridLayout.Layouts\n\nexport const getdisplayedColumns = (state: RootState) =>\n    copyArrayOrEmpty(state?.app?.present?.output?.table?.displayedColumns)\nexport const getOutputarray = (state: RootState) =>\n    Array.isArray(state?.app?.present?.output?.obj) ? copyArrayOrEmpty(state?.app?.present?.output?.obj) : []\nexport const getColumns = (state: RootState) => copyArrayOrEmpty(state?.app?.present?.output?.table?.columns)\nexport const getGroupBy = (state: RootState) => copyArrayOrEmpty(state?.app?.present?.output?.table?.groupBy)\n\nexport const getQueryText = (state: RootState) => state?.app?.present?.query?.text ?? ''\nexport const getQueryMode = (state: RootState) => state?.app?.present?.query?.mode ?? ('SQL' as const)\nexport const getSourceText = (state: RootState) => state?.app?.present?.source?.text ?? ''\nexport const getSourceAutoFormat = (state: RootState) => !!state?.app?.present?.source?.autoFormat\nexport const getCanRedo = (state: RootState) => state?.app?.future?.length !== 0\nexport const getCanUndo = (state: RootState) => (state?.app?.past?.length ?? 0) > 1\nexport const getDebugMode = (state: RootState) => !!state?.userSettings?.debugMode\n","import { useState, useCallback, ChangeEvent } from 'react'\n\nexport const useToggleState = (initial: boolean = false): readonly [boolean, () => void] => {\n    const [value, setValue] = useState(initial)\n    return [value, () => setValue(!value)]\n}\n\ntype HtmlElementHookable = HTMLSelectElement | HTMLInputElement\n\nexport const useChangeEventState = (\n    initialValue: string\n): readonly [string, (e: ChangeEvent<HtmlElementHookable>) => void] => {\n    const [value, setValue] = useState(initialValue)\n\n    const eventHandler = useCallback(\n        (event: ChangeEvent<HtmlElementHookable>) => {\n            if (event && event.target) {\n                setValue(event.target.value)\n            }\n        },\n        [setValue]\n    )\n\n    return [value, eventHandler]\n}\n","import Perfume, { IAnalyticsTrackerOptions } from 'perfume.js'\nimport { isDebugMode } from 'core/misc/debug'\nimport * as React from 'react'\nimport { ProfilerOnRenderCallback } from 'react'\nimport { logPerf, logEvents, logError } from './logger'\n\nconst analyticsTracker = (opt: IAnalyticsTrackerOptions) => {\n    logPerf(opt.metricName, opt.duration, opt.data)\n}\n\nconst options = {\n    // Metrics\n    firstContentfulPaint: true,\n    firstPaint: true,\n    firstInputDelay: true,\n    dataConsumption: true,\n    largestContentfulPaint: true,\n    navigationTiming: true,\n    // Analytics\n    analyticsTracker,\n    browserTracker: true,\n    // Logging\n    logPrefix: 'Perfume.js:',\n    logging: false,\n    // maxMeasureTime: 18000,\n    // maxDataConsumption: 18000,\n    warning: true,\n    debugging: false,\n}\n\nconst perfume = isDebugMode() ? new Perfume(options) : null\nexport const perfStart = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.start(name)\n}\n\nexport const perfEnd = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.end(name)\n}\n\nexport const perfEndPaint = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.endPaint(name)\n}\n\nexport const logPerfPeriodically = async () => {\n    const payload = []\n    for (let i = 0; i < 50; i++) {\n        if (logEvents.isEmpty()) {\n            break\n        }\n        const entry = logEvents.dequeue()\n\n        payload.push(entry)\n    }\n\n    if (payload.length === 0) {\n        return\n    }\n    const logUrl = 'https://us-central1-keyrier-json.cloudfunctions.net/perflogs'\n\n    try {\n        await fetch(logUrl, { method: 'POST', body: JSON.stringify(payload) })\n    } catch (error) {\n        logError('error sending perf logs', error)\n    }\n}\n\nexport const withPerformance = <P extends object>(Component: React.ComponentType<P>, name: string): React.FC<P> => ({\n    ...props\n}) => {\n    const onRender: ProfilerOnRenderCallback = (\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions\n    ) => {\n        logPerf(name, actualDuration, {\n            type: 'component-render',\n            id,\n            phase,\n            actualDuration,\n            baseDuration,\n            startTime,\n            commitTime,\n            interactions,\n        })\n    }\n\n    return (\n        <React.Profiler id={`perf-${name}`} onRender={onRender}>\n            <Component {...(props as P)} />\n        </React.Profiler>\n    )\n}\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { toast } from 'react-toastify'\nimport { Component, ComponentType } from 'react'\n\nconst MISSING_ERROR = 'Error was swallowed during propagation.'\n\ntype State = {\n    error?: Error\n}\n\nclass ErrorBoundary extends Component<{}, State> {\n    public readonly state: State = {\n        error: undefined,\n    }\n\n    public componentDidCatch(error: Error | null, info: object) {\n        this.setState({ error: error || new Error(MISSING_ERROR) }, () => this.notify(info))\n    }\n\n    public render() {\n        const { children } = this.props\n        const { error } = this.state\n\n        if (error) {\n            return <>An error occured</>\n        }\n\n        return children\n    }\n\n    private notify(info: object) {\n        logError('An error occured', this.state.error)\n        logError('error info:', info)\n        toast.error(JSON.stringify(info), { position: 'bottom-right', hideProgressBar: true, autoClose: false })\n    }\n}\n\nexport const withErrorBoundary = <T extends {}>(Wrapped: ComponentType<T>) => (props: T) => (\n    <ErrorBoundary>\n        <Wrapped {...props} />\n    </ErrorBoundary>\n)\n","export const jsonBeautify = (str: string | undefined) => {\n    if (typeof str !== 'string') {\n        return ''\n    }\n\n    const parsed = jsonParseSafe(str)\n    if (typeof parsed === 'string') {\n        return parsed\n    }\n\n    if (parsed === null) {\n        return ''\n    }\n\n    return JSON.stringify(parsed, null, 2)\n}\n\nexport const jsonParseSafe = (str: string | null) => {\n    if (typeof str !== 'string' || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n","export const customToString = (obj: any | null | undefined): string => {\n    if (Array.isArray(obj)) {\n        const array: any[] = obj\n        return array.map(e => customToString(e)).join(',')\n    }\n    if (typeof obj === 'object') {\n        return JSON.stringify(obj)\n    }\n    if (obj !== null && obj !== undefined) {\n        return obj.toString()\n    }\n\n    return ''\n}\n\nexport const takeFirst = (str: string | null | undefined, n: number) => {\n    if (typeof str !== 'string') {\n        return null\n    }\n    if (str.length <= n) {\n        return str\n    }\n    return `${str.substring(0, n)}...`\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n    if (!str || !part) {\n        return false\n    }\n    if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n        return true\n    }\n\n    return false\n}\n\nconst UNITS = ['B', 'kB', 'MB', 'GB']\n\nexport const prettyPrintBytes = (value: number) => {\n    if (!Number.isFinite(value)) {\n        throw new TypeError(`Expected a finite number, got ${typeof value}: ${value}`)\n    }\n\n    const isNegative = value < 0\n    const prefix = isNegative ? '-' : ''\n    if (isNegative) {\n        value = -value\n    }\n    if (value < 1) {\n        const numberStr = value.toString()\n        return prefix + numberStr + ' B'\n    }\n    const exponent = Math.min(Math.floor(Math.log10(value) / 3), UNITS.length - 1)\n    value = Number((value / Math.pow(1024, exponent)).toPrecision(3))\n    const numberString = value.toString()\n    const unit = UNITS[exponent]\n    return prefix + numberString + ' ' + unit\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggable\":\"GrabbleHeader_draggable__3DRIT\",\"grabber\":\"GrabbleHeader_grabber__12Y6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridborder\":\"App_gridborder__3A34e\"};","export const isDebugMode = () => (window as any).__DEBUG__\n","export const arrayElementName = 'arrayElement'\n","import { QueryMode } from 'state/State'\nimport { sqlEvaluation } from './sql'\nimport lodash from 'lodash'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (!sourceString || !queryString) {\n        return null\n    }\n\n    if (sourceString.trim() === '') {\n        return null\n    }\n\n    if (queryString.trim() === '') {\n        return null\n    }\n\n    if (mode === 'Javascript') {\n        return jsEvaluation(sourceString, queryString)\n    } else if (mode === 'SQL') {\n        return sqlEvaluation(sourceString, queryString)\n    }\n\n    return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string): null | string | Error => {\n    try {\n        window._ = lodash\n        const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString}) \n      `\n        // eslint-disable-next-line\n        const evaluatedQuery = eval(code) // DANGEROUS\n        return evaluatedQuery\n    } catch (error) {\n        return error\n    }\n}\n","import { createToken, Lexer } from 'chevrotain'\n\nconst stringTokenCharacterRegexString = 'a-zA-Z0-9%\\\\s-&(){}\\\\[\\\\]$\\\\*!\\\\\\\\@/,;:=ë#+-<>?^'\nconst stringTokenRegex = new RegExp(\n    `(\"[${stringTokenCharacterRegexString}']*\")|('[${stringTokenCharacterRegexString}\"]*')`\n)\n\nexport const Identifier = createToken({ name: 'Identifier', pattern: /[a-zA-Z]+[\\w.]*/ })\nexport const WhiteSpace = createToken({ name: 'WhiteSpace', pattern: /\\s+/, group: Lexer.SKIPPED })\nexport const Select = createToken({ name: 'Select', pattern: /SELECT/i, longer_alt: Identifier })\nexport const From = createToken({ name: 'From', pattern: /FROM/i, longer_alt: Identifier })\nexport const Where = createToken({ name: 'Where', pattern: /WHERE/i, longer_alt: Identifier })\nexport const Comma = createToken({ name: 'Comma', pattern: /,/ })\nexport const Like = createToken({ name: 'Like', pattern: /like/i, longer_alt: Identifier })\nexport const Limit = createToken({ name: 'Limit', pattern: /limit/i, longer_alt: Identifier })\nexport const Null = createToken({ name: 'Null', pattern: /NULL/i, longer_alt: Identifier })\nexport const In = createToken({ name: 'In', pattern: /in/i, longer_alt: Identifier })\nexport const IsNot = createToken({ name: 'IsNot', pattern: /is\\s+not/i, longer_alt: Identifier })\nexport const Is = createToken({ name: 'Is', pattern: /is/i, longer_alt: Identifier })\nexport const NotLike = createToken({ name: 'NotLike', pattern: /NOT\\s+LIKE/i })\nexport const OrderBy = createToken({ name: 'OrderBy', pattern: /ORDER\\s+BY+/i })\nexport const OrderByDirection = createToken({\n    name: 'OrderByDirection',\n    pattern: /(ASC|DESC)/i,\n    longer_alt: Identifier,\n})\nexport const As = createToken({ name: 'As', pattern: /AS/i, longer_alt: Identifier })\nexport const OrAnd = createToken({ name: 'OrAnd', pattern: /(AND|OR)/i, longer_alt: Identifier })\nexport const Star = createToken({ name: 'Star', pattern: /\\*/ })\nexport const Integer = createToken({ name: 'Integer', pattern: /0|[1-9]\\d*/ })\nexport const StringToken = createToken({ name: 'StringToken', pattern: stringTokenRegex })\nexport const GreaterOrEqualThan = createToken({ name: 'GreaterOrEqualThan', pattern: />=/ })\nexport const GreaterThan = createToken({ name: 'GreaterThan', pattern: />/ })\nexport const LessOrEqualThan = createToken({ name: 'LessOrEqualThan', pattern: /<=/ })\nexport const LessThan = createToken({ name: 'LessThan', pattern: /</ })\nexport const Equal = createToken({ name: 'Equal', pattern: /=/ })\nexport const NotEqual = createToken({ name: 'NotEqual', pattern: /(!=|<>)/ })\nexport const OpenParenthesis = createToken({ name: 'OpenParenthesis', pattern: /\\(/ })\nexport const CloseParenthesis = createToken({ name: 'CloseParenthesis', pattern: /\\)/ })\n\nexport const tokenVocabulary = {\n    WhiteSpace,\n    Select,\n    From,\n    Where,\n    Comma,\n    Like,\n    Limit,\n    Null,\n    In,\n    IsNot,\n    Is,\n    NotLike,\n    OrderBy,\n    OrderByDirection,\n    As,\n    OrAnd,\n\n    Identifier,\n\n    Star,\n    Integer,\n    StringToken,\n\n    Equal,\n    NotEqual,\n    GreaterOrEqualThan,\n    GreaterThan,\n    LessOrEqualThan,\n    LessThan,\n\n    OpenParenthesis,\n    CloseParenthesis,\n} as const\n\nexport type Token = keyof typeof tokenVocabulary\n\nconst SelectLexer = new Lexer(Object.values(tokenVocabulary))\n\nexport const lex = (inputText: string) => {\n    const lexingResult = SelectLexer.tokenize(inputText)\n\n    if (lexingResult.errors.length > 0) {\n        throw Error(JSON.stringify(lexingResult.errors))\n    }\n\n    return lexingResult\n}\n","import { CstNode, CstParser } from 'chevrotain'\nimport {\n    As,\n    CloseParenthesis,\n    Comma,\n    Equal,\n    From,\n    GreaterOrEqualThan,\n    GreaterThan,\n    Identifier,\n    In,\n    Integer,\n    Is,\n    IsNot,\n    LessOrEqualThan,\n    LessThan,\n    lex as selectLexer,\n    Like,\n    Limit,\n    NotEqual,\n    NotLike,\n    Null,\n    OpenParenthesis,\n    OrAnd,\n    OrderBy,\n    OrderByDirection,\n    Select,\n    Star,\n    StringToken,\n    tokenVocabulary,\n    Where,\n} from './lexer'\n\nexport const labels = {\n    value: 'value',\n    table: 'table',\n    name: 'name',\n    alias: 'alias',\n    left: 'left',\n    right: 'right',\n    in: 'in',\n} as const\n\nclass SelectParser extends CstParser {\n    public selectStatement: (idxInCallingRule?: number | undefined, ...args: any[]) => CstNode | CstNode[]\n    public fromClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public selectClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public whereClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public relationalOperator: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public orderByClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public limitClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public atomicExpression: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public expression: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public subExpression: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public projection: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public cols: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    constructor(config?: any) {\n        super(tokenVocabulary, config)\n\n        this.cols = this.RULE('cols', () => {\n            this.OR([\n                { ALT: () => this.CONSUME(Star, { LABEL: labels.value }) },\n                {\n                    ALT: () => {\n                        this.OR1([\n                            {\n                                ALT: () => this.CONSUME(StringToken, { LABEL: labels.value }),\n                            },\n                            {\n                                ALT: () => this.CONSUME(Identifier, { LABEL: labels.value }),\n                            },\n                        ])\n                        this.OPTION(() => {\n                            this.CONSUME(As)\n                            this.OR2([\n                                {\n                                    ALT: () => this.CONSUME1(StringToken, { LABEL: labels.name }),\n                                },\n                                {\n                                    ALT: () => this.CONSUME1(Identifier, { LABEL: labels.name }),\n                                },\n                            ])\n                        })\n                    },\n                },\n            ])\n        })\n\n        this.projection = this.RULE('projection', () => {\n            this.OR([\n                {\n                    ALT: () =>\n                        this.AT_LEAST_ONE_SEP({\n                            SEP: Comma,\n                            DEF: () => {\n                                this.SUBRULE(this.cols)\n                            },\n                        }),\n                },\n            ])\n        })\n\n        this.selectStatement = this.RULE('selectStatement', () => {\n            this.SUBRULE(this.selectClause)\n            this.SUBRULE(this.fromClause)\n            this.OPTION(() => {\n                this.SUBRULE(this.whereClause)\n            })\n            this.OPTION2(() => {\n                this.SUBRULE(this.orderByClause)\n            })\n            this.OPTION3(() => {\n                this.SUBRULE(this.limitClause)\n            })\n        })\n\n        this.selectClause = this.RULE('selectClause', () => {\n            this.CONSUME(Select)\n            this.SUBRULE(this.projection)\n        })\n\n        this.fromClause = this.RULE('fromClause', () => {\n            this.CONSUME(From)\n            this.OR([\n                {\n                    ALT: () => this.CONSUME(Identifier, { LABEL: labels.table }),\n                },\n                {\n                    ALT: () => this.CONSUME(StringToken, { LABEL: labels.table }),\n                },\n            ])\n            this.OPTION(() => this.CONSUME2(Identifier, { LABEL: labels.alias }))\n        })\n\n        this.whereClause = this.RULE('whereClause', () => {\n            this.CONSUME(Where)\n            this.SUBRULE(this.expression)\n        })\n\n        this.expression = this.RULE('expression', () => {\n            this.MANY_SEP({\n                SEP: OrAnd,\n                DEF: () => {\n                    this.SUBRULE(this.subExpression)\n\n                    return OrAnd.name\n                },\n            })\n        })\n\n        this.subExpression = this.RULE('subExpression', () => {\n            this.SUBRULE(this.atomicExpression, { LABEL: labels.left })\n            this.SUBRULE(this.relationalOperator)\n            this.SUBRULE2(this.atomicExpression, { LABEL: labels.right })\n        })\n\n        this.atomicExpression = this.RULE('atomicExpression', () => {\n            this.OR([\n                { ALT: () => this.CONSUME(Integer) },\n                { ALT: () => this.CONSUME(Null) },\n                { ALT: () => this.CONSUME(Identifier) },\n                { ALT: () => this.CONSUME(StringToken) },\n                {\n                    ALT: () => {\n                        this.CONSUME(OpenParenthesis)\n                        this.MANY_SEP({\n                            SEP: Comma,\n                            DEF: () => {\n                                this.OR1([\n                                    {\n                                        ALT: () => this.CONSUME1(Integer, { LABEL: labels.in }),\n                                    },\n                                    {\n                                        ALT: () => this.CONSUME1(StringToken, { LABEL: labels.in }),\n                                    },\n                                ])\n                            },\n                        })\n                        this.CONSUME(CloseParenthesis)\n                    },\n                },\n            ])\n        })\n\n        this.relationalOperator = this.RULE('relationalOperator', () => {\n            this.OR([\n                { ALT: () => this.CONSUME(GreaterOrEqualThan) },\n                { ALT: () => this.CONSUME(GreaterThan) },\n                { ALT: () => this.CONSUME(LessOrEqualThan) },\n                { ALT: () => this.CONSUME(LessThan) },\n                { ALT: () => this.CONSUME(Equal) },\n                { ALT: () => this.CONSUME(NotEqual) },\n                { ALT: () => this.CONSUME(Like) },\n                { ALT: () => this.CONSUME(NotLike) },\n                { ALT: () => this.CONSUME(In) },\n                { ALT: () => this.CONSUME(IsNot) },\n                { ALT: () => this.CONSUME(Is) },\n            ])\n        })\n\n        this.orderByClause = this.RULE('orderByClause', () => {\n            this.CONSUME(OrderBy)\n            this.CONSUME(Identifier)\n            this.OPTION({\n                DEF: () => this.CONSUME(OrderByDirection),\n            })\n        })\n\n        this.limitClause = this.RULE('limitClause', () => {\n            this.CONSUME(Limit)\n            this.CONSUME(Integer)\n        })\n\n        this.performSelfAnalysis()\n    }\n}\n\nconst parserInstance = new SelectParser()\n\nconst parse = (inputText: string) => {\n    const lexResult = selectLexer(inputText)\n\n    parserInstance.input = lexResult.tokens\n\n    parserInstance.selectStatement()\n\n    if (parserInstance.errors.length > 0) {\n        throw Error(parserInstance.errors[0].message)\n    }\n}\n\nexport { parserInstance, SelectParser, parse }\n","import { CstNode, ICstVisitor, IToken } from 'chevrotain'\nimport { Field, Op, Order, OrderArgument, Source, SQLTree } from 'sql-parser'\nimport { Integer, lex, Token, tokenVocabulary } from './lexer'\nimport { SelectParser } from './parser'\n\nconst parserInstance = new SelectParser()\nconst BaseSQLVisitor: new (arg?: any) => ICstVisitor<number, any> = parserInstance.getBaseCstVisitorConstructor()\n\nclass SQLToAstVisitor extends BaseSQLVisitor {\n    constructor() {\n        super()\n        this.validateVisitor()\n    }\n\n    public selectStatement(ctx: {\n        selectClause: CstNode | CstNode[]\n        fromClause: CstNode | CstNode[]\n        whereClause: CstNode | CstNode[]\n        orderByClause: CstNode | CstNode[]\n        limitClause: CstNode | CstNode[]\n    }) {\n        const select = this.visit(ctx.selectClause)\n        const from = this.visit(ctx.fromClause)\n        const where = this.visit(ctx.whereClause)\n        const order = this.visit(ctx.orderByClause)\n        const limit = this.visit(ctx.limitClause)\n        return {\n            fields: select,\n            source: from,\n            where,\n            order,\n            limit,\n        } as const\n    }\n\n    public selectClause(ctx: { projection: CstNode | CstNode[] }) {\n        const columns = this.visit(ctx.projection)\n        return columns\n    }\n\n    public cols(ctx: { name: IToken[]; value: IToken[] }) {\n        let value = ctx.value[0].image\n\n        if (ctx.value[0].tokenType === tokenVocabulary.StringToken) {\n            value = convertStringTokenToJsString(value)\n        }\n\n        let name = ctx.name && ctx.name[0] ? ctx.name[0].image : value\n\n        if (ctx.name && ctx.name[0].tokenType === tokenVocabulary.StringToken) {\n            name = convertStringTokenToJsString(name)\n        }\n        return {\n            name,\n            value,\n        }\n    }\n\n    public projection(ctx: { cols: CstNode[] }) {\n        const cols: { value: string; name: string }[] = ctx.cols.map(x => this.visit(x)) as any\n        const fields: Field[] = []\n        cols.forEach(({ name, value }) => {\n            const { pathArray: namePathArray, propertyName: namePropertyName } = splitPropertyPath(name)\n            const { pathArray: fieldPathArray, propertyName: fieldPropertyName } = splitPropertyPath(value)\n            const field: Field = {\n                name: {\n                    value: namePropertyName,\n                    values: namePathArray,\n                },\n                field: {\n                    value: fieldPropertyName,\n                    values: fieldPathArray,\n                },\n            }\n            fields.push(field)\n        })\n        return fields\n    }\n\n    public fromClause(ctx: { table: Array<IToken>; alias: Array<IToken> }): Source {\n        let tableName: string = ctx.table[0].image\n        if (ctx.table[0].tokenType === tokenVocabulary.StringToken) {\n            tableName = convertStringTokenToJsString(tableName)\n        }\n        const alias = ctx.alias?.length ? ctx.alias[0].image : tableName\n        return {\n            name: {\n                value: tableName,\n                values: splitPropertyPath(tableName).pathArray,\n            },\n            alias: {\n                value: alias,\n                values: splitPropertyPath(alias).pathArray,\n            },\n        }\n    }\n\n    public whereClause(ctx: { expression: CstNode | CstNode[] }) {\n        const conditions = this.visit(ctx.expression)\n\n        return {\n            conditions,\n        } as const\n    }\n\n    public limitClause(ctx: { Integer: IToken[] }) {\n        const limit = parseInt(ctx.Integer[0].image)\n        return {\n            value: {\n                value: limit,\n            },\n        }\n    }\n    public orderByClause(ctx: { OrderBy: IToken[]; Identifier: IToken[]; OrderByDirection: IToken[] }): Order {\n        const { pathArray, propertyName } = splitPropertyPath(ctx.Identifier[0].image)\n        const direction = ctx.OrderByDirection && (ctx.OrderByDirection[0].image as 'asc' | 'desc')\n\n        const order: OrderArgument = {\n            value: {\n                value: propertyName,\n                values: pathArray,\n            },\n            direction,\n        }\n\n        return {\n            orderings: [order],\n        }\n    }\n\n    public expression(\n        ctx: {\n            subExpression: Array<CstNode | CstNode[]>\n            OrAnd: Array<IToken>\n            right: Array<CstNode | CstNode[]>\n        },\n        i: number = 0\n    ) {\n        if (ctx.subExpression?.length - i === 1) {\n            const left = this.visit(ctx.subExpression[i])\n            return left\n        }\n        const left = this.visit(ctx.subExpression[i])\n\n        const operation = this.OrAnd(ctx.OrAnd[i])\n        const right: Op = this.expression(ctx, ++i)\n\n        return {\n            left,\n            right,\n            operation,\n        }\n    }\n\n    public subExpression(ctx: {\n        left: Array<CstNode | CstNode[]>\n        relationalOperator: CstNode | CstNode[]\n        right: Array<CstNode | CstNode[]>\n    }) {\n        const left = this.visit(ctx.left[0])\n        const operation = this.visit(ctx.relationalOperator)\n        const right = this.visit(ctx.right[0])\n\n        return {\n            left: { value: left, values: splitPropertyPath(left).pathArray },\n            operation,\n            right: { value: right, values: splitPropertyPath(right).pathArray },\n        }\n    }\n\n    public atomicExpression(context: Record<Token | 'in', Array<IToken>>) {\n        const entries = Object.entries(context) as [keyof typeof context, Array<IToken>][]\n        for (let [key, value] of entries) {\n            if (key === 'in') {\n                return value\n                    .map(x => {\n                        if (x.tokenType === Integer) {\n                            return parseInt(x.image)\n                        }\n                        return convertStringTokenToJsString(x.image)\n                    })\n                    .map(value => ({ value }))\n            }\n            if (key === 'Integer') {\n                return parseInt(value[0].image)\n            }\n            if (key === 'Null') {\n                return null\n            }\n            if (key === 'Identifier') {\n                return value[0].image\n            }\n            if (key === 'StringToken') {\n                return convertStringTokenToJsString(value[0].image)\n            }\n        }\n        return null\n    }\n\n    public relationalOperator(ctx: Record<Token, Array<IToken>>) {\n        const values = Object.values(ctx)\n        return values[0][0].image\n    }\n\n    public OrAnd(token: IToken) {\n        return token.image\n    }\n}\n\nconst toAstVisitorInstance = new SQLToAstVisitor()\n\nconst toAst = (inputText: string) => {\n    const lexResult = lex(inputText)\n\n    parserInstance.input = lexResult.tokens\n    let cst: CstNode[] | CstNode\n\n    cst = parserInstance.selectStatement()\n\n    if (parserInstance.errors.length > 0) {\n        throw Error(JSON.stringify(parserInstance.errors))\n    }\n    const ast = toAstVisitorInstance.visit(cst)\n    return (ast as unknown) as SQLTree\n}\n\nconst splitPropertyPath = (stringPath: string | number) => {\n    const pathArray = String(stringPath).split('.')\n\n    return { propertyName: pathArray[pathArray.length - 1], pathArray }\n}\n\nconst convertStringTokenToJsString = (str: string) => str.substring(1, str.length - 1)\n\nexport { toAst }\n","import _ from 'lodash'\nimport { Field, Op, Source, SQLTree } from 'sql-parser'\nimport { jsonParseSafe } from '../converters/json'\nimport { toAst } from './sql/actions-visitor'\nexport const computePath = (path: string[] | undefined) => {\n    if (!path) {\n        return []\n    }\n    if (path[0] === 'data') {\n        const newPath = [...path]\n        newPath.shift()\n        return newPath\n    }\n\n    return path\n}\n\nexport const sqlEvaluation = (sourceString: string, queryString: string) => {\n    try {\n        const sqlTree = toAst(cleanComment(queryString))\n        if (sqlTree.source.name.values && sqlTree.source.name.values[0] !== 'data') {\n            return new SyntaxError(sqlTree.source.name.values[0])\n        }\n\n        const sourceDataObject = jsonParseSafe(sourceString)\n\n        const result = executeQuery(sqlTree, sourceDataObject)\n\n        return JSON.stringify(result)\n    } catch (e) {\n        return e as Error\n    }\n}\n\nconst cleanComment = (str: string) => str.replace(/--(.*?)(\\n|$)/gm, '')\n\nconst map = (v: object, fields: Field[], source: Source) => {\n    if (fields.some(x => x.field.value === '*')) {\n        return v\n    }\n\n    return mapObject(fields, v, source)\n}\n\nconst executeQuery = (sqlTree: SQLTree, sourceDataObject: object) => {\n    let fromPath: (string | number)[] = [...sqlTree.source.name.values]\n    fromPath.shift()\n\n    let result = _.chain<any>(sourceDataObject)\n\n    if (fromPath && fromPath.length > 0) {\n        result = _.chain<any>(result.get(fromPath))\n    }\n    const value = result.value()\n    if (_.isArray(value)) {\n        return result\n            .filter(v => {\n                if (!sqlTree.where || !sqlTree.where.conditions) {\n                    return true\n                }\n                const leftValue = sqlTree.where.conditions.left\n                const rightValue = sqlTree.where.conditions.right\n                const operation = sqlTree.where.conditions.operation\n\n                return compareOperands(operation, leftValue, rightValue, v)\n            })\n            .orderBy(\n                sqlTree.order ? sqlTree.order.orderings.map(x => x.value.value) : undefined,\n                sqlTree.order ? sqlTree.order.orderings.map(x => x.direction) : undefined\n            )\n            .map(v => map(v, sqlTree.fields, sqlTree.source))\n            .take(sqlTree.limit?.value?.value ? parseInt(sqlTree.limit.value.value.toString()) : 999999999999999)\n            .value()\n    }\n    return map(value, sqlTree.fields, sqlTree.source)\n}\nconst operators = {\n    modulo: '%',\n} as const\nconst compareOperands = (operation: string, left: Op, right: Op, value: object): boolean => {\n    const leftValue = _.get(value, computePath(left?.values))\n\n    switch (operation.toLowerCase()) {\n        case 'or':\n            return (\n                compareOperands(left.operation, left.left, left.right, value) ||\n                compareOperands(right.operation, right.left, right.right, value)\n            )\n        case 'and':\n            return (\n                compareOperands(left.operation, left.left, left.right, value) &&\n                compareOperands(right.operation, right.left, right.right, value)\n            )\n\n        case '=':\n        case 'is':\n            return leftValue === right.value\n        case '!=':\n        case 'is not':\n        case '<>':\n            return leftValue !== right.value\n        case 'like': {\n            const leftStr = String(leftValue)\n            const rightStr = String(right.value)\n            if (rightStr.startsWith(operators.modulo) && rightStr.endsWith(operators.modulo)) {\n                if (leftStr.includes(rightStr.substring(1, rightStr.length - 1))) {\n                    return true\n                }\n            } else if (rightStr.startsWith(operators.modulo)) {\n                if (leftStr.endsWith(rightStr.substring(rightStr.indexOf(operators.modulo) + 1))) {\n                    return true\n                }\n            } else if (rightStr.endsWith(operators.modulo)) {\n                if (leftStr.startsWith(rightStr.substring(0, rightStr.indexOf(operators.modulo)))) {\n                    return true\n                }\n            }\n            return false\n        }\n        case 'not like': {\n            const leftStr = String(leftValue)\n            const rightStr = String(right.value)\n            if (rightStr.startsWith(operators.modulo) && rightStr.endsWith(operators.modulo)) {\n                if (leftStr.includes(rightStr.substring(1, rightStr.length - 1))) {\n                    return false\n                }\n            } else if (rightStr.startsWith(operators.modulo)) {\n                if (leftStr.endsWith(rightStr.substring(rightStr.indexOf(operators.modulo) + 1))) {\n                    return false\n                }\n            } else if (rightStr.endsWith(operators.modulo)) {\n                if (leftStr.startsWith(rightStr.substring(0, rightStr.indexOf(operators.modulo)))) {\n                    return false\n                }\n            }\n            return true\n        }\n        case '>':\n            return !!right.value && leftValue > right.value\n        case '>=':\n            return !!right.value && leftValue >= right.value\n        case '<':\n            return !!right.value && leftValue < right.value\n        case '<=':\n            return !!right.value && leftValue <= right.value\n        case 'in':\n            return Array.isArray(right.value) && right.value.filter(x => x.value === leftValue).length > 0\n    }\n    return false\n}\n\nconst mapObject = (fields: Field[], mapped: object, source: Source) => {\n    const temp: {\n        [key: string]: any\n    } = {}\n    fields.forEach(field => {\n        const value = _.get(\n            mapped,\n            field.field.values.filter(val => val !== source.alias?.value)\n        )\n        temp[field.name.value] = value\n    })\n    mapped = temp\n    return mapped\n}\n"],"sourceRoot":""}