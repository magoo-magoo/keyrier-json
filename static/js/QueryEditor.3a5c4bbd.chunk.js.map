{"version":3,"sources":["../node_modules/reactstrap/es/ButtonDropdown.js","Components/Editor/QueryEditor/QueryEditor.tsx","Components/Deferred/DeferredAceEditor.tsx"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_Dropdown__WEBPACK_IMPORTED_MODULE_3__","propTypes","children","a","node","ButtonDropdown","props","createElement","Object","group","__webpack_exports__","connect","state","queryText","getQueryText","mode","getQueryMode","setQuery","updateQuery","setQueryMode","updateQueryMode","withErrorBoundary","memo","_ref","_useToggleState","useToggleState","_useToggleState2","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","modeOpen","switchModeOpen","setJsMode","useCallback","setSqlMode","onChange","unstable_runWithPriority","unstable_IdlePriority","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_8__","color","caret","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","header","active","onClick","Components_Deferred_DeferredAceEditor__WEBPACK_IMPORTED_MODULE_4__","theme","name","fontSize","highlightActiveLine","value","minLines","maxLines","showPrintMargin","editorProps","$blockScrolling","Infinity","setOptions","showLineNumbers","tabSize","enableBasicAutocompletion","enableLiveAutocompletion","dragEnabled","width","debounceChangePeriod","AceEditor","lazy","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","aceEditor","wrap","_context","prev","next","e","then","t","bind","sent","Promise","all","abrupt","stop"],"mappings":"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","file":"static/js/QueryEditor.3a5c4bbd.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport { updateQuery, updateQueryMode } from 'Actions/actions'\nimport { RootState, QueryMode } from 'State/State'\nimport { AceEditor } from 'Components/Deferred/DeferredAceEditor'\nimport { getQueryText, getQueryMode } from 'Store/selectors'\nimport { useToggleState } from 'Hooks/hooks'\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { memo, useCallback, FC } from 'react'\nimport { withErrorBoundary } from 'Components/Common/ErrorBoundary'\nimport { unstable_runWithPriority, unstable_IdlePriority } from 'scheduler'\n\ninterface Props {\n  setQuery: typeof updateQuery\n  setQueryMode: typeof updateQueryMode\n  queryText: string\n  mode: QueryMode\n}\n\nconst QueryEditor: FC<Props> = ({ setQuery, queryText, mode, setQueryMode }) => {\n  const [modeOpen, switchModeOpen] = useToggleState()\n\n  const setJsMode = useCallback(() => setQueryMode('Javascript'), [setQueryMode])\n  const setSqlMode = useCallback(() => setQueryMode('SQL'), [setQueryMode])\n  const onChange = useCallback(\n    (a: string) => {\n      unstable_runWithPriority(unstable_IdlePriority, () => setQuery(a))\n    },\n    [setQuery]\n  )\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-10 offset-sm-2\">\n          <h3>2. Type your query:</h3>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-2\">\n          <ButtonDropdown isOpen={modeOpen} toggle={switchModeOpen}>\n            <DropdownToggle color=\"primary\" caret={true}>\n              Mode\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem header={true}>Choose a predefined query</DropdownItem>\n              <DropdownItem active={mode === 'Javascript'} onClick={setJsMode}>\n                Javascript\n              </DropdownItem>\n              <DropdownItem active={mode === 'SQL'} onClick={setSqlMode}>\n                SQL like(experimental)\n              </DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n        </div>\n        <div className=\"col-sm-10\">\n          <AceEditor\n            mode={mode === 'Javascript' ? 'javascript' : 'mysql'}\n            theme=\"monokai\"\n            name=\"queryAceEditor\"\n            onChange={onChange}\n            fontSize={13}\n            highlightActiveLine={true}\n            value={queryText}\n            minLines={10}\n            maxLines={25}\n            showPrintMargin={false}\n            editorProps={{\n              $blockScrolling: Infinity,\n            }}\n            setOptions={{\n              showLineNumbers: true,\n              tabSize: 2,\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              dragEnabled: true,\n            }}\n            width={'100%'}\n            enableBasicAutocompletion={true}\n            enableLiveAutocompletion={true}\n            debounceChangePeriod={250}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  queryText: getQueryText(state),\n  mode: getQueryMode(state),\n})\n\nexport default connect(\n  mapStateToProps,\n  { setQuery: updateQuery, setQueryMode: updateQueryMode }\n)(withErrorBoundary(memo(QueryEditor)))\n","import { lazy } from 'react'\n\nexport const AceEditor = lazy(async () => {\n  const aceEditor = await import(/* webpackChunkName: \"react-ace\" */ 'react-ace')\n  await Promise.all([\n    import(/* webpackChunkName: \"brace/theme/monokai\" */ 'brace/theme/monokai'),\n    import(/* webpackChunkName: \"brace/theme/github\" */ 'brace/theme/github'),\n    import(/* webpackChunkName: \"brace/mode/json\" */ 'brace/mode/json'),\n    import(/* webpackChunkName: \"brace/mode/javascript\" */ 'brace/mode/javascript'),\n    import(/* webpackChunkName: \"brace/mode/mysql\" */ 'brace/mode/mysql'),\n    import(/* webpackChunkName: \"brace/ext/language_tools\" */ 'brace/ext/language_tools'),\n    import(/* webpackChunkName: \"brace/ext/searchbox\" */ 'brace/ext/searchbox'),\n    import(/* webpackChunkName: \"brace/snippets/javascript\" */ 'brace/snippets/javascript'),\n    import(/* webpackChunkName: \"brace/snippets/json\" */ 'brace/snippets/json'),\n  ])\n  return aceEditor\n})\n"],"sourceRoot":""}