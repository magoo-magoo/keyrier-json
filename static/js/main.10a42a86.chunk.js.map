{"version":3,"sources":["models/array.ts","core/logging/logger.ts","core/misc/utils.ts","core/code.ts","../../core/dist/index.js","actions/actions.ts","../../src/operators.ts","../../src/lexer.ts","../../src/actions-visitor.ts","../../src/parser.ts","../../src/utils.ts","../../src/sql.ts","components/common/GrabbleHeader.tsx","themes/themes.ts","components/Header.tsx","components/source/RequestHeader.tsx","components/source/RequestSource.tsx","components/LateralMenu.tsx","components/App.tsx","registerServiceWorker.ts","core/converters/json.ts","reducers/reducers.ts","store/persistence.ts","store/store.ts","index.tsx","state/State.ts","store/selectors.ts","hooks/hooks.ts","components/common/ErrorBoundary.tsx","core/logging/performance.tsx","core/converters/string.ts","components/common/GrabbleHeader.module.scss","components/App.module.scss","core/misc/debug.ts","config.ts"],"names":["arrayElementName","logError","error","payload","console","logDebug","message","debug","logPerf","name","duration","customProperties","isDebugMode","appVersion","getAppVersion","version","location","window","href","logEvents","enqueue","queue","offset","this","length","item","push","slice","undefined","__PERF_EVENT_LOGS","codeEvaluation","sourceString","queryString","mode","trim","evaluation","evaluate","Error","obj","text","JSON","stringify","jsEvaluation","sqlEvaluation","code","eval","module","exports","require","updateAutoFormatSource","active","type","updateSource","source","updateQuery","query","resetEditor","undo","redo","clearEditor","toggleOutputTableModal","updateTableColumns","columns","updateTableGroupBy","groupBy","switchTheme","theme","switchEditorTheme","updateLayouts","layouts","updateSearchTerm","searchTerm","updateQueryMode","updateOutputTabSelection","tab","stringTokenRegex","RegExp","Identifier","createToken","pattern","WhiteSpace","group","Lexer","SKIPPED","Comment","Select","longer_alt","From","Where","Comma","Like","label","Limit","Null","In","On","IsNot","Is","NotLike","OrderBy","InnerJoin","OrderByDirection","As","OrAnd","Star","Integer","StringToken","GreaterOrEqualThan","GreaterThan","LessOrEqualThan","LessThan","Equal","NotEqual","OpenParenthesis","CloseParenthesis","tokenVocabulary","SelectLexer","Object","values","parserInstance","config","lexer","_this","RULE","SUBRULE","selectClause","fromClause","OPTION","joinClause","OPTION2","whereClause","OPTION3","orderByClause","OPTION4","limitClause","CONSUME","projection","OR","ALT","AT_LEAST_ONE_SEP","SEP","DEF","cols","LABEL","CONSUME2","CONSUME3","OPTION1","CONSUME1","OR3","CONSUME4","OR1","OR2","expression","MANY","MANY_SEP","subExpression","atomicExpression","relationalOperator","SUBRULE3","selectStatement","SUBRULE1","SUBRULE2","performSelfAnalysis","CstParser","toAstVisitorInstance","validateVisitor","ctx","value","fields","visit","where","order","limit","joins","image","tokenType","convertStringTokenToJsString","func","map","_this2","x","forEach","splitPropertyPath","namePathArray","pathArray","namePropertyName","propertyName","field","index","tableName","table","alias","conditions","_table","from","_this3","parseInt","orderings","direction","i","left","operation","right","context","entries","key","v","getBaseCstVisitorConstructor","toAst","inputText","cst","lexResult","lexingResult","tokenize","errors","input","tokens","stringPath","String","split","str","substring","jsonParseSafe","safeStr","replace","parse","get","path","defaultValue","travel","regexp","prototype","call","filter","Boolean","reduce","res","result","sqlQueryWithMultipleSources","sqlTree","keys","some","toLowerCase","SyntaxError","sourceDataObjects","utils","executeQuery","e","sourceDataObject","data","fromPath","shift","Array","isArray","mapper","jointures","join","rows","real","projected","dataContext","ordered","orderBy","results","match","joinRow","joinRowData","row","compareOperands","mapped","leftValue","getValue","rightValue","leftStr","rightStr","startsWith","endsWith","includes","indexOf","operand","getIdentifierValue","sources","mappedObject","functionName","toUpperCase","trimLeft","trimRight","reverse","availableTables","allowedSourceNames","json","GrabbleHeader","title","children","useMeasure","parentref","parentHeight","height","headerRef","log","ref","className","styles","draggable","CardHeader","style","background","grabber","overflowY","overflowX","themeDeps","Map","importThemeStyleCustom","themeLoader","next","availableGeneralThemes","availableEditorThemes","ThemeDropDownItem","props","setTheme","reloadOnChange","onClick","useCallback","setTimeout","reload","DropdownItem","connect","mapStateToProps","state","currentTheme","getTheme","currentEditorTheme","getEditorTheme","setGeneralTheme","setEditorTheme","memo","withErrorBoundary","withPerformance","Header","useToggleState","isOpen","switchIsOpen","dropDownIsOpen","toggleDropdown","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","role","Collapse","navbar","Nav","NavItem","Dropdown","toggle","DropdownToggle","nav","caret","DropdownMenu","header","NavLink","RenderHeaderInput","onRemove","onChange","id","onKeyChange","target","onValueChange","onRemoveCallback","placeholder","Button","outline","HeaderList","headers","h","onChangeCallback","setSource","HttpRequestSource","onFinish","useChangeEventState","method","setMethod","url","setUrl","body","setBody","useState","setHeaders","setError","hasBody","setHasBody","submit","a","request","Request","fetch","customToString","FormGroup","htmlFor","Form","inline","hidden","block","Alert","stack","autoFormat","getSourceAutoFormat","canUndo","getCanUndo","canRedo","getCanRedo","getQueryMode","onFileContentReady","onReset","onClear","onUndo","onRedo","resetHistory","ActionCreators","clearHistory","changeAutoFormat","setQueryMode","LateralMenu","dropdownIsOpen","modalIsOpen","toggleModal","handleFileChange","files","fileReader","FileReader","onload","toString","readAsText","handleAutoFormatChange","ButtonGroup","vertical","size","disabled","Label","check","ButtonDropdown","display","Modal","ModalHeader","ModalBody","ModalFooter","ResponsiveGridLayout","WidthProvider","Responsive","SourceEditor","lazy","Output","QueryEditor","getLayouts","updateGridLayouts","App","autoSize","isResizable","draggableHandle","grabbleStyles","breakpoints","xs","lg","margin","containerPadding","rowHeight","onLayoutChange","_","newLayouts","compactType","maxRows","configuration","layout","lateralMenuKey","appStyles","gridborder","sourceEditorKey","fallback","queryEditorKey","outputKey","hostname","jsonBeautify","parsed","appReducer","rootState","getDefaultAppState","action","emptyState","newState","newOutputState","output","ret","initialStateJson","computeOutput","previousState","selectedTab","objSize","errorMessage","isModalOpen","displayedColumns","keyMap","d","is","sort","ax","b","localeCompare","containsTerm","src","filteredObj","containsIgnoreCase","k","getOwnPropertyNames","propertyNameContains","splice","groupByList","gb","rootReducers","combineReducers","app","undoable","resetApp","undoType","redoType","limitUndo","userSettings","getDefaultUserSettingsState","globalTheme","editorTheme","persist","localForage","setItem","toast","warn","getDefault","storageKey","appState","loadAppState","present","merge","getItem","savedState","loadUserSettings","getAppState","getUserSettings","persistAppState","appstate","persistUserSettings","configureStore","persistence","userSettingsState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","past","future","subscribe","getState","Promise","all","promises","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","bootstrap","catch","debugMode","y","w","minW","minH","copyArrayOrEmpty","array","getOutputErrorMessage","getOutputIsArray","getOutputActiveTab","getOutputObject","getOutputObjectSize","getOutputSearchTerm","getOutputSearchMatch","getisOutputTableModalOpen","getdisplayedColumns","getOutputarray","getColumns","getGroupBy","getQueryText","getSourceText","getDebugMode","initial","setValue","initialValue","event","ErrorBoundary","info","setState","notify","position","hideProgressBar","autoClose","Component","Wrapped","options","firstContentfulPaint","firstPaint","firstInputDelay","dataConsumption","largestContentfulPaint","navigationTiming","analyticsTracker","opt","metricName","browserTracker","logPrefix","logging","warning","debugging","Perfume","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","takeFirst","n","part","toLocaleLowerCase","UNITS","prettyPrintBytes","Number","isFinite","TypeError","isNegative","prefix","exponent","Math","min","floor","log10","pow","toPrecision","__DEBUG__"],"mappings":"kHAAA,kCAAO,IAAMA,EAAmB,gB,mNCKnBC,EAAW,SAAXA,SAAYC,EAAuBC,GAC5CC,QAAQF,MAAM,UAAWA,GACF,qBAAZC,GACPC,QAAQF,MAAMC,IAUTE,EAAW,SAAXA,SAAYC,EAAiBH,GACf,qBAAZA,EACPC,QAAQG,MAAM,UAAWD,GACtBF,QAAQG,MAAM,UAAWD,EAASH,IAGhCK,EAAU,SAAVA,QAAWC,EAAcC,EAAmBC,GACrD,GAAIC,cAAe,CACf,IAAMC,ECxBe,SAAhBC,gBAAgB,OAAMC,IDwBRD,GACbX,EAAO,yBAAKM,OAAMC,WAAUG,cAAeF,GAApC,IAAsDK,SAAUC,OAAOD,SAASE,OAC7FC,EAAUC,QAAQjB,KAyDbgB,EAAY,I,yDAnDbE,MAAa,G,KACbC,OAAS,E,sEAIb,OAAOC,KAAKF,MAAMG,OAASD,KAAKD,S,wCAKhC,OAA6B,IAAtBC,KAAKF,MAAMG,S,sCAOPC,GACXF,KAAKF,MAAMK,KAAKD,K,wCAQhB,GAA0B,IAAtBF,KAAKF,MAAMG,OAAf,CAKA,IAAMC,EAAOF,KAAKF,MAAME,KAAKD,QAS7B,OANoB,IAAdC,KAAKD,QAAcC,KAAKF,MAAMG,SAChCD,KAAKF,MAAQE,KAAKF,MAAMM,MAAMJ,KAAKD,QACnCC,KAAKD,OAAS,GAIXG,K,kCAOP,OAAOF,KAAKF,MAAMG,OAAS,EAAID,KAAKF,MAAME,KAAKD,aAAUM,M,UAK/DX,OAAeY,kBAAoBV,G,0EEtFrC,gRAGaW,eAAiB,SAAjBA,eAAkBC,EAAsBC,EAAqBC,GACtE,IAAKF,IAAiBC,EAClB,OAAO,KAGX,GAA4B,KAAxBD,EAAaG,OACb,OAAO,KAGX,GAA2B,KAAvBF,EAAYE,OACZ,OAAO,KAGX,IAAMC,EAAaC,SAASL,EAAcC,EAAaC,GACvD,OAAIE,aAAsBE,MACfF,EAEJ,CAAEG,IAAKH,EAAYI,KAAMC,KAAKC,UAAUN,KAG7CC,SAAW,SAAXA,SAAYL,EAAsBC,EAAqBC,GACzD,MAAa,eAATA,EACOS,aAAaX,EAAcC,GAClB,QAATC,EACAU,4DAAcZ,EAAcC,GAEhC,IAAIK,MAAM,qBAGfK,aAAe,SAAfA,aAAgBX,aAAsBC,aACxC,IACI,IAAMY,KAAI,8CAEUb,aAFV,sBAGRC,YAHQ,YAMV,OAAOa,KAAKD,MACd,MAAO1C,OACL,OAAOA,S,iCCtCb4C,EAAOC,QAAUC,EAAQ,M,sECD3B,giBAAO,IAAMC,EAAyB,SAAzBA,uBAA0BC,GAAD,MACjC,CACGA,SACAC,KAAM,6BAGDC,EAAe,SAAfA,aAAgBC,GAAD,MACvB,CACGA,SACAF,KAAM,uBAGDG,EAAc,SAAdA,YAAeC,GAAD,MACtB,CACGA,QACAJ,KAAM,iBAGDK,EAAc,SAAdA,cAAc,MACtB,CACGL,KAAM,iBAGDM,EAAO,SAAPA,OAAO,MACf,CACGN,KAAM,aAGDO,EAAO,SAAPA,OAAO,MACf,CACGP,KAAM,aAGDQ,EAAc,SAAdA,cAAc,MACtB,CACGR,KAAM,iBAGDS,EAAyB,SAAzBA,yBAAyB,MACjC,CACGT,KAAM,8BAGDU,EAAqB,SAArBA,mBAAsBC,GAAD,MAC7B,CACGA,UACAX,KAAM,yBAGDY,EAAqB,SAArBA,mBAAsBC,GAAD,MAC7B,CACGA,UACAb,KAAM,0BAGDc,EAAc,SAAdA,YAAeC,GAAD,MAA0B,CACjDA,QACAf,KAAM,wBAGGgB,EAAoB,SAApBA,kBAAqBD,GAAD,MAAyB,CACtDA,QACAf,KAAM,wBAGGiB,EAAgB,SAAhBA,cAAiBC,GAAD,MAAuC,CAChEA,UACAlB,KAAM,mBAGGmB,EAAmB,SAAnBA,iBAAoBC,GAAD,MAC3B,CACGA,aACApB,KAAM,8BAGDqB,EAAkB,SAAlBA,gBAAmBvC,GAAD,MAC1B,CACGA,OACAkB,KAAM,sBAGDsB,EAA2B,SAA3BA,yBAA4BC,GAAD,MACnC,CACGA,MACAvB,KAAM,iC,kqCCxFP,ICIDwB,EAAmB,IAAIC,uIAIhBC,EAAaC,cAAY,CAAErE,KAAM,aAAcsE,QAAS,sBACxDC,EAAaF,cAAY,CAAErE,KAAM,aAAcsE,QAAS,MAAOE,MAAOC,QAAMC,UAC5EC,EAAUN,cAAY,CAAErE,KAAM,UAAWsE,QAAS,OAAQE,MAAOC,QAAMC,UACvEE,EAASP,cAAY,CAAErE,KAAM,SAAUsE,QAAS,UAAWO,WAAYT,IACvEU,EAAOT,cAAY,CAAErE,KAAM,OAAQsE,QAAS,QAASO,WAAYT,IACjEW,EAAQV,cAAY,CAAErE,KAAM,QAASsE,QAAS,SAAUO,WAAYT,IACpEY,EAAQX,cAAY,CAAErE,KAAM,QAASsE,QAAS,MAC9CW,EAAOZ,cAAY,CAAErE,KAAM,OAAQsE,QAAS,QAASO,WAAYT,EAAYc,MDFhF,SCGGC,EAAQd,cAAY,CAAErE,KAAM,QAASsE,QAAS,SAAUO,WAAYT,IACpEgB,EAAOf,cAAY,CAAErE,KAAM,OAAQsE,QAAS,QAASO,WAAYT,IACjEiB,EAAKhB,cAAY,CAAErE,KAAM,KAAMsE,QAAS,MAAOO,WAAYT,EAAYc,MDN5E,OCOKI,EAAKjB,cAAY,CAAErE,KAAM,KAAMsE,QAAS,MAAOO,WAAYT,IAC3DmB,EAAQlB,cAAY,CAC7BrE,KAAM,QACNsE,QAAS,YACTO,WAAYT,EACZc,MDjBO,WCmBEM,EAAKnB,cAAY,CAAErE,KAAM,KAAMsE,QAAS,MAAOO,WAAYT,EAAYc,MDrB5E,OCsBKO,EAAUpB,cAAY,CAAErE,KAAM,UAAWsE,QAAS,cAAeY,MDbjE,aCcAQ,EAAUrB,cAAY,CAAErE,KAAM,UAAWsE,QAAS,iBAClDqB,EAAYtB,cAAY,CAAErE,KAAM,YAAasE,QAAS,kBACtDsB,EAAmBvB,cAAY,CACxCrE,KAAM,mBACNsE,QAAS,cACTO,WAAYT,IAEHyB,EAAKxB,cAAY,CAAErE,KAAM,KAAMsE,QAAS,MAAOO,WAAYT,IAC3D0B,EAAQzB,cAAY,CAAErE,KAAM,QAASsE,QAAS,YAAaO,WAAYT,IACvE2B,EAAO1B,cAAY,CAAErE,KAAM,OAAQsE,QAAS,OAC5C0B,EAAU3B,cAAY,CAAErE,KAAM,UAAWsE,QAAS,eAClD2B,EAAc5B,cAAY,CAAErE,KAAM,cAAesE,QAASJ,IAC1DgC,EAAqB7B,cAAY,CAC1CrE,KAAM,qBACNsE,QAAS,KACTY,MDlCoB,OCoCXiB,EAAc9B,cAAY,CAAErE,KAAM,cAAesE,QAAS,IAAKY,MDrC3D,MCsCJkB,EAAkB/B,cAAY,CAAErE,KAAM,kBAAmBsE,QAAS,KAAMY,MDnChE,OCoCRmB,EAAWhC,cAAY,CAAErE,KAAM,WAAYsE,QAAS,IAAKY,MDrCxD,MCsCDoB,EAAQjC,cAAY,CAAErE,KAAM,QAASsE,QAAS,IAAKY,MD5CrD,MC6CEqB,EAAWlC,cAAY,CAAErE,KAAM,WAAYsE,QAAS,UAAWY,MD3C9D,OC4CDsB,EAAkBnC,cAAY,CAAErE,KAAM,kBAAmBsE,QAAS,OAClEmC,EAAmBpC,cAAY,CAAErE,KAAM,mBAAoBsE,QAAS,OAEpEoC,EAAkB,CAC3B/B,UACAJ,aACAK,SACAE,OACAC,QACAC,QACAC,OACAE,QACAC,OACAO,YACAN,KACAC,KACAC,QACAC,KACAC,UACAC,UACAE,mBACAC,KACAC,QAEA1B,aAEA2B,OACAC,UACAC,cAEAK,QACAC,WACAL,qBACAC,cACAC,kBACAC,WAEAG,kBACAC,oBAKEE,GAAc,IAAIlC,QAAMmC,OAAOC,OAAOH,ICvFtCI,GAAiB,2BCuNPC,8BACFC,EAAuBD,0BA/MCE,EAAKC,KAAK,mBAAmB,aACtDC,QAAQF,EAAKG,gBACbD,QAAQF,EAAKI,cAEbC,QAAO,aACHH,QAAQF,EAAKM,iBAGjBC,SAAQ,aACJL,QAAQF,EAAKQ,kBAGjBC,SAAQ,aACJP,QAAQF,EAAKU,oBAEjBC,SAAQ,aACJT,QAAQF,EAAKY,kCAIKZ,EAAKC,KAAK,gBAAgB,aAChDY,QAAQd,KACRG,QAAQF,EAAKc,4BAGOd,EAAKC,KAAK,cAAc,aAC5Cc,GAAG,CACJ,CACIC,IAAK,sBACDhB,EAAKiB,iBAAiB,CAClBC,IAAKnB,EACLoB,IAAK,iBACIjB,QAAQF,EAAKoB,uBAOnBpB,EAAKC,KAAK,QAAQ,aAChCc,GAAG,CACJ,CAAEC,IAAK,sBAAMhB,EAAKa,QAAQd,EAAY,CAAEsB,MApDzC,YAqDC,CACIL,IAAK,iBACIM,SAASvB,EAAkB,CAAEsB,MAtDxC,eAuDWR,QAAQd,KACRwB,SAASxB,EAAkB,CAAEsB,MAzD3C,YA0DcR,QAAQd,KACRyB,SAAQ,aACJC,SAAS1B,KACT2B,IAAI,CACL,CACIV,IAAK,sBAAMhB,EAAKsB,SAASvB,EAAmB,CAAEsB,MA5DpE,WA8DkB,CACIL,IAAK,sBAAMhB,EAAK2B,SAAS5B,EAAkB,CAAEsB,MA/DnE,kBAqEE,CACIL,IAAK,iBACIY,IAAI,CACL,CACIZ,IAAK,sBAAMhB,EAAKa,QAAQd,EAAmB,CAAEsB,MA5E9D,YA8Ea,CACIL,IAAK,sBAAMhB,EAAKa,QAAQd,EAAkB,CAAEsB,MA/E7D,gBAkFchB,QAAO,aACHQ,QAAQd,KACR8B,IAAI,CACL,CACIb,IAAK,sBAAMhB,EAAKyB,SAAS1B,EAAmB,CAAEsB,MAnFpE,WAqFkB,CACIL,IAAK,sBAAMhB,EAAKyB,SAAS1B,EAAkB,CAAEsB,MAtFnE,oCA+FuBrB,EAAKC,KAAK,cAAc,aAC5CY,QAAQd,KACRgB,GAAG,CACJ,CACIC,IAAK,sBAAMhB,EAAKa,QAAQd,EAAkB,CAAEsB,MApGjD,YAsGC,CACIL,IAAK,sBAAMhB,EAAKa,QAAQd,EAAmB,CAAEsB,MAvGlD,gBA0GEhB,QAAO,kBAAML,EAAKsB,SAASvB,EAAkB,CAAEsB,MAxGjD,8BA2GuBrB,EAAKC,KAAK,eAAe,aAC9CY,QAAQd,KACRG,QAAQF,EAAK8B,+BAGU9B,EAAKC,KAAK,iBAAiB,aAClDY,QAAQd,KACRc,QAAQd,KACRM,OAAO,CACRc,IAAK,sBAAMnB,EAAKa,QAAQd,uBAIFC,EAAKC,KAAK,eAAe,aAC9CY,QAAQd,KACRc,QAAQd,mBAGYC,EAAKC,KAAK,cAAc,aAC5C8B,MAAK,aACDlB,QAAQd,KACRgB,GAAG,CACJ,CACIC,IAAK,sBAAMhB,EAAKa,QAAQd,EAAkB,CAAEsB,MApIrD,YAsIK,CACIL,IAAK,sBAAMhB,EAAKa,QAAQd,EAAmB,CAAEsB,MAvItD,gBA0IMhB,QAAO,kBAAML,EAAKsB,SAASvB,EAAkB,CAAEsB,MAxIrD,eAyIMR,QAAQd,KACRG,QAAQF,EAAK8B,+BAIG9B,EAAKC,KAAK,cAAc,aAC5C+B,SAAS,CACVd,IAAKnB,EACLoB,IAAK,sBAAMnB,EAAKE,QAAQF,EAAKiC,qCAILjC,EAAKC,KAAK,iBAAiB,aAClDC,QAAQF,EAAKkC,iBAAkB,CAAEb,MArJpC,WAsJGN,GAAG,CACJ,CACIC,IAAK,iBACId,QAAQF,EAAKmC,sBACbb,SAASvB,KACTqC,SAASpC,EAAKqC,gBAAiB,CAAEhB,MA1J/C,YA2JcE,SAASxB,KAGtB,CACIiB,IAAK,iBACIsB,SAAStC,EAAKmC,sBACdI,SAASvC,EAAKkC,iBAAkB,CAAEb,MAjKhD,oCAuK4BrB,EAAKC,KAAK,oBAAoB,aACxDc,GAAG,CACJ,CAAEC,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CACIiB,IAAK,iBACIH,QAAQd,KACRiC,SAAS,CACVd,IAAKnB,EACLoB,IAAK,iBACIS,IAAI,CACL,CACIZ,IAAK,sBAAMhB,EAAKyB,SAAS1B,EAAe,CAAEsB,MApLtE,SAsLwB,CACIL,IAAK,sBAAMhB,EAAKyB,SAAS1B,EAAmB,CAAEsB,MAvL1E,gBA4LiBR,QAAQd,+BAMQC,EAAKC,KAAK,sBAAsB,aAC5Dc,GAAG,CACJ,CAAEC,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,KAC1B,CAAEiB,IAAK,sBAAMhB,EAAKa,QAAQd,YAMzByC,wCDzNc,CCQAC,cDgQrBC,GAAuB,gEA9PhBC,sDAGFN,yBAAgBO,SAgBZ,CACHnH,KAAM,kBACNoH,MAXoB,CACpBC,OAPWjJ,KAAKkJ,MAAMH,EAAIzC,cAQ1BxE,OAPS9B,KAAKkJ,MAAMH,EAAIxC,YAQxB4C,MAPUnJ,KAAKkJ,MAAMH,EAAIpC,aAQzByC,MAPUpJ,KAAKkJ,MAAMH,EAAIlC,eAQzBwC,MAPUrJ,KAAKkJ,MAAMH,EAAIhC,aAQzBuC,MAPUtJ,KAAKkJ,MAAMH,EAAItC,iBAgB1BH,sBAAayC,UACA/I,KAAKkJ,MAAMH,EAAI9B,eAI5BM,cAAKwB,OACJC,EAAQD,EAAIC,MAAM,GAAGO,MAErB3H,EAAO,kBACPmH,EAAIC,MAAM,GAAGQ,YAAc5D,EAAgBT,cAC3C6D,EAAQS,GAA6BT,GACrCpH,EAAO,mBAGP1C,EAAO6J,EAAI7J,MAAQ6J,EAAI7J,KAAK,GAAK6J,EAAI7J,KAAK,GAAGqK,MAAQP,EAEnDU,EAAOX,YAAgBA,WAAa,IAAMA,WAAa,GAAGQ,aAC5DG,IACAxK,EAAO6J,EAAI7J,MAAQ6J,EAAI7J,KAAK,GAAK6J,EAAI7J,KAAK,GAAGqK,MAAWG,MAAQV,MAChEpH,EAAO,iBAEPmH,EAAI7J,MAAQ6J,EAAI7J,KAAK,GAAGsK,YAAc5D,EAAgBT,cACtDjG,EAAOuK,GAA6BvK,IAGjC,CACHA,OACA8J,iBACUU,EACV9H,WAIDqF,oBAAW8B,cACRxB,EAAyFwB,EAAIxB,KAAKoC,KAAI,mBACxGC,EAAKV,MAAMW,MAETZ,EAAkB,UACxB1B,EAAKuC,SAAQ,gBAASd,UAAiBU,aAAM9H,WAC4BmI,KADzD7K,MACO8K,IAAXC,UAAwCC,IAAdC,eACqCJ,GAAkBf,GAczFC,EAAO9I,KAZO,CACVyB,OACA1C,KAAM,CACF8J,MAAOkB,EACPnE,OAAQiE,GAEZI,MAAO,CACHpB,QAT2BmB,aAU3BpE,SAVAkE,oBAYMP,EAAO,CAAExK,KAAMwK,eAI1BT,KAGJ1C,oBAAWwC,EAAqDsB,wBAAQ,OACvEC,EAAoBvB,EAAIwB,MAAMF,GAAOd,MACrCR,EAAIwB,MAAMF,GAAOb,YAAc5D,EAAgBT,cAC/CmF,EAAYb,GAA6Ba,QAEvCE,YAASzB,EAAIyB,OAASzB,EAAIyB,MAAMH,GAAOd,qBAAUe,QAChD,CACH1I,KAAM,OACN1C,KAAM,CACF8J,MAAOsB,EACPvE,OAAQgE,GAAkBO,GAAWL,WAEzCO,MAAO,CACHxB,MAAOwB,EACPzE,OAAQgE,GAAkBS,GAAOP,eAKtCtD,qBAAYoC,SAGR,CACH0B,WAHezK,KAAKkJ,MAAMH,EAAId,gBAO/BxB,oBAAWsC,kBACTA,EAAIwB,aACE,SAGLjB,EAAe,UACrBP,EAAIwB,MAAMT,SAAQ,SAACY,EAAQL,OACjBM,EAAOC,EAAKrE,WAAWwC,EAAKsB,GAC5BI,EAAaG,EAAK1B,MAAMH,EAAId,WAAWoC,IAC7Cf,EAAMnJ,KAAK,CACPwK,OACAF,kBAGDnB,KAGJvC,qBAAYgC,SAER,CACHC,MAAO,CACHA,MAHM6B,SAAS9B,EAAI7D,QAAQ,GAAGqE,YAOnC1C,uBAAckC,SACmBgB,GAAkBhB,EAAIzF,WAAW,GAAGiG,aAWjE,CACHuB,UAAW,CATS,CACpB9B,MAAO,CACHA,QALWmB,aAMXpE,SANAkE,WAQJc,UAPchC,EAAIjE,kBAAqBiE,EAAIjE,iBAAiB,GAAGyE,YAehEtB,oBACHc,EAKAiC,2BAAY,cAERjC,EAAIX,oCAAenI,QAAS+K,GAAM,SAC3BhL,KAAKkJ,MAAMH,EAAIX,cAAc4C,QAElCC,EAAOjL,KAAKkJ,MAAMH,EAAIX,cAAc4C,IAEpCE,EAAYnC,EAAI/D,MAAMgG,GAAGzB,YAGxB,CACH3H,KAAM,aACNqJ,OACAE,MALmBnL,KAAKiI,WAAWc,EAAKiC,EAAI,GAM5CE,gBAID9C,uBAAcW,OAKXkC,EAAOjL,KAAKkJ,MAAMH,EAAIkC,KAAK,IAC3BC,EAAYlL,KAAKkJ,MAAMH,EAAIT,oBAC3B6C,EAAQnL,KAAKkJ,MAAMH,EAAIoC,MAAM,UAC5B,CACHvJ,KAAM,aACNqJ,KAAM,CACFrJ,KAAMqJ,EAAKrJ,KACXoH,MAAOiC,EAAKjC,MACZjD,OAAQgE,GAAkBkB,EAAKjC,OAAOiB,UACtCG,MAAOa,EAAKb,OAEhBc,YACAC,MAAO,CACHvJ,KAAMuJ,EAAMvJ,KACZoH,MAAOmC,EAAMnC,MACbjD,OAAQgE,GAAkBoB,EAAMnC,OAAOiB,UACvCG,MAAOe,EAAMf,WAKlB/B,0BAAiB+C,iBACJtF,OAAOuF,QAAQD,kBACG,YAAxBE,OAAKtC,UACC,OAARsC,QASO,CAAE1J,KAAM,QAASoH,MARVA,EACTW,KAAI,mBACGE,EAAEL,YAActE,EACT2F,SAAShB,EAAEN,OAEfE,GAA6BI,EAAEN,UAEzCI,KAAI,kBAAM,CAAEX,MAAOuC,EAAGxF,OAAQ,CAACwF,WAG5B,YAARD,QACO,CAAE1J,KAAM,UAAWoH,MAAO6B,SAAS7B,EAAM,GAAGO,WAE3C,SAAR+B,QACO,CAAE1J,KAAM,OAAQoH,MAAO,SAEtB,eAARsC,EAAsB,OACcvB,GAAkBf,EAAM,GAAGO,OAAvDU,cAAWE,uBACZ,CACHvI,KAAM,eACNoH,MAAOA,EAAM,GAAGO,MAChBa,MAAO,CACHxI,KAAM,kBACN1C,KAAM,CAAE8J,MAAOmB,EAAcpE,OAAQkE,GACrCG,MAAO,CACHpB,MAAOmB,EACPpE,OAAQkE,QAKZ,gBAARqB,QACO,CAAE1J,KAAM,SAAUoH,MAAOS,GAA6BT,EAAM,GAAGO,cAGxE,IAAIzI,SAGPwH,4BAAmBS,UAGlBjD,OAAOC,OAAOgD,GAAK,GAAG,GADtBS,UAAahC,SAOQ,CAvQmCxB,GAAewF,iCAyQ7EC,GAAQ,SAARA,EAASC,OAIPC,EAHEC,EDlLS,SAACF,OACVG,EAAehG,GAAYiG,SAASJ,MAEtCG,EAAaE,OAAO9L,OAAS,QACvBa,MAAMG,KAAKC,UAAU2K,EAAaE,gBAGrCF,EAPQ,CCkLOH,MAEtB1F,GAAegG,MAAQJ,EAAUK,OAGjCN,EAAM3F,GAAewC,kBAEjBxC,GAAe+F,OAAO9L,OAAS,QACzBa,MAAMG,KAAKC,UAAU8E,GAAe+F,gBAElClD,GAAqBK,MAAMyC,GAC3B3C,OAGVe,GAAoB,SAApBA,EAAqBmC,OACjBjC,EAAYkC,OAAOD,GAAYE,MAAM,WAEpC,CAAEjC,aAAcF,EAAUA,EAAUhK,OAAS,GAAIgK,cAGtDR,GAA+B,SAA/BA,EAAgC4C,UAAgBA,EAAIC,UAAU,EAAGD,EAAIpM,OAAS,IErSvEsM,GAAgB,SAAhBA,EAAiBF,MACP,iBAARA,GAAmC,KAAfA,EAAI1L,cACxB,SAGL6L,EAAUH,EACXI,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,kBAGVxL,KAAKyL,MAAMF,GACpB,MAAO7N,UACE0N,IAIFM,GAAM,SAANA,EAAO5L,EAAU6L,EAA2BC,0BAAoBxM,IACnEyM,EAAS,SAATA,EAAUC,UACZZ,OAAOa,UAAUZ,MACZa,KAAKL,EAAMG,GACXG,OAAOC,SACPC,QAAO,SAACC,EAAK/B,UAAS+B,QAAoCA,EAAI/B,GAAO+B,IAAMtM,IAC9EuM,EAASR,EAAO,aAAeA,EAAO,6BACrCQ,GAAwBA,IAAWvM,EAAM8L,EAAeS,GCRtDC,GAA8B,SAA9BA,EAA+BzL,EAAgCE,WAE9DwL,EAAU/B,GAAMzJ,OAGjB8D,OAAO2H,KAAK3L,GAAQ4L,MACjB,mBACI7D,EAAE8D,gBAAkBxB,OAAOqB,EAAQ1L,OAAO0I,MAAMzE,OAAO,IAAI4H,eAC3D9D,EAAE8D,gBAAkBxB,OAAOqB,EAAQ1L,OAAO5C,KAAK8J,iBAGhD,IAAI4E,YAAYzB,OAAOqB,EAAQ1L,OAAO5C,KAAK6G,OAAO,SAGvD8H,EAA4C,UAClD/H,OAAO2H,KAAK3L,GAAQgI,SAAQ,YACxB+D,EAAkBvC,GAAOwC,GAAoBhM,EAAOwJ,OAGjDyC,GAAaP,EAASK,GAC/B,MAAOG,UACEA,IAqBFD,GAAe,SAAfA,EAAgBP,EAAkBS,SACrCC,EAlBY,SAACV,EAAkBS,MACjCA,EAAiBT,EAAQ1L,OAAO5C,KAAK8J,cAC9BiF,EAAiBT,EAAQ1L,OAAO5C,KAAK8J,WAG1CmF,YAAeX,EAAQ1L,OAAO5C,KAAK6G,eACzCoI,EAASC,QAEFN,GAAUG,EAAiBT,EAAQ1L,OAAO5C,KAAK6G,OAAO,IAAKoI,GARhD,CAkBSX,EAASS,OAE/BI,MAAMC,QAAQJ,UACRK,GAAOL,EAAMV,EAAQvE,eAAWuE,EAAQ1L,OAAO0I,MAAMxB,OAAQkF,KAAQD,OAG5EO,EAAqE,GACrEhB,EAAQlE,OACRkE,EAAQlE,MAAMQ,SAAQ,YAClB0E,EAAUrO,KAAK,CACXwK,KAAM8D,EAAK9D,KACXF,WAAYgE,EAAKhE,WACjB3I,OAAQmM,EAAiBQ,EAAK9D,KAAKzL,KAAK8J,gBAI9C0F,EAAcR,EAAKvE,KAAI,wBAAM,CAC/BgF,KAAM9E,EACN+E,UAAW/E,EACXgF,oBACKrB,EAAQ1L,OAAO5C,KAAK8J,OAAQa,IAC5B2D,EAAQ1L,OAAO0I,MAAMxB,OAAQa,SAIhCiF,EAAUtB,EAAQpE,MAClB2F,UACIL,EACAlB,EAAQpE,MAAM0B,UAAUnB,KAAI,kBAAK,QAAUE,EAAEb,MAAMA,SACnDwE,EAAQpE,MAAM0B,UAAUnB,KAAI,mBAAKE,EAAEkB,cAEvC2D,EAEAM,EAAoB,UAC1BF,EAAQhF,SAAQ,iBACR0D,EAAQnE,OAASmE,EAAQnE,MAAML,MAAMA,OAASgG,EAAQ/O,SAGzB,cACzBuO,EAAUvO,qBACiCuO,kBAAW,qBAAjC/D,eAAYE,SACzBsE,KAAQ,MADHnN,uBAEqB,OAAnBoN,UACDC,UACDxE,EAAKzL,KAAK8J,OAAQkG,IAClBvE,EAAKH,MAAMxB,OAAQkG,KAExBE,EAAIP,mBAAmBO,EAAIP,aAAgBM,GACxBE,GACf5E,EAAWS,UACXT,EAAWQ,KACXR,EAAWU,MACXiE,EAAIP,YACJZ,KAGAgB,MAAQ,IAGXA,WACM,OAKdzB,EAAQrE,QAAUqE,EAAQrE,MAAMsB,YAOlB4E,GAFD7B,EAAQrE,MAAMsB,WAAWS,UAFzBsC,EAAQrE,MAAMsB,WAAWQ,KACxBuC,EAAQrE,MAAMsB,WAAWU,MAGyBiE,EAAIP,YAAaZ,GAlCzD,GAuCD,KACtBqB,EAASf,GAAOa,EAAIT,KAAMnB,EAAQvE,OAAQmG,EAAIP,YAAaZ,GACjEmB,EAAIR,UAAYU,EAChBN,EAAQ7O,KAAKmP,OAIdN,GAGLK,GAAkB,SAAlBA,EACFnE,EACAD,EACAE,EACApF,EACAkI,OAEMsB,EAAYC,GAASvE,EAAMlF,EAAQkI,GACnCwB,EAAaD,GAASrE,EAAOpF,EAAQkI,UACnC/C,OL9JJ,WKiKuB,eAAdD,EAAKrJ,MACFyN,EAAgBpE,EAAKC,UAAWD,EAAKA,KAAMA,EAAKE,MAAOpF,EAAQkI,IACnD,eAAf9C,EAAMvJ,MACHyN,EAAgBlE,EAAMD,UAAWC,EAAMF,KAAME,EAAMA,MAAOpF,EAAQkI,OLnK7E,YKuKqB,eAAdhD,EAAKrJ,MACLyN,EAAgBpE,EAAKC,UAAWD,EAAKA,KAAMA,EAAKE,MAAOpF,EAAQkI,IAChD,eAAf9C,EAAMvJ,MACNyN,EAAgBlE,EAAMD,UAAWC,EAAMF,KAAME,EAAMA,MAAOpF,EAAQkI,UAGtE/C,OL5KD,QACH,YK8KWqE,IAAcE,ML7KnB,SACH,gBK+KQF,IAAcE,MLzKvB,WK2KQC,EAAUvD,OAAOoD,GACjBI,EAAWxD,OAAOsD,MACpBE,EAASC,WLzLb,MKyL6CD,EAASE,SLzLtD,SK0LQH,EAAQI,SAASH,EAASrD,UAAU,EAAGqD,EAAS1P,OAAS,kBAG1D,GAAI0P,EAASC,WL7LpB,SK8LQF,EAAQG,SAASF,EAASrD,UAAUqD,EAASI,QL9LrD,KK8LiF,kBAG1E,GAAIJ,EAASE,SLjMpB,MKkMQH,EAAQE,WAAWD,EAASrD,UAAU,EAAGqD,EAASI,QLlM1D,gBKmMe,SAGR,ILzLN,eK4LKL,EAAUvD,OAAOoD,GACjBI,EAAWxD,OAAOsD,MACpBE,EAASC,WL3Mb,MK2M6CD,EAASE,SL3MtD,SK4MQH,EAAQI,SAASH,EAASrD,UAAU,EAAGqD,EAAS1P,OAAS,kBAG1D,GAAI0P,EAASC,WL/MpB,SKgNQF,EAAQG,SAASF,EAASrD,UAAUqD,EAASI,QLhNrD,KKgNiF,kBAG1E,GAAIJ,EAASE,SLnNpB,MKoNQH,EAAQE,WAAWD,EAASrD,UAAU,EAAGqD,EAASI,QLpN1D,gBKqNe,SAGR,ILjNF,YKoNIN,KAAgBF,GAAaA,EAAYE,MLnNtC,aKqNHA,KAAgBF,GAAaA,GAAaE,MLpNjD,YKsNOA,KAAgBF,GAAaA,EAAYE,MLrNzC,aKuNAA,KAAgBF,GAAaA,GAAaE,MLtNvD,YKwNWA,EAAWvC,QAAO,SAACrD,UAAWA,EAAEb,QAAUuG,KAAWtP,OAAS,QAEvE,IAAIa,OAuCR0O,GAAW,SAAXA,EACFQ,EACAjK,EACAkI,MAEqB,gBAAjB+B,EAAQpO,KAAwB,KAC1BoH,EAAQiH,EAAmBlK,EAAQiK,mBACrChH,EACOA,EAEJgH,EAAQ5F,MAAMpB,SAGJ,YAAjBgH,EAAQpO,MACS,WAAjBoO,EAAQpO,MACS,UAAjBoO,EAAQpO,MACS,SAAjBoO,EAAQpO,MACS,eAAjBoO,EAAQpO,YAEDoO,EAAQhH,SAEE,iBAAjBgH,EAAQpO,KAAyB,KAE3BoH,EAAQiH,EAAmBlK,EADfiK,EAAV5F,mBAEJpB,SACOA,KAGM,oBAAjBgH,EAAQpO,YACMmM,GAAaiC,EAAQhH,MAAOiF,GAC7BtE,KAAI,SAACE,SAAY,CAAEb,MAAOa,EAAEmG,EAAQhH,MAAMC,OAAO,GAAGmB,MAAMpB,eAGrEA,EAAQiH,EAAmBlK,EAAQiK,mBAErChH,EACOA,UAKTuF,GAAS,SAATA,EACFhD,EACAtC,EACAiH,EACAjC,UAEIhF,EAAOyE,MAAK,kBAAuB,MAAlB7D,EAAEO,MAAMpB,SAClBuC,EApFG,SAACtC,EAAiBiH,EAAiCjC,OAC3DkC,EAAuC,UAC7ClH,EAAOa,SAAQ,gBACLd,EAAQwG,GAASpF,EAAO8F,EAASjC,GACvCkC,EAAa/F,EAAMlL,KAAK8J,OACL,kBAAfoB,EAAMxI,KAKI,SAACwO,EAAsBpH,OACnCU,EAAO0G,EAAazC,iBACb,UAATjE,SACOyC,OAAOnD,GAAO2E,iBAEZ,UAATjE,SACOyC,OAAOnD,GAAOqH,iBAEZ,SAAT3G,SACOyC,OAAOnD,GAAOrI,UAEZ,aAAT+I,SACOyC,OAAOnD,GAAOsH,cAEZ,cAAT5G,SACOyC,OAAOnD,GAAOuH,eAEZ,YAAT7G,SACOyC,OAAOnD,GAAOoD,MAAM,IAAIoE,UAAU/B,KAAK,OAErC,WAAT/E,GAA8B,QAATA,SACdyC,OAAOnD,GAAO/I,aAEnB,IAAIa,MAvBQ,CALqCsJ,WAAelL,KAAM8J,GAASA,KAE9EmH,EAPO,CAuFGlH,EAAQiH,EAASjC,IAGtC,SAASgC,EAAmBlK,EAAgCqE,OAClDqG,EAAkB3K,OAAO2H,KAAK1H,KA9Tb,SAAC6G,EAAuC8D,UAC1D9D,EAGD8D,EAAmBhD,MAAK,yBAAK7D,eAAMsC,OAAOS,EAAK,wBAAZT,EAAiBwB,kBAC7C,CAAErD,UAAWsC,EAAK,GAAIA,KAAM,UAAIA,GAAMxM,MAAM,IAGhD,CAAEwM,QANE,CAAEA,KAAM,IAFI,CA+TiBxC,iBAAOA,MAAMrE,OAAQ0K,GAArD7D,SAAMtC,iBAEVA,IAAcmG,EAAgB/C,MAAK,mBAAK7D,IAAMS,WACxCxJ,MAAMA,uBAAuBwJ,OAElCA,GAAamG,EAAgBxQ,OAAS,QACjCa,MAAMA,yBAAyBsJ,EAAMA,MAAMpB,WAG/CA,EAAQsB,EAAYvE,EAAOuE,GAAaxE,OAAOC,OAAOA,GAAQ,UAC7D+H,GAAU9E,EAAO4D,mDA9TJ,SAAC+D,EAAc3O,UAC5BuL,GAA4B,CAAEW,KAAMyC,EAAMA,QAAQ3O,iD,8NCPhD4O,EAA2B,SAA3BA,cAA4B,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACfC,cADe,mBACtDC,EADsD,KACjCC,EADiC,KACzCC,OADyC,EAEfH,cAFe,mBAEtDI,EAFsD,KAGvDD,EAASD,EAA8B,EAHgB,KAEzCC,OAC6B,EAEjD,OADArS,QAAQuS,IAAI,CAAEP,QAAOI,iBAEjB,uBAAKI,IAAKL,EAAWM,UAAS,UAAKC,IAAOC,UAAZ,YAC1B,uBAAKF,UAAU,QACX,gBAACG,EAAA,EAAD,CAAYH,UAAU,gBAAgBI,MAAO,CAAEC,WAAY,gBACvD,uBAAKN,IAAKF,GACN,qBAAGG,UAAU,kCAAkCT,GAC/C,wBAAMS,UAAS,sBAAiBC,IAAOK,UACnC,qBAAGN,UAAU,kBAAb,qBAIZ,uBACII,MAAO,CACHR,OAAO,GAAD,OAAKA,EAAL,MACNW,UAAW,OACXC,UAAW,WAGdhB,M,gBChCRiB,EAAY,IAAIC,IAAI,CAC7B,CACI,UACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CACI,YACA,kBAAM,qCAEV,CAAC,QAAS,kBAAM,qCAChB,CACI,SACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CACI,UACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CAAC,QAAS,kBAAM,qCAChB,CAAC,MAAO,kBAAM,qCACd,CAAC,QAAS,kBAAM,qCAChB,CAAC,QAAS,kBAAM,qCAChB,CACI,UACA,kBAAM,qCAEV,CAAC,QAAS,kBAAM,qCAChB,CAAC,QAAS,kBAAM,qCAChB,CACI,WACA,kBAAM,qCAEV,CACI,YACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CAAC,OAAQ,kBAAM,uCAGNC,EAAyB,SAAzBA,uBAA0BtP,GACnC,GAAIA,EAAO,CACP,IAAMuP,EAAcH,EAAUpF,IAAIhK,GAClC,GAAIuP,EACA,OAAOA,IAMf,OAFAxT,YAAS,GAAD,OAAIiE,EAAJ,2BAEDoP,EAAUhM,SAASoM,OAAOnJ,SAGxBoJ,EAAyB,CAClC,UACA,SACA,YACA,QACA,SACA,SACA,UACA,SACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,WACA,YACA,SACA,QAISC,EAAwB,CAAC,SAAU,UAAW,WAAY,iBAAkB,Y,sHCEnFC,GAAoB,SAApBA,kBAA2DC,GAAsC,IAC3F5P,EAA4C4P,EAA5C5P,MAAOhB,EAAqC4Q,EAArC5Q,OAAQ6Q,EAA6BD,EAA7BC,SAAUC,EAAmBF,EAAnBE,eAC3BC,EAAUC,uBAAY,WACxBH,EAAS7P,GACL8P,GACAG,YAAW,kBAAMlT,OAAOD,SAASoT,cAEtC,CAAClQ,EAAO6P,EAAUC,IACrB,OACI,gBAACK,GAAA,EAAD,CAAcnR,OAAQA,EAAQ+Q,QAASA,GAClC/P,IAUEoQ,gBALS,SAAlBC,gBAAmBC,GAAD,MAAuB,CAC3CC,aAAcC,YAASF,GACvBG,mBAAoBC,YAAeJ,MAGC,CAAEK,gBAAiB5Q,IAAa6Q,eAAgB3Q,KAAzEmQ,CACXS,eAAKC,aAAkBC,aApFD,SAApBC,OAAqB,GAA2E,IAAzEL,EAAwE,EAAxEA,gBAAiBJ,EAAuD,EAAvDA,aAAcK,EAAyC,EAAzCA,eAAgBH,EAAyB,EAAzBA,mBAAyB,EAClEQ,cADkE,mBAC1FC,EAD0F,KAClFC,EADkF,OAExDF,cAFwD,mBAE1FG,EAF0F,KAE1EC,EAF0E,KAIjG,OACI,gCACI,gBAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAM,EAAMC,OAAO,MACpC,gBAACC,EAAA,EAAD,CAAa1U,KAAK,KAAlB,gBACA,gBAAC2U,EAAA,EAAD,CAAeC,KAAK,eAAe7B,QAASoB,IAC5C,gBAACU,EAAA,EAAD,CAAUX,OAAQA,EAAQY,QAAQ,GAC9B,gBAACC,EAAA,EAAD,CAAKpD,UAAU,UAAUmD,QAAQ,GAC7B,gBAACE,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,CAAUf,OAAQE,EAAgBc,OAAQb,GACtC,gBAACc,EAAA,EAAD,CAAgBC,KAAK,EAAMC,OAAO,GAAlC,SAGA,gBAACC,EAAA,EAAD,CAAc9J,OAAO,GACjB,gBAAC2H,GAAA,EAAD,CAAcoC,QAAQ,GAAtB,uBACC7C,EAAsB1I,KAAI,SAAChH,EAAO0H,GAAR,OACvB,gBAAC,GAAD,CACImI,SAAUe,EACVjI,IAAKjB,EACL1I,OAAQyR,IAAuBzQ,EAC/BA,MAAOA,EACP8P,gBAAgB,OAGxB,gBAACK,GAAA,EAAD,CAAcoC,QAAQ,GAAtB,wBAEC9C,EAAuBzI,KAAI,SAAChH,EAAO0H,GAAR,OACxB,gBAAC,GAAD,CACImI,SAAUc,EACVhI,IAAKjB,EACL1I,OAAQuR,IAAiBvQ,EACzBA,MAAOA,EACP8P,gBAAgB,UAMpC,gBAACkC,EAAA,EAAD,KACI,gBAACQ,GAAA,EAAD,CAASxV,KAAK,+DAAd,IACMH,MAGV,gBAACmV,EAAA,EAAD,KACI,gBAACQ,GAAA,EAAD,CAASxV,KAAK,+CAAd,iBAqCuB,a,mJCzGtCyV,GAA+B5B,eACxCC,cAAkB,YAAyC,IAAtCyB,EAAqC,EAArCA,OAAQG,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GAAS,cACjCL,EADiC,GAC/C5J,EAD+C,KAC1CtC,EAD0C,KAGhDwM,EAAc7C,uBAAY,SAAC3E,GAAD,OAAsCsH,EAAS,CAACtH,EAAEyH,OAAOzM,MAAOA,MAAS,CACrGsM,EACAtM,IAEE0M,EAAgB/C,uBAAY,SAAC3E,GAAD,OAAsCsH,EAAS,CAAChK,EAAK0C,EAAEyH,OAAOzM,UAAS,CACrGsM,EACAhK,IAEEqK,EAAmBhD,uBAAY,kBAAM0C,EAASH,KAAS,CAACG,EAAUH,IAExE,OACI,uBAAK5D,UAAU,0BACX,uBAAKA,UAAU,YACX,yBACIA,UAAU,+BACVtI,MAAOsC,EACPiK,GAAE,oBAAeA,GACjB3T,KAAK,OACL1C,KAAI,oBAAeqW,GACnBK,YAAY,gBACZN,SAAUE,KAGlB,uBAAKlE,UAAU,YACX,yBACIA,UAAU,+BACVtI,MAAOA,EACPpH,KAAK,OACL1C,KAAI,qBAAgBqW,GACpBA,GAAE,qBAAgBA,GAClBK,YAAY,iBACZN,SAAUI,KAGlB,uBAAKpE,UAAU,YACX,gBAACuE,GAAA,EAAD,CAAQC,SAAS,EAAM5B,MAAM,SAASxB,QAASiD,GAA/C,gB,SCuEdI,GAAkC,SAAlCA,WAAmC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASV,EAAe,EAAfA,SAC1CD,EAAW1C,uBAAY,SAACuC,GAAD,OAA8BI,EAASU,EAAQ9I,QAAO,SAAA+I,GAAC,OAAIA,IAAMf,QAAU,CACpGc,EACAV,IAEEY,EAAmBvD,uBACrB,SAACuC,GACG,IAAM7K,EAAQ2L,EAAQjG,QAAQmF,GAC9Bc,EAAQ3L,GAAR,gBAAsB6K,GACtBI,EAAS,aAAIU,MAEjB,CAACA,EAASV,IAEd,OACI,gCACKU,EAAQrM,KAAI,SAACuL,EAAQ7K,GAAT,OACT,gBAAC+K,GAAD,CACIF,OAAQA,EACR5J,IAAKjB,EACLkL,GAAIlL,EACJiL,SAAUY,EACVb,SAAUA,SAOftC,eAAQ,KAAM,CAAEoD,UAAWtU,KAA3BkR,CAA2CU,aAAkBD,gBArIvC,SAA/B4C,kBAAgC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUF,EAAgB,EAAhBA,UAAgB,EAClCG,YAAoB,OADc,mBACvDC,EADuD,KAC/CC,EAD+C,OAExCF,YAAoB,8CAFoB,mBAEvDG,EAFuD,KAElDC,EAFkD,OAGtCJ,YAAoB,IAHkB,mBAGvDK,EAHuD,KAGjDC,EAHiD,OAIhCC,mBAAS,CAAC,CAAC,SAAU,sBAJW,mBAIvDb,EAJuD,KAI9Cc,EAJ8C,OAKpCD,mBAAS,MAL2B,mBAKvDlY,EALuD,KAKhDoY,EALgD,OAMhCnD,cANgC,mBAMvDoD,EANuD,KAM9CC,EAN8C,KAQxDC,EAASvE,sBAAW,sBAAC,sCAAAwE,EAAA,sEAMjBC,EAAU,IAAIC,QAAQZ,EALK,CAC7BF,SACAP,UACAW,KAAMK,EAAUL,EAAO,OAG3BI,EAAS,MAPc,kBAWEO,MAAMF,GAXR,cAWb9J,EAXa,gBAYNA,EAAOqD,OAZD,OAYnBA,EAZmB,gEAcnBjS,YAAS,2BAAD,MACRqY,EAAS,EAAD,IAfW,2BAkBvBZ,EAAUoB,aAAe5G,IACzB0F,IAnBuB,gEAoBxB,CAACE,EAAQE,EAAKE,EAAMX,EAASgB,EAASb,EAAWE,IAEpD,OACI,uBAAKd,GAAG,qBACJ,gBAACiC,GAAA,EAAD,KACI,yBAAOC,QAAQ,iBAAf,UACA,0BACInG,UAAU,+BACVzE,aAAc0J,EACdrX,KAAK,gBACLqW,GAAG,gBACHD,SAAUkB,GAEV,qCACA,sCACA,qCACA,2CAGR,gBAACgB,GAAA,EAAD,KACI,yBAAOC,QAAQ,cAAf,eACA,yBACI5K,aAAc4J,EACdnF,UAAU,+BACV1P,KAAK,MACL1C,KAAK,aACLqW,GAAG,aACHK,YAAY,eACZN,SAAUoB,KAGlB,uBAAKpF,UAAU,gCACX,yBAAOA,UAAU,oBACb,yBAAO1P,KAAK,WAAW0P,UAAU,mBAAmBgE,SAAU2B,IADlE,cAIJ,gBAACS,GAAA,EAAD,CAAMC,QAAQ,EAAMC,QAASZ,GACzB,gBAACQ,GAAA,EAAD,KACI,qCACA,yBACIlG,UAAU,+BACV1P,KAAK,WACLoH,MAAO2N,EACPrB,SAAUsB,IACX,MAGX,yBAAOa,QAAQ,WAAf,mBAAiD,IACjD,gBAAC5B,GAAA,EAAD,CACIC,SAAS,EACT5B,MAAM,UACNxB,QAAS,0BAAMoE,EAAW,GAAD,oBAAKd,GAAL,CAAc,CAAC,QAAD,OAASA,EAAQ/V,OAAS,GAAK,cAH1E,cAOA,2BACA,2BACA,gBAAC,GAAD,CAAY+V,QAASA,EAASV,SAAUwB,IACxC,2BACA,gBAACjB,GAAA,EAAD,CAAQgC,OAAO,EAAM3D,MAAM,UAAUxB,QAASwE,GAA9C,UAGCvY,GACG,gBAACmZ,GAAA,EAAD,CAAO5D,MAAM,UAAb,UACYvV,EAAMI,QAAUJ,EAAMI,QAAU,GACvCJ,EAAMoZ,MAAQpZ,EAAMoZ,MAAQ,UCuHlChF,gBAPS,SAAlBC,gBAAmBC,GAAD,MAAuB,CAC3C+E,WAAYC,YAAoBhF,GAChCiF,QAASC,YAAWlF,GACpBmF,QAASC,YAAWpF,GACpBvS,KAAM4X,YAAarF,MAGiB,CACpCsF,mBAAoB1W,IACpB2W,QAASvW,IACTwW,QAASrW,IACTsW,OAAQxW,IACRyW,OAAQxW,IACRyW,aAAcC,kBAAeC,aAC7BC,iBAAkBrX,IAClBsX,aAAc/V,KARH8P,CASZS,eAAKC,aAAkBC,aA5LK,SAAzBuF,YAA0B,GAazB,IAZHT,EAYE,EAZFA,QACAD,EAWE,EAXFA,mBACAE,EAUE,EAVFA,QACAT,EASE,EATFA,WACAe,EAQE,EARFA,iBACAJ,EAOE,EAPFA,OACAD,EAME,EANFA,OACAN,EAKE,EALFA,QACAF,EAIE,EAJFA,QACAc,EAGE,EAHFA,aACAtY,EAEE,EAFFA,KACAkY,EACE,EADFA,aACE,EACuChF,cADvC,mBACKsF,EADL,KACqBlF,EADrB,OAEiCJ,cAFjC,mBAEKuF,EAFL,KAEkBC,EAFlB,KAGIC,EAAmB1G,uBACrB,SAAC3E,GAAsC,IAAD,IAGlC,GAFAlP,YAAS,gBACTkV,IACIhG,EAAEyH,OAAO6D,QAAS,UAAAtL,EAAEyH,cAAF,mBAAU6D,aAAV,eAAiBrZ,QAAS,EAAG,CAC/C,IAAMsZ,EAAa,IAAIC,WACvB1a,YAAS,iBAAkBkP,EAAEyH,OAAO6D,MAAM,GAAGpa,MAC7Cqa,EAAWE,OAAS,WACZF,EAAWjM,QACXiL,EAAmBgB,EAAWjM,OAAOoM,aAG7CH,EAAWI,WAAW3L,EAAEyH,OAAO6D,MAAM,OAG7C,CAACtF,EAAgBuE,IAGfqB,EAAyBjH,uBAAY,kBAAMoG,GAAkBf,KAAa,CAACe,EAAkBf,IAEnG,OACI,gCACI,gBAAC6B,GAAA,EAAD,CAAavI,UAAU,SAASwI,UAAU,GACtC,gBAACD,GAAA,EAAD,CAAaC,UAAU,GACnB,gBAACjE,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN6F,KAAM,KACNrH,QAASgG,EACTsB,UAAW9B,GAEX,qBAAG5G,UAAU,6BAAb,QACA,qCAEJ,gBAACuE,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN6F,KAAM,KACNrH,QAASiG,EACTqB,UAAW5B,GALf,OAQI,qBAAG9G,UAAU,6BAAb,UAGR,2BACA,2BACA,gBAAC2I,GAAA,EAAD,CACI3I,UAAU,sDACV4I,OAAO,EACPxH,QAASkH,GAET,qBAAGtI,UAAU,uBAAuB0G,EAAa,YAAc,2BALnE,eAQA,2BACA,gBAACmC,GAAA,EAAD,CAAgBtG,OAAQqF,EAAgBrE,OAAQb,GAC5C,gBAACc,EAAA,EAAD,CACIxD,UAAU,sDACVyI,KAAM,KACNxE,GAAG,qBACHrB,MAAM,WAEN,qBAAG5C,UAAU,6BAAb,aANJ,UASA,gBAAC2D,EAAA,EAAD,KACI,gBAACnC,GAAA,EAAD,CAAc+B,QAAQ,GAClB,yBAAOU,GAAG,eAAV,sBAEI,yBACI3T,KAAK,OACL1C,KAAK,OACLqW,GAAG,aACH7D,MAAO,CAAE0I,QAAS,QAClB9E,SAAU+D,MAItB,gBAACvG,GAAA,EAAD,CAAcyC,GAAG,eAAe7C,QAAS0G,GACrC,gDAIZ,2BACA,2BACA,gBAACvD,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN6F,KAAM,KACNrH,QAAS,mBACL8F,IACAI,MAGJ,2BACI,qBAAGtH,UAAU,6BAAb,cAEJ,qCAEJ,2BAEU,eAAT5Q,EACG,gBAACmV,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN6F,KAAM,KACNrH,QAAS,0BAAMsG,EAAa,SAE5B,2BACI,qBAAG1H,UAAU,8BAAb,aAEJ,kDAGJ,gBAACuE,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN6F,KAAM,KACNrH,QAAS,0BAAMsG,EAAa,gBAE5B,2BACI,qBAAG1H,UAAU,8BAAb,aAEJ,4CAIR,2BACA,gBAACuE,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,SACN6F,KAAM,KACNrH,QAAS+F,GAET,2BACI,qBAAGnH,UAAU,8BAAb,UAEJ,sCAGR,gBAAC+I,GAAA,EAAD,CAAO9E,GAAG,eAAehB,KAAK,SAASwF,KAAK,KAAKlG,OAAQsF,EAAatE,OAAQuE,GAC1E,gBAACkB,GAAA,EAAD,CAAazF,OAAQuE,GAArB,oCACA,gBAACmB,GAAA,EAAD,KACI,gBAAC,GAAD,CAAmBlE,SAAU+C,KAEjC,gBAACoB,GAAA,EAAD,KACI,gBAAC3E,GAAA,EAAD,CAAQ3B,MAAM,YAAYxB,QAAS0G,GAAnC,eAyBmC,kBC5NjDqB,GAAuBC,wBAAcC,cACrCC,GAAeC,gBAAK,kBAAM,uDAC1BC,GAASD,gBAAK,kBAAM,uDACpBE,GAAcF,gBAAK,kBAAM,uDAgEhB9H,gBAAQ,SAAAE,GAAK,MAAK,CAAEvS,KAAM4X,YAAarF,GAAQnQ,QAASkY,YAAW/H,MAAW,CACzFgI,kBAAmBpY,KADRkQ,CAEZW,aA3DoB,SAAjBwH,IAAkB,GAA0C,IAAxCxa,EAAuC,EAAvCA,KAAMoC,EAAiC,EAAjCA,QAASmY,EAAwB,EAAxBA,kBAIrC,OACI,gCACI,gBAAC,GAAD,MACA,uBAAK3J,UAAU,wBACX,sBAAIA,UAAU,QAAd,iCACA,gBAACmJ,GAAD,CACIU,UAAU,EACV7J,UAAU,SACV8J,aAAa,EACbtY,QAASA,EACTuY,gBAAe,WAAMC,IAAc1J,SACnC2J,YAAa,CAAEC,GAAI,EAAGC,GAAI,MAC1BlU,KAAM,CAAEkU,GAAI,GAAID,GAAI,GACpBE,OAAQ,CAAC,EAAG,GACZC,iBAAkB,CAAC,EAAG,GACtBC,UAAW,GACXC,eAnBO,SAAjBA,eAAkBC,EAA6BC,GAA9B,OACnBd,EAAkBc,IAmBNC,YAAa,KACbC,QAAS,IAET,uBAAK3Q,IAAK4Q,IAAcC,OAAO1O,KAAK2O,eAAgB9K,UAAS,kBAAa+K,IAAUC,aAChF,gBAAC,EAAD,CAAezL,MAAM,WACjB,gBAAC,GAAD,QAGR,uBAAKvF,IAAK4Q,IAAcC,OAAO1O,KAAK8O,gBAAiBjL,UAAS,kBAAa+K,IAAUC,aACjF,gBAAC,EAAD,CAAezL,MAAM,uBACjB,gBAAC,WAAD,CAAU2L,SAAU,cAChB,gBAAC5B,GAAD,SAIZ,uBAAKtP,IAAK4Q,IAAcC,OAAO1O,KAAKgP,eAAgBnL,UAAS,kBAAa+K,IAAUC,aAChF,gBAAC,EAAD,CAAezL,MAAK,uBAAkBnQ,EAAlB,YAChB,gBAAC,WAAD,CAAU8b,SAAU,cAChB,gBAACzB,GAAD,SAIZ,uBAAKzP,IAAK4Q,IAAcC,OAAO1O,KAAKiP,UAAWpL,UAAS,kBAAa+K,IAAUC,aAC3E,gBAAC,EAAD,CAAezL,MAAM,yBACjB,gBAAC,WAAD,CAAU2L,SAAU,cAChB,gBAAC1B,GAAD,WAMpB,gBAAC,IAAD,SAOY,Q,OC3EJ3N,QACa,cAA7BzN,OAAOD,SAASkd,UAEiB,UAA7Bjd,OAAOD,SAASkd,UAEhBjd,OAAOD,SAASkd,SAAS1N,MAAM,2D,iCChB1B2N,GAAe,SAAfA,aAAgBvQ,GACzB,GAAmB,kBAARA,EACP,MAAO,GAGX,IAAMwQ,EAAStQ,GAAcF,GAC7B,MAAsB,kBAAXwQ,EACAA,EAGI,OAAXA,EACO,GAGJ5b,KAAKC,UAAU2b,EAAQ,KAAM,IAG3BtQ,GAAgB,SAAhBA,cAAiBF,GAC1B,GAAmB,kBAARA,GAAmC,KAAfA,EAAI1L,OAC/B,OAAO,KAGX,IAAM6L,EAAUH,EACXI,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAErB,IACI,OAAOxL,KAAKyL,MAAMF,GACpB,MAAO7N,GACL,OAAO0N,I,4BCZFyQ,GAAa,SAAbA,aAAoE,IAAD,EAArDC,EAAqD,uDAAzCC,eAAsBC,EAAmB,uCAC5E,GAAoB,iBAAhBA,EAAOrb,KACP,OAAOsb,KAEX,IAAMC,GACO,OAATJ,QAAS,IAATA,OAAA,EAAAA,EAAW/a,SAAX,OAAoB+a,QAApB,IAAoBA,OAApB,EAAoBA,EAAWjb,QAA/B,6BAEaib,GAFb,IAGU/a,MAAOA,GAAM+a,EAAU/a,MAAOib,GAC9Bnb,OAAQA,GAAOib,EAAUjb,OAAQmb,KAErC,GAEJG,EAAiBC,GAAON,EAAWI,EAAUF,GAC7CK,EAAG,6BACFH,GADE,IAELE,OAAO,6BACAD,GADD,IAEF7S,MAAOA,GAAK,iBAAC6S,QAAD,IAACA,OAAD,EAACA,EAAgB7S,aAAjB,QAA0B,GAAI0S,OAIlD,OAAOK,GAGExb,GAAS,SAATA,OAAUmR,EAAoBgK,GAAoB,IAAD,IAC1D,OAAQA,EAAOrb,MACX,IAAK,qBACD,OAAO,6BACAqR,GADP,IAEIjS,MAAW,OAALiS,QAAK,IAALA,OAAA,EAAAA,EAAO+E,YAAa4E,GAAaK,EAAOnb,OAAOnB,QAAUsc,EAAOnb,SAE9E,IAAK,2BACD,OAAO,6BACAmR,GADP,IAEIjS,KAAMic,EAAOtb,OAASib,GAAY,OAAC3J,QAAD,IAACA,GAAD,UAACA,EAAOjS,YAAR,aAAC,EAAaL,QAA1C,iBAAoDsS,QAApD,IAAoDA,OAApD,EAAoDA,EAAOjS,YAA3D,QAAmE,GACzEgX,WAAYiF,EAAOtb,SAE3B,QACI,OAAOsR,IAmBNjR,GAAQ,SAARA,MAASiR,EAAmBgK,GACrC,OAAQA,EAAOrb,MACX,IAAK,eACD,OAAO,6BACAqR,GADP,IAEIjS,KAAMic,EAAOjb,QAErB,IAAK,oBACD,OAAO,6BACAiR,GADP,IAEIvS,KAAMuc,EAAOvc,KACbM,KACoB,QAAhBic,EAAOvc,KACD6c,GAAiBvb,MAAMhB,KACvB,0IAElB,QACI,OAAOiS,IAINuK,GAAgB,SAAhBA,cACTC,EACAjd,EACAC,EACAwc,EACAvc,GAEA,IAAME,EAAaL,aAAeC,EAAcC,EAAaC,GAE7D,GAAIE,aAAsBE,MACtB,MAAO,CACH4c,YAAa,UACb3c,IAAK,KACL4c,QAAS,EACT3a,WAAY,GACZiM,OAAO,EACP2O,aAAchd,EAAW7B,QACzBwL,MAAO,CACH+D,SAAS,EACTuP,aAAa,EACbC,iBAAkB,GAClBvb,QAAS,GACTE,QAAS,KAhBpB,aAqBqB7B,QArBrB,IAqBqBA,IAAc,CAAEI,KAAM,KAAMD,IAAK,MAA/CC,EArBP,EAqBOA,KAAMD,EArBb,EAqBaA,IACV+c,EAAmB,IAAIzP,MAC3B,GAAIA,MAAMC,QAAQvN,GAAM,CACpB,IAAMgd,EAAoC,GAC1Chd,EAAI+I,SAAQ,SAAAkU,GACE,OAANA,QAAoB3d,IAAN2d,GAAoBlY,OAAOmY,GAAGD,EAAG,KAAQ3P,MAAMC,QAAQ0P,KACnDA,EAAkB,kBAANA,EAAiBlY,OAAO2H,KAAKuQ,GAAK,CAACvf,MAAqB,IAC5EqL,SAAQ,SAAAwB,GAAG,OAAKyS,EAAOzS,GAAOA,QAGhDwS,EAAmBhY,OAAO2H,KAAKsQ,GAC1B7Q,QAAO,SAAA5B,GAAG,OAAIA,GAAsB,kBAARA,GAAmC,KAAfA,EAAI3K,UACpDud,MAAK,SAACC,EAAIC,GAAL,OAAWD,EAAGxQ,cAAc0Q,cAAcD,EAAEzQ,kBAE1D,IAAMkQ,EACFJ,GAAiBA,EAAclT,OAAyB,8BAAhB0S,EAAOrb,KACzC6b,IAAkBA,EAAclT,MAAMsT,eACtCJ,IAAiBA,EAAclT,QAC/BkT,EAAclT,MAAMsT,YAG1BH,EAAuBrP,MAAMC,QAAQvN,GAAO,QAAU,UAK1D,MAHoB,gCAAhBkc,EAAOrb,OACP8b,EAAcT,EAAO9Z,KAElB,CACHua,cACA3c,IAAKA,EACL4c,QAAS3c,EAAOA,EAAKf,OAAS,EAC9B+C,WAAY,GACZiM,OAAO,EACP1E,MAAO,CACH+D,QAASD,MAAMC,QAAQvN,GACvB8c,cACAC,mBACAvb,QAASub,EACTrb,QAAS,MAKR4a,GAAS,SAATA,OAAUI,EAAyBN,EAA2BF,GAAoB,IAAD,UAC1F,OAAQA,EAAOrb,MACX,IAAK,eACL,IAAK,qBACL,IAAK,uBACL,IAAK,wBACD,IACiB,OAAb6b,QAAa,IAAbA,GAAA,UAAAA,EAAe3b,cAAf,eAAuBd,SAAvB,OAAgCmc,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAUrb,cAA1C,aAAgC,EAAkBd,QACrC,OAAbyc,QAAa,IAAbA,GAAA,UAAAA,EAAezb,aAAf,eAAsBhB,SAAtB,OAA+Bmc,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAUnb,aAAzC,aAA+B,EAAiBhB,MAEhD,OAAOyc,EAAcJ,OAEV,IAAD,QAAd,GAAIF,EACA,OAAOK,GAAa,UAChBL,EAASE,cADO,QACG,IACnB,UAAAF,EAASrb,cAAT,eAAiBd,MAAOmc,EAASrb,OAAOd,KAAO,IAC/C,UAAAmc,EAASnb,aAAT,eAAgBhB,MAAOmc,EAASnb,MAAMhB,KAAO,GAC7Cic,GACA,UAAAE,EAASnb,aAAT,eAAgBtB,MAAOyc,EAASnb,MAAMtB,KAAO,OAGrD,MACJ,IAAK,4BACD,OAAOyc,EAAQ,6BAEFA,EAASE,QAFP,IAGL9S,MAAM,6BACE4S,EAASE,OAASF,EAASE,OAAO9S,MAAQ,IAD7C,IAEDsT,eAAa,UAAAV,EAASE,cAAT,eAAiB9S,SAAS4S,EAASE,OAAO9S,MAAMsT,gBAGrE,GACV,IAAK,8BACD,GAAIV,EACA,OAAO,6BACAA,EAASE,QADhB,IAEIK,YAAaT,EAAO9Z,MAG5B,MACJ,IAAK,4BACD,GAAIga,GAAYA,EAASE,OACrB,OAAO,6BACAnQ,GAAOiQ,EAASE,OAAQJ,EAAOja,aADtC,IAEIA,WAAYia,EAAOja,WACnB0a,YAAa,YAGrB,MACJ,QAC2B,IAAD,MAAtB,UAAIP,QAAJ,IAAIA,OAAJ,EAAIA,EAAUE,OACV,OAAOG,GACHL,EAASE,QACT,UAAAF,EAASrb,cAAT,eAAiBd,MAAOmc,EAASrb,OAAOd,KAAO,IAC/C,UAAAmc,EAASnb,aAAT,eAAgBhB,MAAOmc,EAASnb,MAAMhB,KAAO,GAC7Cic,GACA,UAAAE,EAASnb,aAAT,eAAgBtB,MAAOyc,EAASnb,MAAMtB,KAAO,OAK7D,MAAO,IAmDLwM,GAAS,SAATA,OAAU+F,EAAoBjQ,GAChC,IAAKA,GAAoC,KAAtBA,EAAWrC,SAAkBsS,EAC5C,OAAO,6BAAKA,GAAZ,IAAmBhE,OAAO,IAFyB,MAhD/B,SAAfqP,aAAgBC,EAAyBvb,GAClD,GAAmB,kBAARub,GAAmC,kBAARA,EAClC,MAAO,CAAEtP,OAAO,EAAOuP,YAAaD,GAGxC,GAAmB,kBAARA,EACP,OAAIE,aAAmBF,EAAKvb,GACjB,CAAEiM,OAAO,EAAMuP,YAAaD,GAEhC,CAAEtP,OAAO,EAAOuP,YAAaD,GAExC,IAXyE,EAWnExd,EAA8BsN,MAAMC,QAAQiQ,GAAd,aAAyBA,GAAzB,gBAAqCA,GAEnE9Q,EAAOY,MAAMC,QAAQvN,GACrBsN,MAAM1D,KAAK,CAAE1K,OAAQc,EAAId,SAAU,SAAC6b,EAAG4C,GAAJ,OAAUA,KAC7C5Y,OAAO6Y,oBAAoB5d,GAAKmM,QAAO,SAAA/C,GAAY,OAAIA,KAEzDmD,GAAS,EAjB4D,eAmB9CG,GAnB8C,IAmBzE,2BAAiC,CAAC,IAAvBtD,EAAsB,QACvByU,EAA+C,kBAAjBzU,GAA6BsU,aAAmBtU,EAAcnH,GAClG,GAAI4b,EACAtR,GAAS,MADb,CAIA,IAN6B,EAOEgR,aADjBvd,EAAIoJ,GACiCnH,GAA3CiM,EAPqB,EAOrBA,MAAOuP,EAPc,EAOdA,YACXI,GAAwB3P,GACxB3B,GAAS,EACTvM,EAAIoJ,GAAgBqU,GAEhBnQ,MAAMC,QAAQvN,IAAgC,kBAAjBoJ,EAC7BpJ,EAAI8d,OAAO1U,EAAc,UAElBpJ,EAAIoJ,KAlCkD,8BA6CzE,OAPKmD,IACIe,MAAMC,QAAQvN,GAGfA,EAAId,OAAS,EAFbwN,EAAK3D,SAAQ,SAACK,GAAD,cAA0CpJ,EAAIoJ,OAK5D,CAAE8E,MAAO3B,EAAQkR,YAAazd,GAONud,CAAarL,EAAMlS,IAAKiC,GAA/Cwb,EAJ+C,EAI/CA,YAAavP,EAJkC,EAIlCA,MACrB,OAAIA,EACO,6BAAKgE,GAAZ,IAAmBlS,IAAKyd,EAAavP,UAGlCgE,GAGL1I,GAAQ,SAARA,MAAS0I,EAAqCgK,GAChD,OAAQA,EAAOrb,MACX,IAAK,uBACD,IAAIkd,GAAmB,OAAL7L,QAAK,IAALA,OAAA,EAAAA,EAAOxQ,SAAUwQ,EAAMxQ,QAAU,GAMnD,OALAqc,EAAYhV,SAAQ,SAAArH,IACyB,IAArCwa,EAAO1a,QAAQwN,QAAQtN,KACvBqc,EAAcA,EAAY5R,QAAO,SAAA6R,GAAE,OAAoC,IAAhC9B,EAAO1a,QAAQwN,QAAQgP,UAG/D,6BACA9L,GADP,IAEI6K,iBAAkBb,EAAO1a,QACzBE,QAASqc,IAEjB,IAAK,wBACD,OAAO,6BACA7L,GADP,IAEIxQ,QAASwa,EAAOxa,QACXyK,QAAO,SAAA6R,GAAE,OAAI9L,GAASA,EAAM6K,mBAA4D,IAAxC7K,EAAM6K,iBAAiB/N,QAAQgP,MAC/E7R,QAAO,SAAA6R,GAAE,MAAW,gBAAPA,OAE1B,QACI,OAAO9L,IAmBJ+L,GARMC,aAAgB,CACjCC,IAAKC,MARe,SAAXC,WAA8D,IAAlDnM,EAAiD,uDAAzC+J,eAAsBC,EAAmB,uCACtE,MAAoB,iBAAhBA,EAAOrb,KACAkb,GAAWE,eAAsBC,GAErCH,GAAW7J,EAAOgK,KAID,CACpBoC,SAAU,WACVC,SAAU,WACVjW,MAAO6S,IAAcqD,YAEzBC,aA5QwB,SAAfA,eAA0G,IAA1FvM,EAAyF,uDAAlDwM,eAA+BxC,EAAmB,uCAClH,OAAQA,EAAOrb,MACX,IAAK,eACD,OAAO6d,eACX,IAAK,sBACD,OAAO,6BAAKxM,GAAZ,IAAmByM,YAAazC,EAAOta,QAC3C,IAAK,sBACD,OAAO,6BAAKsQ,GAAZ,IAAmB0M,YAAa1C,EAAOta,QAC3C,IAAK,iBACD,OAAO,6BAAKsQ,GAAZ,IAAmBnQ,QAASma,EAAOna,UACvC,QACI,OAAOmQ,M,8BC1Db2M,GAAO,uCAAG,iBAAOtU,EAAatC,GAApB,SAAAmO,EAAA,wFAEF0I,KAAYC,QAAQxU,EAAKtC,GAFvB,sDAIR+W,IAAMC,KAAN,6BAAiC1U,EAAjC,+BAJQ,8DAAH,gBAAPsU,QAAO,wCAQPK,GAAa,SAAbA,WAAc3U,GAChB,OAAQA,GACJ,KAAK4Q,IAAcgE,WAAWC,SAC1B,OAAOnD,eACX,KAAKd,IAAcgE,WAAWV,aAC1B,OAAOC,eACX,QACI,MAAM,IAAI3e,MAAJ,8BAAiCwK,MAI7C8U,GAAY,uCAAG,kBAAO9U,GAAP,iBAAA6L,EAAA,uEACbkJ,EAAUC,aAAM,GAAIL,GAAW3U,IADlB,kBAGYuU,KAAYU,QAAoCjV,GAH5D,cAGPkV,EAHO,yBAINF,aAAM,CAAED,WAAH,OAAcG,QAAd,IAAcA,IAAc,KAJ3B,gCAMb9hB,YAAS,EAAD,IANK,iCASV,IATU,gEAAH,gBAAZ0hB,aAAY,sCAWZK,GAAgB,uCAAG,kBAAOnV,GAAP,iBAAA6L,EAAA,uEACjBlE,EAAQgN,GAAW3U,GADF,kBAGQuU,KAAYU,QAA2BjV,GAH/C,cAGXkV,EAHW,yBAIVF,aAAMrN,EAAD,OAAQuN,QAAR,IAAQA,IAAc,KAJjB,gCAMjB9hB,YAAS,EAAD,IANS,iCASd,IATc,gEAAH,gBAAhB+hB,iBAAgB,sCAYP,GA5CK,SAAdC,cAAc,OAAMN,GAAalE,IAAcgE,WAAWC,WA4CjD,GA7CS,SAAlBQ,kBAAkB,OAAMF,GAAiBvE,IAAcgE,WAAWV,eA6CzD,GArDS,SAAlBoB,gBAAmBC,GACrBjB,GAAQ1D,IAAcgE,WAAWC,SAAUU,IAoDhC,GAjDa,SAAtBC,oBAAuBtB,GACzBI,GAAQ1D,IAAcgE,WAAWV,aAAcA,ICTtCuB,GAAc,uCAAG,4CAAA5J,EAAA,+EACH6J,KADG,cACpBb,EADoB,gBAEMa,KAFN,cAEpBC,EAFoB,OAIpBC,EACgB,kBAAXxhB,QAAwBA,OAAeyhB,qCACvCzhB,OAAeyhB,qCAAqC,IACrDC,MAEJC,EAAQC,aACVtC,GACA,CACIE,IAAK,CACDqC,KAAI,UAAEpB,EAASoB,YAAX,QAAmB,GACvBlB,QAASF,EAASE,QAClBmB,OAAM,UAAErB,EAASqB,cAAX,QAAqB,IAE/BhC,aAAcyB,GAElBC,MAGEO,WAAU,WACZT,GAA4BK,EAAMK,WAAWxC,KAC7C8B,GAAgCK,EAAMK,WAAWlC,iBAxB3B,kBA2BnB6B,GA3BmB,kDAAH,gBAAdN,iBAAc,mC,QCMZ,uCAAG,oCAAA5J,EAAA,+EACM4J,KADN,cACRM,EADQ,gBAESM,QAAQC,IAAI,CAC/B,4CACA3P,EAAuBkB,YAASkO,EAAMK,eAJ5B,OAERG,EAFQ,OAOGA,EAAS,GACjBC,OACL,gBAAC,IAAD,CAAUT,MAAOA,GACb,gBAAC,GAAD,OAEJU,SAASC,eAAe,SLqFxB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAC/BA,EAAaC,gBKnGP,iDAAH,gBAATC,YAAS,mCAiBfA,GACKH,MAAK,kBAAMtjB,YAAS,aACpB0jB,OAAM,SAAAxU,GAAC,OAAItP,YAAS,iBAAkBsP,O,gCC7B3C,yHAqDagP,EAAqB,SAArBA,qBAAqB,OAAMO,GAE3BkC,EAA8B,SAA9BA,8BAA8B,MACtC,CACGC,YAAa,QACbC,YAAa,SACb8C,WAAW,EACX3f,QAAS,CACL0Y,GAAI,CACA,CAAExQ,EAAGkR,IAAcC,OAAO1O,KAAK2O,eAAgBvS,EAAG,EAAG6Y,EAAG,EAAGC,EAAG,EAAG1M,EAAG,GAAI2M,KAAM,EAAGC,KAAM,IACvF,CAAE7X,EAAGkR,IAAcC,OAAO1O,KAAK8O,gBAAiB1S,EAAG,EAAG6Y,EAAG,GAAIC,EAAG,EAAG1M,EAAG,EAAG2M,KAAM,EAAGC,KAAM,GACxF,CAAE7X,EAAGkR,IAAcC,OAAO1O,KAAKgP,eAAgB5S,EAAG,EAAG6Y,EAAG,GAAIC,EAAG,EAAG1M,EAAG,EAAG2M,KAAM,EAAGC,KAAM,GACvF,CAAE7X,EAAGkR,IAAcC,OAAO1O,KAAKiP,UAAW7S,EAAG,EAAG6Y,EAAG,GAAIC,EAAG,EAAG1M,EAAG,GAAI2M,KAAM,EAAGC,KAAM,KAEvFpH,GAAI,CACA,CAAEzQ,EAAGkR,IAAcC,OAAO1O,KAAK2O,eAAgBvS,EAAG,GAAI6Y,EAAG,EAAGC,EAAG,EAAG1M,EAAG,GAAI2M,KAAM,EAAGC,KAAM,IACxF,CAAE7X,EAAGkR,IAAcC,OAAO1O,KAAK8O,gBAAiB1S,EAAG,EAAG6Y,EAAG,EAAGC,EAAG,EAAG1M,EAAG,GAAI2M,KAAM,EAAGC,KAAM,IACxF,CAAE7X,EAAGkR,IAAcC,OAAO1O,KAAKgP,eAAgB5S,EAAG,GAAI6Y,EAAG,EAAGC,EAAG,EAAG1M,EAAG,GAAI2M,KAAM,EAAGC,KAAM,IACxF,CAAE7X,EAAGkR,IAAcC,OAAO1O,KAAKiP,UAAW7S,EAAG,EAAG6Y,EAAG,GAAIC,EAAG,GAAI1M,EAAG,GAAI2M,KAAM,GAAIC,KAAM,QAKxF3F,EAAa,CACtBpb,OAAQ,CAAEd,KAAM,GAAIgX,YAAY,GAChChW,MAAO,CAAEhB,KAAM,GAAIN,KAAM,OACzB2c,OAAQ,CACJpO,OAAO,EACPlO,IAAK,GACL4c,QAAS,EACT3a,WAAY,GACZ0a,YAAa,UACbnT,MAAO,CACH+D,SAAS,EACT/L,QAAS,GACTub,iBAAkB,GAClBD,aAAa,EACbpb,QAAS,O,gyBCxFfqgB,EAAmB,SAAnBA,iBAA4BC,GAC9B,OAAKA,EAIE,YAAIA,GAHA,IAMFC,EAAwB,SAAxBA,sBAAyB/P,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOiM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBhD,cAA3C,aAAsB,EAA6BO,oBAAnD,QAAmE,IAC3FqF,EAAmB,SAAnBA,iBAAoBhQ,GAAD,qBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOiM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBhD,cAAtB,iBAAC,EAA6B9S,aAA9B,aAAC,EAAoC+D,UAC/E4U,EAAqB,SAArBA,mBAAsBjQ,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOiM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBhD,cAA3C,aAAsB,EAA6BK,mBAAnD,QAAmE,WACxFyF,EAAkB,SAAlBA,gBAAmBlQ,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOiM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBhD,cAA3C,aAAsB,EAA6Btc,WAAnD,QAA0D,IAC5EqiB,EAAsB,SAAtBA,oBAAuBnQ,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOiM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBhD,cAA3C,aAAsB,EAA6BM,eAAnD,QAA8D,GACpF0F,EAAsB,SAAtBA,oBAAuBpQ,GAAD,wBAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOiM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBhD,cAA3C,aAAsB,EAA6Bra,YACzEsgB,EAAuB,SAAvBA,qBAAwBrQ,GAAD,mBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOiM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBhD,cAAtB,aAAC,EAA6BpO,QAC5EsU,EAA4B,SAA5BA,0BAA6BtQ,GAAD,qBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOiM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBhD,cAAtB,iBAAC,EAA6B9S,aAA9B,aAAC,EAAoCsT,cAExF1K,EAAW,SAAXA,SAAYF,GAAD,gCACpBA,QADoB,IACpBA,GADoB,UACpBA,EAAOuM,oBADa,aACpB,EAAqBE,mBADD,QACgBD,cAA8BC,aACzDrM,EAAiB,SAAjBA,eAAkBJ,GAAD,gCAC1BA,QAD0B,IAC1BA,GAD0B,UAC1BA,EAAOuM,oBADmB,aAC1B,EAAqBG,mBADK,QACUF,cAA8BE,aACzD3E,EAAa,SAAbA,WAAc/H,GAAD,gCACrBA,QADqB,IACrBA,GADqB,UACrBA,EAAOuM,oBADc,aACrB,EAAqB1c,eADA,QACW2c,cAA8B3c,SAEtD0gB,EAAsB,SAAtBA,oBAAuBvQ,GAAD,mBAC/B6P,EAAgB,OAAC7P,QAAD,IAACA,GAAD,UAACA,EAAOiM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBhD,cAAtB,iBAAC,EAA6B9S,aAA9B,aAAC,EAAoCuT,mBAC5C2F,EAAiB,SAAjBA,eAAkBxQ,GAAD,uBAC1B5E,MAAMC,QAAN,OAAc2E,QAAd,IAAcA,GAAd,UAAcA,EAAOiM,WAArB,iBAAc,EAAYmB,eAA1B,iBAAc,EAAqBhD,cAAnC,aAAc,EAA6Btc,KAAO+hB,EAAgB,OAAC7P,QAAD,IAACA,GAAD,UAACA,EAAOiM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBhD,cAAtB,aAAC,EAA6Btc,KAAO,IAC9F2iB,EAAa,SAAbA,WAAczQ,GAAD,mBAAsB6P,EAAgB,OAAC7P,QAAD,IAACA,GAAD,UAACA,EAAOiM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBhD,cAAtB,iBAAC,EAA6B9S,aAA9B,aAAC,EAAoChI,UACxFohB,EAAa,SAAbA,WAAc1Q,GAAD,mBAAsB6P,EAAgB,OAAC7P,QAAD,IAACA,GAAD,UAACA,EAAOiM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBhD,cAAtB,iBAAC,EAA6B9S,aAA9B,aAAC,EAAoC9H,UAExFmhB,EAAe,SAAfA,aAAgB3Q,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOiM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBre,aAA3C,aAAsB,EAA4BhB,YAAlD,QAA0D,IACzEsX,EAAe,SAAfA,aAAgBrF,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOiM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBre,aAA3C,aAAsB,EAA4BtB,YAAlD,QAA2D,OAC1EmjB,EAAgB,SAAhBA,cAAiB5Q,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOiM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBve,cAA3C,aAAsB,EAA6Bd,YAAnD,QAA2D,IAC3EiX,EAAsB,SAAtBA,oBAAuBhF,GAAD,mBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOiM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBve,cAAtB,aAAC,EAA6BkW,aAC3EK,EAAa,SAAbA,WAAcpF,GAAD,eAAqD,KAA1B,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOiM,WAAP,mBAAYsC,cAAZ,eAAoBvhB,SACvDkY,EAAa,SAAbA,WAAclF,GAAD,iBAAsB,iBAACA,QAAD,IAACA,GAAD,UAACA,EAAOiM,WAAR,iBAAC,EAAYqC,YAAb,aAAC,EAAkBthB,cAAnB,QAA6B,GAAK,GACrE6jB,EAAe,SAAfA,aAAgB7Q,GAAD,eAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOuM,oBAAR,aAAC,EAAqBiD,a,uHCrC5D7O,EAAiB,SAAjBA,iBAAgF,IAA9DmQ,EAA6D,0DAC9DlN,mBAASkN,GADqD,mBACjF/a,EADiF,KAC1Egb,EAD0E,KAExF,MAAO,CAAChb,EAAO,kBAAMgb,GAAUhb,MAKtBsN,EAAsB,SAAtBA,oBACT2N,GACoE,IAAD,EACzCpN,mBAASoN,GADgC,mBAC5Djb,EAD4D,KACrDgb,EADqD,KAYnE,MAAO,CAAChb,EATa2J,uBACjB,SAACuR,GACOA,GAASA,EAAMzO,QACfuO,EAASE,EAAMzO,OAAOzM,SAG9B,CAACgb,O,+HCTHG,E,4PACclR,MAAe,CAC3BtU,WAAO0B,G,8FAGc1B,EAAqBylB,GAAe,IAAD,OACxDpkB,KAAKqkB,SAAS,CAAE1lB,MAAOA,GAAS,IAAImC,MAZtB,6CAY8C,kBAAM,EAAKwjB,OAAOF,Q,sCAGjE,IACLtT,EAAa9Q,KAAKuS,MAAlBzB,SAGR,OAFkB9Q,KAAKiT,MAAftU,MAGG,oDAGJmS,I,oCAGIsT,GACX1lB,YAAS,mBAAoBsB,KAAKiT,MAAMtU,OACxCD,YAAS,cAAe0lB,GACxBrE,IAAMphB,MAAMsC,KAAKC,UAAUkjB,GAAO,CAAEG,SAAU,eAAgBC,iBAAiB,EAAMC,WAAW,Q,eAvB5EC,aA2BfjR,EAAoB,SAApBA,kBAAmCkR,GAAf,OAA6C,SAACpS,GAAD,OAC1E,gBAAC4R,EAAD,KACI,gBAACQ,EAAYpS,O,kHC7BfqS,EAAU,CAEZC,sBAAsB,EACtBC,YAAY,EACZC,iBAAiB,EACjBC,iBAAiB,EACjBC,wBAAwB,EACxBC,kBAAkB,EAElBC,iBAbqB,SAAnBA,iBAAoBC,GACtBnmB,YAAQmmB,EAAIC,WAAYD,EAAIjmB,SAAUimB,EAAIlX,OAa1CoX,gBAAgB,EAEhBC,UAAW,cACXC,SAAS,EAGTC,SAAS,EACTC,WAAW,GAgDFhS,GA7CGrU,eAAgB,IAAIsmB,IAAQf,GA6Cb,SAAlBlR,gBAAqCgR,EAAmCxlB,GAAtD,OAAoF,YAE5G,IADAqT,EACD,oBAsBF,OACI,gBAAC,WAAD,CAAgBgD,GAAE,eAAUrW,GAAQ0mB,SAtBG,SAArCA,SACFrQ,EACAsQ,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAjnB,YAAQC,EAAM4mB,EAAgB,CAC1BlkB,KAAM,mBACN2T,KACAsQ,QACAC,iBACAC,eACAC,YACAC,aACAC,mBAMA,gBAACxB,EAAenS,Q,gCCtG5B,wIAAO,IAAMgF,EAAiB,SAAjBA,eAAkBxW,GAC3B,OAAIsN,MAAMC,QAAQvN,GACPA,EAAI4I,KAAI,SAAAqE,GAAC,OAAIuJ,eAAevJ,MAAIS,KAAK,KAE7B,kBAAR1N,EACAE,KAAKC,UAAUH,GAEd,OAARA,QAAwBV,IAARU,EACTA,EAAI2Y,WAGR,IAGEyM,EAAY,SAAZA,UAAa9Z,EAAgC+Z,GACtD,MAAmB,kBAAR/Z,EACA,KAEPA,EAAIpM,QAAUmmB,EACP/Z,EAEL,GAAN,OAAUA,EAAIC,UAAU,EAAG8Z,GAA3B,QAGS3H,EAAqB,SAArBA,mBAAsBpS,EAAaga,GAC5C,SAAKha,IAAQga,MAGTha,EAAIia,oBAAoBxW,SAASuW,EAAKC,sBAOxCC,EAAQ,CAAC,IAAK,KAAM,KAAM,MAEnBC,EAAmB,SAAnBA,iBAAoBxd,GAC7B,IAAKyd,OAAOC,SAAS1d,GACjB,MAAM,IAAI2d,UAAJ,+CAAsD3d,EAAtD,aAAgEA,IAG1E,IAAM4d,EAAa5d,EAAQ,EACrB6d,EAASD,EAAa,IAAM,GAIlC,GAHIA,IACA5d,GAASA,GAETA,EAAQ,EAER,OAAO6d,EADW7d,EAAM0Q,WACI,KAEhC,IAAMoN,EAAWC,KAAKC,IAAID,KAAKE,MAAMF,KAAKG,MAAMle,GAAS,GAAIud,EAAMtmB,OAAS,GAI5E,OAAO4mB,GAHP7d,EAAQyd,QAAQzd,EAAQ+d,KAAKI,IAAI,KAAML,IAAWM,YAAY,KACnC1N,WAEI,IADlB6M,EAAMO,K,m2ICrDvBvlB,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,iC,mBCAzED,EAAOC,QAAU,CAAC,WAAa,0B,gCCD/B,kCAAO,IAAMnC,EAAc,SAAdA,cAAc,OAAOK,OAAe2nB,Y,sFCAjD,kCAAO,IAAMnL,EAAgB,CACzBqD,UAAW,KACXW,WAAY,CACRC,SAAU,yBACVX,aAAc,iCAElBrD,OAAQ,CACJ1O,KAAM,CACF2O,eAAgB,cAChBG,gBAAiB,eACjBE,eAAgB,cAChBC,UAAW,c","file":"static/js/main.10a42a86.chunk.js","sourcesContent":["export const arrayElementName = 'arrayElement'\n","import { isDebugMode } from 'core/misc/debug'\nimport { getAppVersion } from 'core/misc/utils'\n\n// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload?: any) => {\n    console.error('Keyrier', error)\n    if (typeof payload !== 'undefined') {\n        console.error(payload)\n    }\n}\n\nexport const logWarning = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.warn('Keyrier', message)\n    } else console.warn('Keyrier', message, payload)\n}\n\nexport const logDebug = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.debug('Keyrier', message)\n    } else console.debug('Keyrier', message, payload)\n}\n\nexport const logPerf = (name: string, duration?: number, customProperties?: any) => {\n    if (isDebugMode()) {\n        const appVersion = getAppVersion()\n        const payload = { name, duration, appVersion, ...customProperties, location: window.location.href }\n        logEvents.enqueue(payload)\n    }\n}\n\nclass Queue<T = any> {\n    // initialise the queue and offset\n    private queue: T[] = []\n    private offset = 0\n\n    // Returns the length of the queue.\n    public getLength() {\n        return this.queue.length - this.offset\n    }\n\n    // Returns true if the queue is empty, and false otherwise.\n    public isEmpty() {\n        return this.queue.length === 0\n    }\n\n    /* Enqueues the specified item. The parameter is:\n     *\n     * item - the item to enqueue\n     */\n    public enqueue(item: T) {\n        this.queue.push(item)\n    }\n\n    /* Dequeues an item and returns it. If the queue is empty, the value\n     * 'undefined' is returned.\n     */\n    public dequeue() {\n        // if the queue is empty, return immediately\n        if (this.queue.length === 0) {\n            return undefined\n        }\n\n        // store the item at the front of the queue\n        const item = this.queue[this.offset]\n\n        // increment the offset and remove the free space if necessary\n        if (++this.offset * 2 >= this.queue.length) {\n            this.queue = this.queue.slice(this.offset)\n            this.offset = 0\n        }\n\n        // return the dequeued item\n        return item\n    }\n\n    /* Returns the item at the front of the queue (without dequeuing it). If the\n     * queue is empty then undefined is returned.\n     */\n    public peek() {\n        return this.queue.length > 0 ? this.queue[this.offset] : undefined\n    }\n}\n\nexport const logEvents = new Queue()\n;(window as any).__PERF_EVENT_LOGS = logEvents\n","import { version } from '../../../package.json'\n\nexport const getAppVersion = () => version\n","import { sqlQuery as sqlEvaluation } from '@keyrier/core'\nimport { QueryMode } from '../state/State'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (!sourceString || !queryString) {\n        return null\n    }\n\n    if (sourceString.trim() === '') {\n        return null\n    }\n\n    if (queryString.trim() === '') {\n        return null\n    }\n\n    const evaluation = evaluate(sourceString, queryString, mode)\n    if (evaluation instanceof Error) {\n        return evaluation\n    }\n    return { obj: evaluation, text: JSON.stringify(evaluation) }\n}\n\nconst evaluate = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (mode === 'Javascript') {\n        return jsEvaluation(sourceString, queryString)\n    } else if (mode === 'SQL') {\n        return sqlEvaluation(sourceString, queryString)\n    }\n    return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string): null | undefined | object | Error => {\n    try {\n        const code = `\n      \n        const data = eval(${sourceString})\n        ${queryString}\n      `\n        // eslint-disable-next-line\n        return eval(code) // DANGEROUS\n    } catch (error) {\n        return error\n    }\n}\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./core.cjs.production.min.js')\n} else {\n  module.exports = require('./core.cjs.development.js')\n}\n","import { QueryMode, tabType } from 'state/State'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\n\nexport const updateAutoFormatSource = (active: boolean) =>\n    ({\n        active,\n        type: 'UPDATE_AUTOFORMAT_SOURCE',\n    } as const)\n\nexport const updateSource = (source: string) =>\n    ({\n        source,\n        type: 'UPDATE_SOURCE_TEXT',\n    } as const)\n\nexport const updateQuery = (query: string) =>\n    ({\n        query,\n        type: 'UPDATE_QUERY',\n    } as const)\n\nexport const resetEditor = () =>\n    ({\n        type: 'RESET_EDITOR',\n    } as const)\n\nexport const undo = () =>\n    ({\n        type: 'APP_UNDO',\n    } as const)\n\nexport const redo = () =>\n    ({\n        type: 'APP_REDO',\n    } as const)\n\nexport const clearEditor = () =>\n    ({\n        type: 'CLEAR_EDITOR',\n    } as const)\n\nexport const toggleOutputTableModal = () =>\n    ({\n        type: 'TOGGLE_OUTPUT_TABLE_MODAL',\n    } as const)\n\nexport const updateTableColumns = (columns: string[]) =>\n    ({\n        columns,\n        type: 'UPDATE_TABLE_COLUMNS',\n    } as const)\n\nexport const updateTableGroupBy = (groupBy: string[]) =>\n    ({\n        groupBy,\n        type: 'UPDATE_TABLE_GROUP_BY',\n    } as const)\n\nexport const switchTheme = (theme: GeneralTheme) => ({\n    theme,\n    type: 'SWITCH_GLOBAL_THEME' as const,\n})\n\nexport const switchEditorTheme = (theme: EditorTheme) => ({\n    theme,\n    type: 'SWITCH_EDITOR_THEME' as const,\n})\n\nexport const updateLayouts = (layouts: ReactGridLayout.Layouts) => ({\n    layouts,\n    type: 'UPDATE_LAYOUTS' as const,\n})\n\nexport const updateSearchTerm = (searchTerm: string) =>\n    ({\n        searchTerm,\n        type: 'UPDATE_OUTPUT_SEARCH_TERM',\n    } as const)\n\nexport const updateQueryMode = (mode: QueryMode) =>\n    ({\n        mode,\n        type: 'UPDATE_QUERY_MODE',\n    } as const)\n\nexport const updateOutputTabSelection = (tab: tabType) =>\n    ({\n        tab,\n        type: 'UPDATE_OUTPUT_TAB_SELECTION',\n    } as const)\n\nexport type Action =\n    | ReturnType<typeof resetEditor>\n    | ReturnType<typeof clearEditor>\n    | ReturnType<typeof updateQuery>\n    | ReturnType<typeof toggleOutputTableModal>\n    | ReturnType<typeof updateTableColumns>\n    | ReturnType<typeof updateTableGroupBy>\n    | ReturnType<typeof switchTheme>\n    | ReturnType<typeof updateSearchTerm>\n    | ReturnType<typeof updateQueryMode>\n    | ReturnType<typeof updateLayouts>\n    | ReturnType<typeof updateOutputTabSelection>\n    | ReturnType<typeof updateSource>\n    | ReturnType<typeof updateAutoFormatSource>\n    | ReturnType<typeof switchEditorTheme>\n    | ReturnType<typeof undo>\n    | ReturnType<typeof redo>\n","export const operators = {\n    modulo: '%',\n    or: 'or',\n    and: 'and',\n    equal: '=',\n    is: 'is',\n    notEqual: '!=',\n    isNot: 'is not',\n    greaterThan: '>',\n    greaterOrEqualThan: '>=',\n    lessThan: '<',\n    lessOrEqualthan: '<=',\n    in: 'in',\n    like: 'like',\n    notLike: 'not like',\n} as const\n","import { createToken, Lexer } from 'chevrotain'\nimport { operators } from './operators'\n\nconst stringTokenCharacterRegexString = 'a-zA-Z0-9%\\\\s-&(){}\\\\[\\\\]$\\\\*!\\\\\\\\@/,;:=ë#+-<>?^_'\nconst stringTokenRegex = new RegExp(\n    `(\"[${stringTokenCharacterRegexString}']*\")|('[${stringTokenCharacterRegexString}\"]*')`\n)\n\nexport const Identifier = createToken({ name: 'Identifier', pattern: /[a-zA-Z_]+[\\w./]*/ })\nexport const WhiteSpace = createToken({ name: 'WhiteSpace', pattern: /\\s+/, group: Lexer.SKIPPED })\nexport const Comment = createToken({ name: 'Comment', pattern: /--.*/, group: Lexer.SKIPPED })\nexport const Select = createToken({ name: 'Select', pattern: /SELECT/i, longer_alt: Identifier })\nexport const From = createToken({ name: 'From', pattern: /FROM/i, longer_alt: Identifier })\nexport const Where = createToken({ name: 'Where', pattern: /WHERE/i, longer_alt: Identifier })\nexport const Comma = createToken({ name: 'Comma', pattern: /,/ })\nexport const Like = createToken({ name: 'Like', pattern: /like/i, longer_alt: Identifier, label: operators.like })\nexport const Limit = createToken({ name: 'Limit', pattern: /limit/i, longer_alt: Identifier })\nexport const Null = createToken({ name: 'Null', pattern: /NULL/i, longer_alt: Identifier })\nexport const In = createToken({ name: 'In', pattern: /in/i, longer_alt: Identifier, label: operators.in })\nexport const On = createToken({ name: 'On', pattern: /on/i, longer_alt: Identifier })\nexport const IsNot = createToken({\n    name: 'IsNot',\n    pattern: /is\\s+not/i,\n    longer_alt: Identifier,\n    label: operators.isNot,\n})\nexport const Is = createToken({ name: 'Is', pattern: /is/i, longer_alt: Identifier, label: operators.is })\nexport const NotLike = createToken({ name: 'NotLike', pattern: /NOT\\s+LIKE/i, label: operators.notLike })\nexport const OrderBy = createToken({ name: 'OrderBy', pattern: /ORDER\\s+BY+/i })\nexport const InnerJoin = createToken({ name: 'InnerJoin', pattern: /INNER\\s+JOIN/i })\nexport const OrderByDirection = createToken({\n    name: 'OrderByDirection',\n    pattern: /(ASC|DESC)/i,\n    longer_alt: Identifier,\n})\nexport const As = createToken({ name: 'As', pattern: /AS/i, longer_alt: Identifier })\nexport const OrAnd = createToken({ name: 'OrAnd', pattern: /(AND|OR)/i, longer_alt: Identifier })\nexport const Star = createToken({ name: 'Star', pattern: /\\*/ })\nexport const Integer = createToken({ name: 'Integer', pattern: /0|[1-9]\\d*/ })\nexport const StringToken = createToken({ name: 'StringToken', pattern: stringTokenRegex })\nexport const GreaterOrEqualThan = createToken({\n    name: 'GreaterOrEqualThan',\n    pattern: />=/,\n    label: operators.greaterOrEqualThan,\n})\nexport const GreaterThan = createToken({ name: 'GreaterThan', pattern: />/, label: operators.greaterThan })\nexport const LessOrEqualThan = createToken({ name: 'LessOrEqualThan', pattern: /<=/, label: operators.lessOrEqualthan })\nexport const LessThan = createToken({ name: 'LessThan', pattern: /</, label: operators.lessThan })\nexport const Equal = createToken({ name: 'Equal', pattern: /=/, label: operators.equal })\nexport const NotEqual = createToken({ name: 'NotEqual', pattern: /(!=|<>)/, label: operators.notEqual })\nexport const OpenParenthesis = createToken({ name: 'OpenParenthesis', pattern: /\\(/ })\nexport const CloseParenthesis = createToken({ name: 'CloseParenthesis', pattern: /\\)/ })\n\nexport const tokenVocabulary = {\n    Comment,\n    WhiteSpace,\n    Select,\n    From,\n    Where,\n    Comma,\n    Like,\n    Limit,\n    Null,\n    InnerJoin,\n    In,\n    On,\n    IsNot,\n    Is,\n    NotLike,\n    OrderBy,\n    OrderByDirection,\n    As,\n    OrAnd,\n\n    Identifier,\n\n    Star,\n    Integer,\n    StringToken,\n\n    Equal,\n    NotEqual,\n    GreaterOrEqualThan,\n    GreaterThan,\n    LessOrEqualThan,\n    LessThan,\n\n    OpenParenthesis,\n    CloseParenthesis,\n} as const\n\nexport type Token = keyof typeof tokenVocabulary\n\nconst SelectLexer = new Lexer(Object.values(tokenVocabulary))\n\nexport const lex = (inputText: string) => {\n    const lexingResult = SelectLexer.tokenize(inputText)\n\n    if (lexingResult.errors.length > 0) {\n        throw Error(JSON.stringify(lexingResult.errors))\n    }\n\n    return lexingResult\n}\n","import { CstNode, ICstVisitor, IToken } from 'chevrotain'\nimport { ReadonlyKeys } from 'utility-types'\nimport { Integer, lex, Token, tokenVocabulary } from './lexer'\nimport { SelectParser } from './parser'\nimport { Field, FieldType, From, Operand, Order, ordering, SQLTree } from './SqlTree'\n\nconst parserInstance = new SelectParser()\nconst BaseSQLVisitor: new (arg?: any) => ICstVisitor<number, any> = parserInstance.getBaseCstVisitorConstructor()\n\ntype readonlyKeys = ReadonlyKeys<SelectParser>\ntype Node = readonlyKeys\nexport type Ctx = Record<Node, CstNode | CstNode[]>\n\nclass SQLToAstVisitor extends BaseSQLVisitor {\n    constructor() {\n        super()\n        this.validateVisitor()\n    }\n\n    public selectStatement(ctx: Ctx) {\n        const select = this.visit(ctx.selectClause)\n        const from = this.visit(ctx.fromClause)\n        const where = this.visit(ctx.whereClause)\n        const order = this.visit(ctx.orderByClause)\n        const limit = this.visit(ctx.limitClause)\n        const joins = this.visit(ctx.joinClause)\n        const selectStatement = {\n            fields: select,\n            source: from,\n            where,\n            order,\n            limit,\n            joins,\n        } as SQLTree\n\n        return {\n            type: 'selectStatement',\n            value: selectStatement,\n        } as const\n    }\n\n    public selectClause(ctx: Ctx) {\n        const columns = this.visit(ctx.projection)\n        return columns\n    }\n\n    public cols(ctx: { name: IToken[]; value: IToken[]; function: IToken[] }) {\n        let value = ctx.value[0].image\n\n        let type = 'fieldIdentifier'\n        if (ctx.value[0].tokenType === tokenVocabulary.StringToken) {\n            value = convertStringTokenToJsString(value)\n            type = 'fieldString'\n        }\n\n        let name = ctx.name && ctx.name[0] ? ctx.name[0].image : value\n\n        const func = ctx.function && ctx.function[0] && ctx.function[0].image\n        if (func) {\n            name = ctx.name && ctx.name[0] ? ctx.name[0].image : `${func}(${value})`\n            type = 'fieldFunction'\n        }\n        if (ctx.name && ctx.name[0].tokenType === tokenVocabulary.StringToken) {\n            name = convertStringTokenToJsString(name)\n        }\n\n        return {\n            name,\n            value,\n            function: func,\n            type,\n        }\n    }\n\n    public projection(ctx: { cols: CstNode[] }): Field[] {\n        const cols: { value: string; name: string; function: string | undefined; type: FieldType }[] = ctx.cols.map(x =>\n            this.visit(x)\n        ) as any\n        const fields: Field[] = []\n        cols.forEach(({ name, value, function: func, type }) => {\n            const { pathArray: namePathArray, propertyName: namePropertyName } = splitPropertyPath(name)\n            const { pathArray: fieldPathArray, propertyName: fieldPropertyName } = splitPropertyPath(value)\n\n            const field = {\n                type,\n                name: {\n                    value: namePropertyName,\n                    values: namePathArray,\n                },\n                field: {\n                    value: fieldPropertyName,\n                    values: fieldPathArray,\n                },\n                function: func ? { name: func } : undefined,\n            }\n            fields.push(field)\n        })\n        return fields\n    }\n\n    public fromClause(ctx: { table: Array<IToken>; alias: Array<IToken> }, index = 0): From {\n        let tableName: string = ctx.table[index].image\n        if (ctx.table[index].tokenType === tokenVocabulary.StringToken) {\n            tableName = convertStringTokenToJsString(tableName)\n        }\n        const alias = (ctx.alias && ctx.alias[index].image) ?? tableName\n        return {\n            type: 'From',\n            name: {\n                value: tableName,\n                values: splitPropertyPath(tableName).pathArray,\n            },\n            alias: {\n                value: alias,\n                values: splitPropertyPath(alias).pathArray,\n            },\n        }\n    }\n\n    public whereClause(ctx: Ctx) {\n        const conditions = this.visit(ctx.expression)\n\n        return {\n            conditions,\n        } as const\n    }\n\n    public joinClause(ctx: { table: Array<IToken>; alias: Array<IToken>; expression: CstNode[] }) {\n        if (!ctx.table) {\n            return null\n        }\n\n        const joins: any[] = []\n        ctx.table.forEach((_table, index) => {\n            const from = this.fromClause(ctx, index)\n            const conditions = this.visit(ctx.expression[index])\n            joins.push({\n                from,\n                conditions,\n            })\n        })\n        return joins\n    }\n\n    public limitClause(ctx: { Integer: IToken[] }) {\n        const limit = parseInt(ctx.Integer[0].image)\n        return {\n            value: {\n                value: limit,\n            },\n        }\n    }\n    public orderByClause(ctx: { OrderBy: IToken[]; Identifier: IToken[]; OrderByDirection: IToken[] }): Order {\n        const { pathArray, propertyName } = splitPropertyPath(ctx.Identifier[0].image)\n        const direction = ctx.OrderByDirection && (ctx.OrderByDirection[0].image as 'asc' | 'desc')\n\n        const order: ordering = {\n            value: {\n                value: propertyName,\n                values: pathArray,\n            },\n            direction,\n        }\n\n        return {\n            orderings: [order],\n        }\n    }\n\n    public expression(\n        ctx: {\n            subExpression: Array<CstNode | CstNode[]>\n            OrAnd: Array<IToken>\n            right: Array<CstNode | CstNode[]>\n        },\n        i: number = 0\n    ): any {\n        if (ctx.subExpression?.length - i === 1) {\n            return this.visit(ctx.subExpression[i])\n        }\n        const left = this.visit(ctx.subExpression[i])\n\n        const operation = ctx.OrAnd[i].image\n        const right: Operand = this.expression(ctx, i + 1)\n\n        return {\n            type: 'expression',\n            left,\n            right,\n            operation,\n        }\n    }\n\n    public subExpression(ctx: {\n        left: Array<CstNode | CstNode[]>\n        relationalOperator: CstNode | CstNode[]\n        right: Array<CstNode | CstNode[]>\n    }) {\n        const left = this.visit(ctx.left[0])\n        const operation = this.visit(ctx.relationalOperator)\n        const right = this.visit(ctx.right[0])\n        return {\n            type: 'expression',\n            left: {\n                type: left.type,\n                value: left.value,\n                values: splitPropertyPath(left.value).pathArray,\n                field: left.field,\n            },\n            operation,\n            right: {\n                type: right.type,\n                value: right.value,\n                values: splitPropertyPath(right.value).pathArray,\n                field: right.field,\n            },\n        }\n    }\n\n    public atomicExpression(context: Record<Token | 'in', Array<IToken>>): Operand {\n        const entries = Object.entries(context) as [keyof typeof context, Array<IToken>][]\n        for (let [key, value] of entries) {\n            if (key === 'in') {\n                const array = value\n                    .map(x => {\n                        if (x.tokenType === Integer) {\n                            return parseInt(x.image)\n                        }\n                        return convertStringTokenToJsString(x.image)\n                    })\n                    .map(v => ({ value: v, values: [v] }))\n                return { type: 'array', value: array }\n            }\n            if (key === 'Integer') {\n                return { type: 'integer', value: parseInt(value[0].image) }\n            }\n            if (key === 'Null') {\n                return { type: 'null', value: null }\n            }\n            if (key === 'Identifier') {\n                const { pathArray, propertyName } = splitPropertyPath(value[0].image)\n                return {\n                    type: 'opIdentifier',\n                    value: value[0].image,\n                    field: {\n                        type: 'fieldIdentifier',\n                        name: { value: propertyName, values: pathArray },\n                        field: {\n                            value: propertyName,\n                            values: pathArray,\n                        },\n                    },\n                }\n            }\n            if (key === 'StringToken') {\n                return { type: 'string', value: convertStringTokenToJsString(value[0].image) }\n            }\n        }\n        throw new Error()\n    }\n\n    public relationalOperator(ctx: Record<Token, Array<IToken>>) {\n        const {\n            tokenType: { LABEL },\n        } = Object.values(ctx)[0][0]\n\n        return LABEL\n    }\n}\n\nconst toAstVisitorInstance = new SQLToAstVisitor()\n\nconst toAst = (inputText: string) => {\n    const lexResult = lex(inputText)\n\n    parserInstance.input = lexResult.tokens\n    let cst: CstNode[] | CstNode\n\n    cst = parserInstance.selectStatement()\n\n    if (parserInstance.errors.length > 0) {\n        throw Error(JSON.stringify(parserInstance.errors))\n    }\n    const ast = toAstVisitorInstance.visit(cst)\n    return (ast.value as unknown) as SQLTree\n}\n\nconst splitPropertyPath = (stringPath: string | number) => {\n    const pathArray = String(stringPath).split('.')\n\n    return { propertyName: pathArray[pathArray.length - 1], pathArray }\n}\n\nconst convertStringTokenToJsString = (str: string) => str.substring(1, str.length - 1)\n\nexport { toAst }\n","import { CstParser } from 'chevrotain'\nimport * as lexer from './lexer'\n\nexport const labels = {\n    value: 'value',\n    function: 'function',\n    table: 'table',\n    name: 'name',\n    alias: 'alias',\n    left: 'left',\n    right: 'right',\n    in: 'in',\n} as const\n\nclass SelectParser extends CstParser {\n    public readonly selectStatement = this.RULE('selectStatement', () => {\n        this.SUBRULE(this.selectClause)\n        this.SUBRULE(this.fromClause)\n\n        this.OPTION(() => {\n            this.SUBRULE(this.joinClause)\n        })\n\n        this.OPTION2(() => {\n            this.SUBRULE(this.whereClause)\n        })\n\n        this.OPTION3(() => {\n            this.SUBRULE(this.orderByClause)\n        })\n        this.OPTION4(() => {\n            this.SUBRULE(this.limitClause)\n        })\n    })\n\n    public readonly selectClause = this.RULE('selectClause', () => {\n        this.CONSUME(lexer.Select)\n        this.SUBRULE(this.projection)\n    })\n\n    public readonly projection = this.RULE('projection', () => {\n        this.OR([\n            {\n                ALT: () =>\n                    this.AT_LEAST_ONE_SEP({\n                        SEP: lexer.Comma,\n                        DEF: () => {\n                            this.SUBRULE(this.cols)\n                        },\n                    }),\n            },\n        ])\n    })\n\n    public readonly cols = this.RULE('cols', () => {\n        this.OR([\n            { ALT: () => this.CONSUME(lexer.Star, { LABEL: labels.value }) },\n            {\n                ALT: () => {\n                    this.CONSUME2(lexer.Identifier, { LABEL: labels.function })\n                    this.CONSUME(lexer.OpenParenthesis)\n                    this.CONSUME3(lexer.Identifier, { LABEL: labels.value })\n                    this.CONSUME(lexer.CloseParenthesis)\n                    this.OPTION1(() => {\n                        this.CONSUME1(lexer.As)\n                        this.OR3([\n                            {\n                                ALT: () => this.CONSUME2(lexer.StringToken, { LABEL: labels.name }),\n                            },\n                            {\n                                ALT: () => this.CONSUME4(lexer.Identifier, { LABEL: labels.name }),\n                            },\n                        ])\n                    })\n                },\n            },\n            {\n                ALT: () => {\n                    this.OR1([\n                        {\n                            ALT: () => this.CONSUME(lexer.StringToken, { LABEL: labels.value }),\n                        },\n                        {\n                            ALT: () => this.CONSUME(lexer.Identifier, { LABEL: labels.value }),\n                        },\n                    ])\n                    this.OPTION(() => {\n                        this.CONSUME(lexer.As)\n                        this.OR2([\n                            {\n                                ALT: () => this.CONSUME1(lexer.StringToken, { LABEL: labels.name }),\n                            },\n                            {\n                                ALT: () => this.CONSUME1(lexer.Identifier, { LABEL: labels.name }),\n                            },\n                        ])\n                    })\n                },\n            },\n        ])\n    })\n\n    public readonly fromClause = this.RULE('fromClause', () => {\n        this.CONSUME(lexer.From)\n        this.OR([\n            {\n                ALT: () => this.CONSUME(lexer.Identifier, { LABEL: labels.table }),\n            },\n            {\n                ALT: () => this.CONSUME(lexer.StringToken, { LABEL: labels.table }),\n            },\n        ])\n        this.OPTION(() => this.CONSUME2(lexer.Identifier, { LABEL: labels.alias }))\n    })\n\n    public readonly whereClause = this.RULE('whereClause', () => {\n        this.CONSUME(lexer.Where)\n        this.SUBRULE(this.expression)\n    })\n\n    public readonly orderByClause = this.RULE('orderByClause', () => {\n        this.CONSUME(lexer.OrderBy)\n        this.CONSUME(lexer.Identifier)\n        this.OPTION({\n            DEF: () => this.CONSUME(lexer.OrderByDirection),\n        })\n    })\n\n    public readonly limitClause = this.RULE('limitClause', () => {\n        this.CONSUME(lexer.Limit)\n        this.CONSUME(lexer.Integer)\n    })\n\n    public readonly joinClause = this.RULE('joinClause', () => {\n        this.MANY(() => {\n            this.CONSUME(lexer.InnerJoin)\n            this.OR([\n                {\n                    ALT: () => this.CONSUME(lexer.Identifier, { LABEL: labels.table }),\n                },\n                {\n                    ALT: () => this.CONSUME(lexer.StringToken, { LABEL: labels.table }),\n                },\n            ])\n            this.OPTION(() => this.CONSUME2(lexer.Identifier, { LABEL: labels.alias }))\n            this.CONSUME(lexer.On)\n            this.SUBRULE(this.expression)\n        })\n    })\n\n    public readonly expression = this.RULE('expression', () => {\n        this.MANY_SEP({\n            SEP: lexer.OrAnd,\n            DEF: () => this.SUBRULE(this.subExpression),\n        })\n    })\n\n    public readonly subExpression = this.RULE('subExpression', () => {\n        this.SUBRULE(this.atomicExpression, { LABEL: labels.left })\n        this.OR([\n            {\n                ALT: () => {\n                    this.SUBRULE(this.relationalOperator)\n                    this.CONSUME2(lexer.OpenParenthesis)\n                    this.SUBRULE3(this.selectStatement, { LABEL: labels.right })\n                    this.CONSUME3(lexer.CloseParenthesis)\n                },\n            },\n            {\n                ALT: () => {\n                    this.SUBRULE1(this.relationalOperator)\n                    this.SUBRULE2(this.atomicExpression, { LABEL: labels.right })\n                },\n            },\n        ])\n    })\n\n    public readonly atomicExpression = this.RULE('atomicExpression', () => {\n        this.OR([\n            { ALT: () => this.CONSUME(lexer.Integer) },\n            { ALT: () => this.CONSUME(lexer.Null) },\n            { ALT: () => this.CONSUME(lexer.Identifier) },\n            { ALT: () => this.CONSUME(lexer.StringToken) },\n            {\n                ALT: () => {\n                    this.CONSUME(lexer.OpenParenthesis)\n                    this.MANY_SEP({\n                        SEP: lexer.Comma,\n                        DEF: () => {\n                            this.OR1([\n                                {\n                                    ALT: () => this.CONSUME1(lexer.Integer, { LABEL: labels.in }),\n                                },\n                                {\n                                    ALT: () => this.CONSUME1(lexer.StringToken, { LABEL: labels.in }),\n                                },\n                            ])\n                        },\n                    })\n                    this.CONSUME(lexer.CloseParenthesis)\n                },\n            },\n        ])\n    })\n\n    public readonly relationalOperator = this.RULE('relationalOperator', () => {\n        this.OR([\n            { ALT: () => this.CONSUME(lexer.GreaterOrEqualThan) },\n            { ALT: () => this.CONSUME(lexer.GreaterThan) },\n            { ALT: () => this.CONSUME(lexer.LessOrEqualThan) },\n            { ALT: () => this.CONSUME(lexer.LessThan) },\n            { ALT: () => this.CONSUME(lexer.Equal) },\n            { ALT: () => this.CONSUME(lexer.NotEqual) },\n            { ALT: () => this.CONSUME(lexer.Like) },\n            { ALT: () => this.CONSUME(lexer.NotLike) },\n            { ALT: () => this.CONSUME(lexer.In) },\n            { ALT: () => this.CONSUME(lexer.IsNot) },\n            { ALT: () => this.CONSUME(lexer.Is) },\n        ])\n    })\n\n    constructor(config?: any) {\n        super(lexer.tokenVocabulary, config)\n        this.performSelfAnalysis()\n    }\n}\nconst parserInstance = new SelectParser()\n\nconst parse = (inputText: string) => {\n    const lexResult = lexer.lex(inputText)\n\n    parserInstance.input = lexResult.tokens\n\n    const cst = parserInstance.selectStatement()\n\n    if (parserInstance.errors.length > 0) {\n        throw Error(parserInstance.errors[0].message)\n    }\n    return cst\n}\n\nexport { SelectParser, parse }\n","export const jsonParseSafe = (str: string | null) => {\n    if (typeof str !== 'string' || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n\nexport const get = (obj: any, path: (string | number)[], defaultValue: any = undefined) => {\n    const travel = (regexp: any) =>\n        String.prototype.split\n            .call(path, regexp)\n            .filter(Boolean)\n            .reduce((res, key) => (res !== null && res !== undefined ? res[key] : res), obj)\n    const result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/)\n    return result === undefined || result === obj ? defaultValue : result\n}\n","import { orderBy } from 'lodash'\nimport { toAst } from './actions-visitor'\nimport { operators } from './operators'\nimport { Conditions, Field, From, Operand, Operation, SQLTree } from './SqlTree'\nimport * as utils from './utils'\n\nexport const computePath = (path: (string | number)[] | undefined, allowedSourceNames: string[]) => {\n    if (!path) {\n        return { path: [] }\n    }\n    if (allowedSourceNames.some(x => x === String(path[0])?.toLowerCase())) {\n        return { tableName: path[0], path: [...path].slice(1) }\n    }\n\n    return { path }\n}\n\nexport const sqlQuery = (json: string, query: string) => {\n    return sqlQueryWithMultipleSources({ data: json, json }, query)\n}\n\nexport const sqlQueryWithMultipleSources = (source: Record<string, string>, query: string) => {\n    try {\n        const sqlTree = toAst(query)\n\n        if (\n            !Object.keys(source).some(\n                x =>\n                    x.toLowerCase() === String(sqlTree.source.alias.values[0]).toLowerCase() ||\n                    x.toLowerCase() === String(sqlTree.source.name.value)\n            )\n        ) {\n            return new SyntaxError(String(sqlTree.source.name.values[0]))\n        }\n\n        const sourceDataObjects: Record<string, object> = {}\n        Object.keys(source).forEach(key => {\n            sourceDataObjects[key] = utils.jsonParseSafe(source[key])\n        })\n\n        return executeQuery(sqlTree, sourceDataObjects)\n    } catch (e) {\n        return e as Error\n    }\n}\n\nconst getSourceData = (sqlTree: SQLTree, sourceDataObject: Record<string, object>) => {\n    if (sourceDataObject[sqlTree.source.name.value]) {\n        return sourceDataObject[sqlTree.source.name.value]\n    }\n\n    const fromPath = [...sqlTree.source.name.values]\n    fromPath.shift()\n\n    return utils.get(sourceDataObject[sqlTree.source.name.values[0]], fromPath)\n}\n\nexport type Row = {\n    projected: object\n    real: object\n    dataContext: Record<string, object>\n}\n\nexport const executeQuery = (sqlTree: SQLTree, sourceDataObject: Record<string, any>): any => {\n    const data = getSourceData(sqlTree, sourceDataObject)\n\n    if (!Array.isArray(data)) {\n        return mapper(data, sqlTree.fields, { [sqlTree.source.alias.value]: data }, sourceDataObject)\n    }\n\n    let jointures: { source: any[]; conditions: Conditions; from: From }[] = []\n    if (sqlTree.joins) {\n        sqlTree.joins.forEach(join => {\n            jointures.push({\n                from: join.from,\n                conditions: join.conditions,\n                source: sourceDataObject[join.from.name.value],\n            })\n        })\n    }\n    const rows: Row[] = data.map(x => ({\n        real: x,\n        projected: x,\n        dataContext: {\n            [sqlTree.source.name.value]: x,\n            [sqlTree.source.alias.value]: x,\n        },\n    }))\n\n    const ordered = sqlTree.order\n        ? orderBy(\n              rows,\n              sqlTree.order.orderings.map(x => 'real.' + x.value.value),\n              sqlTree.order.orderings.map(x => x.direction)\n          )\n        : rows\n\n    const results: object[] = []\n    ordered.forEach(row => {\n        if (sqlTree.limit && sqlTree.limit.value.value <= results.length) {\n            return\n        }\n        const shouldBeIncludeInResults = () => {\n            if (jointures.length) {\n                for (const { source, conditions, from } of jointures) {\n                    let match = false\n                    for (const joinRow of source) {\n                        const joinRowData = {\n                            [from.name.value]: joinRow,\n                            [from.alias.value]: joinRow,\n                        }\n                        row.dataContext = { ...row.dataContext, ...joinRowData }\n                        const comparison = compareOperands(\n                            conditions.operation,\n                            conditions.left,\n                            conditions.right,\n                            row.dataContext,\n                            sourceDataObject\n                        )\n                        if (comparison) {\n                            match = true\n                        }\n                    }\n                    if (!match) {\n                        return false\n                    }\n                }\n            }\n\n            if (!sqlTree.where || !sqlTree.where.conditions) {\n                return true\n            }\n            const leftValue = sqlTree.where.conditions.left\n            const rightValue = sqlTree.where.conditions.right\n            const operation = sqlTree.where.conditions.operation\n\n            const comparison = compareOperands(operation, leftValue, rightValue, row.dataContext, sourceDataObject)\n\n            return comparison\n        }\n\n        if (shouldBeIncludeInResults()) {\n            const mapped = mapper(row.real, sqlTree.fields, row.dataContext, sourceDataObject)\n            row.projected = mapped\n            results.push(mapped)\n        }\n    })\n\n    return results\n}\n\nconst compareOperands = (\n    operation: Operation,\n    left: Operand,\n    right: Operand,\n    values: Record<string, object>,\n    sourceDataObject: Record<string, object>\n): boolean => {\n    const leftValue = getValue(left, values, sourceDataObject)\n    const rightValue = getValue(right, values, sourceDataObject)\n    switch (operation) {\n        case operators.or:\n            return (\n                (left.type === 'expression' &&\n                    compareOperands(left.operation, left.left, left.right, values, sourceDataObject)) ||\n                (right.type === 'expression' &&\n                    compareOperands(right.operation, right.left, right.right, values, sourceDataObject))\n            )\n        case operators.and:\n            return (\n                left.type === 'expression' &&\n                compareOperands(left.operation, left.left, left.right, values, sourceDataObject) &&\n                right.type === 'expression' &&\n                compareOperands(right.operation, right.left, right.right, values, sourceDataObject)\n            )\n    }\n    switch (operation) {\n        case operators.equal:\n        case operators.is:\n            return leftValue === rightValue\n        case operators.notEqual:\n        case operators.isNot:\n            return leftValue !== rightValue\n        case operators.like: {\n            const leftStr = String(leftValue)\n            const rightStr = String(rightValue)\n            if (rightStr.startsWith(operators.modulo) && rightStr.endsWith(operators.modulo)) {\n                if (leftStr.includes(rightStr.substring(1, rightStr.length - 1))) {\n                    return true\n                }\n            } else if (rightStr.startsWith(operators.modulo)) {\n                if (leftStr.endsWith(rightStr.substring(rightStr.indexOf(operators.modulo) + 1))) {\n                    return true\n                }\n            } else if (rightStr.endsWith(operators.modulo)) {\n                if (leftStr.startsWith(rightStr.substring(0, rightStr.indexOf(operators.modulo)))) {\n                    return true\n                }\n            }\n            return false\n        }\n        case operators.notLike: {\n            const leftStr = String(leftValue)\n            const rightStr = String(rightValue)\n            if (rightStr.startsWith(operators.modulo) && rightStr.endsWith(operators.modulo)) {\n                if (leftStr.includes(rightStr.substring(1, rightStr.length - 1))) {\n                    return false\n                }\n            } else if (rightStr.startsWith(operators.modulo)) {\n                if (leftStr.endsWith(rightStr.substring(rightStr.indexOf(operators.modulo) + 1))) {\n                    return false\n                }\n            } else if (rightStr.endsWith(operators.modulo)) {\n                if (leftStr.startsWith(rightStr.substring(0, rightStr.indexOf(operators.modulo)))) {\n                    return false\n                }\n            }\n            return true\n        }\n        case operators.greaterThan:\n            return !!rightValue && !!leftValue && leftValue > rightValue\n        case operators.greaterOrEqualThan:\n            return !!rightValue && !!leftValue && leftValue >= rightValue\n        case operators.lessThan:\n            return !!rightValue && !!leftValue && leftValue < rightValue\n        case operators.lessOrEqualthan:\n            return !!rightValue && !!leftValue && leftValue <= rightValue\n        case operators.in:\n            return rightValue.filter((x: any) => x.value === leftValue).length > 0\n    }\n    throw new Error()\n}\n\nconst mapObject = (fields: Field[], sources: Record<string, object>, sourceDataObject: Record<string, object>) => {\n    const mappedObject: Record<string, object> = {}\n    fields.forEach(field => {\n        const value = getValue(field, sources, sourceDataObject)\n        mappedObject[field.name.value] =\n            field.type === 'fieldFunction' ? applyFunction(field.function.name, value) : value\n    })\n    return mappedObject\n}\n\nconst applyFunction = (functionName: string, value: object) => {\n    const func = functionName.toLowerCase()\n    if (func === 'lower') {\n        return String(value).toLowerCase()\n    }\n    if (func === 'upper') {\n        return String(value).toUpperCase()\n    }\n    if (func === 'trim') {\n        return String(value).trim()\n    }\n    if (func === 'trimleft') {\n        return String(value).trimLeft()\n    }\n    if (func === 'trimright') {\n        return String(value).trimRight()\n    }\n    if (func === 'reverse') {\n        return String(value).split('').reverse().join('')\n    }\n    if (func === 'length' || func === 'len') {\n        return String(value).length\n    }\n    throw new Error()\n}\n\nconst getValue = (\n    operand: Operand | Field,\n    values: Record<string, object>,\n    sourceDataObject: Record<string, object>\n) => {\n    if (operand.type === 'fieldString') {\n        const value = getIdentifierValue(values, operand)\n        if (value !== undefined) {\n            return value\n        }\n        return operand.field.value\n    }\n    if (\n        operand.type === 'integer' ||\n        operand.type === 'string' ||\n        operand.type === 'array' ||\n        operand.type === 'null' ||\n        operand.type === 'expression'\n    ) {\n        return operand.value\n    }\n    if (operand.type === 'opIdentifier') {\n        const { field } = operand\n        const value = getIdentifierValue(values, field)\n        if (value !== undefined) {\n            return value\n        }\n    }\n    if (operand.type === 'selectStatement') {\n        const array = executeQuery(operand.value, sourceDataObject)\n        return array.map((x: any) => ({ value: x[operand.value.fields[0].field.value] }))\n    }\n\n    const value = getIdentifierValue(values, operand as any)\n\n    if (value !== undefined) {\n        return value\n    }\n    return undefined\n}\n\nconst mapper = (\n    v: object,\n    fields: Field[],\n    sources: Record<string, object>,\n    sourceDataObject: Record<string, object>\n) => {\n    if (fields.some(x => x.field.value === '*')) {\n        return v\n    }\n\n    return mapObject(fields, sources, sourceDataObject)\n}\n\nfunction getIdentifierValue(values: Record<string, object>, field: Field) {\n    const availableTables = Object.keys(values)\n    const { path, tableName } = computePath(field?.field.values, availableTables)\n\n    if (tableName && !availableTables.some(x => x === tableName)) {\n        throw Error(`Unknown identifier: ${tableName}`)\n    }\n    if (!tableName && availableTables.length > 1) {\n        throw Error(`Ambiguous identifier: ${field.field.value}`)\n    }\n\n    const value = tableName ? values[tableName] : Object.values(values)[0]\n    return utils.get(value, path)\n}\n","import * as React from 'react'\nimport { FC, ReactElement } from 'react'\nimport { useMeasure } from 'react-use'\nimport { CardHeader } from 'reactstrap'\nimport styles from './GrabbleHeader.module.scss'\n\ntype Props = {\n    title: string\n    children: ReactElement\n}\n\nexport const GrabbleHeader: FC<Props> = ({ title, children }) => {\n    const [parentref, { height: parentHeight }] = useMeasure<HTMLDivElement>()\n    const [headerRef, { height: headerHeight }] = useMeasure<HTMLDivElement>()\n    const height = parentHeight - headerHeight * 2 - 2\n    console.log({ title, parentHeight })\n    return (\n        <div ref={parentref} className={`${styles.draggable} h-100 `}>\n            <div className=\"px-2\">\n                <CardHeader className=\"border-0 pr-0\" style={{ background: 'transparent' }}>\n                    <div ref={headerRef}>\n                        <u className=\"font-weight-bold text-large h5\">{title}</u>\n                        <span className={`float-right ${styles.grabber}`}>\n                            <i className=\"material-icons\">drag_indicator</i>\n                        </span>\n                    </div>\n                </CardHeader>\n                <div\n                    style={{\n                        height: `${height}px`,\n                        overflowY: 'auto',\n                        overflowX: 'hidden',\n                    }}\n                >\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { logError } from '../core/logging/logger'\n\nexport const themeDeps = new Map([\n    [\n        'materia',\n        () => import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css'),\n    ],\n    [\n        'darkly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css'),\n    ],\n    [\n        'sandstone',\n        () => import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css'),\n    ],\n    ['cosmo', () => import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css')],\n    [\n        'cyborg',\n        () => import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css'),\n    ],\n    [\n        'flatly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css'),\n    ],\n    [\n        'journal',\n        () => import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css'),\n    ],\n    [\n        'litera',\n        () => import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css'),\n    ],\n    ['lumen', () => import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css')],\n    ['lux', () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css')],\n    ['minty', () => import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css')],\n    ['pulse', () => import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css')],\n    [\n        'simplex',\n        () => import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css'),\n    ],\n    ['slate', () => import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css')],\n    ['solar', () => import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css')],\n    [\n        'spacelab',\n        () => import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css'),\n    ],\n    [\n        'superhero',\n        () => import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css'),\n    ],\n    [\n        'united',\n        () => import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css'),\n    ],\n    ['yeti', () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css')],\n] as const)\n\nexport const importThemeStyleCustom = (theme: GeneralTheme | null) => {\n    if (theme) {\n        const themeLoader = themeDeps.get(theme)\n        if (themeLoader) {\n            return themeLoader()\n        }\n    }\n\n    logError(`${theme}: theme is not defined`)\n\n    return themeDeps.values().next().value()\n}\n\nexport const availableGeneralThemes = [\n    'materia',\n    'darkly',\n    'sandstone',\n    'cosmo',\n    'cyborg',\n    'flatly',\n    'journal',\n    'litera',\n    'lumen',\n    'lux',\n    'minty',\n    'pulse',\n    'simplex',\n    'slate',\n    'solar',\n    'spacelab',\n    'superhero',\n    'united',\n    'yeti',\n] as const\nexport type GeneralTheme = typeof availableGeneralThemes[number]\n\nexport const availableEditorThemes = ['github', 'monokai', 'tomorrow', 'solarized_dark', 'terminal'] as const\nexport type EditorTheme = typeof availableEditorThemes[number]\n","import * as React from 'react'\nimport { version } from '../../package.json'\nimport { GeneralTheme, availableGeneralThemes, availableEditorThemes, EditorTheme } from 'themes/themes'\nimport { switchTheme, switchEditorTheme } from 'actions/actions'\nimport { connect } from 'react-redux'\nimport { getTheme, getEditorTheme } from 'store/selectors'\nimport { RootState } from 'state/State'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    Collapse,\n    Nav,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    NavItem,\n    NavLink,\n    Dropdown,\n} from 'reactstrap'\nimport { withErrorBoundary } from './common/ErrorBoundary'\nimport { memo, useCallback, FC } from 'react'\nimport { withPerformance } from 'core/logging/performance'\n\ninterface Props {\n    setGeneralTheme: typeof switchTheme\n    setEditorTheme: typeof switchEditorTheme\n    currentTheme: GeneralTheme | null\n    currentEditorTheme: EditorTheme\n}\n\nconst Header: FC<Props> = ({ setGeneralTheme, currentTheme, setEditorTheme, currentEditorTheme }) => {\n    const [isOpen, switchIsOpen] = useToggleState()\n    const [dropDownIsOpen, toggleDropdown] = useToggleState()\n\n    return (\n        <>\n            <Navbar color=\"dark\" dark={true} expand=\"md\">\n                <NavbarBrand href=\"/\">Keyrier JSON</NavbarBrand>\n                <NavbarToggler role=\"presentation\" onClick={switchIsOpen} />\n                <Collapse isOpen={isOpen} navbar={true}>\n                    <Nav className=\"ml-auto\" navbar={true}>\n                        <NavItem>\n                            <Dropdown isOpen={dropDownIsOpen} toggle={toggleDropdown}>\n                                <DropdownToggle nav={true} caret={true}>\n                                    Theme\n                                </DropdownToggle>\n                                <DropdownMenu right={true}>\n                                    <DropdownItem header={true}>Choose editor theme</DropdownItem>\n                                    {availableEditorThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setEditorTheme}\n                                            key={index}\n                                            active={currentEditorTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={false}\n                                        />\n                                    ))}\n                                    <DropdownItem header={true}>Choose general theme</DropdownItem>\n\n                                    {availableGeneralThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setGeneralTheme}\n                                            key={index}\n                                            active={currentTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={true}\n                                        />\n                                    ))}\n                                </DropdownMenu>\n                            </Dropdown>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json/releases/latest\">\n                                v{version}\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </>\n    )\n}\n\ntype ThemeDropDownItemProps<T extends GeneralTheme | EditorTheme> = {\n    theme: T\n    active: boolean\n    setTheme: (v: T) => void\n    reloadOnChange: boolean\n}\n\nconst ThemeDropDownItem = <T extends GeneralTheme | EditorTheme>(props: ThemeDropDownItemProps<T>) => {\n    const { theme, active, setTheme, reloadOnChange } = props\n    const onClick = useCallback(() => {\n        setTheme(theme)\n        if (reloadOnChange) {\n            setTimeout(() => window.location.reload())\n        }\n    }, [theme, setTheme, reloadOnChange])\n    return (\n        <DropdownItem active={active} onClick={onClick}>\n            {theme}\n        </DropdownItem>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    currentTheme: getTheme(state),\n    currentEditorTheme: getEditorTheme(state),\n})\n\nexport default connect(mapStateToProps, { setGeneralTheme: switchTheme, setEditorTheme: switchEditorTheme })(\n    memo(withErrorBoundary(withPerformance(Header, 'Header')))\n)\n","import * as React from 'react'\nimport { Button } from 'reactstrap'\nimport { memo, useCallback, ChangeEvent, FC } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\ninterface Props {\n    header: [string, string]\n    id: number\n    onChange: (h: [string, string]) => void\n    onRemove: (h: [string, string]) => void\n}\n\nexport const RenderHeaderInput: FC<Props> = memo(\n    withErrorBoundary(({ header, onRemove, onChange, id }) => {\n        const [key, value] = header\n\n        const onKeyChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([e.target.value, value]), [\n            onChange,\n            value,\n        ])\n        const onValueChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([key, e.target.value]), [\n            onChange,\n            key,\n        ])\n        const onRemoveCallback = useCallback(() => onRemove(header), [onRemove, header])\n\n        return (\n            <div className=\"row align-items-center\">\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={key}\n                        id={`headerName${id}`}\n                        type=\"text\"\n                        name={`headerName${id}`}\n                        placeholder=\"enter an name\"\n                        onChange={onKeyChange}\n                    />\n                </div>\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={value}\n                        type=\"text\"\n                        name={`headerValue${id}`}\n                        id={`headerValue${id}`}\n                        placeholder=\"enter an value\"\n                        onChange={onValueChange}\n                    />\n                </div>\n                <div className=\"col-sm-2\">\n                    <Button outline={true} color=\"danger\" onClick={onRemoveCallback}>\n                        remove\n                    </Button>\n                </div>\n            </div>\n        )\n    })\n)\n","import * as React from 'react'\nimport { FC, memo, useCallback, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Alert, Button, Form, FormGroup } from 'reactstrap'\nimport { updateSource } from '../../actions/actions'\nimport { withErrorBoundary } from '../../components/common/ErrorBoundary'\nimport { logError } from '../../core/logging/logger'\nimport { useChangeEventState, useToggleState } from '../../hooks/hooks'\nimport { RenderHeaderInput } from './RequestHeader'\nimport { customToString } from '../../core/converters/string'\n\ninterface Props {\n    onFinish: () => void\n    setSource: (src: string) => void\n}\n\nconst HttpRequestSource: FC<Props> = ({ onFinish, setSource }) => {\n    const [method, setMethod] = useChangeEventState('GET')\n    const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n    const [body, setBody] = useChangeEventState('')\n    const [headers, setHeaders] = useState([['Accept', 'application/json'] as [string, string]])\n    const [error, setError] = useState(null as TypeError | null)\n    const [hasBody, setHasBody] = useToggleState()\n\n    const submit = useCallback(async () => {\n        const requestInit: RequestInit = {\n            method,\n            headers,\n            body: hasBody ? body : null,\n        }\n        const request = new Request(url, requestInit)\n        setError(null)\n\n        let json: string\n        try {\n            const result = await fetch(request)\n            json = await result.json()\n        } catch (e) {\n            logError('HttpRequestSource.submit', e)\n            setError(e)\n            return\n        }\n        setSource(customToString(json))\n        onFinish()\n    }, [method, url, body, headers, hasBody, setSource, onFinish])\n\n    return (\n        <div id=\"HttpRequestSource\">\n            <FormGroup>\n                <label htmlFor=\"requestMethod\">Method</label>\n                <select\n                    className=\"form-control-lg form-control\"\n                    defaultValue={method}\n                    name=\"requestMethod\"\n                    id=\"requestMethod\"\n                    onChange={setMethod}\n                >\n                    <option>GET</option>\n                    <option>POST</option>\n                    <option>PUT</option>\n                    <option>OPTIONS</option>\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <label htmlFor=\"requestUrl\">Request URL</label>\n                <input\n                    defaultValue={url}\n                    className=\"form-control-lg form-control\"\n                    type=\"url\"\n                    name=\"requestUrl\"\n                    id=\"requestUrl\"\n                    placeholder=\"enter an URL\"\n                    onChange={setUrl}\n                />\n            </FormGroup>\n            <div className=\"position-relative form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n                </label>\n            </div>\n            <Form inline={true} hidden={!hasBody}>\n                <FormGroup>\n                    <label>Body</label>\n                    <input\n                        className=\"form-control-lg form-control\"\n                        type=\"textarea\"\n                        value={body}\n                        onChange={setBody}\n                    />{' '}\n                </FormGroup>\n            </Form>\n            <label htmlFor=\"headers\">Request headers</label>{' '}\n            <Button\n                outline={true}\n                color=\"primary\"\n                onClick={() => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']])}\n            >\n                Add header\n            </Button>\n            <br />\n            <br />\n            <HeaderList headers={headers} onChange={setHeaders} />\n            <br />\n            <Button block={true} color=\"primary\" onClick={submit}>\n                Submit\n            </Button>\n            {error && (\n                <Alert color=\"danger\">\n                    Error: {error.message ? error.message : ''}\n                    {error.stack ? error.stack : ''}\n                </Alert>\n            )}\n        </div>\n    )\n}\n\ntype HeaderListProps = {\n    headers: Array<[string, string]>\n    onChange: (headers: Array<[string, string]>) => void\n}\n\nconst HeaderList: FC<HeaderListProps> = ({ headers, onChange }) => {\n    const onRemove = useCallback((header: [string, string]) => onChange(headers.filter(h => h !== header)), [\n        headers,\n        onChange,\n    ])\n    const onChangeCallback = useCallback(\n        (header: [string, string]) => {\n            const index = headers.indexOf(header)\n            headers[index] = { ...header }\n            onChange([...headers])\n        },\n        [headers, onChange]\n    )\n    return (\n        <>\n            {headers.map((header, index) => (\n                <RenderHeaderInput\n                    header={header}\n                    key={index}\n                    id={index}\n                    onChange={onChangeCallback}\n                    onRemove={onRemove}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default connect(null, { setSource: updateSource })(withErrorBoundary(memo(HttpRequestSource)))\n","import {\n    clearEditor,\n    redo,\n    resetEditor,\n    undo,\n    updateAutoFormatSource,\n    updateQueryMode,\n    updateSource,\n} from 'actions/actions'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport { logDebug } from 'core/logging/logger'\nimport { withPerformance } from 'core/logging/performance'\nimport { useToggleState } from 'hooks/hooks'\nimport * as React from 'react'\nimport { ChangeEvent, FC, memo, useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Button,\n    ButtonDropdown,\n    ButtonGroup,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n} from 'reactstrap'\nimport { ActionCreators } from 'redux-undo'\nimport { QueryMode, RootState } from 'state/State'\nimport { getCanRedo, getCanUndo, getQueryMode, getSourceAutoFormat } from 'store/selectors'\nimport HttpRequestSource from './source/RequestSource'\n\ninterface Props {\n    onFileContentReady: typeof updateSource\n    changeAutoFormat: typeof updateAutoFormatSource\n    onReset: typeof resetEditor\n    onClear: typeof clearEditor\n    setQueryMode: typeof updateQueryMode\n    mode: QueryMode\n    onUndo: typeof undo\n    onRedo: typeof redo\n    canRedo: boolean\n    canUndo: boolean\n    autoFormat: boolean\n    resetHistory: typeof ActionCreators.clearHistory\n}\n\nconst LateralMenu: FC<Props> = ({\n    onReset,\n    onFileContentReady,\n    onClear,\n    autoFormat,\n    changeAutoFormat,\n    onRedo,\n    onUndo,\n    canRedo,\n    canUndo,\n    setQueryMode,\n    mode,\n    resetHistory,\n}) => {\n    const [dropdownIsOpen, toggleDropdown] = useToggleState()\n    const [modalIsOpen, toggleModal] = useToggleState()\n    const handleFileChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            logDebug('onFileChange')\n            toggleDropdown()\n            if (e.target.files && e.target?.files?.length > 0) {\n                const fileReader = new FileReader()\n                logDebug('e.target.files', e.target.files[0].name)\n                fileReader.onload = () => {\n                    if (fileReader.result) {\n                        onFileContentReady(fileReader.result.toString())\n                    }\n                }\n                fileReader.readAsText(e.target.files[0])\n            }\n        },\n        [toggleDropdown, onFileContentReady]\n    )\n\n    const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n    return (\n        <>\n            <ButtonGroup className=\"d-flex\" vertical={true}>\n                <ButtonGroup vertical={false}>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onUndo}\n                        disabled={!canUndo}\n                    >\n                        <i className=\"material-icons mr-1 md-18\">undo</i>\n                        <span>Undo</span>\n                    </Button>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onRedo}\n                        disabled={!canRedo}\n                    >\n                        Redo\n                        <i className=\"material-icons mr-1 md-18\">redo</i>\n                    </Button>\n                </ButtonGroup>\n                <br />\n                <br />\n                <Label\n                    className=\"d-flex justify-content-center align-content-between\"\n                    check={true}\n                    onClick={handleAutoFormatChange}\n                >\n                    <i className=\"material-icons mr-1\">{autoFormat ? 'check_box' : 'check_box_outline_blank'}</i>\n                    Auto format\n                </Label>\n                <br />\n                <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n                    <DropdownToggle\n                        className=\"d-flex justify-content-center align-content-between\"\n                        size={'lg'}\n                        id=\"import-menu-button\"\n                        color=\"primary\"\n                    >\n                        <i className=\"material-icons mr-1 md-18\">unarchive</i>\n                        Import\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem toggle={false}>\n                            <label id=\"import-file\">\n                                Browse JSON file...\n                                <input\n                                    type=\"file\"\n                                    name=\"file\"\n                                    id=\"sourceFile\"\n                                    style={{ display: 'none' }}\n                                    onChange={handleFileChange}\n                                />\n                            </label>\n                        </DropdownItem>\n                        <DropdownItem id=\"http-request\" onClick={toggleModal}>\n                            <label>HTTP request</label>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n                <br />\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"secondary\"\n                    size={'lg'}\n                    onClick={() => {\n                        onReset()\n                        resetHistory()\n                    }}\n                >\n                    <div>\n                        <i className=\"material-icons md-18 mr-1\">autorenew</i>\n                    </div>\n                    <div>Reset</div>\n                </Button>\n                <br />\n\n                {mode === 'Javascript' ? (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('SQL')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to SQL-like</div>\n                    </Button>\n                ) : (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('Javascript')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to JS</div>\n                    </Button>\n                )}\n\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"danger\"\n                    size={'lg'}\n                    onClick={onClear}\n                >\n                    <div>\n                        <i className=\"material-icons md-18  mr-1\">clear</i>\n                    </div>\n                    <div>Clear</div>\n                </Button>\n            </ButtonGroup>\n            <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n                <ModalBody>\n                    <HttpRequestSource onFinish={toggleModal} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    autoFormat: getSourceAutoFormat(state),\n    canUndo: getCanUndo(state),\n    canRedo: getCanRedo(state),\n    mode: getQueryMode(state),\n})\n\nexport default connect(mapStateToProps, {\n    onFileContentReady: updateSource,\n    onReset: resetEditor,\n    onClear: clearEditor,\n    onUndo: undo,\n    onRedo: redo,\n    resetHistory: ActionCreators.clearHistory,\n    changeAutoFormat: updateAutoFormatSource,\n    setQueryMode: updateQueryMode,\n})(memo(withErrorBoundary(withPerformance(LateralMenu, 'LateralMenu'))))\n","import { updateLayouts } from 'actions/actions'\nimport { configuration } from 'config'\nimport { withPerformance } from 'core/logging/performance'\nimport * as React from 'react'\nimport { FC, lazy, Suspense } from 'react'\nimport { Responsive, WidthProvider } from 'react-grid-layout'\nimport 'react-grid-layout/css/styles.css'\nimport { connect } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport { QueryMode } from 'state/State'\nimport { getLayouts, getQueryMode } from 'store/selectors'\nimport appStyles from './App.module.scss'\nimport { GrabbleHeader } from './common/GrabbleHeader'\nimport grabbleStyles from './common/GrabbleHeader.module.scss'\nimport Header from './Header'\nimport LateralMenu from './LateralMenu'\n\nconst ResponsiveGridLayout = WidthProvider(Responsive)\nconst SourceEditor = lazy(() => import(/* webpackChunkName: \"SourceEditor\" */ 'components/source/SourceEditor'))\nconst Output = lazy(() => import(/* webpackChunkName: \"Output\" */ 'components/output/Output'))\nconst QueryEditor = lazy(() => import(/* webpackChunkName: \"QueryEditor\" */ 'components/query/QueryEditor'))\n\ntype Props = {\n    mode: QueryMode\n    layouts: ReactGridLayout.Layouts\n    updateGridLayouts: typeof updateLayouts\n}\nconst App: FC<Props> = ({ mode, layouts, updateGridLayouts }) => {\n    const onLayoutChange = (_: ReactGridLayout.Layout[], newLayouts: ReactGridLayout.Layouts) =>\n        updateGridLayouts(newLayouts)\n\n    return (\n        <>\n            <Header />\n            <div className=\"container-fluid mb-5\">\n                <h1 className=\"my-5\">Paste your JSON and Query it.</h1>\n                <ResponsiveGridLayout\n                    autoSize={true}\n                    className=\"layout\"\n                    isResizable={true}\n                    layouts={layouts}\n                    draggableHandle={`.${grabbleStyles.grabber}`}\n                    breakpoints={{ xs: 0, lg: 1024 }}\n                    cols={{ lg: 24, xs: 6 }}\n                    margin={[5, 5]}\n                    containerPadding={[5, 5]}\n                    rowHeight={25}\n                    onLayoutChange={onLayoutChange}\n                    compactType={null}\n                    maxRows={75}\n                >\n                    <div key={configuration.layout.keys.lateralMenuKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"Options\">\n                            <LateralMenu />\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.sourceEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"1. Paste your JSON:\">\n                            <Suspense fallback={'loading...'}>\n                                <SourceEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.queryEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title={`2. Type your ${mode} query:`}>\n                            <Suspense fallback={'loading...'}>\n                                <QueryEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.outputKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"3. View your results:\">\n                            <Suspense fallback={'loading...'}>\n                                <Output />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                </ResponsiveGridLayout>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default connect(state => ({ mode: getQueryMode(state), layouts: getLayouts(state) }), {\n    updateGridLayouts: updateLayouts,\n})(withPerformance(App, 'App'))\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.toString())\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log('New content is available; please refresh.')\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log('Content is cached for offline use.')\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","export const jsonBeautify = (str: string | undefined) => {\n    if (typeof str !== 'string') {\n        return ''\n    }\n\n    const parsed = jsonParseSafe(str)\n    if (typeof parsed === 'string') {\n        return parsed\n    }\n\n    if (parsed === null) {\n        return ''\n    }\n\n    return JSON.stringify(parsed, null, 2)\n}\n\nexport const jsonParseSafe = (str: string | null) => {\n    if (typeof str !== 'string' || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n","import { combineReducers } from 'redux'\nimport undoable from 'redux-undo'\nimport { Action } from '../actions/actions'\nimport { configuration } from '../config'\nimport { codeEvaluation } from '../core/code'\nimport { jsonBeautify } from '../core/converters/json'\nimport { containsIgnoreCase } from '../core/converters/string'\nimport { arrayElementName } from '../models/array'\nimport initialStateJson from '../state/default-state.json'\nimport {\n    AppState,\n    emptyState,\n    getDefaultAppState,\n    getDefaultUserSettingsState,\n    OupoutState,\n    OupoutTableState,\n    QueryMode,\n    QueryState,\n    SourceState,\n    tabType,\n    UserSettingsState,\n} from '../state/State'\n\nexport const appReducer = (rootState = getDefaultAppState(), action: Action) => {\n    if (action.type === 'CLEAR_EDITOR') {\n        return emptyState\n    }\n    const newState =\n        rootState?.query && rootState?.source\n            ? ({\n                  ...rootState,\n                  query: query(rootState.query, action),\n                  source: source(rootState.source, action),\n              } as const)\n            : {}\n\n    const newOutputState = output(rootState, newState, action)\n    const ret = {\n        ...newState,\n        output: {\n            ...newOutputState,\n            table: table(newOutputState?.table ?? {}, action),\n        },\n    }\n\n    return ret\n}\n\nexport const source = (state: SourceState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_SOURCE_TEXT':\n            return {\n                ...state,\n                text: state?.autoFormat ? jsonBeautify(action.source.trim()) : action.source,\n            }\n        case 'UPDATE_AUTOFORMAT_SOURCE':\n            return {\n                ...state,\n                text: action.active ? jsonBeautify(state?.text?.trim()) : state?.text ?? '',\n                autoFormat: action.active,\n            }\n        default:\n            return state\n    }\n}\n\nexport const userSettings = (state: UserSettingsState | undefined = getDefaultUserSettingsState(), action: Action) => {\n    switch (action.type) {\n        case 'RESET_EDITOR':\n            return getDefaultUserSettingsState()\n        case 'SWITCH_GLOBAL_THEME':\n            return { ...state, globalTheme: action.theme }\n        case 'SWITCH_EDITOR_THEME':\n            return { ...state, editorTheme: action.theme }\n        case 'UPDATE_LAYOUTS':\n            return { ...state, layouts: action.layouts }\n        default:\n            return state\n    }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n            return {\n                ...state,\n                text: action.query,\n            }\n        case 'UPDATE_QUERY_MODE':\n            return {\n                ...state,\n                mode: action.mode,\n                text:\n                    action.mode === 'SQL'\n                        ? initialStateJson.query.text\n                        : '// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// \\n\\n      data\\n    ',\n            } as const\n        default:\n            return state\n    }\n}\n\nexport const computeOutput = (\n    previousState: OupoutState,\n    sourceString: string,\n    queryString: string,\n    action: Action,\n    mode: QueryMode\n) => {\n    const evaluation = codeEvaluation(sourceString, queryString, mode)\n\n    if (evaluation instanceof Error) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            errorMessage: evaluation.message,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n\n    const { text, obj } = evaluation ?? { text: null, obj: null }\n    let displayedColumns = new Array<string>()\n    if (Array.isArray(obj)) {\n        const keyMap: { [key: string]: string } = {}\n        obj.forEach(d => {\n            if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n                const keysToAdd = d ? (typeof d === 'object' ? Object.keys(d) : [arrayElementName]) : []\n                keysToAdd.forEach(key => (keyMap[key] = key))\n            }\n        })\n        displayedColumns = Object.keys(keyMap)\n            .filter(key => key && typeof key === 'string' && key.trim() !== '')\n            .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n    }\n    const isModalOpen =\n        previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n            ? previousState && !previousState.table.isModalOpen\n            : previousState && previousState.table\n            ? previousState.table.isModalOpen\n            : false\n\n    let selectedTab: tabType = Array.isArray(obj) ? 'Table' : 'RawJson'\n\n    if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n        selectedTab = action.tab\n    }\n    return {\n        selectedTab,\n        obj: obj,\n        objSize: text ? text.length : 0,\n        searchTerm: '',\n        match: false,\n        table: {\n            isArray: Array.isArray(obj),\n            isModalOpen,\n            displayedColumns,\n            columns: displayedColumns,\n            groupBy: [],\n        },\n    } as const\n}\n\nexport const output = (previousState: AppState, newState: AppState | null, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n        case 'UPDATE_SOURCE_TEXT':\n        case 'UPDATE_TABLE_COLUMNS':\n        case 'UPDATE_TABLE_GROUP_BY':\n            if (\n                previousState?.source?.text === newState?.source?.text &&\n                previousState?.query?.text === newState?.query?.text\n            ) {\n                return previousState.output\n            }\n            if (newState) {\n                return computeOutput(\n                    newState.output ?? {},\n                    newState.source?.text ? newState.source.text : '',\n                    newState.query?.text ? newState.query.text : '',\n                    action,\n                    newState.query?.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n        case 'TOGGLE_OUTPUT_TABLE_MODAL':\n            return newState\n                ? {\n                      ...newState.output,\n                      table: {\n                          ...(newState.output ? newState.output.table : {}),\n                          isModalOpen: newState.output?.table ? !newState.output.table.isModalOpen : false,\n                      },\n                  }\n                : {}\n        case 'UPDATE_OUTPUT_TAB_SELECTION':\n            if (newState) {\n                return {\n                    ...newState.output,\n                    selectedTab: action.tab,\n                }\n            }\n            break\n        case 'UPDATE_OUTPUT_SEARCH_TERM':\n            if (newState && newState.output) {\n                return {\n                    ...filter(newState.output, action.searchTerm),\n                    searchTerm: action.searchTerm,\n                    selectedTab: 'RawJson',\n                } as const\n            }\n            break\n        default:\n            if (newState?.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source?.text ? newState.source.text : '',\n                    newState.query?.text ? newState.query.text : '',\n                    action,\n                    newState.query?.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n    }\n    return {}\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n    if (typeof src !== 'string' && typeof src !== 'object') {\n        return { match: false, filteredObj: src }\n    }\n\n    if (typeof src === 'string') {\n        if (containsIgnoreCase(src, searchTerm)) {\n            return { match: true, filteredObj: src }\n        }\n        return { match: false, filteredObj: src }\n    }\n    const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n    const keys = Array.isArray(obj)\n        ? Array.from({ length: obj.length }, (_, k) => k)\n        : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n    let result = false\n\n    for (const propertyName of keys) {\n        const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n        if (propertyNameContains) {\n            result = true\n            continue\n        }\n        const child = obj[propertyName]\n        const { match, filteredObj } = containsTerm(child, searchTerm)\n        if (propertyNameContains || match) {\n            result = true\n            obj[propertyName] = filteredObj\n        } else {\n            if (Array.isArray(obj) && typeof propertyName === 'number') {\n                obj.splice(propertyName, 1)\n            } else {\n                delete obj[propertyName]\n            }\n        }\n    }\n    if (!result) {\n        if (!Array.isArray(obj)) {\n            keys.forEach((propertyName: string | number) => delete obj[propertyName])\n        } else {\n            obj.length = 0\n        }\n    }\n    return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n    if (!searchTerm || searchTerm.trim() === '' || !state) {\n        return { ...state, match: false }\n    }\n    const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n    if (match) {\n        return { ...state, obj: filteredObj, match }\n    }\n\n    return state\n}\n\nconst table = (state: OupoutTableState | undefined, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_TABLE_COLUMNS':\n            let groupByList = state?.groupBy ? state.groupBy : []\n            groupByList.forEach(groupBy => {\n                if (action.columns.indexOf(groupBy) === -1) {\n                    groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n                }\n            })\n            return {\n                ...state,\n                displayedColumns: action.columns,\n                groupBy: groupByList,\n            }\n        case 'UPDATE_TABLE_GROUP_BY':\n            return {\n                ...state,\n                groupBy: action.groupBy\n                    .filter(gb => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1)\n                    .filter(gb => gb !== 'Group by...'),\n            }\n        default:\n            return state\n    }\n}\n\nexport const resetApp = (state = getDefaultAppState(), action: Action) => {\n    if (action.type === 'RESET_EDITOR') {\n        return appReducer(getDefaultAppState(), action)\n    }\n    return appReducer(state, action)\n}\n\nconst rootReducers = combineReducers({\n    app: undoable(resetApp, {\n        undoType: 'APP_UNDO',\n        redoType: 'APP_REDO',\n        limit: configuration.limitUndo,\n    }),\n    userSettings,\n})\nexport default rootReducers\n","import { configuration } from 'config'\nimport { logError } from 'core/logging/logger'\nimport localForage from 'localforage'\nimport { merge } from 'lodash-es'\nimport { toast } from 'react-toastify'\nimport { StateWithHistory } from 'redux-undo'\nimport { AppState, getDefaultAppState, getDefaultUserSettingsState, UserSettingsState } from 'state/State'\n\nconst persistAppState = (appstate: StateWithHistory<AppState>) => {\n    persist(configuration.storageKey.appState, appstate)\n}\n\nconst persistUserSettings = (userSettings: UserSettingsState) => {\n    persist(configuration.storageKey.userSettings, userSettings)\n}\n\nconst getUserSettings = () => loadUserSettings(configuration.storageKey.userSettings) as Promise<UserSettingsState>\nconst getAppState = () => loadAppState(configuration.storageKey.appState) as Promise<StateWithHistory<AppState>>\n\nconst persist = async (key: string, value: object | undefined) => {\n    try {\n        await localForage.setItem(key, value)\n    } catch (error) {\n        toast.warn(`Error while saving ${key} to storage. ${error}`)\n    }\n}\n\nconst getDefault = (key: string) => {\n    switch (key) {\n        case configuration.storageKey.appState:\n            return getDefaultAppState()\n        case configuration.storageKey.userSettings:\n            return getDefaultUserSettingsState()\n        default:\n            throw new Error(`no defaul value for ${key}`)\n    }\n}\n\nconst loadAppState = async (key: string) => {\n    let present = merge({}, getDefault(key))\n    try {\n        const savedState = await localForage.getItem<StateWithHistory<AppState>>(key)\n        return merge({ present }, savedState ?? {})\n    } catch (error) {\n        logError(error)\n    }\n\n    return {}\n}\nconst loadUserSettings = async (key: string) => {\n    let state = getDefault(key)\n    try {\n        const savedState = await localForage.getItem<UserSettingsState>(key)\n        return merge(state, savedState ?? {})\n    } catch (error) {\n        logError(error)\n    }\n\n    return {}\n}\n\nexport default {\n    getAppState,\n    getUserSettings,\n    persistAppState,\n    persistUserSettings,\n}\n","import rootReducers from 'reducers/reducers'\nimport { compose, createStore } from 'redux'\nimport persistence from './persistence'\n\nexport const configureStore = async () => {\n    const appState = await persistence.getAppState()\n    const userSettingsState = await persistence.getUserSettings()\n\n    const composeEnhancers =\n        typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n            ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n            : compose\n\n    const store = createStore(\n        rootReducers,\n        {\n            app: {\n                past: appState.past ?? [],\n                present: appState.present,\n                future: appState.future ?? [],\n            },\n            userSettings: userSettingsState,\n        },\n        composeEnhancers()\n    )\n\n    store.subscribe(() => {\n        persistence.persistAppState(store.getState().app)\n        persistence.persistUserSettings(store.getState().userSettings)\n    })\n\n    return store\n}\n","import App from './components/App'\nimport { logDebug, logError } from './core/logging/logger'\nimport * as React from 'react'\nimport { Provider } from 'react-redux'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport { unregister } from './registerServiceWorker'\nimport { getTheme } from './store/selectors'\nimport { configureStore } from './store/store'\nimport { importThemeStyleCustom } from './themes/themes'\nimport './index.scss'\nconst bootstrap = async () => {\n    const store = await configureStore()\n    const promises = await Promise.all([\n        import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n        importThemeStyleCustom(getTheme(store.getState())),\n    ])\n\n    const ReactDOM = promises[0]\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root') as HTMLElement\n    )\n    unregister()\n}\n\nbootstrap()\n    .then(() => logDebug('loaded'))\n    .catch(e => logError('boostrap error', e))\n","import { configuration } from 'config'\nimport { StateWithHistory } from 'redux-undo'\nimport { EditorTheme, GeneralTheme } from 'themes/themes'\nimport { DeepReadonly } from 'utility-types'\nimport initialStateJson from './default-state.json'\n\nexport type itemType = any\n\nexport type AppState = DeepReadonly<{\n    source?: SourceState\n    query?: QueryState\n    output?: OupoutState\n    error?: Error\n}>\nexport type QueryState = DeepReadonly<{\n    text?: string\n    mode?: QueryMode\n}>\nexport type SourceState = DeepReadonly<{\n    text?: string\n    autoFormat?: boolean\n}>\nexport type OupoutState = DeepReadonly<{\n    searchTerm?: string\n    match?: boolean\n    selectedTab?: tabType\n    obj?: object | null\n    objSize?: number\n    errorMessage?: string\n    table?: OupoutTableState\n}>\nexport type OupoutTableState = DeepReadonly<{\n    isArray?: boolean\n    isModalOpen?: boolean\n    displayedColumns?: readonly string[]\n    columns?: readonly string[]\n    groupBy?: readonly string[]\n}>\nexport type UserSettingsState = DeepReadonly<{\n    globalTheme?: GeneralTheme\n    editorTheme?: EditorTheme\n    debugMode?: boolean\n    layouts?: ReactGridLayout.Layouts\n}>\n\nexport type tabType = 'RawJson' | 'Table'\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type RootState = DeepReadonly<{\n    app?: StateWithHistory<AppState>\n    userSettings?: UserSettingsState\n}>\n\nexport const getDefaultAppState = () => initialStateJson as AppState\nexport const defaultAppState = initialStateJson as AppState\nexport const getDefaultUserSettingsState = () =>\n    ({\n        globalTheme: 'pulse',\n        editorTheme: 'github',\n        debugMode: false,\n        layouts: {\n            xs: [\n                { i: configuration.layout.keys.lateralMenuKey, x: 0, y: 0, w: 6, h: 16, minW: 6, minH: 12 },\n                { i: configuration.layout.keys.sourceEditorKey, x: 0, y: 17, w: 6, h: 6, minW: 6, minH: 6 },\n                { i: configuration.layout.keys.queryEditorKey, x: 0, y: 24, w: 6, h: 6, minW: 6, minH: 6 },\n                { i: configuration.layout.keys.outputKey, x: 0, y: 31, w: 6, h: 20, minW: 6, minH: 12 },\n            ],\n            lg: [\n                { i: configuration.layout.keys.lateralMenuKey, x: 18, y: 0, w: 3, h: 20, minW: 3, minH: 20 },\n                { i: configuration.layout.keys.sourceEditorKey, x: 3, y: 0, w: 7, h: 15, minW: 6, minH: 10 },\n                { i: configuration.layout.keys.queryEditorKey, x: 10, y: 0, w: 7, h: 15, minW: 6, minH: 10 },\n                { i: configuration.layout.keys.outputKey, x: 3, y: 15, w: 14, h: 30, minW: 12, minH: 15 },\n            ],\n        },\n    } as const)\n\nexport const emptyState = {\n    source: { text: '', autoFormat: true },\n    query: { text: '', mode: 'SQL' },\n    output: {\n        match: false,\n        obj: {},\n        objSize: 2,\n        searchTerm: '',\n        selectedTab: 'RawJson',\n        table: {\n            isArray: false,\n            columns: [],\n            displayedColumns: [],\n            isModalOpen: false,\n            groupBy: [],\n        },\n    },\n} as const\n","import { getDefaultUserSettingsState, RootState } from 'state/State'\n\nconst copyArrayOrEmpty = <T = {}>(array: readonly T[] | null | undefined) => {\n    if (!array) {\n        return [] as T[]\n    }\n\n    return [...array] as T[]\n}\n\nexport const getOutputErrorMessage = (state: RootState) => state?.app?.present?.output?.errorMessage ?? ''\nexport const getOutputIsArray = (state: RootState) => !!state?.app?.present?.output?.table?.isArray\nexport const getOutputActiveTab = (state: RootState) => state?.app?.present?.output?.selectedTab ?? ('RawJson' as const)\nexport const getOutputObject = (state: RootState) => state?.app?.present?.output?.obj ?? {}\nexport const getOutputObjectSize = (state: RootState) => state?.app?.present?.output?.objSize ?? 0\nexport const getOutputSearchTerm = (state: RootState) => state?.app?.present?.output?.searchTerm\nexport const getOutputSearchMatch = (state: RootState) => !!state?.app?.present?.output?.match\nexport const getisOutputTableModalOpen = (state: RootState) => !!state?.app?.present?.output?.table?.isModalOpen\n\nexport const getTheme = (state: RootState) =>\n    state?.userSettings?.globalTheme ?? getDefaultUserSettingsState().globalTheme\nexport const getEditorTheme = (state: RootState) =>\n    state?.userSettings?.editorTheme ?? getDefaultUserSettingsState().editorTheme\nexport const getLayouts = (state: RootState) =>\n    (state?.userSettings?.layouts ?? getDefaultUserSettingsState().layouts) as ReactGridLayout.Layouts\n\nexport const getdisplayedColumns = (state: RootState) =>\n    copyArrayOrEmpty(state?.app?.present?.output?.table?.displayedColumns)\nexport const getOutputarray = (state: RootState) =>\n    Array.isArray(state?.app?.present?.output?.obj) ? copyArrayOrEmpty(state?.app?.present?.output?.obj) : []\nexport const getColumns = (state: RootState) => copyArrayOrEmpty(state?.app?.present?.output?.table?.columns)\nexport const getGroupBy = (state: RootState) => copyArrayOrEmpty(state?.app?.present?.output?.table?.groupBy)\n\nexport const getQueryText = (state: RootState) => state?.app?.present?.query?.text ?? ''\nexport const getQueryMode = (state: RootState) => state?.app?.present?.query?.mode ?? ('SQL' as const)\nexport const getSourceText = (state: RootState) => state?.app?.present?.source?.text ?? ''\nexport const getSourceAutoFormat = (state: RootState) => !!state?.app?.present?.source?.autoFormat\nexport const getCanRedo = (state: RootState) => state?.app?.future?.length !== 0\nexport const getCanUndo = (state: RootState) => (state?.app?.past?.length ?? 0) > 1\nexport const getDebugMode = (state: RootState) => !!state?.userSettings?.debugMode\n","import { useState, useCallback, ChangeEvent } from 'react'\n\nexport const useToggleState = (initial: boolean = false): readonly [boolean, () => void] => {\n    const [value, setValue] = useState(initial)\n    return [value, () => setValue(!value)]\n}\n\ntype HtmlElementHookable = HTMLSelectElement | HTMLInputElement\n\nexport const useChangeEventState = (\n    initialValue: string\n): readonly [string, (e: ChangeEvent<HtmlElementHookable>) => void] => {\n    const [value, setValue] = useState(initialValue)\n\n    const eventHandler = useCallback(\n        (event: ChangeEvent<HtmlElementHookable>) => {\n            if (event && event.target) {\n                setValue(event.target.value)\n            }\n        },\n        [setValue]\n    )\n\n    return [value, eventHandler]\n}\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { toast } from 'react-toastify'\nimport { Component, ComponentType } from 'react'\n\nconst MISSING_ERROR = 'Error was swallowed during propagation.'\n\ntype State = {\n    error?: Error\n}\n\nclass ErrorBoundary extends Component<{}, State> {\n    public readonly state: State = {\n        error: undefined,\n    }\n\n    public componentDidCatch(error: Error | null, info: object) {\n        this.setState({ error: error || new Error(MISSING_ERROR) }, () => this.notify(info))\n    }\n\n    public render() {\n        const { children } = this.props\n        const { error } = this.state\n\n        if (error) {\n            return <>An error occured</>\n        }\n\n        return children\n    }\n\n    private notify(info: object) {\n        logError('An error occured', this.state.error)\n        logError('error info:', info)\n        toast.error(JSON.stringify(info), { position: 'bottom-right', hideProgressBar: true, autoClose: false })\n    }\n}\n\nexport const withErrorBoundary = <T extends {}>(Wrapped: ComponentType<T>) => (props: T) => (\n    <ErrorBoundary>\n        <Wrapped {...props} />\n    </ErrorBoundary>\n)\n","import { isDebugMode } from 'core/misc/debug'\nimport Perfume from 'perfume.js'\nimport { IAnalyticsTrackerOptions } from 'perfume.js/dist/types/types'\nimport * as React from 'react'\nimport { ProfilerOnRenderCallback } from 'react'\nimport { logError, logEvents, logPerf } from './logger'\n\nconst analyticsTracker = (opt: IAnalyticsTrackerOptions) => {\n    logPerf(opt.metricName, opt.duration, opt.data)\n}\n\nconst options = {\n    // Metrics\n    firstContentfulPaint: true,\n    firstPaint: true,\n    firstInputDelay: true,\n    dataConsumption: true,\n    largestContentfulPaint: true,\n    navigationTiming: true,\n    // Analytics\n    analyticsTracker,\n    browserTracker: true,\n    // Logging\n    logPrefix: 'Perfume.js:',\n    logging: false,\n    // maxMeasureTime: 18000,\n    // maxDataConsumption: 18000,\n    warning: true,\n    debugging: false,\n}\n\nconst perfume = isDebugMode() ? new Perfume(options) : null\nexport const perfStart = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.start(name)\n}\n\nexport const perfEnd = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.end(name)\n}\n\nexport const perfEndPaint = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.endPaint(name)\n}\n\nexport const logPerfPeriodically = async () => {\n    const payload = []\n    for (let i = 0; i < 50; i++) {\n        if (logEvents.isEmpty()) {\n            break\n        }\n        const entry = logEvents.dequeue()\n\n        payload.push(entry)\n    }\n\n    if (payload.length === 0) {\n        return\n    }\n    const logUrl = 'https://us-central1-keyrier-json.cloudfunctions.net/perflogs'\n\n    try {\n        await fetch(logUrl, { method: 'POST', body: JSON.stringify(payload) })\n    } catch (error) {\n        logError('error sending perf logs', error)\n    }\n}\n\nexport const withPerformance = <P extends object>(Component: React.ComponentType<P>, name: string): React.FC<P> => ({\n    ...props\n}) => {\n    const onRender: ProfilerOnRenderCallback = (\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions\n    ) => {\n        logPerf(name, actualDuration, {\n            type: 'component-render',\n            id,\n            phase,\n            actualDuration,\n            baseDuration,\n            startTime,\n            commitTime,\n            interactions,\n        })\n    }\n\n    return (\n        <React.Profiler id={`perf-${name}`} onRender={onRender}>\n            <Component {...(props as P)} />\n        </React.Profiler>\n    )\n}\n","export const customToString = (obj: any | null | undefined): string => {\n    if (Array.isArray(obj)) {\n        return obj.map(e => customToString(e)).join(',')\n    }\n    if (typeof obj === 'object') {\n        return JSON.stringify(obj)\n    }\n    if (obj !== null && obj !== undefined) {\n        return obj.toString()\n    }\n\n    return ''\n}\n\nexport const takeFirst = (str: string | null | undefined, n: number) => {\n    if (typeof str !== 'string') {\n        return null\n    }\n    if (str.length <= n) {\n        return str\n    }\n    return `${str.substring(0, n)}...`\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n    if (!str || !part) {\n        return false\n    }\n    if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n        return true\n    }\n\n    return false\n}\n\nconst UNITS = ['B', 'kB', 'MB', 'GB']\n\nexport const prettyPrintBytes = (value: number) => {\n    if (!Number.isFinite(value)) {\n        throw new TypeError(`Expected a finite number, got ${typeof value}: ${value}`)\n    }\n\n    const isNegative = value < 0\n    const prefix = isNegative ? '-' : ''\n    if (isNegative) {\n        value = -value\n    }\n    if (value < 1) {\n        const numberStr = value.toString()\n        return prefix + numberStr + ' B'\n    }\n    const exponent = Math.min(Math.floor(Math.log10(value) / 3), UNITS.length - 1)\n    value = Number((value / Math.pow(1024, exponent)).toPrecision(3))\n    const numberString = value.toString()\n    const unit = UNITS[exponent]\n    return prefix + numberString + ' ' + unit\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggable\":\"GrabbleHeader_draggable__3DRIT\",\"grabber\":\"GrabbleHeader_grabber__12Y6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridborder\":\"App_gridborder__3A34e\"};","export const isDebugMode = () => (window as any).__DEBUG__\n","export const configuration = {\n    limitUndo: 9999,\n    storageKey: {\n        appState: 'keyrier-json.app.state',\n        userSettings: 'keyrier-json.user.settings.v1',\n    },\n    layout: {\n        keys: {\n            lateralMenuKey: 'LateralMenu',\n            sourceEditorKey: 'SourceEditor',\n            queryEditorKey: 'QueryEditor',\n            outputKey: 'Output',\n        },\n    },\n} as const\n"],"sourceRoot":""}