{"version":3,"sources":["models/array.ts","core/logging/logger.ts","core/misc/utils.ts","core/code.ts","../../core/dist/index.js","actions/actions.ts","../../src/converters/json.ts","../../src/sql/lexer.ts","../../src/sql/actions-visitor.ts","../../src/sql/parser.ts","../../src/sql/sql.ts","components/common/GrabbleHeader.tsx","themes/themes.ts","components/Header.tsx","components/source/RequestHeader.tsx","components/source/RequestSource.tsx","components/LateralMenu.tsx","components/App.tsx","registerServiceWorker.ts","core/converters/json.ts","reducers/reducers.ts","store/persistence.ts","store/store.ts","index.tsx","state/State.ts","store/selectors.ts","hooks/hooks.ts","components/common/ErrorBoundary.tsx","core/logging/performance.tsx","core/converters/string.ts","components/common/GrabbleHeader.module.scss","components/App.module.scss","core/misc/debug.ts","config.ts"],"names":["arrayElementName","logError","error","payload","console","logDebug","message","debug","logPerf","name","duration","customProperties","isDebugMode","appVersion","getAppVersion","version","location","window","href","logEvents","enqueue","queue","offset","this","length","item","push","slice","undefined","__PERF_EVENT_LOGS","codeEvaluation","sourceString","queryString","mode","trim","evaluation","evaluate","Error","obj","text","JSON","stringify","jsEvaluation","sqlEvaluation","code","eval","module","exports","require","updateAutoFormatSource","active","type","updateSource","source","updateQuery","query","resetEditor","undo","redo","clearEditor","toggleOutputTableModal","updateTableColumns","columns","updateTableGroupBy","groupBy","switchTheme","theme","switchEditorTheme","updateLayouts","layouts","updateSearchTerm","searchTerm","updateQueryMode","updateOutputTabSelection","tab","jsonParseSafe","str","safeStr","replace","parse","stringTokenRegex","RegExp","Identifier","createToken","pattern","WhiteSpace","group","Lexer","SKIPPED","Comment","Select","longer_alt","From","Where","Comma","Like","Limit","Null","In","IsNot","Is","NotLike","OrderBy","OrderByDirection","As","OrAnd","Star","Integer","StringToken","line_breaks","GreaterOrEqualThan","GreaterThan","LessOrEqualThan","LessThan","Equal","NotEqual","OpenParenthesis","CloseParenthesis","tokenVocabulary","SelectLexer","Object","values","parserInstance","n","config","cols","_this","RULE","OR","ALT","CONSUME","LABEL","CONSUME2","CONSUME3","OPTION1","CONSUME1","OR3","CONSUME4","OR1","OPTION","OR2","projection","AT_LEAST_ONE_SEP","SEP","DEF","SUBRULE","selectStatement","selectClause","fromClause","whereClause","OPTION2","orderByClause","OPTION3","limitClause","expression","MANY_SEP","subExpression","atomicExpression","relationalOperator","SUBRULE2","performSelfAnalysis","CstParser","toAstVisitorInstance","validateVisitor","ctx","fields","visit","where","order","limit","value","image","tokenType","convertStringTokenToJsString","func","map","_this2","x","forEach","splitPropertyPath","namePathArray","pathArray","namePropertyName","propertyName","field","tableName","table","alias","conditions","parseInt","orderings","direction","i","left","operation","right","context","entries","key","v","getBaseCstVisitorConstructor","toAst","inputText","cst","lexResult","lexingResult","tokenize","errors","input","tokens","stringPath","String","split","substring","allowedSourceNames","mapper","some","mapObject","get","path","defaultValue","travel","regexp","prototype","call","filter","Boolean","reduce","res","result","executeQuery","sqlTree","sourceDataObject","fromPath","shift","data","Array","isArray","array","filtered","compareOperands","orderBy","toString","start","end","index","leftValue","toLowerCase","leftStr","rightStr","startsWith","endsWith","includes","indexOf","mapped","mappedObject","val","applyFunction","functionName","toUpperCase","trimLeft","trimRight","reverse","join","json","SyntaxError","e","GrabbleHeader","title","children","useMeasure","parentref","parentHeight","height","headerRef","log","ref","className","styles","draggable","CardHeader","style","background","grabber","overflowY","overflowX","themeDeps","Map","importThemeStyleCustom","themeLoader","next","availableGeneralThemes","availableEditorThemes","ThemeDropDownItem","props","setTheme","reloadOnChange","onClick","useCallback","setTimeout","reload","DropdownItem","connect","mapStateToProps","state","currentTheme","getTheme","currentEditorTheme","getEditorTheme","setGeneralTheme","setEditorTheme","memo","withErrorBoundary","withPerformance","Header","useToggleState","isOpen","switchIsOpen","dropDownIsOpen","toggleDropdown","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","role","Collapse","navbar","Nav","NavItem","Dropdown","toggle","DropdownToggle","nav","caret","DropdownMenu","header","NavLink","RenderHeaderInput","onRemove","onChange","id","onKeyChange","target","onValueChange","onRemoveCallback","placeholder","Button","outline","HeaderList","headers","h","onChangeCallback","setSource","HttpRequestSource","onFinish","useChangeEventState","method","setMethod","url","setUrl","body","setBody","useState","setHeaders","setError","hasBody","setHasBody","submit","a","request","Request","fetch","customToString","FormGroup","htmlFor","Form","inline","hidden","block","Alert","stack","autoFormat","getSourceAutoFormat","canUndo","getCanUndo","canRedo","getCanRedo","getQueryMode","onFileContentReady","onReset","onClear","onUndo","onRedo","resetHistory","ActionCreators","clearHistory","changeAutoFormat","setQueryMode","LateralMenu","dropdownIsOpen","modalIsOpen","toggleModal","handleFileChange","files","fileReader","FileReader","onload","readAsText","handleAutoFormatChange","ButtonGroup","vertical","size","disabled","Label","check","ButtonDropdown","display","Modal","ModalHeader","ModalBody","ModalFooter","ResponsiveGridLayout","WidthProvider","Responsive","SourceEditor","lazy","Output","QueryEditor","getLayouts","updateGridLayouts","App","autoSize","isResizable","draggableHandle","grabbleStyles","breakpoints","xs","lg","margin","containerPadding","rowHeight","onLayoutChange","_","newLayouts","compactType","maxRows","configuration","layout","keys","lateralMenuKey","appStyles","gridborder","sourceEditorKey","fallback","queryEditorKey","outputKey","hostname","match","jsonBeautify","parsed","appReducer","rootState","getDefaultAppState","action","emptyState","newState","newOutputState","output","ret","initialStateJson","computeOutput","previousState","selectedTab","objSize","errorMessage","isModalOpen","displayedColumns","keyMap","d","is","sort","ax","b","localeCompare","containsTerm","src","filteredObj","containsIgnoreCase","from","k","getOwnPropertyNames","propertyNameContains","splice","groupByList","gb","rootReducers","combineReducers","app","undoable","resetApp","undoType","redoType","limitUndo","userSettings","getDefaultUserSettingsState","globalTheme","editorTheme","persist","localForage","setItem","toast","warn","getDefault","storageKey","appState","loadAppState","present","merge","getItem","savedState","loadUserSettings","getAppState","getUserSettings","persistAppState","appstate","persistUserSettings","configureStore","persistence","userSettingsState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","past","future","subscribe","getState","Promise","all","promises","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","bootstrap","catch","debugMode","y","w","minW","minH","copyArrayOrEmpty","getOutputErrorMessage","getOutputIsArray","getOutputActiveTab","getOutputObject","getOutputObjectSize","getOutputSearchTerm","getOutputSearchMatch","getisOutputTableModalOpen","getdisplayedColumns","getOutputarray","getColumns","getGroupBy","getQueryText","getSourceText","getDebugMode","initial","setValue","initialValue","event","ErrorBoundary","info","setState","notify","position","hideProgressBar","autoClose","Component","Wrapped","options","firstContentfulPaint","firstPaint","firstInputDelay","dataConsumption","largestContentfulPaint","navigationTiming","analyticsTracker","opt","metricName","browserTracker","logPrefix","logging","warning","debugging","Perfume","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","takeFirst","part","toLocaleLowerCase","UNITS","prettyPrintBytes","Number","isFinite","TypeError","isNegative","prefix","exponent","Math","min","floor","log10","pow","toPrecision","__DEBUG__"],"mappings":"kHAAA,kCAAO,IAAMA,EAAmB,gB,mNCKnBC,EAAW,SAAXA,SAAYC,EAAuBC,GAC5CC,QAAQF,MAAM,UAAWA,GACF,qBAAZC,GACPC,QAAQF,MAAMC,IAUTE,EAAW,SAAXA,SAAYC,EAAiBH,GACf,qBAAZA,EACPC,QAAQG,MAAM,UAAWD,GACtBF,QAAQG,MAAM,UAAWD,EAASH,IAGhCK,EAAU,SAAVA,QAAWC,EAAcC,EAAmBC,GACrD,GAAIC,cAAe,CACf,IAAMC,ECxBe,SAAhBC,gBAAgB,OAAMC,IDwBRD,GACbX,EAAO,yBAAKM,OAAMC,WAAUG,cAAeF,GAApC,IAAsDK,SAAUC,OAAOD,SAASE,OAC7FC,EAAUC,QAAQjB,KAyDbgB,EAAY,I,yDAnDbE,MAAa,G,KACbC,OAAS,E,sEAIb,OAAOC,KAAKF,MAAMG,OAASD,KAAKD,S,wCAKhC,OAA6B,IAAtBC,KAAKF,MAAMG,S,sCAOPC,GACXF,KAAKF,MAAMK,KAAKD,K,wCAQhB,GAA0B,IAAtBF,KAAKF,MAAMG,OAAf,CAKA,IAAMC,EAAOF,KAAKF,MAAME,KAAKD,QAS7B,OANoB,IAAdC,KAAKD,QAAcC,KAAKF,MAAMG,SAChCD,KAAKF,MAAQE,KAAKF,MAAMM,MAAMJ,KAAKD,QACnCC,KAAKD,OAAS,GAIXG,K,kCAOP,OAAOF,KAAKF,MAAMG,OAAS,EAAID,KAAKF,MAAME,KAAKD,aAAUM,M,UAK/DX,OAAeY,kBAAoBV,G,0EEtFrC,gRAGaW,eAAiB,SAAjBA,eAAkBC,EAAsBC,EAAqBC,GACtE,IAAKF,IAAiBC,EAClB,OAAO,KAGX,GAA4B,KAAxBD,EAAaG,OACb,OAAO,KAGX,GAA2B,KAAvBF,EAAYE,OACZ,OAAO,KAGX,IAAMC,EAAaC,SAASL,EAAcC,EAAaC,GACvD,OAAIE,aAAsBE,MACfF,EAEJ,CAAEG,IAAKH,EAAYI,KAAMC,KAAKC,UAAUN,KAG7CC,SAAW,SAAXA,SAAYL,EAAsBC,EAAqBC,GACzD,MAAa,eAATA,EACOS,aAAaX,EAAcC,GAClB,QAATC,EACAU,4DAAcZ,EAAcC,GAEhC,IAAIK,MAAM,qBAGfK,aAAe,SAAfA,aAAgBX,aAAsBC,aACxC,IACI,IAAMY,KAAI,8CAEUb,aAFV,sBAGRC,YAHQ,YAMV,OAAOa,KAAKD,MACd,MAAO1C,OACL,OAAOA,S,iCCtCb4C,EAAOC,QAAUC,EAAQ,M,sECD3B,giBAAO,IAAMC,EAAyB,SAAzBA,uBAA0BC,GAAD,MACjC,CACGA,SACAC,KAAM,6BAGDC,EAAe,SAAfA,aAAgBC,GAAD,MACvB,CACGA,SACAF,KAAM,uBAGDG,EAAc,SAAdA,YAAeC,GAAD,MACtB,CACGA,QACAJ,KAAM,iBAGDK,EAAc,SAAdA,cAAc,MACtB,CACGL,KAAM,iBAGDM,EAAO,SAAPA,OAAO,MACf,CACGN,KAAM,aAGDO,EAAO,SAAPA,OAAO,MACf,CACGP,KAAM,aAGDQ,EAAc,SAAdA,cAAc,MACtB,CACGR,KAAM,iBAGDS,EAAyB,SAAzBA,yBAAyB,MACjC,CACGT,KAAM,8BAGDU,EAAqB,SAArBA,mBAAsBC,GAAD,MAC7B,CACGA,UACAX,KAAM,yBAGDY,EAAqB,SAArBA,mBAAsBC,GAAD,MAC7B,CACGA,UACAb,KAAM,0BAGDc,EAAc,SAAdA,YAAeC,GAAD,MAA0B,CACjDA,QACAf,KAAM,wBAGGgB,EAAoB,SAApBA,kBAAqBD,GAAD,MAAyB,CACtDA,QACAf,KAAM,wBAGGiB,EAAgB,SAAhBA,cAAiBC,GAAD,MAAuC,CAChEA,UACAlB,KAAM,mBAGGmB,EAAmB,SAAnBA,iBAAoBC,GAAD,MAC3B,CACGA,aACApB,KAAM,8BAGDqB,EAAkB,SAAlBA,gBAAmBvC,GAAD,MAC1B,CACGA,OACAkB,KAAM,sBAGDsB,EAA2B,SAA3BA,yBAA4BC,GAAD,MACnC,CACGA,MACAvB,KAAM,iC,wGCxFDwB,EAAgB,SAAhBA,EAAiBC,MACP,iBAARA,GAAmC,KAAfA,EAAI1C,cACxB,SAGL2C,EAAUD,EACXE,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,kBAGVtC,KAAKuC,MAAMF,GACpB,MAAO3E,UACE0E,mGChBf,IACMI,EAAmB,IAAIC,uIAIhBC,EAAaC,cAAY,CAAE1E,KAAM,aAAc2E,QAAS,sBACxDC,EAAaF,cAAY,CAAE1E,KAAM,aAAc2E,QAAS,MAAOE,MAAOC,QAAMC,UAC5EC,EAAUN,cAAY,CAAE1E,KAAM,UAAW2E,QAAS,OAAQE,MAAOC,QAAMC,UACvEE,EAASP,cAAY,CAAE1E,KAAM,SAAU2E,QAAS,UAAWO,WAAYT,IACvEU,EAAOT,cAAY,CAAE1E,KAAM,OAAQ2E,QAAS,QAASO,WAAYT,IACjEW,EAAQV,cAAY,CAAE1E,KAAM,QAAS2E,QAAS,SAAUO,WAAYT,IACpEY,EAAQX,cAAY,CAAE1E,KAAM,QAAS2E,QAAS,MAC9CW,EAAOZ,cAAY,CAAE1E,KAAM,OAAQ2E,QAAS,QAASO,WAAYT,IACjEc,EAAQb,cAAY,CAAE1E,KAAM,QAAS2E,QAAS,SAAUO,WAAYT,IACpEe,EAAOd,cAAY,CAAE1E,KAAM,OAAQ2E,QAAS,QAASO,WAAYT,IACjEgB,EAAKf,cAAY,CAAE1E,KAAM,KAAM2E,QAAS,MAAOO,WAAYT,IAC3DiB,EAAQhB,cAAY,CAAE1E,KAAM,QAAS2E,QAAS,YAAaO,WAAYT,IACvEkB,EAAKjB,cAAY,CAAE1E,KAAM,KAAM2E,QAAS,MAAOO,WAAYT,IAC3DmB,EAAUlB,cAAY,CAAE1E,KAAM,UAAW2E,QAAS,gBAClDkB,EAAUnB,cAAY,CAAE1E,KAAM,UAAW2E,QAAS,iBAClDmB,EAAmBpB,cAAY,CACxC1E,KAAM,mBACN2E,QAAS,cACTO,WAAYT,IAEHsB,EAAKrB,cAAY,CAAE1E,KAAM,KAAM2E,QAAS,MAAOO,WAAYT,IAC3DuB,EAAQtB,cAAY,CAAE1E,KAAM,QAAS2E,QAAS,YAAaO,WAAYT,IACvEwB,EAAOvB,cAAY,CAAE1E,KAAM,OAAQ2E,QAAS,OAC5CuB,EAAUxB,cAAY,CAAE1E,KAAM,UAAW2E,QAAS,eAClDwB,EAAczB,cAAY,CAAE1E,KAAM,cAAe2E,QAASJ,EAAkB6B,iBAC5EC,EAAqB3B,cAAY,CAAE1E,KAAM,qBAAsB2E,QAAS,OACxE2B,EAAc5B,cAAY,CAAE1E,KAAM,cAAe2E,QAAS,MAC1D4B,EAAkB7B,cAAY,CAAE1E,KAAM,kBAAmB2E,QAAS,OAClE6B,EAAW9B,cAAY,CAAE1E,KAAM,WAAY2E,QAAS,MACpD8B,EAAQ/B,cAAY,CAAE1E,KAAM,QAAS2E,QAAS,MAC9C+B,EAAWhC,cAAY,CAAE1E,KAAM,WAAY2E,QAAS,YACpDgC,EAAkBjC,cAAY,CAAE1E,KAAM,kBAAmB2E,QAAS,OAClEiC,EAAmBlC,cAAY,CAAE1E,KAAM,mBAAoB2E,QAAS,OAEpEkC,EAAkB,CAC3B7B,UACAJ,aACAK,SACAE,OACAC,QACAC,QACAC,OACAC,QACAC,OACAC,KACAC,QACAC,KACAC,UACAC,UACAC,mBACAC,KACAC,QAEAvB,aAEAwB,OACAC,UACAC,cAEAM,QACAC,WACAL,qBACAC,cACAC,kBACAC,WAEAG,kBACAC,oBAKEE,EAAc,IAAIhC,QAAMiC,OAAOC,OAAOH,IC1EtCI,EAAiB,yBAAAC,ECoDPC,8BACFN,EAAiBM,UAElBC,KAAOC,EAAKC,KAAK,QAAQ,aACrBC,GAAG,CACJ,CAAEC,IAAK,sBAAMH,EAAKI,QAAQxB,EAAM,CAAEyB,MA5BvC,YA6BK,CACIF,IAAK,iBACIG,SAASlD,EAAY,CAAEiD,MA9BtC,eA+BeD,QAAQd,KACRiB,SAASnD,EAAY,CAAEiD,MAjCzC,YAkCkBD,QAAQb,KACRiB,SAAQ,aACJC,SAAS/B,KACTgC,IAAI,CACL,CACIP,IAAK,sBAAMH,EAAKM,SAASxB,EAAa,CAAEuB,MApClE,WAsCsB,CACIF,IAAK,sBAAMH,EAAKW,SAASvD,EAAY,CAAEiD,MAvCjE,kBA6CM,CACIF,IAAK,iBACIS,IAAI,CACL,CACIT,IAAK,sBAAMH,EAAKI,QAAQtB,EAAa,CAAEuB,MApD5D,YAsDiB,CACIF,IAAK,sBAAMH,EAAKI,QAAQhD,EAAY,CAAEiD,MAvD3D,gBA0DkBQ,QAAO,aACHT,QAAQ1B,KACRoC,IAAI,CACL,CACIX,IAAK,sBAAMH,EAAKS,SAAS3B,EAAa,CAAEuB,MA3DlE,WA6DsB,CACIF,IAAK,sBAAMH,EAAKS,SAASrD,EAAY,CAAEiD,MA9DjE,yBAuEGU,WAAaf,EAAKC,KAAK,cAAc,aACjCC,GAAG,CACJ,CACIC,IAAK,sBACDH,EAAKgB,iBAAiB,CAClBC,IAAKjD,EACLkD,IAAK,iBACIC,QAAQnB,EAAKD,kBAOrCqB,gBAAkBpB,EAAKC,KAAK,mBAAmB,aAC3CkB,QAAQnB,EAAKqB,gBACbF,QAAQnB,EAAKsB,cACbT,QAAO,aACHM,QAAQnB,EAAKuB,kBAEjBC,SAAQ,aACJL,QAAQnB,EAAKyB,oBAEjBC,SAAQ,aACJP,QAAQnB,EAAK2B,qBAIrBN,aAAerB,EAAKC,KAAK,gBAAgB,aACrCG,QAAQxC,KACRuD,QAAQnB,EAAKe,iBAGjBO,WAAatB,EAAKC,KAAK,cAAc,aACjCG,QAAQtC,KACRoC,GAAG,CACJ,CACIC,IAAK,sBAAMH,EAAKI,QAAQhD,EAAY,CAAEiD,MA7G/C,YA+GK,CACIF,IAAK,sBAAMH,EAAKI,QAAQtB,EAAa,CAAEuB,MAhHhD,gBAmHMQ,QAAO,kBAAMb,EAAKM,SAASlD,EAAY,CAAEiD,MAjH/C,kBAoHEkB,YAAcvB,EAAKC,KAAK,eAAe,aACnCG,QAAQrC,KACRoD,QAAQnB,EAAK4B,iBAGjBA,WAAa5B,EAAKC,KAAK,cAAc,aACjC4B,SAAS,CACVZ,IAAKtC,EACLuC,IAAK,wBACIC,QAAQnB,EAAK8B,eAEXnD,EAAMhG,aAKpBmJ,cAAgB9B,EAAKC,KAAK,iBAAiB,aACvCkB,QAAQnB,EAAK+B,iBAAkB,CAAE1B,MApIxC,WAqIOc,QAAQnB,EAAKgC,sBACbC,SAASjC,EAAK+B,iBAAkB,CAAE1B,MArIxC,eAwIE0B,iBAAmB/B,EAAKC,KAAK,oBAAoB,aAC7CC,GAAG,CACJ,CAAEC,IAAK,sBAAMH,EAAKI,QAAQvB,KAC1B,CAAEsB,IAAK,sBAAMH,EAAKI,QAAQjC,KAC1B,CAAEgC,IAAK,sBAAMH,EAAKI,QAAQhD,KAC1B,CAAE+C,IAAK,sBAAMH,EAAKI,QAAQtB,KAC1B,CACIqB,IAAK,iBACIC,QAAQd,KACRuC,SAAS,CACVZ,IAAKjD,EACLkD,IAAK,iBACIN,IAAI,CACL,CACIT,IAAK,sBAAMH,EAAKS,SAAS5B,EAAS,CAAEwB,MArJpE,SAuJ4B,CACIF,IAAK,sBAAMH,EAAKS,SAAS3B,EAAa,CAAEuB,MAxJxE,gBA6JqBD,QAAQb,YAMxByC,mBAAqBhC,EAAKC,KAAK,sBAAsB,aACjDC,GAAG,CACJ,CAAEC,IAAK,sBAAMH,EAAKI,QAAQpB,KAC1B,CAAEmB,IAAK,sBAAMH,EAAKI,QAAQnB,KAC1B,CAAEkB,IAAK,sBAAMH,EAAKI,QAAQlB,KAC1B,CAAEiB,IAAK,sBAAMH,EAAKI,QAAQjB,KAC1B,CAAEgB,IAAK,sBAAMH,EAAKI,QAAQhB,KAC1B,CAAEe,IAAK,sBAAMH,EAAKI,QAAQf,KAC1B,CAAEc,IAAK,sBAAMH,EAAKI,QAAQnC,KAC1B,CAAEkC,IAAK,sBAAMH,EAAKI,QAAQ7B,KAC1B,CAAE4B,IAAK,sBAAMH,EAAKI,QAAQhC,KAC1B,CAAE+B,IAAK,sBAAMH,EAAKI,QAAQ/B,KAC1B,CAAE8B,IAAK,sBAAMH,EAAKI,QAAQ9B,YAI7BmD,cAAgBzB,EAAKC,KAAK,iBAAiB,aACvCG,QAAQ5B,KACR4B,QAAQhD,KACRyD,OAAO,CACRK,IAAK,sBAAMlB,EAAKI,QAAQ3B,WAI3BkD,YAAc3B,EAAKC,KAAK,eAAe,aACnCG,QAAQlC,KACRkC,QAAQvB,QAGZqD,wCDpOc,CCuCAC,cDyKrBC,EAAuB,yBAAAvC,IAAA,IAAAA,EAAA,OAAAA,EAAA,oBA1MhBwC,sDAGFjB,yBAAgBkB,SAYZ,CACHC,OANW9I,KAAK+I,MAAMF,EAAIjB,cAO1B9F,OANS9B,KAAK+I,MAAMF,EAAIhB,YAOxBmB,MANUhJ,KAAK+I,MAAMF,EAAIf,aAOzBmB,MANUjJ,KAAK+I,MAAMF,EAAIb,eAOzBkB,MANUlJ,KAAK+I,MAAMF,EAAIX,iBAU1BN,sBAAaiB,UACA7I,KAAK+I,MAAMF,EAAIvB,eAI5BhB,cAAKuC,OACJM,EAAQN,EAAIM,MAAM,GAAGC,MAErBP,EAAIM,MAAM,GAAGE,YAActD,EAAgBV,cAC3C8D,EAAQG,GAA6BH,QAGrCjK,EAAO2J,EAAI3J,MAAQ2J,EAAI3J,KAAK,GAAK2J,EAAI3J,KAAK,GAAGkK,MAAQD,EAEnDI,EAAOV,YAAgBA,WAAa,IAAMA,WAAa,GAAGO,aAC5DG,IACArK,EAAO2J,EAAI3J,MAAQ2J,EAAI3J,KAAK,GAAK2J,EAAI3J,KAAK,GAAGkK,MAAWG,MAAQJ,OAEhEN,EAAI3J,MAAQ2J,EAAI3J,KAAK,GAAGmK,YAActD,EAAgBV,cACtDnG,EAAOoK,GAA6BpK,IAGjC,CACHA,OACAiK,iBACUI,MAIXjC,oBAAWuB,cACRvC,EAAwEuC,EAAIvC,KAAKkD,KAAI,mBACvFC,EAAKV,MAAMW,MAETZ,EAAkB,UACxBxC,EAAKqD,SAAQ,gBAASR,UAAiBI,eACkCK,IADzD1K,MACO2K,IAAXC,UAAwCC,IAAdC,eACqCJ,EAAkBT,GAYzFL,EAAO3I,KAXc,CACjBjB,KAAM,CACFiK,MAAOY,EACP7D,OAAQ2D,GAEZI,MAAO,CACHd,QAP2Ba,aAQ3B9D,SARA4D,oBAUMP,EAAO,CAAErK,KAAMqK,eAI1BT,KAGJjB,oBAAWgB,SACVqB,EAAoBrB,EAAIsB,MAAM,GAAGf,MACjCP,EAAIsB,MAAM,GAAGd,YAActD,EAAgBV,cAC3C6E,EAAYZ,GAA6BY,QAEvCE,aAAQvB,EAAIuB,4BAAOnK,QAAS4I,EAAIuB,MAAM,GAAGhB,MAAQc,QAChD,CACHhL,KAAM,CACFiK,MAAOe,EACPhE,OAAQ0D,EAAkBM,GAAWJ,WAEzCM,MAAO,CACHjB,MAAOiB,EACPlE,OAAQ0D,EAAkBQ,GAAON,eAKtChC,qBAAYe,SAGR,CACHwB,WAHerK,KAAK+I,MAAMF,EAAIV,gBAO/BD,qBAAYW,SAER,CACHM,MAAO,CACHA,MAHMmB,SAASzB,EAAIzD,QAAQ,GAAGgE,YAOnCpB,uBAAca,SACmBe,EAAkBf,EAAIlF,WAAW,GAAGyF,aAWjE,CACHmB,UAAW,CATS,CACpBpB,MAAO,CACHA,QALWa,aAMX9D,SANA4D,WAQJU,UAPc3B,EAAI7D,kBAAqB6D,EAAI7D,iBAAiB,GAAGoE,YAehEjB,oBACHU,EAKA4B,2BAAY,cAER5B,EAAIR,oCAAepI,QAASwK,GAAM,SAC3BzK,KAAK+I,MAAMF,EAAIR,cAAcoC,QAElCC,EAAO1K,KAAK+I,MAAMF,EAAIR,cAAcoC,IAEpCE,EAAY9B,EAAI3D,MAAMuF,GAAGrB,YAGxB,CACHsB,OACAE,MAJmB5K,KAAKmI,WAAWU,EAAK4B,EAAI,GAK5CE,gBAIDtC,uBAAcQ,OAKX6B,EAAO1K,KAAK+I,MAAMF,EAAI6B,KAAK,IAC3BC,EAAY3K,KAAK+I,MAAMF,EAAIN,oBAC3BqC,EAAQ5K,KAAK+I,MAAMF,EAAI+B,MAAM,UAE5B,CACHF,KAAM,CAAEvB,MAAOuB,EAAMxE,OAAQ0D,EAAkBc,GAAMZ,WACrDa,YACAC,MAAO,CAAEzB,MAAOyB,EAAO1E,OAAQ0D,EAAkBgB,GAAOd,eAIzDxB,0BAAiBuC,iBACJ5E,OAAO6E,QAAQD,kBACG,YAAxBE,OAAK5B,UACC,OAAR4B,SACO5B,EACFK,KAAI,mBACGE,EAAEL,YAAcjE,EACTkF,SAASZ,EAAEN,OAEfE,GAA6BI,EAAEN,UAEzCI,KAAI,kBAAM,CAAEL,MAAO6B,SAEhB,YAARD,SACOT,SAASnB,EAAM,GAAGC,UAEjB,SAAR2B,SACO,QAEC,eAARA,SACO5B,EAAM,GAAGC,SAER,gBAAR2B,SACOzB,GAA6BH,EAAM,GAAGC,cAG9C,QAGJb,4BAAmBM,UACP5C,OAAOC,OAAO2C,GACf,GAAG,GAAGO,SAIK,CA/MmCjD,EAAe8E,iCAiN7EC,EAAQ,SAARA,EAASC,OAIPC,EAHEC,EDvIS,SAACF,OACVG,EAAetF,EAAYuF,SAASJ,MAEtCG,EAAaE,OAAOvL,OAAS,QACvBa,MAAMG,KAAKC,UAAUoK,EAAaE,gBAGrCF,EAPQ,CCuIOH,MAEtBhF,EAAesF,MAAQJ,EAAUK,OAGjCN,EAAMjF,EAAewB,kBAEjBxB,EAAeqF,OAAOvL,OAAS,QACzBa,MAAMG,KAAKC,UAAUiF,EAAeqF,gBAElC7C,EAAqBI,MAAMqC,IAIrCxB,EAAoB,SAApBA,EAAqB+B,OACjB7B,EAAY8B,OAAOD,GAAYE,MAAM,WAEpC,CAAE7B,aAAcF,EAAUA,EAAU7J,OAAS,GAAI6J,cAGtDR,GAA+B,SAA/BA,EAAgCjG,UAAgBA,EAAIyI,UAAU,EAAGzI,EAAIpD,OAAS,IEvO9E8L,GAAqB,CAAC,OAAQ,OAAQ,MAAO,SA6B7CC,GAAS,SAATA,EAAUhB,EAAWlC,EAAiBhH,UACpCgH,EAAOmD,MAAK,kBAAuB,MAAlBvC,EAAEO,MAAMd,SAClB6B,EAGJkB,GAAUpD,EAAQkC,EAAGlJ,IAG1BqK,GAAM,SAANA,EAAOpL,EAAUqL,EAA2BC,0BAAoBhM,IAC5DiM,EAAS,SAATA,EAAUC,UACZX,OAAOY,UAAUX,MACZY,KAAKL,EAAMG,GACXG,OAAOC,SACPC,QAAO,SAACC,EAAK9B,UAAS8B,QAAoCA,EAAI9B,GAAO8B,IAAM9L,IAC9E+L,EAASR,EAAO,aAAeA,EAAO,6BACrCQ,GAAwBA,IAAW/L,EAAMsL,EAAeS,GAoCtDC,GAAe,SAAfA,EAAgBC,EAAkBC,WACrCC,YAAeF,EAAQlL,OAAO5C,KAAKgH,QACzCgH,EAASC,YAELC,EAAOH,KAEPC,EAASjN,OAAS,IAClBmN,EAAOjB,GAAIiB,EAAMF,EAAS9M,MAAM,MAG/BiN,MAAMC,QAAQF,UACRpB,GAAOoB,EAAMJ,EAAQlE,OAAQkE,EAAQlL,YAnBtCyL,EAAcnH,EAsBlBoH,EAAWJ,EAAKV,QAAO,mBACpBM,EAAQhE,QAAUgE,EAAQhE,MAAMqB,YAO9BoD,GAFWT,EAAQhE,MAAMqB,WAAWM,UAFzBqC,EAAQhE,MAAMqB,WAAWK,KACxBsC,EAAQhE,MAAMqB,WAAWO,MAGaI,aA9BnDuC,EAiCMG,UACZF,EACAR,EAAQ/D,MAAQ+D,EAAQ/D,MAAMsB,UAAUf,KAAI,mBAAKE,EAAEP,MAAMA,SAAS,GAClE6D,EAAQ/D,MAAQ+D,EAAQ/D,MAAMsB,UAAUf,KAAI,mBAAKE,EAAEc,aAAa,IApC5CpE,aAwCpB4G,EAAQ9D,gCAAOC,4BAAOA,OAAQmB,SAAS0C,EAAQ9D,MAAMC,MAAMA,MAAMwE,YAAc,yBAxC3DvH,MAAI,GACb,MAATmH,GAAiBA,EAAMtN,OA1BnB,SAACsN,EAAcK,EAAeC,OACpC5N,EAAkB,MAATsN,EAAgB,EAAIA,EAAMtN,WAClCA,QACM,IAEX2N,EAAiB,MAATA,EAAgB,EAAIA,GAGhB,IACRA,GAASA,EAAQ3N,EAAS,EAAIA,EAAS2N,IAE3CC,GALAA,WAAMA,EAAoB5N,EAAS4N,GAKvB5N,EAASA,EAAS4N,GACpB,IACNA,GAAO5N,GAEXA,EAAS2N,EAAQC,EAAM,EAAKA,EAAMD,IAAW,EAC7CA,KAAW,UAEPE,GAAS,EACPhB,EAAS,IAAIO,MAAMpN,KAChB6N,EAAQ7N,GACb6M,EAAOgB,GAASP,EAAMO,EAAQF,UAE3Bd,EAvBG,CA8BGS,EAAO,EAAGnH,EAAI,EAAI,EAAIA,GAHxB,IAwCYoD,KAAI,mBAAKwC,GAAOhB,EAAGgC,EAAQlE,OAAQkE,EAAQlL,YAQhE2L,GAAkB,SAAlBA,EAAmB9C,EAAmBD,EAAeE,EAAgBzB,OAxH/CiD,EAyHlB2B,EAAY5B,GAAIhD,GAzHEiD,EAyHiB1B,iBAAMxE,QArH3C6F,GAAmBE,MAAK,yBAAKvC,eAAM0C,EAAK,uBAALA,EAAS4B,kBACrC,UAAI5B,GAAMhM,MAAM,GAGpBgM,EANI,WAyHHzB,EAAUqD,mBACT,YAEGP,EAAgB/C,EAAKC,UAAWD,EAAKA,KAAMA,EAAKE,MAAOzB,IACvDsE,EAAgB7C,EAAMD,UAAWC,EAAMF,KAAME,EAAMA,MAAOzB,OAE7D,aAEGsE,EAAgB/C,EAAKC,UAAWD,EAAKA,KAAMA,EAAKE,MAAOzB,IACvDsE,EAAgB7C,EAAMD,UAAWC,EAAMF,KAAME,EAAMA,MAAOzB,OAG7D,QACA,YACM4E,IAAcnD,EAAMzB,UAC1B,SACA,aACA,YACM4E,IAAcnD,EAAMzB,UAC1B,WACK8E,EAAUrC,OAAOmC,GACjBG,EAAWtC,OAAOhB,EAAMzB,UAC1B+E,EAASC,WA3Bb,MA2B6CD,EAASE,SA3BtD,SA4BQH,EAAQI,SAASH,EAASpC,UAAU,EAAGoC,EAASjO,OAAS,kBAG1D,GAAIiO,EAASC,WA/BpB,SAgCQF,EAAQG,SAASF,EAASpC,UAAUoC,EAASI,QAhCrD,KAgCiF,kBAG1E,GAAIJ,EAASE,SAnCpB,MAoCQH,EAAQE,WAAWD,EAASpC,UAAU,EAAGoC,EAASI,QApC1D,gBAqCe,SAGR,IAEN,eACKL,EAAUrC,OAAOmC,GACjBG,EAAWtC,OAAOhB,EAAMzB,UAC1B+E,EAASC,WA7Cb,MA6C6CD,EAASE,SA7CtD,SA8CQH,EAAQI,SAASH,EAASpC,UAAU,EAAGoC,EAASjO,OAAS,kBAG1D,GAAIiO,EAASC,WAjDpB,SAkDQF,EAAQG,SAASF,EAASpC,UAAUoC,EAASI,QAlDrD,KAkDiF,kBAG1E,GAAIJ,EAASE,SArDpB,MAsDQH,EAAQE,WAAWD,EAASpC,UAAU,EAAGoC,EAASI,QAtD1D,gBAuDe,SAGR,IAEN,YACQ1D,EAAMzB,OAAS4E,EAAYnD,EAAMzB,UACzC,aACQyB,EAAMzB,OAAS4E,GAAanD,EAAMzB,UAC1C,YACQyB,EAAMzB,OAAS4E,EAAYnD,EAAMzB,UACzC,aACQyB,EAAMzB,OAAS4E,GAAanD,EAAMzB,UAC1C,YACMkE,MAAMC,QAAQ1C,EAAMzB,QAAUyB,EAAMzB,MAAMuD,QAAO,mBAAKhD,EAAEP,QAAU4E,KAAW9N,OAAS,YAKnGiM,GAAY,SAAZA,EAAapD,EAAiByF,EAAgBzM,OAC1C0M,EAEF,UACJ1F,EAAOa,SAAQ,gBACLR,EAAQgD,GACVoC,EACAtE,EAAMA,MAAM/D,OAAOwG,QAAO,yBAAO+B,eAAQ3M,EAAOsI,0BAAPtI,EAAcqH,WAE3DqF,EAAavE,EAAM/K,KAAKiK,OAASc,WAAiByE,GAAczE,WAAe/K,KAAMiK,GAASA,KAE3FqF,GAGLE,GAAgB,SAAhBA,EAAiBC,EAAsBxF,OACnCI,EAAOoF,EAAaX,oBACb,UAATzE,EACOqC,OAAOzC,GAAO6E,cAEZ,UAATzE,EACOqC,OAAOzC,GAAOyF,cAEZ,SAATrF,EACOqC,OAAOzC,GAAOxI,OAEZ,aAAT4I,EACOqC,OAAOzC,GAAO0F,WAEZ,cAATtF,EACOqC,OAAOzC,GAAO2F,YAEZ,YAATvF,EACOqC,OAAOzC,GAAO0C,MAAM,IAAIkD,UAAUC,KAAK,IAErC,WAATzF,GAA8B,QAATA,EACdqC,OAAOzC,GAAOlJ,OAElBkJ,kDA1Na,SAAC8F,EAAcjN,WAEzBgL,EAAU9B,EAAMlJ,OAEjB+J,GAAmBE,MAAK,mBAAKvC,IAAMkC,OAAOoB,EAAQlL,OAAO5C,KAAKgH,OAAO,IAAI8H,wBACnE,IAAIkB,YAAYtD,OAAOoB,EAAQlL,OAAO5C,KAAKgH,OAAO,SAGvD+G,EAAmB7J,EAAc6L,UAEhClC,GAAaC,EAASC,GAC/B,MAAOkC,UACEA,e,8NCnBFC,EAA2B,SAA3BA,cAA4B,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACfC,cADe,mBACtDC,EADsD,KACjCC,EADiC,KACzCC,OADyC,EAEfH,cAFe,mBAEtDI,EAFsD,KAGvDD,EAASD,EAA8B,EAHgB,KAEzCC,OAC6B,EAEjD,OADA7Q,QAAQ+Q,IAAI,CAAEP,QAAOI,iBAEjB,uBAAKI,IAAKL,EAAWM,UAAS,UAAKC,IAAOC,UAAZ,YAC1B,uBAAKF,UAAU,QACX,gBAACG,EAAA,EAAD,CAAYH,UAAU,gBAAgBI,MAAO,CAAEC,WAAY,gBACvD,uBAAKN,IAAKF,GACN,qBAAGG,UAAU,kCAAkCT,GAC/C,wBAAMS,UAAS,sBAAiBC,IAAOK,UACnC,qBAAGN,UAAU,kBAAb,qBAIZ,uBACII,MAAO,CACHR,OAAO,GAAD,OAAKA,EAAL,MACNW,UAAW,OACXC,UAAW,WAGdhB,M,gBChCRiB,EAAY,IAAIC,IAAI,CAC7B,CACI,UACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CACI,YACA,kBAAM,qCAEV,CAAC,QAAS,kBAAM,qCAChB,CACI,SACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CACI,UACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CAAC,QAAS,kBAAM,qCAChB,CAAC,MAAO,kBAAM,qCACd,CAAC,QAAS,kBAAM,qCAChB,CAAC,QAAS,kBAAM,qCAChB,CACI,UACA,kBAAM,qCAEV,CAAC,QAAS,kBAAM,qCAChB,CAAC,QAAS,kBAAM,qCAChB,CACI,WACA,kBAAM,qCAEV,CACI,YACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CAAC,OAAQ,kBAAM,uCAGNC,EAAyB,SAAzBA,uBAA0B9N,GACnC,GAAIA,EAAO,CACP,IAAM+N,EAAcH,EAAUpE,IAAIxJ,GAClC,GAAI+N,EACA,OAAOA,IAMf,OAFAhS,YAAS,GAAD,OAAIiE,EAAJ,2BAED4N,EAAUrK,SAASyK,OAAOxH,SAGxByH,EAAyB,CAClC,UACA,SACA,YACA,QACA,SACA,SACA,UACA,SACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,WACA,YACA,SACA,QAISC,EAAwB,CAAC,SAAU,UAAW,WAAY,iBAAkB,Y,mHCEnFC,EAAoB,SAApBA,kBAA2DC,GAAsC,IAC3FpO,EAA4CoO,EAA5CpO,MAAOhB,EAAqCoP,EAArCpP,OAAQqP,EAA6BD,EAA7BC,SAAUC,EAAmBF,EAAnBE,eAC3BC,EAAUC,uBAAY,WACxBH,EAASrO,GACLsO,GACAG,YAAW,kBAAM1R,OAAOD,SAAS4R,cAEtC,CAAC1O,EAAOqO,EAAUC,IACrB,OACI,gBAACK,EAAA,EAAD,CAAc3P,OAAQA,EAAQuP,QAASA,GAClCvO,IAUE4O,gBALS,SAAlBC,gBAAmBC,GAAD,MAAuB,CAC3CC,aAAcC,YAASF,GACvBG,mBAAoBC,YAAeJ,MAGC,CAAEK,gBAAiBpP,IAAaqP,eAAgBnP,KAAzE2O,CACXS,eAAKC,YAAkBC,aApFD,SAApBC,OAAqB,GAA2E,IAAzEL,EAAwE,EAAxEA,gBAAiBJ,EAAuD,EAAvDA,aAAcK,EAAyC,EAAzCA,eAAgBH,EAAyB,EAAzBA,mBAAyB,EAClEQ,cADkE,mBAC1FC,EAD0F,KAClFC,EADkF,OAExDF,cAFwD,mBAE1FG,EAF0F,KAE1EC,EAF0E,KAIjG,OACI,gCACI,gBAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAM,EAAMC,OAAO,MACpC,gBAACC,EAAA,EAAD,CAAalT,KAAK,KAAlB,gBACA,gBAACmT,EAAA,EAAD,CAAeC,KAAK,eAAe7B,QAASoB,IAC5C,gBAACU,EAAA,EAAD,CAAUX,OAAQA,EAAQY,QAAQ,GAC9B,gBAACC,EAAA,EAAD,CAAKpD,UAAU,UAAUmD,QAAQ,GAC7B,gBAACE,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,CAAUf,OAAQE,EAAgBc,OAAQb,GACtC,gBAACc,EAAA,EAAD,CAAgBC,KAAK,EAAMC,OAAO,GAAlC,SAGA,gBAACC,EAAA,EAAD,CAAc7I,OAAO,GACjB,gBAAC0G,EAAA,EAAD,CAAcoC,QAAQ,GAAtB,uBACC7C,EAAsBrH,KAAI,SAAC7G,EAAOmL,GAAR,OACvB,gBAAC,EAAD,CACIkD,SAAUe,EACVhH,IAAK+C,EACLnM,OAAQiQ,IAAuBjP,EAC/BA,MAAOA,EACPsO,gBAAgB,OAGxB,gBAACK,EAAA,EAAD,CAAcoC,QAAQ,GAAtB,wBAEC9C,EAAuBpH,KAAI,SAAC7G,EAAOmL,GAAR,OACxB,gBAAC,EAAD,CACIkD,SAAUc,EACV/G,IAAK+C,EACLnM,OAAQ+P,IAAiB/O,EACzBA,MAAOA,EACPsO,gBAAgB,UAMpC,gBAACkC,EAAA,EAAD,KACI,gBAACQ,EAAA,EAAD,CAAShU,KAAK,+DAAd,IACMH,MAGV,gBAAC2T,EAAA,EAAD,KACI,gBAACQ,EAAA,EAAD,CAAShU,KAAK,+CAAd,iBAqCuB,a,mJCzGtCiU,GAA+B5B,eACxCC,aAAkB,YAAyC,IAAtCyB,EAAqC,EAArCA,OAAQG,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GAAS,cACjCL,EADiC,GAC/C3I,EAD+C,KAC1C5B,EAD0C,KAGhD6K,EAAc7C,uBAAY,SAAChC,GAAD,OAAsC2E,EAAS,CAAC3E,EAAE8E,OAAO9K,MAAOA,MAAS,CACrG2K,EACA3K,IAEE+K,EAAgB/C,uBAAY,SAAChC,GAAD,OAAsC2E,EAAS,CAAC/I,EAAKoE,EAAE8E,OAAO9K,UAAS,CACrG2K,EACA/I,IAEEoJ,EAAmBhD,uBAAY,kBAAM0C,EAASH,KAAS,CAACG,EAAUH,IAExE,OACI,uBAAK5D,UAAU,0BACX,uBAAKA,UAAU,YACX,yBACIA,UAAU,+BACV3G,MAAO4B,EACPgJ,GAAE,oBAAeA,GACjBnS,KAAK,OACL1C,KAAI,oBAAe6U,GACnBK,YAAY,gBACZN,SAAUE,KAGlB,uBAAKlE,UAAU,YACX,yBACIA,UAAU,+BACV3G,MAAOA,EACPvH,KAAK,OACL1C,KAAI,qBAAgB6U,GACpBA,GAAE,qBAAgBA,GAClBK,YAAY,iBACZN,SAAUI,KAGlB,uBAAKpE,UAAU,YACX,gBAACuE,GAAA,EAAD,CAAQC,SAAS,EAAM5B,MAAM,SAASxB,QAASiD,GAA/C,gB,SCuEdI,GAAkC,SAAlCA,WAAmC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASV,EAAe,EAAfA,SAC1CD,EAAW1C,uBAAY,SAACuC,GAAD,OAA8BI,EAASU,EAAQ9H,QAAO,SAAA+H,GAAC,OAAIA,IAAMf,QAAU,CACpGc,EACAV,IAEEY,EAAmBvD,uBACrB,SAACuC,GACG,IAAM5F,EAAQ0G,EAAQlG,QAAQoF,GAC9Bc,EAAQ1G,GAAR,gBAAsB4F,GACtBI,EAAS,aAAIU,MAEjB,CAACA,EAASV,IAEd,OACI,gCACKU,EAAQhL,KAAI,SAACkK,EAAQ5F,GAAT,OACT,gBAAC8F,GAAD,CACIF,OAAQA,EACR3I,IAAK+C,EACLiG,GAAIjG,EACJgG,SAAUY,EACVb,SAAUA,SAOftC,eAAQ,KAAM,CAAEoD,UAAW9S,KAA3B0P,CAA2CU,YAAkBD,gBArIvC,SAA/B4C,kBAAgC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUF,EAAgB,EAAhBA,UAAgB,EAClCG,YAAoB,OADc,mBACvDC,EADuD,KAC/CC,EAD+C,OAExCF,YAAoB,8CAFoB,mBAEvDG,EAFuD,KAElDC,EAFkD,OAGtCJ,YAAoB,IAHkB,mBAGvDK,EAHuD,KAGjDC,EAHiD,OAIhCC,mBAAS,CAAC,CAAC,SAAU,sBAJW,mBAIvDb,EAJuD,KAI9Cc,EAJ8C,OAKpCD,mBAAS,MAL2B,mBAKvD1W,EALuD,KAKhD4W,EALgD,OAMhCnD,cANgC,mBAMvDoD,EANuD,KAM9CC,EAN8C,KAQxDC,EAASvE,sBAAW,sBAAC,sCAAAwE,EAAA,sEAMjBC,EAAU,IAAIC,QAAQZ,EALK,CAC7BF,SACAP,UACAW,KAAMK,EAAUL,EAAO,OAG3BI,EAAS,MAPc,kBAWEO,MAAMF,GAXR,cAWb9I,EAXa,gBAYNA,EAAOmC,OAZD,OAYnBA,EAZmB,gEAcnBvQ,YAAS,2BAAD,MACR6W,EAAS,EAAD,IAfW,2BAkBvBZ,EAAUoB,aAAe9G,IACzB4F,IAnBuB,gEAoBxB,CAACE,EAAQE,EAAKE,EAAMX,EAASgB,EAASb,EAAWE,IAEpD,OACI,uBAAKd,GAAG,qBACJ,gBAACiC,GAAA,EAAD,KACI,yBAAOC,QAAQ,iBAAf,UACA,0BACInG,UAAU,+BACVzD,aAAc0I,EACd7V,KAAK,gBACL6U,GAAG,gBACHD,SAAUkB,GAEV,qCACA,sCACA,qCACA,2CAGR,gBAACgB,GAAA,EAAD,KACI,yBAAOC,QAAQ,cAAf,eACA,yBACI5J,aAAc4I,EACdnF,UAAU,+BACVlO,KAAK,MACL1C,KAAK,aACL6U,GAAG,aACHK,YAAY,eACZN,SAAUoB,KAGlB,uBAAKpF,UAAU,gCACX,yBAAOA,UAAU,oBACb,yBAAOlO,KAAK,WAAWkO,UAAU,mBAAmBgE,SAAU2B,IADlE,cAIJ,gBAACS,GAAA,EAAD,CAAMC,QAAQ,EAAMC,QAASZ,GACzB,gBAACQ,GAAA,EAAD,KACI,qCACA,yBACIlG,UAAU,+BACVlO,KAAK,WACLuH,MAAOgM,EACPrB,SAAUsB,IACX,MAGX,yBAAOa,QAAQ,WAAf,mBAAiD,IACjD,gBAAC5B,GAAA,EAAD,CACIC,SAAS,EACT5B,MAAM,UACNxB,QAAS,0BAAMoE,EAAW,GAAD,oBAAKd,GAAL,CAAc,CAAC,QAAD,OAASA,EAAQvU,OAAS,GAAK,cAH1E,cAOA,2BACA,2BACA,gBAAC,GAAD,CAAYuU,QAASA,EAASV,SAAUwB,IACxC,2BACA,gBAACjB,GAAA,EAAD,CAAQgC,OAAO,EAAM3D,MAAM,UAAUxB,QAASwE,GAA9C,UAGC/W,GACG,gBAAC2X,GAAA,EAAD,CAAO5D,MAAM,UAAb,UACY/T,EAAMI,QAAUJ,EAAMI,QAAU,GACvCJ,EAAM4X,MAAQ5X,EAAM4X,MAAQ,UCuHlChF,gBAPS,SAAlBC,gBAAmBC,GAAD,MAAuB,CAC3C+E,WAAYC,YAAoBhF,GAChCiF,QAASC,YAAWlF,GACpBmF,QAASC,YAAWpF,GACpB/Q,KAAMoW,YAAarF,MAGiB,CACpCsF,mBAAoBlV,IACpBmV,QAAS/U,IACTgV,QAAS7U,IACT8U,OAAQhV,IACRiV,OAAQhV,IACRiV,aAAcC,kBAAeC,aAC7BC,iBAAkB7V,IAClB8V,aAAcvU,KARHsO,CASZS,eAAKC,YAAkBC,aA5LK,SAAzBuF,YAA0B,GAazB,IAZHT,EAYE,EAZFA,QACAD,EAWE,EAXFA,mBACAE,EAUE,EAVFA,QACAT,EASE,EATFA,WACAe,EAQE,EARFA,iBACAJ,EAOE,EAPFA,OACAD,EAME,EANFA,OACAN,EAKE,EALFA,QACAF,EAIE,EAJFA,QACAc,EAGE,EAHFA,aACA9W,EAEE,EAFFA,KACA0W,EACE,EADFA,aACE,EACuChF,cADvC,mBACKsF,EADL,KACqBlF,EADrB,OAEiCJ,cAFjC,mBAEKuF,EAFL,KAEkBC,EAFlB,KAGIC,EAAmB1G,uBACrB,SAAChC,GAAsC,IAAD,IAGlC,GAFArQ,YAAS,gBACT0T,IACIrD,EAAE8E,OAAO6D,QAAS,UAAA3I,EAAE8E,cAAF,mBAAU6D,aAAV,eAAiB7X,QAAS,EAAG,CAC/C,IAAM8X,EAAa,IAAIC,WACvBlZ,YAAS,iBAAkBqQ,EAAE8E,OAAO6D,MAAM,GAAG5Y,MAC7C6Y,EAAWE,OAAS,WACZF,EAAWjL,QACXiK,EAAmBgB,EAAWjL,OAAOa,aAG7CoK,EAAWG,WAAW/I,EAAE8E,OAAO6D,MAAM,OAG7C,CAACtF,EAAgBuE,IAGfoB,EAAyBhH,uBAAY,kBAAMoG,GAAkBf,KAAa,CAACe,EAAkBf,IAEnG,OACI,gCACI,gBAAC4B,GAAA,EAAD,CAAatI,UAAU,SAASuI,UAAU,GACtC,gBAACD,GAAA,EAAD,CAAaC,UAAU,GACnB,gBAAChE,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN4F,KAAM,KACNpH,QAASgG,EACTqB,UAAW7B,GAEX,qBAAG5G,UAAU,6BAAb,QACA,qCAEJ,gBAACuE,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN4F,KAAM,KACNpH,QAASiG,EACToB,UAAW3B,GALf,OAQI,qBAAG9G,UAAU,6BAAb,UAGR,2BACA,2BACA,gBAAC0I,GAAA,EAAD,CACI1I,UAAU,sDACV2I,OAAO,EACPvH,QAASiH,GAET,qBAAGrI,UAAU,uBAAuB0G,EAAa,YAAc,2BALnE,eAQA,2BACA,gBAACkC,GAAA,EAAD,CAAgBrG,OAAQqF,EAAgBrE,OAAQb,GAC5C,gBAACc,EAAA,EAAD,CACIxD,UAAU,sDACVwI,KAAM,KACNvE,GAAG,qBACHrB,MAAM,WAEN,qBAAG5C,UAAU,6BAAb,aANJ,UASA,gBAAC2D,EAAA,EAAD,KACI,gBAACnC,EAAA,EAAD,CAAc+B,QAAQ,GAClB,yBAAOU,GAAG,eAAV,sBAEI,yBACInS,KAAK,OACL1C,KAAK,OACL6U,GAAG,aACH7D,MAAO,CAAEyI,QAAS,QAClB7E,SAAU+D,MAItB,gBAACvG,EAAA,EAAD,CAAcyC,GAAG,eAAe7C,QAAS0G,GACrC,gDAIZ,2BACA,2BACA,gBAACvD,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN4F,KAAM,KACNpH,QAAS,mBACL8F,IACAI,MAGJ,2BACI,qBAAGtH,UAAU,6BAAb,cAEJ,qCAEJ,2BAEU,eAATpP,EACG,gBAAC2T,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN4F,KAAM,KACNpH,QAAS,0BAAMsG,EAAa,SAE5B,2BACI,qBAAG1H,UAAU,8BAAb,aAEJ,kDAGJ,gBAACuE,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,YACN4F,KAAM,KACNpH,QAAS,0BAAMsG,EAAa,gBAE5B,2BACI,qBAAG1H,UAAU,8BAAb,aAEJ,4CAIR,2BACA,gBAACuE,GAAA,EAAD,CACIvE,UAAU,sDACV4C,MAAM,SACN4F,KAAM,KACNpH,QAAS+F,GAET,2BACI,qBAAGnH,UAAU,8BAAb,UAEJ,sCAGR,gBAAC8I,GAAA,EAAD,CAAO7E,GAAG,eAAehB,KAAK,SAASuF,KAAK,KAAKjG,OAAQsF,EAAatE,OAAQuE,GAC1E,gBAACiB,GAAA,EAAD,CAAaxF,OAAQuE,GAArB,oCACA,gBAACkB,GAAA,EAAD,KACI,gBAAC,GAAD,CAAmBjE,SAAU+C,KAEjC,gBAACmB,GAAA,EAAD,KACI,gBAAC1E,GAAA,EAAD,CAAQ3B,MAAM,YAAYxB,QAAS0G,GAAnC,eAyBmC,kBC5NjDoB,GAAuBC,wBAAcC,cACrCC,GAAeC,gBAAK,kBAAM,uDAC1BC,GAASD,gBAAK,kBAAM,uDACpBE,GAAcF,gBAAK,kBAAM,uDAgEhB7H,gBAAQ,SAAAE,GAAK,MAAK,CAAE/Q,KAAMoW,YAAarF,GAAQ3O,QAASyW,YAAW9H,MAAW,CACzF+H,kBAAmB3W,KADR0O,CAEZW,aA3DoB,SAAjBuH,IAAkB,GAA0C,IAAxC/Y,EAAuC,EAAvCA,KAAMoC,EAAiC,EAAjCA,QAAS0W,EAAwB,EAAxBA,kBAIrC,OACI,gCACI,gBAAC,GAAD,MACA,uBAAK1J,UAAU,wBACX,sBAAIA,UAAU,QAAd,iCACA,gBAACkJ,GAAD,CACIU,UAAU,EACV5J,UAAU,SACV6J,aAAa,EACb7W,QAASA,EACT8W,gBAAe,WAAMC,IAAczJ,SACnC0J,YAAa,CAAEC,GAAI,EAAGC,GAAI,MAC1B1T,KAAM,CAAE0T,GAAI,GAAID,GAAI,GACpBE,OAAQ,CAAC,EAAG,GACZC,iBAAkB,CAAC,EAAG,GACtBC,UAAW,GACXC,eAnBO,SAAjBA,eAAkBC,EAA6BC,GAA9B,OACnBd,EAAkBc,IAmBNC,YAAa,KACbC,QAAS,IAET,uBAAKzP,IAAK0P,IAAcC,OAAOC,KAAKC,eAAgB9K,UAAS,kBAAa+K,IAAUC,aAChF,gBAAC,EAAD,CAAezL,MAAM,WACjB,gBAAC,GAAD,QAGR,uBAAKtE,IAAK0P,IAAcC,OAAOC,KAAKI,gBAAiBjL,UAAS,kBAAa+K,IAAUC,aACjF,gBAAC,EAAD,CAAezL,MAAM,uBACjB,gBAAC,WAAD,CAAU2L,SAAU,cAChB,gBAAC7B,GAAD,SAIZ,uBAAKpO,IAAK0P,IAAcC,OAAOC,KAAKM,eAAgBnL,UAAS,kBAAa+K,IAAUC,aAChF,gBAAC,EAAD,CAAezL,MAAK,uBAAkB3O,EAAlB,YAChB,gBAAC,WAAD,CAAUsa,SAAU,cAChB,gBAAC1B,GAAD,SAIZ,uBAAKvO,IAAK0P,IAAcC,OAAOC,KAAKO,UAAWpL,UAAS,kBAAa+K,IAAUC,aAC3E,gBAAC,EAAD,CAAezL,MAAM,yBACjB,gBAAC,WAAD,CAAU2L,SAAU,cAChB,gBAAC3B,GAAD,WAMpB,gBAAC,IAAD,SAOY,Q,OC3EJ1M,QACa,cAA7BjN,OAAOD,SAAS0b,UAEiB,UAA7Bzb,OAAOD,SAAS0b,UAEhBzb,OAAOD,SAAS0b,SAASC,MAAM,2D,iCChB1BC,GAAe,SAAfA,aAAgBhY,GACzB,GAAmB,kBAARA,EACP,MAAO,GAGX,IAAMiY,EAASlY,GAAcC,GAC7B,MAAsB,kBAAXiY,EACAA,EAGI,OAAXA,EACO,GAGJra,KAAKC,UAAUoa,EAAQ,KAAM,IAG3BlY,GAAgB,SAAhBA,cAAiBC,GAC1B,GAAmB,kBAARA,GAAmC,KAAfA,EAAI1C,OAC/B,OAAO,KAGX,IAAM2C,EAAUD,EACXE,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAErB,IACI,OAAOtC,KAAKuC,MAAMF,GACpB,MAAO3E,GACL,OAAO0E,I,4BCZFkY,GAAa,SAAbA,aAAoE,IAAD,EAArDC,EAAqD,uDAAzCC,eAAsBC,EAAmB,uCAC5E,GAAoB,iBAAhBA,EAAO9Z,KACP,OAAO+Z,KAEX,IAAMC,GACO,OAATJ,QAAS,IAATA,OAAA,EAAAA,EAAWxZ,SAAX,OAAoBwZ,QAApB,IAAoBA,OAApB,EAAoBA,EAAW1Z,QAA/B,6BAEa0Z,GAFb,IAGUxZ,MAAOA,GAAMwZ,EAAUxZ,MAAO0Z,GAC9B5Z,OAAQA,GAAO0Z,EAAU1Z,OAAQ4Z,KAErC,GAEJG,EAAiBC,GAAON,EAAWI,EAAUF,GAC7CK,EAAG,6BACFH,GADE,IAELE,OAAO,6BACAD,GADD,IAEF1R,MAAOA,GAAK,iBAAC0R,QAAD,IAACA,OAAD,EAACA,EAAgB1R,aAAjB,QAA0B,GAAIuR,OAIlD,OAAOK,GAGEja,GAAS,SAATA,OAAU2P,EAAoBiK,GAAoB,IAAD,IAC1D,OAAQA,EAAO9Z,MACX,IAAK,qBACD,OAAO,6BACA6P,GADP,IAEIzQ,MAAW,OAALyQ,QAAK,IAALA,OAAA,EAAAA,EAAO+E,YAAa6E,GAAaK,EAAO5Z,OAAOnB,QAAU+a,EAAO5Z,SAE9E,IAAK,2BACD,OAAO,6BACA2P,GADP,IAEIzQ,KAAM0a,EAAO/Z,OAAS0Z,GAAY,OAAC5J,QAAD,IAACA,GAAD,UAACA,EAAOzQ,YAAR,aAAC,EAAaL,QAA1C,iBAAoD8Q,QAApD,IAAoDA,OAApD,EAAoDA,EAAOzQ,YAA3D,QAAmE,GACzEwV,WAAYkF,EAAO/Z,SAE3B,QACI,OAAO8P,IAmBNzP,GAAQ,SAARA,MAASyP,EAAmBiK,GACrC,OAAQA,EAAO9Z,MACX,IAAK,eACD,OAAO,6BACA6P,GADP,IAEIzQ,KAAM0a,EAAO1Z,QAErB,IAAK,oBACD,OAAO,6BACAyP,GADP,IAEI/Q,KAAMgb,EAAOhb,KACbM,KACoB,QAAhB0a,EAAOhb,KACDsb,GAAiBha,MAAMhB,KACvB,0IAElB,QACI,OAAOyQ,IAINwK,GAAgB,SAAhBA,cACTC,EACA1b,EACAC,EACAib,EACAhb,GAEA,IAAME,EAAaL,aAAeC,EAAcC,EAAaC,GAE7D,GAAIE,aAAsBE,MACtB,MAAO,CACHqb,YAAa,UACbpb,IAAK,KACLqb,QAAS,EACTpZ,WAAY,GACZoY,OAAO,EACPiB,aAAczb,EAAW7B,QACzBoL,MAAO,CACHmD,SAAS,EACTgP,aAAa,EACbC,iBAAkB,GAClBha,QAAS,GACTE,QAAS,KAhBpB,aAqBqB7B,QArBrB,IAqBqBA,IAAc,CAAEI,KAAM,KAAMD,IAAK,MAA/CC,EArBP,EAqBOA,KAAMD,EArBb,EAqBaA,IACVwb,EAAmB,IAAIlP,MAC3B,GAAIA,MAAMC,QAAQvM,GAAM,CACpB,IAAMyb,EAAoC,GAC1Czb,EAAI4I,SAAQ,SAAA8S,GACE,OAANA,QAAoBpc,IAANoc,GAAoBxW,OAAOyW,GAAGD,EAAG,KAAQpP,MAAMC,QAAQmP,KACnDA,EAAkB,kBAANA,EAAiBxW,OAAO0U,KAAK8B,GAAK,CAAChe,MAAqB,IAC5EkL,SAAQ,SAAAoB,GAAG,OAAKyR,EAAOzR,GAAOA,QAGhDwR,EAAmBtW,OAAO0U,KAAK6B,GAC1B9P,QAAO,SAAA3B,GAAG,OAAIA,GAAsB,kBAARA,GAAmC,KAAfA,EAAIpK,UACpDgc,MAAK,SAACC,EAAIC,GAAL,OAAWD,EAAG5O,cAAc8O,cAAcD,EAAE7O,kBAE1D,IAAMsO,EACFJ,GAAiBA,EAAc/R,OAAyB,8BAAhBuR,EAAO9Z,KACzCsa,IAAkBA,EAAc/R,MAAMmS,eACtCJ,IAAiBA,EAAc/R,QAC/B+R,EAAc/R,MAAMmS,YAG1BH,EAAuB9O,MAAMC,QAAQvM,GAAO,QAAU,UAK1D,MAHoB,gCAAhB2a,EAAO9Z,OACPua,EAAcT,EAAOvY,KAElB,CACHgZ,cACApb,IAAKA,EACLqb,QAASpb,EAAOA,EAAKf,OAAS,EAC9B+C,WAAY,GACZoY,OAAO,EACPjR,MAAO,CACHmD,QAASD,MAAMC,QAAQvM,GACvBub,cACAC,mBACAha,QAASga,EACT9Z,QAAS,MAKRqZ,GAAS,SAATA,OAAUI,EAAyBN,EAA2BF,GAAoB,IAAD,UAC1F,OAAQA,EAAO9Z,MACX,IAAK,eACL,IAAK,qBACL,IAAK,uBACL,IAAK,wBACD,IACiB,OAAbsa,QAAa,IAAbA,GAAA,UAAAA,EAAepa,cAAf,eAAuBd,SAAvB,OAAgC4a,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAU9Z,cAA1C,aAAgC,EAAkBd,QACrC,OAAbkb,QAAa,IAAbA,GAAA,UAAAA,EAAela,aAAf,eAAsBhB,SAAtB,OAA+B4a,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAU5Z,aAAzC,aAA+B,EAAiBhB,MAEhD,OAAOkb,EAAcJ,OAEV,IAAD,QAAd,GAAIF,EACA,OAAOK,GAAa,UAChBL,EAASE,cADO,QACG,IACnB,UAAAF,EAAS9Z,cAAT,eAAiBd,MAAO4a,EAAS9Z,OAAOd,KAAO,IAC/C,UAAA4a,EAAS5Z,aAAT,eAAgBhB,MAAO4a,EAAS5Z,MAAMhB,KAAO,GAC7C0a,GACA,UAAAE,EAAS5Z,aAAT,eAAgBtB,MAAOkb,EAAS5Z,MAAMtB,KAAO,OAGrD,MACJ,IAAK,4BACD,OAAOkb,EAAQ,6BAEFA,EAASE,QAFP,IAGL3R,MAAM,6BACEyR,EAASE,OAASF,EAASE,OAAO3R,MAAQ,IAD7C,IAEDmS,eAAa,UAAAV,EAASE,cAAT,eAAiB3R,SAASyR,EAASE,OAAO3R,MAAMmS,gBAGrE,GACV,IAAK,8BACD,GAAIV,EACA,OAAO,6BACAA,EAASE,QADhB,IAEIK,YAAaT,EAAOvY,MAG5B,MACJ,IAAK,4BACD,GAAIyY,GAAYA,EAASE,OACrB,OAAO,6BACApP,GAAOkP,EAASE,OAAQJ,EAAO1Y,aADtC,IAEIA,WAAY0Y,EAAO1Y,WACnBmZ,YAAa,YAGrB,MACJ,QAC2B,IAAD,MAAtB,UAAIP,QAAJ,IAAIA,OAAJ,EAAIA,EAAUE,OACV,OAAOG,GACHL,EAASE,QACT,UAAAF,EAAS9Z,cAAT,eAAiBd,MAAO4a,EAAS9Z,OAAOd,KAAO,IAC/C,UAAA4a,EAAS5Z,aAAT,eAAgBhB,MAAO4a,EAAS5Z,MAAMhB,KAAO,GAC7C0a,GACA,UAAAE,EAAS5Z,aAAT,eAAgBtB,MAAOkb,EAAS5Z,MAAMtB,KAAO,OAK7D,MAAO,IAmDLgM,GAAS,SAATA,OAAU+E,EAAoBzO,GAChC,IAAKA,GAAoC,KAAtBA,EAAWrC,SAAkB8Q,EAC5C,OAAO,6BAAKA,GAAZ,IAAmB2J,OAAO,IAFyB,MAhD/B,SAAf2B,aAAgBC,EAAyBha,GAClD,GAAmB,kBAARga,GAAmC,kBAARA,EAClC,MAAO,CAAE5B,OAAO,EAAO6B,YAAaD,GAGxC,GAAmB,kBAARA,EACP,OAAIE,aAAmBF,EAAKha,GACjB,CAAEoY,OAAO,EAAM6B,YAAaD,GAEhC,CAAE5B,OAAO,EAAO6B,YAAaD,GAExC,IAXyE,EAWnEjc,EAA8BsM,MAAMC,QAAQ0P,GAAd,aAAyBA,GAAzB,gBAAqCA,GAEnErC,EAAOtN,MAAMC,QAAQvM,GACrBsM,MAAM8P,KAAK,CAAEld,OAAQc,EAAId,SAAU,SAACoa,EAAG+C,GAAJ,OAAUA,KAC7CnX,OAAOoX,oBAAoBtc,GAAK2L,QAAO,SAAA1C,GAAY,OAAIA,KAEzD8C,GAAS,EAjB4D,eAmB9C6N,GAnB8C,IAmBzE,2BAAiC,CAAC,IAAvB3Q,EAAsB,QACvBsT,EAA+C,kBAAjBtT,GAA6BkT,aAAmBlT,EAAchH,GAClG,GAAIsa,EACAxQ,GAAS,MADb,CAIA,IAN6B,EAOEiQ,aADjBhc,EAAIiJ,GACiChH,GAA3CoY,EAPqB,EAOrBA,MAAO6B,EAPc,EAOdA,YACXK,GAAwBlC,GACxBtO,GAAS,EACT/L,EAAIiJ,GAAgBiT,GAEhB5P,MAAMC,QAAQvM,IAAgC,kBAAjBiJ,EAC7BjJ,EAAIwc,OAAOvT,EAAc,UAElBjJ,EAAIiJ,KAlCkD,8BA6CzE,OAPK8C,IACIO,MAAMC,QAAQvM,GAGfA,EAAId,OAAS,EAFb0a,EAAKhR,SAAQ,SAACK,GAAD,cAA0CjJ,EAAIiJ,OAK5D,CAAEoR,MAAOtO,EAAQmQ,YAAalc,GAONgc,CAAatL,EAAM1Q,IAAKiC,GAA/Cia,EAJ+C,EAI/CA,YAAa7B,EAJkC,EAIlCA,MACrB,OAAIA,EACO,6BAAK3J,GAAZ,IAAmB1Q,IAAKkc,EAAa7B,UAGlC3J,GAGLtH,GAAQ,SAARA,MAASsH,EAAqCiK,GAChD,OAAQA,EAAO9Z,MACX,IAAK,uBACD,IAAI4b,GAAmB,OAAL/L,QAAK,IAALA,OAAA,EAAAA,EAAOhP,SAAUgP,EAAMhP,QAAU,GAMnD,OALA+a,EAAY7T,SAAQ,SAAAlH,IACyB,IAArCiZ,EAAOnZ,QAAQ+L,QAAQ7L,KACvB+a,EAAcA,EAAY9Q,QAAO,SAAA+Q,GAAE,OAAoC,IAAhC/B,EAAOnZ,QAAQ+L,QAAQmP,UAG/D,6BACAhM,GADP,IAEI8K,iBAAkBb,EAAOnZ,QACzBE,QAAS+a,IAEjB,IAAK,wBACD,OAAO,6BACA/L,GADP,IAEIhP,QAASiZ,EAAOjZ,QACXiK,QAAO,SAAA+Q,GAAE,OAAIhM,GAASA,EAAM8K,mBAA4D,IAAxC9K,EAAM8K,iBAAiBjO,QAAQmP,MAC/E/Q,QAAO,SAAA+Q,GAAE,MAAW,gBAAPA,OAE1B,QACI,OAAOhM,IAmBJiM,GARMC,aAAgB,CACjCC,IAAKC,MARe,SAAXC,WAA8D,IAAlDrM,EAAiD,uDAAzCgK,eAAsBC,EAAmB,uCACtE,MAAoB,iBAAhBA,EAAO9Z,KACA2Z,GAAWE,eAAsBC,GAErCH,GAAW9J,EAAOiK,KAID,CACpBqC,SAAU,WACVC,SAAU,WACV9U,MAAOuR,IAAcwD,YAEzBC,aA5QwB,SAAfA,eAA0G,IAA1FzM,EAAyF,uDAAlD0M,eAA+BzC,EAAmB,uCAClH,OAAQA,EAAO9Z,MACX,IAAK,eACD,OAAOuc,eACX,IAAK,sBACD,OAAO,6BAAK1M,GAAZ,IAAmB2M,YAAa1C,EAAO/Y,QAC3C,IAAK,sBACD,OAAO,6BAAK8O,GAAZ,IAAmB4M,YAAa3C,EAAO/Y,QAC3C,IAAK,iBACD,OAAO,6BAAK8O,GAAZ,IAAmB3O,QAAS4Y,EAAO5Y,UACvC,QACI,OAAO2O,M,8BC1Db6M,GAAO,uCAAG,iBAAOvT,EAAa5B,GAApB,SAAAwM,EAAA,wFAEF4I,KAAYC,QAAQzT,EAAK5B,GAFvB,sDAIRsV,IAAMC,KAAN,6BAAiC3T,EAAjC,+BAJQ,8DAAH,gBAAPuT,QAAO,wCAQPK,GAAa,SAAbA,WAAc5T,GAChB,OAAQA,GACJ,KAAK0P,IAAcmE,WAAWC,SAC1B,OAAOpD,eACX,KAAKhB,IAAcmE,WAAWV,aAC1B,OAAOC,eACX,QACI,MAAM,IAAIrd,MAAJ,8BAAiCiK,MAI7C+T,GAAY,uCAAG,kBAAO/T,GAAP,iBAAA4K,EAAA,uEACboJ,EAAUC,aAAM,GAAIL,GAAW5T,IADlB,kBAGYwT,KAAYU,QAAoClU,GAH5D,cAGPmU,EAHO,yBAINF,aAAM,CAAED,WAAH,OAAcG,QAAd,IAAcA,IAAc,KAJ3B,gCAMbxgB,YAAS,EAAD,IANK,iCASV,IATU,gEAAH,gBAAZogB,aAAY,sCAWZK,GAAgB,uCAAG,kBAAOpU,GAAP,iBAAA4K,EAAA,uEACjBlE,EAAQkN,GAAW5T,GADF,kBAGQwT,KAAYU,QAA2BlU,GAH/C,cAGXmU,EAHW,yBAIVF,aAAMvN,EAAD,OAAQyN,QAAR,IAAQA,IAAc,KAJjB,gCAMjBxgB,YAAS,EAAD,IANS,iCASd,IATc,gEAAH,gBAAhBygB,iBAAgB,sCAYP,GA5CK,SAAdC,cAAc,OAAMN,GAAarE,IAAcmE,WAAWC,WA4CjD,GA7CS,SAAlBQ,kBAAkB,OAAMF,GAAiB1E,IAAcmE,WAAWV,eA6CzD,GArDS,SAAlBoB,gBAAmBC,GACrBjB,GAAQ7D,IAAcmE,WAAWC,SAAUU,IAoDhC,GAjDa,SAAtBC,oBAAuBtB,GACzBI,GAAQ7D,IAAcmE,WAAWV,aAAcA,ICTtCuB,GAAc,uCAAG,4CAAA9J,EAAA,+EACH+J,KADG,cACpBb,EADoB,gBAEMa,KAFN,cAEpBC,EAFoB,OAIpBC,EACgB,kBAAXlgB,QAAwBA,OAAemgB,qCACvCngB,OAAemgB,qCAAqC,IACrDC,MAEJC,EAAQC,aACVtC,GACA,CACIE,IAAK,CACDqC,KAAI,UAAEpB,EAASoB,YAAX,QAAmB,GACvBlB,QAASF,EAASE,QAClBmB,OAAM,UAAErB,EAASqB,cAAX,QAAqB,IAE/BhC,aAAcyB,GAElBC,MAGEO,WAAU,WACZT,GAA4BK,EAAMK,WAAWxC,KAC7C8B,GAAgCK,EAAMK,WAAWlC,iBAxB3B,kBA2BnB6B,GA3BmB,kDAAH,gBAAdN,iBAAc,mC,QCMZ,uCAAG,oCAAA9J,EAAA,+EACM8J,KADN,cACRM,EADQ,gBAESM,QAAQC,IAAI,CAC/B,4CACA7P,EAAuBkB,YAASoO,EAAMK,eAJ5B,OAERG,EAFQ,OAOGA,EAAS,GACjBC,OACL,gBAAC,IAAD,CAAUT,MAAOA,GACb,gBAAC,GAAD,OAEJU,SAASC,eAAe,SLqFxB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAC/BA,EAAaC,gBKnGP,iDAAH,gBAATC,YAAS,mCAiBfA,GACKH,MAAK,kBAAMhiB,YAAS,aACpBoiB,OAAM,SAAA/R,GAAC,OAAIzQ,YAAS,iBAAkByQ,O,gCC7B3C,yHAqDasM,EAAqB,SAArBA,qBAAqB,OAAMO,GAE3BmC,EAA8B,SAA9BA,8BAA8B,MACtC,CACGC,YAAa,QACbC,YAAa,SACb8C,WAAW,EACXre,QAAS,CACLiX,GAAI,CACA,CAAEtP,EAAGgQ,IAAcC,OAAOC,KAAKC,eAAgBlR,EAAG,EAAG0X,EAAG,EAAGC,EAAG,EAAG5M,EAAG,GAAI6M,KAAM,EAAGC,KAAM,IACvF,CAAE9W,EAAGgQ,IAAcC,OAAOC,KAAKI,gBAAiBrR,EAAG,EAAG0X,EAAG,GAAIC,EAAG,EAAG5M,EAAG,EAAG6M,KAAM,EAAGC,KAAM,GACxF,CAAE9W,EAAGgQ,IAAcC,OAAOC,KAAKM,eAAgBvR,EAAG,EAAG0X,EAAG,GAAIC,EAAG,EAAG5M,EAAG,EAAG6M,KAAM,EAAGC,KAAM,GACvF,CAAE9W,EAAGgQ,IAAcC,OAAOC,KAAKO,UAAWxR,EAAG,EAAG0X,EAAG,GAAIC,EAAG,EAAG5M,EAAG,GAAI6M,KAAM,EAAGC,KAAM,KAEvFvH,GAAI,CACA,CAAEvP,EAAGgQ,IAAcC,OAAOC,KAAKC,eAAgBlR,EAAG,GAAI0X,EAAG,EAAGC,EAAG,EAAG5M,EAAG,GAAI6M,KAAM,EAAGC,KAAM,IACxF,CAAE9W,EAAGgQ,IAAcC,OAAOC,KAAKI,gBAAiBrR,EAAG,EAAG0X,EAAG,EAAGC,EAAG,EAAG5M,EAAG,GAAI6M,KAAM,EAAGC,KAAM,IACxF,CAAE9W,EAAGgQ,IAAcC,OAAOC,KAAKM,eAAgBvR,EAAG,GAAI0X,EAAG,EAAGC,EAAG,EAAG5M,EAAG,GAAI6M,KAAM,EAAGC,KAAM,IACxF,CAAE9W,EAAGgQ,IAAcC,OAAOC,KAAKO,UAAWxR,EAAG,EAAG0X,EAAG,GAAIC,EAAG,GAAI5M,EAAG,GAAI6M,KAAM,GAAIC,KAAM,QAKxF5F,EAAa,CACtB7Z,OAAQ,CAAEd,KAAM,GAAIwV,YAAY,GAChCxU,MAAO,CAAEhB,KAAM,GAAIN,KAAM,OACzBob,OAAQ,CACJV,OAAO,EACPra,IAAK,GACLqb,QAAS,EACTpZ,WAAY,GACZmZ,YAAa,UACbhS,MAAO,CACHmD,SAAS,EACT/K,QAAS,GACTga,iBAAkB,GAClBD,aAAa,EACb7Z,QAAS,O,gyBCxFf+e,EAAmB,SAAnBA,iBAA4BjU,GAC9B,OAAKA,EAIE,YAAIA,GAHA,IAMFkU,EAAwB,SAAxBA,sBAAyBhQ,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOmM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBjD,cAA3C,aAAsB,EAA6BO,oBAAnD,QAAmE,IAC3FqF,EAAmB,SAAnBA,iBAAoBjQ,GAAD,qBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOmM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBjD,cAAtB,iBAAC,EAA6B3R,aAA9B,aAAC,EAAoCmD,UAC/EqU,EAAqB,SAArBA,mBAAsBlQ,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOmM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBjD,cAA3C,aAAsB,EAA6BK,mBAAnD,QAAmE,WACxFyF,EAAkB,SAAlBA,gBAAmBnQ,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOmM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBjD,cAA3C,aAAsB,EAA6B/a,WAAnD,QAA0D,IAC5E8gB,EAAsB,SAAtBA,oBAAuBpQ,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOmM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBjD,cAA3C,aAAsB,EAA6BM,eAAnD,QAA8D,GACpF0F,EAAsB,SAAtBA,oBAAuBrQ,GAAD,wBAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOmM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBjD,cAA3C,aAAsB,EAA6B9Y,YACzE+e,EAAuB,SAAvBA,qBAAwBtQ,GAAD,mBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOmM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBjD,cAAtB,aAAC,EAA6BV,QAC5E4G,EAA4B,SAA5BA,0BAA6BvQ,GAAD,qBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOmM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBjD,cAAtB,iBAAC,EAA6B3R,aAA9B,aAAC,EAAoCmS,cAExF3K,EAAW,SAAXA,SAAYF,GAAD,gCACpBA,QADoB,IACpBA,GADoB,UACpBA,EAAOyM,oBADa,aACpB,EAAqBE,mBADD,QACgBD,cAA8BC,aACzDvM,EAAiB,SAAjBA,eAAkBJ,GAAD,gCAC1BA,QAD0B,IAC1BA,GAD0B,UAC1BA,EAAOyM,oBADmB,aAC1B,EAAqBG,mBADK,QACUF,cAA8BE,aACzD9E,EAAa,SAAbA,WAAc9H,GAAD,gCACrBA,QADqB,IACrBA,GADqB,UACrBA,EAAOyM,oBADc,aACrB,EAAqBpb,eADA,QACWqb,cAA8Brb,SAEtDmf,EAAsB,SAAtBA,oBAAuBxQ,GAAD,mBAC/B+P,EAAgB,OAAC/P,QAAD,IAACA,GAAD,UAACA,EAAOmM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBjD,cAAtB,iBAAC,EAA6B3R,aAA9B,aAAC,EAAoCoS,mBAC5C2F,EAAiB,SAAjBA,eAAkBzQ,GAAD,uBAC1BpE,MAAMC,QAAN,OAAcmE,QAAd,IAAcA,GAAd,UAAcA,EAAOmM,WAArB,iBAAc,EAAYmB,eAA1B,iBAAc,EAAqBjD,cAAnC,aAAc,EAA6B/a,KAAOygB,EAAgB,OAAC/P,QAAD,IAACA,GAAD,UAACA,EAAOmM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBjD,cAAtB,aAAC,EAA6B/a,KAAO,IAC9FohB,EAAa,SAAbA,WAAc1Q,GAAD,mBAAsB+P,EAAgB,OAAC/P,QAAD,IAACA,GAAD,UAACA,EAAOmM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBjD,cAAtB,iBAAC,EAA6B3R,aAA9B,aAAC,EAAoC5H,UACxF6f,EAAa,SAAbA,WAAc3Q,GAAD,mBAAsB+P,EAAgB,OAAC/P,QAAD,IAACA,GAAD,UAACA,EAAOmM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBjD,cAAtB,iBAAC,EAA6B3R,aAA9B,aAAC,EAAoC1H,UAExF4f,EAAe,SAAfA,aAAgB5Q,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOmM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqB/c,aAA3C,aAAsB,EAA4BhB,YAAlD,QAA0D,IACzE8V,EAAe,SAAfA,aAAgBrF,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOmM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqB/c,aAA3C,aAAsB,EAA4BtB,YAAlD,QAA2D,OAC1E4hB,EAAgB,SAAhBA,cAAiB7Q,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOmM,WAA7B,iBAAsB,EAAYmB,eAAlC,iBAAsB,EAAqBjd,cAA3C,aAAsB,EAA6Bd,YAAnD,QAA2D,IAC3EyV,EAAsB,SAAtBA,oBAAuBhF,GAAD,mBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOmM,WAAR,iBAAC,EAAYmB,eAAb,iBAAC,EAAqBjd,cAAtB,aAAC,EAA6B0U,aAC3EK,EAAa,SAAbA,WAAcpF,GAAD,eAAqD,KAA1B,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOmM,WAAP,mBAAYsC,cAAZ,eAAoBjgB,SACvD0W,EAAa,SAAbA,WAAclF,GAAD,iBAAsB,iBAACA,QAAD,IAACA,GAAD,UAACA,EAAOmM,WAAR,iBAAC,EAAYqC,YAAb,aAAC,EAAkBhgB,cAAnB,QAA6B,GAAK,GACrEsiB,EAAe,SAAfA,aAAgB9Q,GAAD,eAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOyM,oBAAR,aAAC,EAAqBiD,a,uHCrC5D/O,EAAiB,SAAjBA,iBAAgF,IAA9DoQ,EAA6D,0DAC9DnN,mBAASmN,GADqD,mBACjFrZ,EADiF,KAC1EsZ,EAD0E,KAExF,MAAO,CAACtZ,EAAO,kBAAMsZ,GAAUtZ,MAKtB2L,EAAsB,SAAtBA,oBACT4N,GACoE,IAAD,EACzCrN,mBAASqN,GADgC,mBAC5DvZ,EAD4D,KACrDsZ,EADqD,KAYnE,MAAO,CAACtZ,EATagI,uBACjB,SAACwR,GACOA,GAASA,EAAM1O,QACfwO,EAASE,EAAM1O,OAAO9K,SAG9B,CAACsZ,O,+HCTHG,E,4PACcnR,MAAe,CAC3B9S,WAAO0B,G,8FAGc1B,EAAqBkkB,GAAe,IAAD,OACxD7iB,KAAK8iB,SAAS,CAAEnkB,MAAOA,GAAS,IAAImC,MAZtB,6CAY8C,kBAAM,EAAKiiB,OAAOF,Q,sCAGjE,IACLvT,EAAatP,KAAK+Q,MAAlBzB,SAGR,OAFkBtP,KAAKyR,MAAf9S,MAGG,oDAGJ2Q,I,oCAGIuT,GACXnkB,YAAS,mBAAoBsB,KAAKyR,MAAM9S,OACxCD,YAAS,cAAemkB,GACxBpE,IAAM9f,MAAMsC,KAAKC,UAAU2hB,GAAO,CAAEG,SAAU,eAAgBC,iBAAiB,EAAMC,WAAW,Q,eAvB5EC,aA2BflR,EAAoB,SAApBA,kBAAmCmR,GAAf,OAA6C,SAACrS,GAAD,OAC1E,gBAAC6R,EAAD,KACI,gBAACQ,EAAYrS,O,kHC7BfsS,EAAU,CAEZC,sBAAsB,EACtBC,YAAY,EACZC,iBAAiB,EACjBC,iBAAiB,EACjBC,wBAAwB,EACxBC,kBAAkB,EAElBC,iBAbqB,SAAnBA,iBAAoBC,GACtB5kB,YAAQ4kB,EAAIC,WAAYD,EAAI1kB,SAAU0kB,EAAIzW,OAa1C2W,gBAAgB,EAEhBC,UAAW,cACXC,SAAS,EAGTC,SAAS,EACTC,WAAW,GAgDFjS,GA7CG7S,eAAgB,IAAI+kB,IAAQf,GA6Cb,SAAlBnR,gBAAqCiR,EAAmCjkB,GAAtD,OAAoF,YAE5G,IADA6R,EACD,oBAsBF,OACI,gBAAC,WAAD,CAAgBgD,GAAE,eAAU7U,GAAQmlB,SAtBG,SAArCA,SACFtQ,EACAuQ,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA1lB,YAAQC,EAAMqlB,EAAgB,CAC1B3iB,KAAM,mBACNmS,KACAuQ,QACAC,iBACAC,eACAC,YACAC,aACAC,mBAMA,gBAACxB,EAAepS,Q,gCCtG5B,wIAAO,IAAMgF,EAAiB,SAAjBA,eAAkBhV,GAC3B,OAAIsM,MAAMC,QAAQvM,GACPA,EAAIyI,KAAI,SAAA2F,GAAC,OAAI4G,eAAe5G,MAAIH,KAAK,KAE7B,kBAARjO,EACAE,KAAKC,UAAUH,GAEd,OAARA,QAAwBV,IAARU,EACTA,EAAI4M,WAGR,IAGEiX,EAAY,SAAZA,UAAavhB,EAAgC+C,GACtD,MAAmB,kBAAR/C,EACA,KAEPA,EAAIpD,QAAUmG,EACP/C,EAEL,GAAN,OAAUA,EAAIyI,UAAU,EAAG1F,GAA3B,QAGS8W,EAAqB,SAArBA,mBAAsB7Z,EAAawhB,GAC5C,SAAKxhB,IAAQwhB,MAGTxhB,EAAIyhB,oBAAoBzW,SAASwW,EAAKC,sBAOxCC,EAAQ,CAAC,IAAK,KAAM,KAAM,MAEnBC,EAAmB,SAAnBA,iBAAoB7b,GAC7B,IAAK8b,OAAOC,SAAS/b,GACjB,MAAM,IAAIgc,UAAJ,+CAAsDhc,EAAtD,aAAgEA,IAG1E,IAAMic,EAAajc,EAAQ,EACrBkc,EAASD,EAAa,IAAM,GAIlC,GAHIA,IACAjc,GAASA,GAETA,EAAQ,EAER,OAAOkc,EADWlc,EAAMwE,WACI,KAEhC,IAAM2X,EAAWC,KAAKC,IAAID,KAAKE,MAAMF,KAAKG,MAAMvc,GAAS,GAAI4b,EAAM9kB,OAAS,GAI5E,OAAOolB,GAHPlc,EAAQ8b,QAAQ9b,EAAQoc,KAAKI,IAAI,KAAML,IAAWM,YAAY,KACnCjY,WAEI,IADlBoX,EAAMO,K,m2ICrDvB/jB,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,iC,mBCAzED,EAAOC,QAAU,CAAC,WAAa,0B,gCCD/B,kCAAO,IAAMnC,EAAc,SAAdA,cAAc,OAAOK,OAAemmB,Y,sFCAjD,kCAAO,IAAMpL,EAAgB,CACzBwD,UAAW,KACXW,WAAY,CACRC,SAAU,yBACVX,aAAc,iCAElBxD,OAAQ,CACJC,KAAM,CACFC,eAAgB,cAChBG,gBAAiB,eACjBE,eAAgB,cAChBC,UAAW,c","file":"static/js/main.7a2a387f.chunk.js","sourcesContent":["export const arrayElementName = 'arrayElement'\n","import { isDebugMode } from 'core/misc/debug'\nimport { getAppVersion } from 'core/misc/utils'\n\n// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload?: any) => {\n    console.error('Keyrier', error)\n    if (typeof payload !== 'undefined') {\n        console.error(payload)\n    }\n}\n\nexport const logWarning = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.warn('Keyrier', message)\n    } else console.warn('Keyrier', message, payload)\n}\n\nexport const logDebug = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.debug('Keyrier', message)\n    } else console.debug('Keyrier', message, payload)\n}\n\nexport const logPerf = (name: string, duration?: number, customProperties?: any) => {\n    if (isDebugMode()) {\n        const appVersion = getAppVersion()\n        const payload = { name, duration, appVersion, ...customProperties, location: window.location.href }\n        logEvents.enqueue(payload)\n    }\n}\n\nclass Queue<T = any> {\n    // initialise the queue and offset\n    private queue: T[] = []\n    private offset = 0\n\n    // Returns the length of the queue.\n    public getLength() {\n        return this.queue.length - this.offset\n    }\n\n    // Returns true if the queue is empty, and false otherwise.\n    public isEmpty() {\n        return this.queue.length === 0\n    }\n\n    /* Enqueues the specified item. The parameter is:\n     *\n     * item - the item to enqueue\n     */\n    public enqueue(item: T) {\n        this.queue.push(item)\n    }\n\n    /* Dequeues an item and returns it. If the queue is empty, the value\n     * 'undefined' is returned.\n     */\n    public dequeue() {\n        // if the queue is empty, return immediately\n        if (this.queue.length === 0) {\n            return undefined\n        }\n\n        // store the item at the front of the queue\n        const item = this.queue[this.offset]\n\n        // increment the offset and remove the free space if necessary\n        if (++this.offset * 2 >= this.queue.length) {\n            this.queue = this.queue.slice(this.offset)\n            this.offset = 0\n        }\n\n        // return the dequeued item\n        return item\n    }\n\n    /* Returns the item at the front of the queue (without dequeuing it). If the\n     * queue is empty then undefined is returned.\n     */\n    public peek() {\n        return this.queue.length > 0 ? this.queue[this.offset] : undefined\n    }\n}\n\nexport const logEvents = new Queue()\n;(window as any).__PERF_EVENT_LOGS = logEvents\n","import { version } from '../../../package.json'\n\nexport const getAppVersion = () => version\n","import { sqlQuery as sqlEvaluation } from '@keyrier/core'\nimport { QueryMode } from '../state/State'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (!sourceString || !queryString) {\n        return null\n    }\n\n    if (sourceString.trim() === '') {\n        return null\n    }\n\n    if (queryString.trim() === '') {\n        return null\n    }\n\n    const evaluation = evaluate(sourceString, queryString, mode)\n    if (evaluation instanceof Error) {\n        return evaluation\n    }\n    return { obj: evaluation, text: JSON.stringify(evaluation) }\n}\n\nconst evaluate = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (mode === 'Javascript') {\n        return jsEvaluation(sourceString, queryString)\n    } else if (mode === 'SQL') {\n        return sqlEvaluation(sourceString, queryString)\n    }\n    return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string): null | undefined | object | Error => {\n    try {\n        const code = `\n      \n        const data = eval(${sourceString})\n        ${queryString}\n      `\n        // eslint-disable-next-line\n        return eval(code) // DANGEROUS\n    } catch (error) {\n        return error\n    }\n}\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./core.cjs.production.min.js')\n} else {\n  module.exports = require('./core.cjs.development.js')\n}\n","import { QueryMode, tabType } from 'state/State'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\n\nexport const updateAutoFormatSource = (active: boolean) =>\n    ({\n        active,\n        type: 'UPDATE_AUTOFORMAT_SOURCE',\n    } as const)\n\nexport const updateSource = (source: string) =>\n    ({\n        source,\n        type: 'UPDATE_SOURCE_TEXT',\n    } as const)\n\nexport const updateQuery = (query: string) =>\n    ({\n        query,\n        type: 'UPDATE_QUERY',\n    } as const)\n\nexport const resetEditor = () =>\n    ({\n        type: 'RESET_EDITOR',\n    } as const)\n\nexport const undo = () =>\n    ({\n        type: 'APP_UNDO',\n    } as const)\n\nexport const redo = () =>\n    ({\n        type: 'APP_REDO',\n    } as const)\n\nexport const clearEditor = () =>\n    ({\n        type: 'CLEAR_EDITOR',\n    } as const)\n\nexport const toggleOutputTableModal = () =>\n    ({\n        type: 'TOGGLE_OUTPUT_TABLE_MODAL',\n    } as const)\n\nexport const updateTableColumns = (columns: string[]) =>\n    ({\n        columns,\n        type: 'UPDATE_TABLE_COLUMNS',\n    } as const)\n\nexport const updateTableGroupBy = (groupBy: string[]) =>\n    ({\n        groupBy,\n        type: 'UPDATE_TABLE_GROUP_BY',\n    } as const)\n\nexport const switchTheme = (theme: GeneralTheme) => ({\n    theme,\n    type: 'SWITCH_GLOBAL_THEME' as const,\n})\n\nexport const switchEditorTheme = (theme: EditorTheme) => ({\n    theme,\n    type: 'SWITCH_EDITOR_THEME' as const,\n})\n\nexport const updateLayouts = (layouts: ReactGridLayout.Layouts) => ({\n    layouts,\n    type: 'UPDATE_LAYOUTS' as const,\n})\n\nexport const updateSearchTerm = (searchTerm: string) =>\n    ({\n        searchTerm,\n        type: 'UPDATE_OUTPUT_SEARCH_TERM',\n    } as const)\n\nexport const updateQueryMode = (mode: QueryMode) =>\n    ({\n        mode,\n        type: 'UPDATE_QUERY_MODE',\n    } as const)\n\nexport const updateOutputTabSelection = (tab: tabType) =>\n    ({\n        tab,\n        type: 'UPDATE_OUTPUT_TAB_SELECTION',\n    } as const)\n\nexport type Action =\n    | ReturnType<typeof resetEditor>\n    | ReturnType<typeof clearEditor>\n    | ReturnType<typeof updateQuery>\n    | ReturnType<typeof toggleOutputTableModal>\n    | ReturnType<typeof updateTableColumns>\n    | ReturnType<typeof updateTableGroupBy>\n    | ReturnType<typeof switchTheme>\n    | ReturnType<typeof updateSearchTerm>\n    | ReturnType<typeof updateQueryMode>\n    | ReturnType<typeof updateLayouts>\n    | ReturnType<typeof updateOutputTabSelection>\n    | ReturnType<typeof updateSource>\n    | ReturnType<typeof updateAutoFormatSource>\n    | ReturnType<typeof switchEditorTheme>\n    | ReturnType<typeof undo>\n    | ReturnType<typeof redo>\n","export const jsonParseSafe = (str: string | null) => {\n    if (typeof str !== 'string' || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n","import { createToken, Lexer } from 'chevrotain'\n\nconst stringTokenCharacterRegexString = 'a-zA-Z0-9%\\\\s-&(){}\\\\[\\\\]$\\\\*!\\\\\\\\@/,;:=ë#+-<>?^_'\nconst stringTokenRegex = new RegExp(\n    `(\"[${stringTokenCharacterRegexString}']*\")|('[${stringTokenCharacterRegexString}\"]*')`\n)\n\nexport const Identifier = createToken({ name: 'Identifier', pattern: /[a-zA-Z_]+[\\w./]*/ })\nexport const WhiteSpace = createToken({ name: 'WhiteSpace', pattern: /\\s+/, group: Lexer.SKIPPED })\nexport const Comment = createToken({ name: 'Comment', pattern: /--.*/, group: Lexer.SKIPPED })\nexport const Select = createToken({ name: 'Select', pattern: /SELECT/i, longer_alt: Identifier })\nexport const From = createToken({ name: 'From', pattern: /FROM/i, longer_alt: Identifier })\nexport const Where = createToken({ name: 'Where', pattern: /WHERE/i, longer_alt: Identifier })\nexport const Comma = createToken({ name: 'Comma', pattern: /,/ })\nexport const Like = createToken({ name: 'Like', pattern: /like/i, longer_alt: Identifier })\nexport const Limit = createToken({ name: 'Limit', pattern: /limit/i, longer_alt: Identifier })\nexport const Null = createToken({ name: 'Null', pattern: /NULL/i, longer_alt: Identifier })\nexport const In = createToken({ name: 'In', pattern: /in/i, longer_alt: Identifier })\nexport const IsNot = createToken({ name: 'IsNot', pattern: /is\\s+not/i, longer_alt: Identifier })\nexport const Is = createToken({ name: 'Is', pattern: /is/i, longer_alt: Identifier })\nexport const NotLike = createToken({ name: 'NotLike', pattern: /NOT\\s+LIKE/i })\nexport const OrderBy = createToken({ name: 'OrderBy', pattern: /ORDER\\s+BY+/i })\nexport const OrderByDirection = createToken({\n    name: 'OrderByDirection',\n    pattern: /(ASC|DESC)/i,\n    longer_alt: Identifier,\n})\nexport const As = createToken({ name: 'As', pattern: /AS/i, longer_alt: Identifier })\nexport const OrAnd = createToken({ name: 'OrAnd', pattern: /(AND|OR)/i, longer_alt: Identifier })\nexport const Star = createToken({ name: 'Star', pattern: /\\*/ })\nexport const Integer = createToken({ name: 'Integer', pattern: /0|[1-9]\\d*/ })\nexport const StringToken = createToken({ name: 'StringToken', pattern: stringTokenRegex, line_breaks: true })\nexport const GreaterOrEqualThan = createToken({ name: 'GreaterOrEqualThan', pattern: />=/ })\nexport const GreaterThan = createToken({ name: 'GreaterThan', pattern: />/ })\nexport const LessOrEqualThan = createToken({ name: 'LessOrEqualThan', pattern: /<=/ })\nexport const LessThan = createToken({ name: 'LessThan', pattern: /</ })\nexport const Equal = createToken({ name: 'Equal', pattern: /=/ })\nexport const NotEqual = createToken({ name: 'NotEqual', pattern: /(!=|<>)/ })\nexport const OpenParenthesis = createToken({ name: 'OpenParenthesis', pattern: /\\(/ })\nexport const CloseParenthesis = createToken({ name: 'CloseParenthesis', pattern: /\\)/ })\n\nexport const tokenVocabulary = {\n    Comment,\n    WhiteSpace,\n    Select,\n    From,\n    Where,\n    Comma,\n    Like,\n    Limit,\n    Null,\n    In,\n    IsNot,\n    Is,\n    NotLike,\n    OrderBy,\n    OrderByDirection,\n    As,\n    OrAnd,\n\n    Identifier,\n\n    Star,\n    Integer,\n    StringToken,\n\n    Equal,\n    NotEqual,\n    GreaterOrEqualThan,\n    GreaterThan,\n    LessOrEqualThan,\n    LessThan,\n\n    OpenParenthesis,\n    CloseParenthesis,\n} as const\n\nexport type Token = keyof typeof tokenVocabulary\n\nconst SelectLexer = new Lexer(Object.values(tokenVocabulary))\n\nexport const lex = (inputText: string) => {\n    const lexingResult = SelectLexer.tokenize(inputText)\n\n    if (lexingResult.errors.length > 0) {\n        throw Error(JSON.stringify(lexingResult.errors))\n    }\n\n    return lexingResult\n}\n","import { CstNode, ICstVisitor, IToken } from 'chevrotain'\nimport { Integer, lex, Token, tokenVocabulary } from './lexer'\nimport { SelectParser } from './parser'\nimport { Field, From, Operand, Order, ordering, SQLTree } from './SqlTree'\n\nconst parserInstance = new SelectParser()\nconst BaseSQLVisitor: new (arg?: any) => ICstVisitor<number, any> = parserInstance.getBaseCstVisitorConstructor()\n\nclass SQLToAstVisitor extends BaseSQLVisitor {\n    constructor() {\n        super()\n        this.validateVisitor()\n    }\n\n    public selectStatement(ctx: {\n        selectClause: CstNode | CstNode[]\n        fromClause: CstNode | CstNode[]\n        whereClause: CstNode | CstNode[]\n        orderByClause: CstNode | CstNode[]\n        limitClause: CstNode | CstNode[]\n    }) {\n        const select = this.visit(ctx.selectClause)\n        const from = this.visit(ctx.fromClause)\n        const where = this.visit(ctx.whereClause)\n        const order = this.visit(ctx.orderByClause)\n        const limit = this.visit(ctx.limitClause)\n        return {\n            fields: select,\n            source: from,\n            where,\n            order,\n            limit,\n        } as const\n    }\n\n    public selectClause(ctx: { projection: CstNode | CstNode[] }) {\n        const columns = this.visit(ctx.projection)\n        return columns\n    }\n\n    public cols(ctx: { name: IToken[]; value: IToken[]; function: IToken[] }) {\n        let value = ctx.value[0].image\n\n        if (ctx.value[0].tokenType === tokenVocabulary.StringToken) {\n            value = convertStringTokenToJsString(value)\n        }\n\n        let name = ctx.name && ctx.name[0] ? ctx.name[0].image : value\n\n        const func = ctx.function && ctx.function[0] && ctx.function[0].image\n        if (func) {\n            name = ctx.name && ctx.name[0] ? ctx.name[0].image : `${func}(${value})`\n        }\n        if (ctx.name && ctx.name[0].tokenType === tokenVocabulary.StringToken) {\n            name = convertStringTokenToJsString(name)\n        }\n\n        return {\n            name,\n            value,\n            function: func,\n        }\n    }\n\n    public projection(ctx: { cols: CstNode[] }) {\n        const cols: { value: string; name: string; function: string | undefined }[] = ctx.cols.map(x =>\n            this.visit(x)\n        ) as any\n        const fields: Field[] = []\n        cols.forEach(({ name, value, function: func }) => {\n            const { pathArray: namePathArray, propertyName: namePropertyName } = splitPropertyPath(name)\n            const { pathArray: fieldPathArray, propertyName: fieldPropertyName } = splitPropertyPath(value)\n            const field: Field = {\n                name: {\n                    value: namePropertyName,\n                    values: namePathArray,\n                },\n                field: {\n                    value: fieldPropertyName,\n                    values: fieldPathArray,\n                },\n                function: func ? { name: func } : undefined,\n            }\n            fields.push(field)\n        })\n        return fields\n    }\n\n    public fromClause(ctx: { table: Array<IToken>; alias: Array<IToken> }): From {\n        let tableName: string = ctx.table[0].image\n        if (ctx.table[0].tokenType === tokenVocabulary.StringToken) {\n            tableName = convertStringTokenToJsString(tableName)\n        }\n        const alias = ctx.alias?.length ? ctx.alias[0].image : tableName\n        return {\n            name: {\n                value: tableName,\n                values: splitPropertyPath(tableName).pathArray,\n            },\n            alias: {\n                value: alias,\n                values: splitPropertyPath(alias).pathArray,\n            },\n        }\n    }\n\n    public whereClause(ctx: { expression: CstNode | CstNode[] }) {\n        const conditions = this.visit(ctx.expression)\n\n        return {\n            conditions,\n        } as const\n    }\n\n    public limitClause(ctx: { Integer: IToken[] }) {\n        const limit = parseInt(ctx.Integer[0].image)\n        return {\n            value: {\n                value: limit,\n            },\n        }\n    }\n    public orderByClause(ctx: { OrderBy: IToken[]; Identifier: IToken[]; OrderByDirection: IToken[] }): Order {\n        const { pathArray, propertyName } = splitPropertyPath(ctx.Identifier[0].image)\n        const direction = ctx.OrderByDirection && (ctx.OrderByDirection[0].image as 'asc' | 'desc')\n\n        const order: ordering = {\n            value: {\n                value: propertyName,\n                values: pathArray,\n            },\n            direction,\n        }\n\n        return {\n            orderings: [order],\n        }\n    }\n\n    public expression(\n        ctx: {\n            subExpression: Array<CstNode | CstNode[]>\n            OrAnd: Array<IToken>\n            right: Array<CstNode | CstNode[]>\n        },\n        i: number = 0\n    ) {\n        if (ctx.subExpression?.length - i === 1) {\n            return this.visit(ctx.subExpression[i])\n        }\n        const left = this.visit(ctx.subExpression[i])\n\n        const operation = ctx.OrAnd[i].image\n        const right: Operand = this.expression(ctx, i + 1)\n\n        return {\n            left,\n            right,\n            operation,\n        }\n    }\n\n    public subExpression(ctx: {\n        left: Array<CstNode | CstNode[]>\n        relationalOperator: CstNode | CstNode[]\n        right: Array<CstNode | CstNode[]>\n    }) {\n        const left = this.visit(ctx.left[0])\n        const operation = this.visit(ctx.relationalOperator)\n        const right = this.visit(ctx.right[0])\n\n        return {\n            left: { value: left, values: splitPropertyPath(left).pathArray },\n            operation,\n            right: { value: right, values: splitPropertyPath(right).pathArray },\n        }\n    }\n\n    public atomicExpression(context: Record<Token | 'in', Array<IToken>>) {\n        const entries = Object.entries(context) as [keyof typeof context, Array<IToken>][]\n        for (let [key, value] of entries) {\n            if (key === 'in') {\n                return value\n                    .map(x => {\n                        if (x.tokenType === Integer) {\n                            return parseInt(x.image)\n                        }\n                        return convertStringTokenToJsString(x.image)\n                    })\n                    .map(v => ({ value: v }))\n            }\n            if (key === 'Integer') {\n                return parseInt(value[0].image)\n            }\n            if (key === 'Null') {\n                return null\n            }\n            if (key === 'Identifier') {\n                return value[0].image\n            }\n            if (key === 'StringToken') {\n                return convertStringTokenToJsString(value[0].image)\n            }\n        }\n        return null\n    }\n\n    public relationalOperator(ctx: Record<Token, Array<IToken>>) {\n        const values = Object.values(ctx)\n        return values[0][0].image\n    }\n}\n\nconst toAstVisitorInstance = new SQLToAstVisitor()\n\nconst toAst = (inputText: string) => {\n    const lexResult = lex(inputText)\n\n    parserInstance.input = lexResult.tokens\n    let cst: CstNode[] | CstNode\n\n    cst = parserInstance.selectStatement()\n\n    if (parserInstance.errors.length > 0) {\n        throw Error(JSON.stringify(parserInstance.errors))\n    }\n    const ast = toAstVisitorInstance.visit(cst)\n    return (ast as unknown) as SQLTree\n}\n\nconst splitPropertyPath = (stringPath: string | number) => {\n    const pathArray = String(stringPath).split('.')\n\n    return { propertyName: pathArray[pathArray.length - 1], pathArray }\n}\n\nconst convertStringTokenToJsString = (str: string) => str.substring(1, str.length - 1)\n\nexport { toAst }\n","import { CstNode, CstParser } from 'chevrotain'\nimport {\n    As,\n    CloseParenthesis,\n    Comma,\n    Equal,\n    From,\n    GreaterOrEqualThan,\n    GreaterThan,\n    Identifier,\n    In,\n    Integer,\n    Is,\n    IsNot,\n    LessOrEqualThan,\n    LessThan,\n    lex as selectLexer,\n    Like,\n    Limit,\n    NotEqual,\n    NotLike,\n    Null,\n    OpenParenthesis,\n    OrAnd,\n    OrderBy,\n    OrderByDirection,\n    Select,\n    Star,\n    StringToken,\n    tokenVocabulary,\n    Where,\n} from './lexer'\n\nexport const labels = {\n    value: 'value',\n    function: 'function',\n    table: 'table',\n    name: 'name',\n    alias: 'alias',\n    left: 'left',\n    right: 'right',\n    in: 'in',\n} as const\n\nclass SelectParser extends CstParser {\n    public selectStatement: (idxInCallingRule?: number | undefined, ...args: any[]) => CstNode | CstNode[]\n    public fromClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public selectClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public whereClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public relationalOperator: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public orderByClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public limitClause: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public atomicExpression: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public expression: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public subExpression: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public projection: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    public cols: (idxInCallingRule?: number | undefined, ...args: any[]) => any\n    constructor(config?: any) {\n        super(tokenVocabulary, config)\n\n        this.cols = this.RULE('cols', () => {\n            this.OR([\n                { ALT: () => this.CONSUME(Star, { LABEL: labels.value }) },\n                {\n                    ALT: () => {\n                        this.CONSUME2(Identifier, { LABEL: labels.function })\n                        this.CONSUME(OpenParenthesis)\n                        this.CONSUME3(Identifier, { LABEL: labels.value })\n                        this.CONSUME(CloseParenthesis)\n                        this.OPTION1(() => {\n                            this.CONSUME1(As)\n                            this.OR3([\n                                {\n                                    ALT: () => this.CONSUME2(StringToken, { LABEL: labels.name }),\n                                },\n                                {\n                                    ALT: () => this.CONSUME4(Identifier, { LABEL: labels.name }),\n                                },\n                            ])\n                        })\n                    },\n                },\n                {\n                    ALT: () => {\n                        this.OR1([\n                            {\n                                ALT: () => this.CONSUME(StringToken, { LABEL: labels.value }),\n                            },\n                            {\n                                ALT: () => this.CONSUME(Identifier, { LABEL: labels.value }),\n                            },\n                        ])\n                        this.OPTION(() => {\n                            this.CONSUME(As)\n                            this.OR2([\n                                {\n                                    ALT: () => this.CONSUME1(StringToken, { LABEL: labels.name }),\n                                },\n                                {\n                                    ALT: () => this.CONSUME1(Identifier, { LABEL: labels.name }),\n                                },\n                            ])\n                        })\n                    },\n                },\n            ])\n        })\n\n        this.projection = this.RULE('projection', () => {\n            this.OR([\n                {\n                    ALT: () =>\n                        this.AT_LEAST_ONE_SEP({\n                            SEP: Comma,\n                            DEF: () => {\n                                this.SUBRULE(this.cols)\n                            },\n                        }),\n                },\n            ])\n        })\n\n        this.selectStatement = this.RULE('selectStatement', () => {\n            this.SUBRULE(this.selectClause)\n            this.SUBRULE(this.fromClause)\n            this.OPTION(() => {\n                this.SUBRULE(this.whereClause)\n            })\n            this.OPTION2(() => {\n                this.SUBRULE(this.orderByClause)\n            })\n            this.OPTION3(() => {\n                this.SUBRULE(this.limitClause)\n            })\n        })\n\n        this.selectClause = this.RULE('selectClause', () => {\n            this.CONSUME(Select)\n            this.SUBRULE(this.projection)\n        })\n\n        this.fromClause = this.RULE('fromClause', () => {\n            this.CONSUME(From)\n            this.OR([\n                {\n                    ALT: () => this.CONSUME(Identifier, { LABEL: labels.table }),\n                },\n                {\n                    ALT: () => this.CONSUME(StringToken, { LABEL: labels.table }),\n                },\n            ])\n            this.OPTION(() => this.CONSUME2(Identifier, { LABEL: labels.alias }))\n        })\n\n        this.whereClause = this.RULE('whereClause', () => {\n            this.CONSUME(Where)\n            this.SUBRULE(this.expression)\n        })\n\n        this.expression = this.RULE('expression', () => {\n            this.MANY_SEP({\n                SEP: OrAnd,\n                DEF: () => {\n                    this.SUBRULE(this.subExpression)\n\n                    return OrAnd.name\n                },\n            })\n        })\n\n        this.subExpression = this.RULE('subExpression', () => {\n            this.SUBRULE(this.atomicExpression, { LABEL: labels.left })\n            this.SUBRULE(this.relationalOperator)\n            this.SUBRULE2(this.atomicExpression, { LABEL: labels.right })\n        })\n\n        this.atomicExpression = this.RULE('atomicExpression', () => {\n            this.OR([\n                { ALT: () => this.CONSUME(Integer) },\n                { ALT: () => this.CONSUME(Null) },\n                { ALT: () => this.CONSUME(Identifier) },\n                { ALT: () => this.CONSUME(StringToken) },\n                {\n                    ALT: () => {\n                        this.CONSUME(OpenParenthesis)\n                        this.MANY_SEP({\n                            SEP: Comma,\n                            DEF: () => {\n                                this.OR1([\n                                    {\n                                        ALT: () => this.CONSUME1(Integer, { LABEL: labels.in }),\n                                    },\n                                    {\n                                        ALT: () => this.CONSUME1(StringToken, { LABEL: labels.in }),\n                                    },\n                                ])\n                            },\n                        })\n                        this.CONSUME(CloseParenthesis)\n                    },\n                },\n            ])\n        })\n\n        this.relationalOperator = this.RULE('relationalOperator', () => {\n            this.OR([\n                { ALT: () => this.CONSUME(GreaterOrEqualThan) },\n                { ALT: () => this.CONSUME(GreaterThan) },\n                { ALT: () => this.CONSUME(LessOrEqualThan) },\n                { ALT: () => this.CONSUME(LessThan) },\n                { ALT: () => this.CONSUME(Equal) },\n                { ALT: () => this.CONSUME(NotEqual) },\n                { ALT: () => this.CONSUME(Like) },\n                { ALT: () => this.CONSUME(NotLike) },\n                { ALT: () => this.CONSUME(In) },\n                { ALT: () => this.CONSUME(IsNot) },\n                { ALT: () => this.CONSUME(Is) },\n            ])\n        })\n\n        this.orderByClause = this.RULE('orderByClause', () => {\n            this.CONSUME(OrderBy)\n            this.CONSUME(Identifier)\n            this.OPTION({\n                DEF: () => this.CONSUME(OrderByDirection),\n            })\n        })\n\n        this.limitClause = this.RULE('limitClause', () => {\n            this.CONSUME(Limit)\n            this.CONSUME(Integer)\n        })\n\n        this.performSelfAnalysis()\n    }\n}\n\nconst parserInstance = new SelectParser()\n\nconst parse = (inputText: string) => {\n    const lexResult = selectLexer(inputText)\n\n    parserInstance.input = lexResult.tokens\n\n    parserInstance.selectStatement()\n\n    if (parserInstance.errors.length > 0) {\n        throw Error(parserInstance.errors[0].message)\n    }\n}\n\nexport { parserInstance, SelectParser, parse }\n","import { orderBy } from 'lodash'\nimport { jsonParseSafe } from '../converters/json'\nimport { toAst } from './actions-visitor'\nimport { Field, From, Operand, SQLTree } from './SqlTree'\n\nconst allowedSourceNames = ['data', 'json', 'csv', 'stdin'] as const\n\nexport const computePath = (path: string[] | undefined) => {\n    if (!path) {\n        return []\n    }\n    if (allowedSourceNames.some(x => x === path[0]?.toLowerCase())) {\n        return [...path].slice(1)\n    }\n\n    return path\n}\n\nexport const sqlQuery = (json: string, query: string) => {\n    try {\n        const sqlTree = toAst(query)\n\n        if (!allowedSourceNames.some(x => x === String(sqlTree.source.name.values[0]).toLowerCase())) {\n            return new SyntaxError(String(sqlTree.source.name.values[0]))\n        }\n\n        const sourceDataObject = jsonParseSafe(json)\n\n        return executeQuery(sqlTree, sourceDataObject)\n    } catch (e) {\n        return e as Error\n    }\n}\n\nconst mapper = (v: object, fields: Field[], source: From) => {\n    if (fields.some(x => x.field.value === '*')) {\n        return v\n    }\n\n    return mapObject(fields, v, source)\n}\n\nconst get = (obj: any, path: (string | number)[], defaultValue: any = undefined) => {\n    const travel = (regexp: any) =>\n        String.prototype.split\n            .call(path, regexp)\n            .filter(Boolean)\n            .reduce((res, key) => (res !== null && res !== undefined ? res[key] : res), obj)\n    const result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/)\n    return result === undefined || result === obj ? defaultValue : result\n}\n\nconst slice = (array: any[], start: number, end: number) => {\n    let length = array == null ? 0 : array.length\n    if (!length) {\n        return []\n    }\n    start = start == null ? 0 : start\n    end = end === undefined ? length : end\n\n    if (start < 0) {\n        start = -start > length ? 0 : length + start\n    }\n    end = end > length ? length : end\n    if (end < 0) {\n        end += length\n    }\n    length = start > end ? 0 : (end - start) >>> 0\n    start >>>= 0\n\n    let index = -1\n    const result = new Array(length)\n    while (++index < length) {\n        result[index] = array[index + start]\n    }\n    return result\n}\nconst take = (array: any[], n = 1) => {\n    if (!(array != null && array.length)) {\n        return []\n    }\n\n    return slice(array, 0, n < 0 ? 0 : n)\n}\n\nexport const executeQuery = (sqlTree: SQLTree, sourceDataObject: object) => {\n    const fromPath = [...sqlTree.source.name.values]\n    fromPath.shift()\n\n    let data = sourceDataObject\n\n    if (fromPath.length > 0) {\n        data = get(data, fromPath.slice(0))\n    }\n\n    if (!Array.isArray(data)) {\n        return mapper(data, sqlTree.fields, sqlTree.source)\n    }\n\n    const filtered = data.filter(v => {\n        if (!sqlTree.where || !sqlTree.where.conditions) {\n            return true\n        }\n        const leftValue = sqlTree.where.conditions.left\n        const rightValue = sqlTree.where.conditions.right\n        const operation = sqlTree.where.conditions.operation\n\n        return compareOperands(operation, leftValue, rightValue, v)\n    })\n\n    const ordered = orderBy(\n        filtered,\n        sqlTree.order ? sqlTree.order.orderings.map(x => x.value.value) : [],\n        sqlTree.order ? sqlTree.order.orderings.map(x => x.direction) : []\n    )\n    const limited = take(\n        ordered,\n        sqlTree.limit?.value?.value ? parseInt(sqlTree.limit.value.value.toString()) : 999999999999999\n    )\n    const mapped = limited.map(v => mapper(v, sqlTree.fields, sqlTree.source))\n\n    return mapped\n}\n\nconst operators = {\n    modulo: '%',\n} as const\nconst compareOperands = (operation: string, left: Operand, right: Operand, value: object): boolean => {\n    const leftValue = get(value, computePath(left?.values))\n\n    switch (operation.toLowerCase()) {\n        case 'or':\n            return (\n                compareOperands(left.operation, left.left, left.right, value) ||\n                compareOperands(right.operation, right.left, right.right, value)\n            )\n        case 'and':\n            return (\n                compareOperands(left.operation, left.left, left.right, value) &&\n                compareOperands(right.operation, right.left, right.right, value)\n            )\n\n        case '=':\n        case 'is':\n            return leftValue === right.value\n        case '!=':\n        case 'is not':\n        case '<>':\n            return leftValue !== right.value\n        case 'like': {\n            const leftStr = String(leftValue)\n            const rightStr = String(right.value)\n            if (rightStr.startsWith(operators.modulo) && rightStr.endsWith(operators.modulo)) {\n                if (leftStr.includes(rightStr.substring(1, rightStr.length - 1))) {\n                    return true\n                }\n            } else if (rightStr.startsWith(operators.modulo)) {\n                if (leftStr.endsWith(rightStr.substring(rightStr.indexOf(operators.modulo) + 1))) {\n                    return true\n                }\n            } else if (rightStr.endsWith(operators.modulo)) {\n                if (leftStr.startsWith(rightStr.substring(0, rightStr.indexOf(operators.modulo)))) {\n                    return true\n                }\n            }\n            return false\n        }\n        case 'not like': {\n            const leftStr = String(leftValue)\n            const rightStr = String(right.value)\n            if (rightStr.startsWith(operators.modulo) && rightStr.endsWith(operators.modulo)) {\n                if (leftStr.includes(rightStr.substring(1, rightStr.length - 1))) {\n                    return false\n                }\n            } else if (rightStr.startsWith(operators.modulo)) {\n                if (leftStr.endsWith(rightStr.substring(rightStr.indexOf(operators.modulo) + 1))) {\n                    return false\n                }\n            } else if (rightStr.endsWith(operators.modulo)) {\n                if (leftStr.startsWith(rightStr.substring(0, rightStr.indexOf(operators.modulo)))) {\n                    return false\n                }\n            }\n            return true\n        }\n        case '>':\n            return !!right.value && leftValue > right.value\n        case '>=':\n            return !!right.value && leftValue >= right.value\n        case '<':\n            return !!right.value && leftValue < right.value\n        case '<=':\n            return !!right.value && leftValue <= right.value\n        case 'in':\n            return Array.isArray(right.value) && right.value.filter(x => x.value === leftValue).length > 0\n    }\n    return false\n}\n\nconst mapObject = (fields: Field[], mapped: object, source: From) => {\n    const mappedObject: {\n        [key: string]: any\n    } = {}\n    fields.forEach(field => {\n        const value = get(\n            mapped,\n            field.field.values.filter(val => val !== source.alias?.value)\n        )\n        mappedObject[field.name.value] = field.function ? applyFunction(field.function.name, value) : value\n    })\n    return mappedObject\n}\n\nconst applyFunction = (functionName: string, value: any) => {\n    const func = functionName.toLowerCase()\n    if (func === 'lower') {\n        return String(value).toLowerCase()\n    }\n    if (func === 'upper') {\n        return String(value).toUpperCase()\n    }\n    if (func === 'trim') {\n        return String(value).trim()\n    }\n    if (func === 'trimleft') {\n        return String(value).trimLeft()\n    }\n    if (func === 'trimright') {\n        return String(value).trimRight()\n    }\n    if (func === 'reverse') {\n        return String(value).split('').reverse().join('')\n    }\n    if (func === 'length' || func === 'len') {\n        return String(value).length\n    }\n    return value\n}\n","import * as React from 'react'\nimport { FC, ReactElement } from 'react'\nimport { useMeasure } from 'react-use'\nimport { CardHeader } from 'reactstrap'\nimport styles from './GrabbleHeader.module.scss'\n\ntype Props = {\n    title: string\n    children: ReactElement\n}\n\nexport const GrabbleHeader: FC<Props> = ({ title, children }) => {\n    const [parentref, { height: parentHeight }] = useMeasure<HTMLDivElement>()\n    const [headerRef, { height: headerHeight }] = useMeasure<HTMLDivElement>()\n    const height = parentHeight - headerHeight * 2 - 2\n    console.log({ title, parentHeight })\n    return (\n        <div ref={parentref} className={`${styles.draggable} h-100 `}>\n            <div className=\"px-2\">\n                <CardHeader className=\"border-0 pr-0\" style={{ background: 'transparent' }}>\n                    <div ref={headerRef}>\n                        <u className=\"font-weight-bold text-large h5\">{title}</u>\n                        <span className={`float-right ${styles.grabber}`}>\n                            <i className=\"material-icons\">drag_indicator</i>\n                        </span>\n                    </div>\n                </CardHeader>\n                <div\n                    style={{\n                        height: `${height}px`,\n                        overflowY: 'auto',\n                        overflowX: 'hidden',\n                    }}\n                >\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { logError } from '../core/logging/logger'\n\nexport const themeDeps = new Map([\n    [\n        'materia',\n        () => import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css'),\n    ],\n    [\n        'darkly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css'),\n    ],\n    [\n        'sandstone',\n        () => import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css'),\n    ],\n    ['cosmo', () => import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css')],\n    [\n        'cyborg',\n        () => import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css'),\n    ],\n    [\n        'flatly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css'),\n    ],\n    [\n        'journal',\n        () => import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css'),\n    ],\n    [\n        'litera',\n        () => import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css'),\n    ],\n    ['lumen', () => import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css')],\n    ['lux', () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css')],\n    ['minty', () => import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css')],\n    ['pulse', () => import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css')],\n    [\n        'simplex',\n        () => import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css'),\n    ],\n    ['slate', () => import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css')],\n    ['solar', () => import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css')],\n    [\n        'spacelab',\n        () => import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css'),\n    ],\n    [\n        'superhero',\n        () => import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css'),\n    ],\n    [\n        'united',\n        () => import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css'),\n    ],\n    ['yeti', () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css')],\n] as const)\n\nexport const importThemeStyleCustom = (theme: GeneralTheme | null) => {\n    if (theme) {\n        const themeLoader = themeDeps.get(theme)\n        if (themeLoader) {\n            return themeLoader()\n        }\n    }\n\n    logError(`${theme}: theme is not defined`)\n\n    return themeDeps.values().next().value()\n}\n\nexport const availableGeneralThemes = [\n    'materia',\n    'darkly',\n    'sandstone',\n    'cosmo',\n    'cyborg',\n    'flatly',\n    'journal',\n    'litera',\n    'lumen',\n    'lux',\n    'minty',\n    'pulse',\n    'simplex',\n    'slate',\n    'solar',\n    'spacelab',\n    'superhero',\n    'united',\n    'yeti',\n] as const\nexport type GeneralTheme = typeof availableGeneralThemes[number]\n\nexport const availableEditorThemes = ['github', 'monokai', 'tomorrow', 'solarized_dark', 'terminal'] as const\nexport type EditorTheme = typeof availableEditorThemes[number]\n","import * as React from 'react'\nimport { version } from '../../package.json'\nimport { GeneralTheme, availableGeneralThemes, availableEditorThemes, EditorTheme } from 'themes/themes'\nimport { switchTheme, switchEditorTheme } from 'actions/actions'\nimport { connect } from 'react-redux'\nimport { getTheme, getEditorTheme } from 'store/selectors'\nimport { RootState } from 'state/State'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    Collapse,\n    Nav,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    NavItem,\n    NavLink,\n    Dropdown,\n} from 'reactstrap'\nimport { withErrorBoundary } from './common/ErrorBoundary'\nimport { memo, useCallback, FC } from 'react'\nimport { withPerformance } from 'core/logging/performance'\n\ninterface Props {\n    setGeneralTheme: typeof switchTheme\n    setEditorTheme: typeof switchEditorTheme\n    currentTheme: GeneralTheme | null\n    currentEditorTheme: EditorTheme\n}\n\nconst Header: FC<Props> = ({ setGeneralTheme, currentTheme, setEditorTheme, currentEditorTheme }) => {\n    const [isOpen, switchIsOpen] = useToggleState()\n    const [dropDownIsOpen, toggleDropdown] = useToggleState()\n\n    return (\n        <>\n            <Navbar color=\"dark\" dark={true} expand=\"md\">\n                <NavbarBrand href=\"/\">Keyrier JSON</NavbarBrand>\n                <NavbarToggler role=\"presentation\" onClick={switchIsOpen} />\n                <Collapse isOpen={isOpen} navbar={true}>\n                    <Nav className=\"ml-auto\" navbar={true}>\n                        <NavItem>\n                            <Dropdown isOpen={dropDownIsOpen} toggle={toggleDropdown}>\n                                <DropdownToggle nav={true} caret={true}>\n                                    Theme\n                                </DropdownToggle>\n                                <DropdownMenu right={true}>\n                                    <DropdownItem header={true}>Choose editor theme</DropdownItem>\n                                    {availableEditorThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setEditorTheme}\n                                            key={index}\n                                            active={currentEditorTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={false}\n                                        />\n                                    ))}\n                                    <DropdownItem header={true}>Choose general theme</DropdownItem>\n\n                                    {availableGeneralThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setGeneralTheme}\n                                            key={index}\n                                            active={currentTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={true}\n                                        />\n                                    ))}\n                                </DropdownMenu>\n                            </Dropdown>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json/releases/latest\">\n                                v{version}\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </>\n    )\n}\n\ntype ThemeDropDownItemProps<T extends GeneralTheme | EditorTheme> = {\n    theme: T\n    active: boolean\n    setTheme: (v: T) => void\n    reloadOnChange: boolean\n}\n\nconst ThemeDropDownItem = <T extends GeneralTheme | EditorTheme>(props: ThemeDropDownItemProps<T>) => {\n    const { theme, active, setTheme, reloadOnChange } = props\n    const onClick = useCallback(() => {\n        setTheme(theme)\n        if (reloadOnChange) {\n            setTimeout(() => window.location.reload())\n        }\n    }, [theme, setTheme, reloadOnChange])\n    return (\n        <DropdownItem active={active} onClick={onClick}>\n            {theme}\n        </DropdownItem>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    currentTheme: getTheme(state),\n    currentEditorTheme: getEditorTheme(state),\n})\n\nexport default connect(mapStateToProps, { setGeneralTheme: switchTheme, setEditorTheme: switchEditorTheme })(\n    memo(withErrorBoundary(withPerformance(Header, 'Header')))\n)\n","import * as React from 'react'\nimport { Button } from 'reactstrap'\nimport { memo, useCallback, ChangeEvent, FC } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\ninterface Props {\n    header: [string, string]\n    id: number\n    onChange: (h: [string, string]) => void\n    onRemove: (h: [string, string]) => void\n}\n\nexport const RenderHeaderInput: FC<Props> = memo(\n    withErrorBoundary(({ header, onRemove, onChange, id }) => {\n        const [key, value] = header\n\n        const onKeyChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([e.target.value, value]), [\n            onChange,\n            value,\n        ])\n        const onValueChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([key, e.target.value]), [\n            onChange,\n            key,\n        ])\n        const onRemoveCallback = useCallback(() => onRemove(header), [onRemove, header])\n\n        return (\n            <div className=\"row align-items-center\">\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={key}\n                        id={`headerName${id}`}\n                        type=\"text\"\n                        name={`headerName${id}`}\n                        placeholder=\"enter an name\"\n                        onChange={onKeyChange}\n                    />\n                </div>\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={value}\n                        type=\"text\"\n                        name={`headerValue${id}`}\n                        id={`headerValue${id}`}\n                        placeholder=\"enter an value\"\n                        onChange={onValueChange}\n                    />\n                </div>\n                <div className=\"col-sm-2\">\n                    <Button outline={true} color=\"danger\" onClick={onRemoveCallback}>\n                        remove\n                    </Button>\n                </div>\n            </div>\n        )\n    })\n)\n","import * as React from 'react'\nimport { FC, memo, useCallback, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Alert, Button, Form, FormGroup } from 'reactstrap'\nimport { updateSource } from '../../actions/actions'\nimport { withErrorBoundary } from '../../components/common/ErrorBoundary'\nimport { logError } from '../../core/logging/logger'\nimport { useChangeEventState, useToggleState } from '../../hooks/hooks'\nimport { RenderHeaderInput } from './RequestHeader'\nimport { customToString } from '../../core/converters/string'\n\ninterface Props {\n    onFinish: () => void\n    setSource: (src: string) => void\n}\n\nconst HttpRequestSource: FC<Props> = ({ onFinish, setSource }) => {\n    const [method, setMethod] = useChangeEventState('GET')\n    const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n    const [body, setBody] = useChangeEventState('')\n    const [headers, setHeaders] = useState([['Accept', 'application/json'] as [string, string]])\n    const [error, setError] = useState(null as TypeError | null)\n    const [hasBody, setHasBody] = useToggleState()\n\n    const submit = useCallback(async () => {\n        const requestInit: RequestInit = {\n            method,\n            headers,\n            body: hasBody ? body : null,\n        }\n        const request = new Request(url, requestInit)\n        setError(null)\n\n        let json: string\n        try {\n            const result = await fetch(request)\n            json = await result.json()\n        } catch (e) {\n            logError('HttpRequestSource.submit', e)\n            setError(e)\n            return\n        }\n        setSource(customToString(json))\n        onFinish()\n    }, [method, url, body, headers, hasBody, setSource, onFinish])\n\n    return (\n        <div id=\"HttpRequestSource\">\n            <FormGroup>\n                <label htmlFor=\"requestMethod\">Method</label>\n                <select\n                    className=\"form-control-lg form-control\"\n                    defaultValue={method}\n                    name=\"requestMethod\"\n                    id=\"requestMethod\"\n                    onChange={setMethod}\n                >\n                    <option>GET</option>\n                    <option>POST</option>\n                    <option>PUT</option>\n                    <option>OPTIONS</option>\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <label htmlFor=\"requestUrl\">Request URL</label>\n                <input\n                    defaultValue={url}\n                    className=\"form-control-lg form-control\"\n                    type=\"url\"\n                    name=\"requestUrl\"\n                    id=\"requestUrl\"\n                    placeholder=\"enter an URL\"\n                    onChange={setUrl}\n                />\n            </FormGroup>\n            <div className=\"position-relative form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n                </label>\n            </div>\n            <Form inline={true} hidden={!hasBody}>\n                <FormGroup>\n                    <label>Body</label>\n                    <input\n                        className=\"form-control-lg form-control\"\n                        type=\"textarea\"\n                        value={body}\n                        onChange={setBody}\n                    />{' '}\n                </FormGroup>\n            </Form>\n            <label htmlFor=\"headers\">Request headers</label>{' '}\n            <Button\n                outline={true}\n                color=\"primary\"\n                onClick={() => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']])}\n            >\n                Add header\n            </Button>\n            <br />\n            <br />\n            <HeaderList headers={headers} onChange={setHeaders} />\n            <br />\n            <Button block={true} color=\"primary\" onClick={submit}>\n                Submit\n            </Button>\n            {error && (\n                <Alert color=\"danger\">\n                    Error: {error.message ? error.message : ''}\n                    {error.stack ? error.stack : ''}\n                </Alert>\n            )}\n        </div>\n    )\n}\n\ntype HeaderListProps = {\n    headers: Array<[string, string]>\n    onChange: (headers: Array<[string, string]>) => void\n}\n\nconst HeaderList: FC<HeaderListProps> = ({ headers, onChange }) => {\n    const onRemove = useCallback((header: [string, string]) => onChange(headers.filter(h => h !== header)), [\n        headers,\n        onChange,\n    ])\n    const onChangeCallback = useCallback(\n        (header: [string, string]) => {\n            const index = headers.indexOf(header)\n            headers[index] = { ...header }\n            onChange([...headers])\n        },\n        [headers, onChange]\n    )\n    return (\n        <>\n            {headers.map((header, index) => (\n                <RenderHeaderInput\n                    header={header}\n                    key={index}\n                    id={index}\n                    onChange={onChangeCallback}\n                    onRemove={onRemove}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default connect(null, { setSource: updateSource })(withErrorBoundary(memo(HttpRequestSource)))\n","import {\n    clearEditor,\n    redo,\n    resetEditor,\n    undo,\n    updateAutoFormatSource,\n    updateQueryMode,\n    updateSource,\n} from 'actions/actions'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport { logDebug } from 'core/logging/logger'\nimport { withPerformance } from 'core/logging/performance'\nimport { useToggleState } from 'hooks/hooks'\nimport * as React from 'react'\nimport { ChangeEvent, FC, memo, useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Button,\n    ButtonDropdown,\n    ButtonGroup,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n} from 'reactstrap'\nimport { ActionCreators } from 'redux-undo'\nimport { QueryMode, RootState } from 'state/State'\nimport { getCanRedo, getCanUndo, getQueryMode, getSourceAutoFormat } from 'store/selectors'\nimport HttpRequestSource from './source/RequestSource'\n\ninterface Props {\n    onFileContentReady: typeof updateSource\n    changeAutoFormat: typeof updateAutoFormatSource\n    onReset: typeof resetEditor\n    onClear: typeof clearEditor\n    setQueryMode: typeof updateQueryMode\n    mode: QueryMode\n    onUndo: typeof undo\n    onRedo: typeof redo\n    canRedo: boolean\n    canUndo: boolean\n    autoFormat: boolean\n    resetHistory: typeof ActionCreators.clearHistory\n}\n\nconst LateralMenu: FC<Props> = ({\n    onReset,\n    onFileContentReady,\n    onClear,\n    autoFormat,\n    changeAutoFormat,\n    onRedo,\n    onUndo,\n    canRedo,\n    canUndo,\n    setQueryMode,\n    mode,\n    resetHistory,\n}) => {\n    const [dropdownIsOpen, toggleDropdown] = useToggleState()\n    const [modalIsOpen, toggleModal] = useToggleState()\n    const handleFileChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            logDebug('onFileChange')\n            toggleDropdown()\n            if (e.target.files && e.target?.files?.length > 0) {\n                const fileReader = new FileReader()\n                logDebug('e.target.files', e.target.files[0].name)\n                fileReader.onload = () => {\n                    if (fileReader.result) {\n                        onFileContentReady(fileReader.result.toString())\n                    }\n                }\n                fileReader.readAsText(e.target.files[0])\n            }\n        },\n        [toggleDropdown, onFileContentReady]\n    )\n\n    const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n    return (\n        <>\n            <ButtonGroup className=\"d-flex\" vertical={true}>\n                <ButtonGroup vertical={false}>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onUndo}\n                        disabled={!canUndo}\n                    >\n                        <i className=\"material-icons mr-1 md-18\">undo</i>\n                        <span>Undo</span>\n                    </Button>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onRedo}\n                        disabled={!canRedo}\n                    >\n                        Redo\n                        <i className=\"material-icons mr-1 md-18\">redo</i>\n                    </Button>\n                </ButtonGroup>\n                <br />\n                <br />\n                <Label\n                    className=\"d-flex justify-content-center align-content-between\"\n                    check={true}\n                    onClick={handleAutoFormatChange}\n                >\n                    <i className=\"material-icons mr-1\">{autoFormat ? 'check_box' : 'check_box_outline_blank'}</i>\n                    Auto format\n                </Label>\n                <br />\n                <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n                    <DropdownToggle\n                        className=\"d-flex justify-content-center align-content-between\"\n                        size={'lg'}\n                        id=\"import-menu-button\"\n                        color=\"primary\"\n                    >\n                        <i className=\"material-icons mr-1 md-18\">unarchive</i>\n                        Import\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem toggle={false}>\n                            <label id=\"import-file\">\n                                Browse JSON file...\n                                <input\n                                    type=\"file\"\n                                    name=\"file\"\n                                    id=\"sourceFile\"\n                                    style={{ display: 'none' }}\n                                    onChange={handleFileChange}\n                                />\n                            </label>\n                        </DropdownItem>\n                        <DropdownItem id=\"http-request\" onClick={toggleModal}>\n                            <label>HTTP request</label>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n                <br />\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"secondary\"\n                    size={'lg'}\n                    onClick={() => {\n                        onReset()\n                        resetHistory()\n                    }}\n                >\n                    <div>\n                        <i className=\"material-icons md-18 mr-1\">autorenew</i>\n                    </div>\n                    <div>Reset</div>\n                </Button>\n                <br />\n\n                {mode === 'Javascript' ? (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('SQL')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to SQL-like</div>\n                    </Button>\n                ) : (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('Javascript')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to JS</div>\n                    </Button>\n                )}\n\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"danger\"\n                    size={'lg'}\n                    onClick={onClear}\n                >\n                    <div>\n                        <i className=\"material-icons md-18  mr-1\">clear</i>\n                    </div>\n                    <div>Clear</div>\n                </Button>\n            </ButtonGroup>\n            <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n                <ModalBody>\n                    <HttpRequestSource onFinish={toggleModal} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    autoFormat: getSourceAutoFormat(state),\n    canUndo: getCanUndo(state),\n    canRedo: getCanRedo(state),\n    mode: getQueryMode(state),\n})\n\nexport default connect(mapStateToProps, {\n    onFileContentReady: updateSource,\n    onReset: resetEditor,\n    onClear: clearEditor,\n    onUndo: undo,\n    onRedo: redo,\n    resetHistory: ActionCreators.clearHistory,\n    changeAutoFormat: updateAutoFormatSource,\n    setQueryMode: updateQueryMode,\n})(memo(withErrorBoundary(withPerformance(LateralMenu, 'LateralMenu'))))\n","import { updateLayouts } from 'actions/actions'\nimport { configuration } from 'config'\nimport { withPerformance } from 'core/logging/performance'\nimport * as React from 'react'\nimport { FC, lazy, Suspense } from 'react'\nimport { Responsive, WidthProvider } from 'react-grid-layout'\nimport 'react-grid-layout/css/styles.css'\nimport { connect } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport { QueryMode } from 'state/State'\nimport { getLayouts, getQueryMode } from 'store/selectors'\nimport appStyles from './App.module.scss'\nimport { GrabbleHeader } from './common/GrabbleHeader'\nimport grabbleStyles from './common/GrabbleHeader.module.scss'\nimport Header from './Header'\nimport LateralMenu from './LateralMenu'\n\nconst ResponsiveGridLayout = WidthProvider(Responsive)\nconst SourceEditor = lazy(() => import(/* webpackChunkName: \"SourceEditor\" */ 'components/source/SourceEditor'))\nconst Output = lazy(() => import(/* webpackChunkName: \"Output\" */ 'components/output/Output'))\nconst QueryEditor = lazy(() => import(/* webpackChunkName: \"QueryEditor\" */ 'components/query/QueryEditor'))\n\ntype Props = {\n    mode: QueryMode\n    layouts: ReactGridLayout.Layouts\n    updateGridLayouts: typeof updateLayouts\n}\nconst App: FC<Props> = ({ mode, layouts, updateGridLayouts }) => {\n    const onLayoutChange = (_: ReactGridLayout.Layout[], newLayouts: ReactGridLayout.Layouts) =>\n        updateGridLayouts(newLayouts)\n\n    return (\n        <>\n            <Header />\n            <div className=\"container-fluid mb-5\">\n                <h1 className=\"my-5\">Paste your JSON and Query it.</h1>\n                <ResponsiveGridLayout\n                    autoSize={true}\n                    className=\"layout\"\n                    isResizable={true}\n                    layouts={layouts}\n                    draggableHandle={`.${grabbleStyles.grabber}`}\n                    breakpoints={{ xs: 0, lg: 1024 }}\n                    cols={{ lg: 24, xs: 6 }}\n                    margin={[5, 5]}\n                    containerPadding={[5, 5]}\n                    rowHeight={25}\n                    onLayoutChange={onLayoutChange}\n                    compactType={null}\n                    maxRows={75}\n                >\n                    <div key={configuration.layout.keys.lateralMenuKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"Options\">\n                            <LateralMenu />\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.sourceEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"1. Paste your JSON:\">\n                            <Suspense fallback={'loading...'}>\n                                <SourceEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.queryEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title={`2. Type your ${mode} query:`}>\n                            <Suspense fallback={'loading...'}>\n                                <QueryEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.outputKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"3. View your results:\">\n                            <Suspense fallback={'loading...'}>\n                                <Output />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                </ResponsiveGridLayout>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default connect(state => ({ mode: getQueryMode(state), layouts: getLayouts(state) }), {\n    updateGridLayouts: updateLayouts,\n})(withPerformance(App, 'App'))\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.toString())\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log('New content is available; please refresh.')\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log('Content is cached for offline use.')\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","export const jsonBeautify = (str: string | undefined) => {\n    if (typeof str !== 'string') {\n        return ''\n    }\n\n    const parsed = jsonParseSafe(str)\n    if (typeof parsed === 'string') {\n        return parsed\n    }\n\n    if (parsed === null) {\n        return ''\n    }\n\n    return JSON.stringify(parsed, null, 2)\n}\n\nexport const jsonParseSafe = (str: string | null) => {\n    if (typeof str !== 'string' || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n","import { combineReducers } from 'redux'\nimport undoable from 'redux-undo'\nimport { Action } from '../actions/actions'\nimport { configuration } from '../config'\nimport { codeEvaluation } from '../core/code'\nimport { jsonBeautify } from '../core/converters/json'\nimport { containsIgnoreCase } from '../core/converters/string'\nimport { arrayElementName } from '../models/array'\nimport initialStateJson from '../state/default-state.json'\nimport {\n    AppState,\n    emptyState,\n    getDefaultAppState,\n    getDefaultUserSettingsState,\n    OupoutState,\n    OupoutTableState,\n    QueryMode,\n    QueryState,\n    SourceState,\n    tabType,\n    UserSettingsState,\n} from '../state/State'\n\nexport const appReducer = (rootState = getDefaultAppState(), action: Action) => {\n    if (action.type === 'CLEAR_EDITOR') {\n        return emptyState\n    }\n    const newState =\n        rootState?.query && rootState?.source\n            ? ({\n                  ...rootState,\n                  query: query(rootState.query, action),\n                  source: source(rootState.source, action),\n              } as const)\n            : {}\n\n    const newOutputState = output(rootState, newState, action)\n    const ret = {\n        ...newState,\n        output: {\n            ...newOutputState,\n            table: table(newOutputState?.table ?? {}, action),\n        },\n    }\n\n    return ret\n}\n\nexport const source = (state: SourceState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_SOURCE_TEXT':\n            return {\n                ...state,\n                text: state?.autoFormat ? jsonBeautify(action.source.trim()) : action.source,\n            }\n        case 'UPDATE_AUTOFORMAT_SOURCE':\n            return {\n                ...state,\n                text: action.active ? jsonBeautify(state?.text?.trim()) : state?.text ?? '',\n                autoFormat: action.active,\n            }\n        default:\n            return state\n    }\n}\n\nexport const userSettings = (state: UserSettingsState | undefined = getDefaultUserSettingsState(), action: Action) => {\n    switch (action.type) {\n        case 'RESET_EDITOR':\n            return getDefaultUserSettingsState()\n        case 'SWITCH_GLOBAL_THEME':\n            return { ...state, globalTheme: action.theme }\n        case 'SWITCH_EDITOR_THEME':\n            return { ...state, editorTheme: action.theme }\n        case 'UPDATE_LAYOUTS':\n            return { ...state, layouts: action.layouts }\n        default:\n            return state\n    }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n            return {\n                ...state,\n                text: action.query,\n            }\n        case 'UPDATE_QUERY_MODE':\n            return {\n                ...state,\n                mode: action.mode,\n                text:\n                    action.mode === 'SQL'\n                        ? initialStateJson.query.text\n                        : '// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// \\n\\n      data\\n    ',\n            } as const\n        default:\n            return state\n    }\n}\n\nexport const computeOutput = (\n    previousState: OupoutState,\n    sourceString: string,\n    queryString: string,\n    action: Action,\n    mode: QueryMode\n) => {\n    const evaluation = codeEvaluation(sourceString, queryString, mode)\n\n    if (evaluation instanceof Error) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            errorMessage: evaluation.message,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n\n    const { text, obj } = evaluation ?? { text: null, obj: null }\n    let displayedColumns = new Array<string>()\n    if (Array.isArray(obj)) {\n        const keyMap: { [key: string]: string } = {}\n        obj.forEach(d => {\n            if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n                const keysToAdd = d ? (typeof d === 'object' ? Object.keys(d) : [arrayElementName]) : []\n                keysToAdd.forEach(key => (keyMap[key] = key))\n            }\n        })\n        displayedColumns = Object.keys(keyMap)\n            .filter(key => key && typeof key === 'string' && key.trim() !== '')\n            .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n    }\n    const isModalOpen =\n        previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n            ? previousState && !previousState.table.isModalOpen\n            : previousState && previousState.table\n            ? previousState.table.isModalOpen\n            : false\n\n    let selectedTab: tabType = Array.isArray(obj) ? 'Table' : 'RawJson'\n\n    if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n        selectedTab = action.tab\n    }\n    return {\n        selectedTab,\n        obj: obj,\n        objSize: text ? text.length : 0,\n        searchTerm: '',\n        match: false,\n        table: {\n            isArray: Array.isArray(obj),\n            isModalOpen,\n            displayedColumns,\n            columns: displayedColumns,\n            groupBy: [],\n        },\n    } as const\n}\n\nexport const output = (previousState: AppState, newState: AppState | null, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n        case 'UPDATE_SOURCE_TEXT':\n        case 'UPDATE_TABLE_COLUMNS':\n        case 'UPDATE_TABLE_GROUP_BY':\n            if (\n                previousState?.source?.text === newState?.source?.text &&\n                previousState?.query?.text === newState?.query?.text\n            ) {\n                return previousState.output\n            }\n            if (newState) {\n                return computeOutput(\n                    newState.output ?? {},\n                    newState.source?.text ? newState.source.text : '',\n                    newState.query?.text ? newState.query.text : '',\n                    action,\n                    newState.query?.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n        case 'TOGGLE_OUTPUT_TABLE_MODAL':\n            return newState\n                ? {\n                      ...newState.output,\n                      table: {\n                          ...(newState.output ? newState.output.table : {}),\n                          isModalOpen: newState.output?.table ? !newState.output.table.isModalOpen : false,\n                      },\n                  }\n                : {}\n        case 'UPDATE_OUTPUT_TAB_SELECTION':\n            if (newState) {\n                return {\n                    ...newState.output,\n                    selectedTab: action.tab,\n                }\n            }\n            break\n        case 'UPDATE_OUTPUT_SEARCH_TERM':\n            if (newState && newState.output) {\n                return {\n                    ...filter(newState.output, action.searchTerm),\n                    searchTerm: action.searchTerm,\n                    selectedTab: 'RawJson',\n                } as const\n            }\n            break\n        default:\n            if (newState?.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source?.text ? newState.source.text : '',\n                    newState.query?.text ? newState.query.text : '',\n                    action,\n                    newState.query?.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n    }\n    return {}\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n    if (typeof src !== 'string' && typeof src !== 'object') {\n        return { match: false, filteredObj: src }\n    }\n\n    if (typeof src === 'string') {\n        if (containsIgnoreCase(src, searchTerm)) {\n            return { match: true, filteredObj: src }\n        }\n        return { match: false, filteredObj: src }\n    }\n    const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n    const keys = Array.isArray(obj)\n        ? Array.from({ length: obj.length }, (_, k) => k)\n        : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n    let result = false\n\n    for (const propertyName of keys) {\n        const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n        if (propertyNameContains) {\n            result = true\n            continue\n        }\n        const child = obj[propertyName]\n        const { match, filteredObj } = containsTerm(child, searchTerm)\n        if (propertyNameContains || match) {\n            result = true\n            obj[propertyName] = filteredObj\n        } else {\n            if (Array.isArray(obj) && typeof propertyName === 'number') {\n                obj.splice(propertyName, 1)\n            } else {\n                delete obj[propertyName]\n            }\n        }\n    }\n    if (!result) {\n        if (!Array.isArray(obj)) {\n            keys.forEach((propertyName: string | number) => delete obj[propertyName])\n        } else {\n            obj.length = 0\n        }\n    }\n    return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n    if (!searchTerm || searchTerm.trim() === '' || !state) {\n        return { ...state, match: false }\n    }\n    const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n    if (match) {\n        return { ...state, obj: filteredObj, match }\n    }\n\n    return state\n}\n\nconst table = (state: OupoutTableState | undefined, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_TABLE_COLUMNS':\n            let groupByList = state?.groupBy ? state.groupBy : []\n            groupByList.forEach(groupBy => {\n                if (action.columns.indexOf(groupBy) === -1) {\n                    groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n                }\n            })\n            return {\n                ...state,\n                displayedColumns: action.columns,\n                groupBy: groupByList,\n            }\n        case 'UPDATE_TABLE_GROUP_BY':\n            return {\n                ...state,\n                groupBy: action.groupBy\n                    .filter(gb => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1)\n                    .filter(gb => gb !== 'Group by...'),\n            }\n        default:\n            return state\n    }\n}\n\nexport const resetApp = (state = getDefaultAppState(), action: Action) => {\n    if (action.type === 'RESET_EDITOR') {\n        return appReducer(getDefaultAppState(), action)\n    }\n    return appReducer(state, action)\n}\n\nconst rootReducers = combineReducers({\n    app: undoable(resetApp, {\n        undoType: 'APP_UNDO',\n        redoType: 'APP_REDO',\n        limit: configuration.limitUndo,\n    }),\n    userSettings,\n})\nexport default rootReducers\n","import { configuration } from 'config'\nimport { logError } from 'core/logging/logger'\nimport localForage from 'localforage'\nimport { merge } from 'lodash-es'\nimport { toast } from 'react-toastify'\nimport { StateWithHistory } from 'redux-undo'\nimport { AppState, getDefaultAppState, getDefaultUserSettingsState, UserSettingsState } from 'state/State'\n\nconst persistAppState = (appstate: StateWithHistory<AppState>) => {\n    persist(configuration.storageKey.appState, appstate)\n}\n\nconst persistUserSettings = (userSettings: UserSettingsState) => {\n    persist(configuration.storageKey.userSettings, userSettings)\n}\n\nconst getUserSettings = () => loadUserSettings(configuration.storageKey.userSettings) as Promise<UserSettingsState>\nconst getAppState = () => loadAppState(configuration.storageKey.appState) as Promise<StateWithHistory<AppState>>\n\nconst persist = async (key: string, value: object | undefined) => {\n    try {\n        await localForage.setItem(key, value)\n    } catch (error) {\n        toast.warn(`Error while saving ${key} to storage. ${error}`)\n    }\n}\n\nconst getDefault = (key: string) => {\n    switch (key) {\n        case configuration.storageKey.appState:\n            return getDefaultAppState()\n        case configuration.storageKey.userSettings:\n            return getDefaultUserSettingsState()\n        default:\n            throw new Error(`no defaul value for ${key}`)\n    }\n}\n\nconst loadAppState = async (key: string) => {\n    let present = merge({}, getDefault(key))\n    try {\n        const savedState = await localForage.getItem<StateWithHistory<AppState>>(key)\n        return merge({ present }, savedState ?? {})\n    } catch (error) {\n        logError(error)\n    }\n\n    return {}\n}\nconst loadUserSettings = async (key: string) => {\n    let state = getDefault(key)\n    try {\n        const savedState = await localForage.getItem<UserSettingsState>(key)\n        return merge(state, savedState ?? {})\n    } catch (error) {\n        logError(error)\n    }\n\n    return {}\n}\n\nexport default {\n    getAppState,\n    getUserSettings,\n    persistAppState,\n    persistUserSettings,\n}\n","import rootReducers from 'reducers/reducers'\nimport { compose, createStore } from 'redux'\nimport persistence from './persistence'\n\nexport const configureStore = async () => {\n    const appState = await persistence.getAppState()\n    const userSettingsState = await persistence.getUserSettings()\n\n    const composeEnhancers =\n        typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n            ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n            : compose\n\n    const store = createStore(\n        rootReducers,\n        {\n            app: {\n                past: appState.past ?? [],\n                present: appState.present,\n                future: appState.future ?? [],\n            },\n            userSettings: userSettingsState,\n        },\n        composeEnhancers()\n    )\n\n    store.subscribe(() => {\n        persistence.persistAppState(store.getState().app)\n        persistence.persistUserSettings(store.getState().userSettings)\n    })\n\n    return store\n}\n","import App from './components/App'\nimport { logDebug, logError } from './core/logging/logger'\nimport * as React from 'react'\nimport { Provider } from 'react-redux'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport { unregister } from './registerServiceWorker'\nimport { getTheme } from './store/selectors'\nimport { configureStore } from './store/store'\nimport { importThemeStyleCustom } from './themes/themes'\nimport './index.scss'\nconst bootstrap = async () => {\n    const store = await configureStore()\n    const promises = await Promise.all([\n        import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n        importThemeStyleCustom(getTheme(store.getState())),\n    ])\n\n    const ReactDOM = promises[0]\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root') as HTMLElement\n    )\n    unregister()\n}\n\nbootstrap()\n    .then(() => logDebug('loaded'))\n    .catch(e => logError('boostrap error', e))\n","import { configuration } from 'config'\nimport { StateWithHistory } from 'redux-undo'\nimport { EditorTheme, GeneralTheme } from 'themes/themes'\nimport { DeepReadonly } from 'utility-types'\nimport initialStateJson from './default-state.json'\n\nexport type itemType = any\n\nexport type AppState = DeepReadonly<{\n    source?: SourceState\n    query?: QueryState\n    output?: OupoutState\n    error?: Error\n}>\nexport type QueryState = DeepReadonly<{\n    text?: string\n    mode?: QueryMode\n}>\nexport type SourceState = DeepReadonly<{\n    text?: string\n    autoFormat?: boolean\n}>\nexport type OupoutState = DeepReadonly<{\n    searchTerm?: string\n    match?: boolean\n    selectedTab?: tabType\n    obj?: object | null\n    objSize?: number\n    errorMessage?: string\n    table?: OupoutTableState\n}>\nexport type OupoutTableState = DeepReadonly<{\n    isArray?: boolean\n    isModalOpen?: boolean\n    displayedColumns?: readonly string[]\n    columns?: readonly string[]\n    groupBy?: readonly string[]\n}>\nexport type UserSettingsState = DeepReadonly<{\n    globalTheme?: GeneralTheme\n    editorTheme?: EditorTheme\n    debugMode?: boolean\n    layouts?: ReactGridLayout.Layouts\n}>\n\nexport type tabType = 'RawJson' | 'Table'\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type RootState = DeepReadonly<{\n    app?: StateWithHistory<AppState>\n    userSettings?: UserSettingsState\n}>\n\nexport const getDefaultAppState = () => initialStateJson as AppState\nexport const defaultAppState = initialStateJson as AppState\nexport const getDefaultUserSettingsState = () =>\n    ({\n        globalTheme: 'pulse',\n        editorTheme: 'github',\n        debugMode: false,\n        layouts: {\n            xs: [\n                { i: configuration.layout.keys.lateralMenuKey, x: 0, y: 0, w: 6, h: 16, minW: 6, minH: 12 },\n                { i: configuration.layout.keys.sourceEditorKey, x: 0, y: 17, w: 6, h: 6, minW: 6, minH: 6 },\n                { i: configuration.layout.keys.queryEditorKey, x: 0, y: 24, w: 6, h: 6, minW: 6, minH: 6 },\n                { i: configuration.layout.keys.outputKey, x: 0, y: 31, w: 6, h: 20, minW: 6, minH: 12 },\n            ],\n            lg: [\n                { i: configuration.layout.keys.lateralMenuKey, x: 18, y: 0, w: 3, h: 20, minW: 3, minH: 20 },\n                { i: configuration.layout.keys.sourceEditorKey, x: 3, y: 0, w: 7, h: 15, minW: 6, minH: 10 },\n                { i: configuration.layout.keys.queryEditorKey, x: 10, y: 0, w: 7, h: 15, minW: 6, minH: 10 },\n                { i: configuration.layout.keys.outputKey, x: 3, y: 15, w: 14, h: 30, minW: 12, minH: 15 },\n            ],\n        },\n    } as const)\n\nexport const emptyState = {\n    source: { text: '', autoFormat: true },\n    query: { text: '', mode: 'SQL' },\n    output: {\n        match: false,\n        obj: {},\n        objSize: 2,\n        searchTerm: '',\n        selectedTab: 'RawJson',\n        table: {\n            isArray: false,\n            columns: [],\n            displayedColumns: [],\n            isModalOpen: false,\n            groupBy: [],\n        },\n    },\n} as const\n","import { getDefaultUserSettingsState, RootState } from 'state/State'\n\nconst copyArrayOrEmpty = <T = {}>(array: readonly T[] | null | undefined) => {\n    if (!array) {\n        return [] as T[]\n    }\n\n    return [...array] as T[]\n}\n\nexport const getOutputErrorMessage = (state: RootState) => state?.app?.present?.output?.errorMessage ?? ''\nexport const getOutputIsArray = (state: RootState) => !!state?.app?.present?.output?.table?.isArray\nexport const getOutputActiveTab = (state: RootState) => state?.app?.present?.output?.selectedTab ?? ('RawJson' as const)\nexport const getOutputObject = (state: RootState) => state?.app?.present?.output?.obj ?? {}\nexport const getOutputObjectSize = (state: RootState) => state?.app?.present?.output?.objSize ?? 0\nexport const getOutputSearchTerm = (state: RootState) => state?.app?.present?.output?.searchTerm\nexport const getOutputSearchMatch = (state: RootState) => !!state?.app?.present?.output?.match\nexport const getisOutputTableModalOpen = (state: RootState) => !!state?.app?.present?.output?.table?.isModalOpen\n\nexport const getTheme = (state: RootState) =>\n    state?.userSettings?.globalTheme ?? getDefaultUserSettingsState().globalTheme\nexport const getEditorTheme = (state: RootState) =>\n    state?.userSettings?.editorTheme ?? getDefaultUserSettingsState().editorTheme\nexport const getLayouts = (state: RootState) =>\n    (state?.userSettings?.layouts ?? getDefaultUserSettingsState().layouts) as ReactGridLayout.Layouts\n\nexport const getdisplayedColumns = (state: RootState) =>\n    copyArrayOrEmpty(state?.app?.present?.output?.table?.displayedColumns)\nexport const getOutputarray = (state: RootState) =>\n    Array.isArray(state?.app?.present?.output?.obj) ? copyArrayOrEmpty(state?.app?.present?.output?.obj) : []\nexport const getColumns = (state: RootState) => copyArrayOrEmpty(state?.app?.present?.output?.table?.columns)\nexport const getGroupBy = (state: RootState) => copyArrayOrEmpty(state?.app?.present?.output?.table?.groupBy)\n\nexport const getQueryText = (state: RootState) => state?.app?.present?.query?.text ?? ''\nexport const getQueryMode = (state: RootState) => state?.app?.present?.query?.mode ?? ('SQL' as const)\nexport const getSourceText = (state: RootState) => state?.app?.present?.source?.text ?? ''\nexport const getSourceAutoFormat = (state: RootState) => !!state?.app?.present?.source?.autoFormat\nexport const getCanRedo = (state: RootState) => state?.app?.future?.length !== 0\nexport const getCanUndo = (state: RootState) => (state?.app?.past?.length ?? 0) > 1\nexport const getDebugMode = (state: RootState) => !!state?.userSettings?.debugMode\n","import { useState, useCallback, ChangeEvent } from 'react'\n\nexport const useToggleState = (initial: boolean = false): readonly [boolean, () => void] => {\n    const [value, setValue] = useState(initial)\n    return [value, () => setValue(!value)]\n}\n\ntype HtmlElementHookable = HTMLSelectElement | HTMLInputElement\n\nexport const useChangeEventState = (\n    initialValue: string\n): readonly [string, (e: ChangeEvent<HtmlElementHookable>) => void] => {\n    const [value, setValue] = useState(initialValue)\n\n    const eventHandler = useCallback(\n        (event: ChangeEvent<HtmlElementHookable>) => {\n            if (event && event.target) {\n                setValue(event.target.value)\n            }\n        },\n        [setValue]\n    )\n\n    return [value, eventHandler]\n}\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { toast } from 'react-toastify'\nimport { Component, ComponentType } from 'react'\n\nconst MISSING_ERROR = 'Error was swallowed during propagation.'\n\ntype State = {\n    error?: Error\n}\n\nclass ErrorBoundary extends Component<{}, State> {\n    public readonly state: State = {\n        error: undefined,\n    }\n\n    public componentDidCatch(error: Error | null, info: object) {\n        this.setState({ error: error || new Error(MISSING_ERROR) }, () => this.notify(info))\n    }\n\n    public render() {\n        const { children } = this.props\n        const { error } = this.state\n\n        if (error) {\n            return <>An error occured</>\n        }\n\n        return children\n    }\n\n    private notify(info: object) {\n        logError('An error occured', this.state.error)\n        logError('error info:', info)\n        toast.error(JSON.stringify(info), { position: 'bottom-right', hideProgressBar: true, autoClose: false })\n    }\n}\n\nexport const withErrorBoundary = <T extends {}>(Wrapped: ComponentType<T>) => (props: T) => (\n    <ErrorBoundary>\n        <Wrapped {...props} />\n    </ErrorBoundary>\n)\n","import { isDebugMode } from 'core/misc/debug'\nimport Perfume from 'perfume.js'\nimport { IAnalyticsTrackerOptions } from 'perfume.js/dist/types/types'\nimport * as React from 'react'\nimport { ProfilerOnRenderCallback } from 'react'\nimport { logError, logEvents, logPerf } from './logger'\n\nconst analyticsTracker = (opt: IAnalyticsTrackerOptions) => {\n    logPerf(opt.metricName, opt.duration, opt.data)\n}\n\nconst options = {\n    // Metrics\n    firstContentfulPaint: true,\n    firstPaint: true,\n    firstInputDelay: true,\n    dataConsumption: true,\n    largestContentfulPaint: true,\n    navigationTiming: true,\n    // Analytics\n    analyticsTracker,\n    browserTracker: true,\n    // Logging\n    logPrefix: 'Perfume.js:',\n    logging: false,\n    // maxMeasureTime: 18000,\n    // maxDataConsumption: 18000,\n    warning: true,\n    debugging: false,\n}\n\nconst perfume = isDebugMode() ? new Perfume(options) : null\nexport const perfStart = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.start(name)\n}\n\nexport const perfEnd = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.end(name)\n}\n\nexport const perfEndPaint = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.endPaint(name)\n}\n\nexport const logPerfPeriodically = async () => {\n    const payload = []\n    for (let i = 0; i < 50; i++) {\n        if (logEvents.isEmpty()) {\n            break\n        }\n        const entry = logEvents.dequeue()\n\n        payload.push(entry)\n    }\n\n    if (payload.length === 0) {\n        return\n    }\n    const logUrl = 'https://us-central1-keyrier-json.cloudfunctions.net/perflogs'\n\n    try {\n        await fetch(logUrl, { method: 'POST', body: JSON.stringify(payload) })\n    } catch (error) {\n        logError('error sending perf logs', error)\n    }\n}\n\nexport const withPerformance = <P extends object>(Component: React.ComponentType<P>, name: string): React.FC<P> => ({\n    ...props\n}) => {\n    const onRender: ProfilerOnRenderCallback = (\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions\n    ) => {\n        logPerf(name, actualDuration, {\n            type: 'component-render',\n            id,\n            phase,\n            actualDuration,\n            baseDuration,\n            startTime,\n            commitTime,\n            interactions,\n        })\n    }\n\n    return (\n        <React.Profiler id={`perf-${name}`} onRender={onRender}>\n            <Component {...(props as P)} />\n        </React.Profiler>\n    )\n}\n","export const customToString = (obj: any | null | undefined): string => {\n    if (Array.isArray(obj)) {\n        return obj.map(e => customToString(e)).join(',')\n    }\n    if (typeof obj === 'object') {\n        return JSON.stringify(obj)\n    }\n    if (obj !== null && obj !== undefined) {\n        return obj.toString()\n    }\n\n    return ''\n}\n\nexport const takeFirst = (str: string | null | undefined, n: number) => {\n    if (typeof str !== 'string') {\n        return null\n    }\n    if (str.length <= n) {\n        return str\n    }\n    return `${str.substring(0, n)}...`\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n    if (!str || !part) {\n        return false\n    }\n    if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n        return true\n    }\n\n    return false\n}\n\nconst UNITS = ['B', 'kB', 'MB', 'GB']\n\nexport const prettyPrintBytes = (value: number) => {\n    if (!Number.isFinite(value)) {\n        throw new TypeError(`Expected a finite number, got ${typeof value}: ${value}`)\n    }\n\n    const isNegative = value < 0\n    const prefix = isNegative ? '-' : ''\n    if (isNegative) {\n        value = -value\n    }\n    if (value < 1) {\n        const numberStr = value.toString()\n        return prefix + numberStr + ' B'\n    }\n    const exponent = Math.min(Math.floor(Math.log10(value) / 3), UNITS.length - 1)\n    value = Number((value / Math.pow(1024, exponent)).toPrecision(3))\n    const numberString = value.toString()\n    const unit = UNITS[exponent]\n    return prefix + numberString + ' ' + unit\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggable\":\"GrabbleHeader_draggable__3DRIT\",\"grabber\":\"GrabbleHeader_grabber__12Y6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridborder\":\"App_gridborder__3A34e\"};","export const isDebugMode = () => (window as any).__DEBUG__\n","export const configuration = {\n    limitUndo: 9999,\n    storageKey: {\n        appState: 'keyrier-json.app.state',\n        userSettings: 'keyrier-json.user.settings.v1',\n    },\n    layout: {\n        keys: {\n            lateralMenuKey: 'LateralMenu',\n            sourceEditorKey: 'SourceEditor',\n            queryEditorKey: 'QueryEditor',\n            outputKey: 'Output',\n        },\n    },\n} as const\n"],"sourceRoot":""}