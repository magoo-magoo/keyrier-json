{"version":3,"sources":["../node_modules/brace/ext/language_tools.js"],"names":["ace","define","acequire","exports","module","oop","EventEmitter","lang","Range","Anchor","HashHandler","Tokenizer","comparePoints","SnippetManager","this","snippetMap","snippetNameMap","implement","getTokenizer","TabstopToken","str","_","stack","substr","test","inFormatString","tabstopId","parseInt","text","escape","ch","$tokenizer","start","regex","onMatch","val","state","length","expectIf","elseBranch","indexOf","changeCase","local","shift","t","unshift","next","token","merge","snippetVar","choices","slice","split","ts","fmtString","splitRegex","exec","guard","fmt","flag","code","splice","formatString","prototype","tokenizeTmSnippet","startState","getLineTokens","tokens","map","x","value","$getDefaultValue","editor","name","i","variables","__","replace","s","session","r","getWordRange","getTextRange","getLine","getCursorPosition","row","column","getUseSoftTabs","getTabSize","getVariableValue","varName","hasOwnProperty","tmStrFormat","re","RegExp","fmtTokens","_self","formatted","arguments","fmtParts","resolveVariables","gChangeCase","toUpperCase","toLowerCase","join","snippet","result","push","skip","gotoNext","processed","i1","insertSnippetForSelection","snippetText","cursor","line","tabString","getTabString","indentString","match","tabstops","forEach","p","id","index","some","expanding","copyValue","copy","lastIndexOf","arg","Math","max","apply","lines","end","range","getSelectionRange","tabstopManager","TabstopManager","selectionId","inVirtualSelectionMode","selection","addTabstops","insertSnippet","self","forEachSelection","keepOrder","tabNext","$getScope","scope","$mode","$id","pop","inlinePhp","c","getState","substring","getActiveScopes","scopes","includeScopes","expandWithTab","options","expandSnippetForSelection","before","after","snippets","findMatchingSnippet","dryRun","doc","removeInLine","replaceBefore","replaceAfter","M__","matchBefore","T__","matchAfter","content","snippetList","startRe","endRe","triggerRe","endTriggerRe","register","wrapRegexp","src","guardedRegexp","opening","addSnippet","old","unregister","tabTrigger","trigger","escapeRegExp","endTrigger","endGuard","Array","isArray","_signal","removeSnippet","nameMap","parseSnippetFile","m","list","JSON","parse","e","key","guardRe","getSnippetByName","call","$onChange","onChange","bind","$onChangeSelection","delayedCall","onChangeSelection","schedule","$onChangeSession","onChangeSession","$onAfterExec","onAfterExec","attach","ranges","$openTabstops","selectedTabstop","on","commands","keyBinding","addKeyboardHandler","keyboardHandler","detach","removeTabstopMarkers","removeListener","removeKeyboardHandler","delta","isRemove","action","startRow","lineDif","colDiff","$inChange","removeRange","updateLinkedFields","hasLinkedRanges","firstNonLinked","linked","snippetManager","original","command","readOnly","lead","anchor","isEmpty","containsLead","contains","containsAnchor","dir","min","selectTabstop","addTabstopMarkers","setRange","sel","multiSelect","toSingleRange","clone","addRange","fromPoints","moveRelative","dest","movePoint","tabstop","markerId","addMarker","removeMarker","bindKeys","Tab","ed","Shift-Tab","Esc","Return","changeTracker","setPosition","pos","update","$insertRight","point","diff","importCssString","Editor","expandSnippet","Renderer","VirtualRenderer","event","dom","$singleLineEditor","el","renderer","$maxLines","setHighlightActiveLine","setShowPrintMargin","setShowGutter","setHighlightGutterLine","$mouseHandler","$focusWaitTimout","$highlightTagPending","AcePopup","parentNode","createElement","popup","appendChild","style","display","setStyle","setOption","lastMouseEvent","noop","focus","$isFocused","$cursorLayer","restartTimer","element","opacity","$keepTextAreaAtCursor","highlight","$searchHighlight","clazz","getDocumentPosition","moveToPosition","selectionMarker","stop","hoverMarker","Infinity","setSelectOnHover","y","scrollTop","setRow","setHoverMarker","$pos","getRow","$textLayer","selected","childNodes","config","firstRow","selectedNode","removeCssClass","addCssClass","hideHoverMarker","suppressRedraw","_emit","getHoveredRow","addListener","container","getLength","data","bgTokenizer","$tokenizeRow","caption","last","matchMask","type","className","meta","maxW","$size","scrollerWidth","layerConfig","characterWidth","metaData","$updateOnChange","$computeWidth","screenWidth","$blockScrolling","isOpen","isTopdown","autoSelect","setData","setValue","stringRepeat","getData","clearSelection","moveCursorTo","scrollCursorIntoView","hide","show","lineHeight","topdownOnly","screenHeight","window","innerHeight","innerWidth","maxH","top","$borderSize","$maxPixelHeight","bottom","checkForSizeChanges","left","offsetWidth","getTextLeftOffset","$padding","$imageSize","parForEach","array","fn","callback","completed","arLength","err","ID_REGEX","retrievePrecedingIdentifier","buf","reverse","retrieveFollowingIdentifier","getCompletionPrefix","prefix","completers","completer","identifierRegexps","identifierRegex","util","Autocomplete","autoInsert","exactMatch","gatherCompletionsId","blurListener","changeListener","mousedownListener","mousewheelListener","changeTimer","updateCompletions","tooltipTimer","updateDocTooltip","$init","document","body","documentElement","insertMatch","getPopup","openPopup","keepPopupPosition","completions","filtered","setTheme","getTheme","setFontSize","getFontSize","getPixelPosition","base","rect","getBoundingClientRect","offset","scrollLeft","gutterWidth","off","cancel","hideDocTooltip","activated","activeElement","textInput","getElement","fromTooltip","relatedTarget","tooltipNode","goTo","where","filterText","getAllRanges","remove","execCommand","Up","Down","Ctrl-Up|Ctrl-Home","Ctrl-Down|Ctrl-End","Shift-Return","deleteSuffix","PageUp","gotoPageUp","PageDown","gotoPageDown","gatherCompletions","getSession","createAnchor","matches","total","getCompletions","results","concat","finished","showPopup","setFilter","_id","detachIfFinished","FilteredList","cancelContextMenu","all","getDocTooltip","docText","docHTML","showDocTooltip","item","margin","pointerEvents","tabIndex","onblur","onclick","onTooltipClick","innerHTML","textContent","right","isFocused","removeChild","a","target","nodeName","href","rel","startCommand","bindKey","filterCompletions","sort","b","score","prev","filter","items","needle","upper","lower","loop","distance","lastIndex","penalty","j","i2","wordDistance","prefixPos","getWordIndex","words","getValue","wordScores","Object","create","currentWord","word","idx","abs","wordScore","keys","textCompleter","keyWordCompleter","snippetCompleter","escapeHTML","setCompleters","addCompleter","onChangeMode","loadSnippetsForMode","mode","files","loadSnippetFile","modes","snippetFilePath","loadModule","doLiveAutocomplete","hasCompleter","defineOptions","enableBasicAutocompletion","set","addCommand","removeCommand","enableLiveAutocompletion","enableSnippets"],"mappings":"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","file":"static/js/41.16107293.chunk.js","sourcesContent":["ace.define(\"ace/snippets\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/event_emitter\", \"ace/lib/lang\", \"ace/range\", \"ace/anchor\", \"ace/keyboard/hash_handler\", \"ace/tokenizer\", \"ace/lib/dom\", \"ace/editor\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"./lib/oop\");\n  var EventEmitter = acequire(\"./lib/event_emitter\").EventEmitter;\n  var lang = acequire(\"./lib/lang\");\n  var Range = acequire(\"./range\").Range;\n  var Anchor = acequire(\"./anchor\").Anchor;\n  var HashHandler = acequire(\"./keyboard/hash_handler\").HashHandler;\n  var Tokenizer = acequire(\"./tokenizer\").Tokenizer;\n  var comparePoints = Range.comparePoints;\n\n  var SnippetManager = function SnippetManager() {\n    this.snippetMap = {};\n    this.snippetNameMap = {};\n  };\n\n  (function () {\n    oop.implement(this, EventEmitter);\n\n    this.getTokenizer = function () {\n      function TabstopToken(str, _, stack) {\n        str = str.substr(1);\n        if (/^\\d+$/.test(str) && !stack.inFormatString) return [{\n          tabstopId: parseInt(str, 10)\n        }];\n        return [{\n          text: str\n        }];\n      }\n\n      function escape(ch) {\n        return \"(?:[^\\\\\\\\\" + ch + \"]|\\\\\\\\.)\";\n      }\n\n      SnippetManager.$tokenizer = new Tokenizer({\n        start: [{\n          regex: /:/,\n          onMatch: function onMatch(val, state, stack) {\n            if (stack.length && stack[0].expectIf) {\n              stack[0].expectIf = false;\n              stack[0].elseBranch = stack[0];\n              return [stack[0]];\n            }\n\n            return \":\";\n          }\n        }, {\n          regex: /\\\\./,\n          onMatch: function onMatch(val, state, stack) {\n            var ch = val[1];\n\n            if (ch == \"}\" && stack.length) {\n              val = ch;\n            } else if (\"`$\\\\\".indexOf(ch) != -1) {\n              val = ch;\n            } else if (stack.inFormatString) {\n              if (ch == \"n\") val = \"\\n\";else if (ch == \"t\") val = \"\\n\";else if (\"ulULE\".indexOf(ch) != -1) {\n                val = {\n                  changeCase: ch,\n                  local: ch > \"a\"\n                };\n              }\n            }\n\n            return [val];\n          }\n        }, {\n          regex: /}/,\n          onMatch: function onMatch(val, state, stack) {\n            return [stack.length ? stack.shift() : val];\n          }\n        }, {\n          regex: /\\$(?:\\d+|\\w+)/,\n          onMatch: TabstopToken\n        }, {\n          regex: /\\$\\{[\\dA-Z_a-z]+/,\n          onMatch: function onMatch(str, state, stack) {\n            var t = TabstopToken(str.substr(1), state, stack);\n            stack.unshift(t[0]);\n            return t;\n          },\n          next: \"snippetVar\"\n        }, {\n          regex: /\\n/,\n          token: \"newline\",\n          merge: false\n        }],\n        snippetVar: [{\n          regex: \"\\\\|\" + escape(\"\\\\|\") + \"*\\\\|\",\n          onMatch: function onMatch(val, state, stack) {\n            stack[0].choices = val.slice(1, -1).split(\",\");\n          },\n          next: \"start\"\n        }, {\n          regex: \"/(\" + escape(\"/\") + \"+)/(?:(\" + escape(\"/\") + \"*)/)(\\\\w*):?\",\n          onMatch: function onMatch(val, state, stack) {\n            var ts = stack[0];\n            ts.fmtString = val;\n            val = this.splitRegex.exec(val);\n            ts.guard = val[1];\n            ts.fmt = val[2];\n            ts.flag = val[3];\n            return \"\";\n          },\n          next: \"start\"\n        }, {\n          regex: \"`\" + escape(\"`\") + \"*`\",\n          onMatch: function onMatch(val, state, stack) {\n            stack[0].code = val.splice(1, -1);\n            return \"\";\n          },\n          next: \"start\"\n        }, {\n          regex: \"\\\\?\",\n          onMatch: function onMatch(val, state, stack) {\n            if (stack[0]) stack[0].expectIf = true;\n          },\n          next: \"start\"\n        }, {\n          regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\",\n          token: \"\",\n          next: \"start\"\n        }],\n        formatString: [{\n          regex: \"/(\" + escape(\"/\") + \"+)/\",\n          token: \"regex\"\n        }, {\n          regex: \"\",\n          onMatch: function onMatch(val, state, stack) {\n            stack.inFormatString = true;\n          },\n          next: \"start\"\n        }]\n      });\n\n      SnippetManager.prototype.getTokenizer = function () {\n        return SnippetManager.$tokenizer;\n      };\n\n      return SnippetManager.$tokenizer;\n    };\n\n    this.tokenizeTmSnippet = function (str, startState) {\n      return this.getTokenizer().getLineTokens(str, startState).tokens.map(function (x) {\n        return x.value || x;\n      });\n    };\n\n    this.$getDefaultValue = function (editor, name) {\n      if (/^[A-Z]\\d+$/.test(name)) {\n        var i = name.substr(1);\n        return (this.variables[name[0] + \"__\"] || {})[i];\n      }\n\n      if (/^\\d+$/.test(name)) {\n        return (this.variables.__ || {})[name];\n      }\n\n      name = name.replace(/^TM_/, \"\");\n      if (!editor) return;\n      var s = editor.session;\n\n      switch (name) {\n        case \"CURRENT_WORD\":\n          var r = s.getWordRange();\n\n        case \"SELECTION\":\n        case \"SELECTED_TEXT\":\n          return s.getTextRange(r);\n\n        case \"CURRENT_LINE\":\n          return s.getLine(editor.getCursorPosition().row);\n\n        case \"PREV_LINE\":\n          // not possible in textmate\n          return s.getLine(editor.getCursorPosition().row - 1);\n\n        case \"LINE_INDEX\":\n          return editor.getCursorPosition().column;\n\n        case \"LINE_NUMBER\":\n          return editor.getCursorPosition().row + 1;\n\n        case \"SOFT_TABS\":\n          return s.getUseSoftTabs() ? \"YES\" : \"NO\";\n\n        case \"TAB_SIZE\":\n          return s.getTabSize();\n\n        case \"FILENAME\":\n        case \"FILEPATH\":\n          return \"\";\n\n        case \"FULLNAME\":\n          return \"Ace\";\n      }\n    };\n\n    this.variables = {};\n\n    this.getVariableValue = function (editor, varName) {\n      if (this.variables.hasOwnProperty(varName)) return this.variables[varName](editor, varName) || \"\";\n      return this.$getDefaultValue(editor, varName) || \"\";\n    };\n\n    this.tmStrFormat = function (str, ch, editor) {\n      var flag = ch.flag || \"\";\n      var re = ch.guard;\n      re = new RegExp(re, flag.replace(/[^gi]/, \"\"));\n      var fmtTokens = this.tokenizeTmSnippet(ch.fmt, \"formatString\");\n\n      var _self = this;\n\n      var formatted = str.replace(re, function () {\n        _self.variables.__ = arguments;\n\n        var fmtParts = _self.resolveVariables(fmtTokens, editor);\n\n        var gChangeCase = \"E\";\n\n        for (var i = 0; i < fmtParts.length; i++) {\n          var ch = fmtParts[i];\n\n          if (typeof ch == \"object\") {\n            fmtParts[i] = \"\";\n\n            if (ch.changeCase && ch.local) {\n              var next = fmtParts[i + 1];\n\n              if (next && typeof next == \"string\") {\n                if (ch.changeCase == \"u\") fmtParts[i] = next[0].toUpperCase();else fmtParts[i] = next[0].toLowerCase();\n                fmtParts[i + 1] = next.substr(1);\n              }\n            } else if (ch.changeCase) {\n              gChangeCase = ch.changeCase;\n            }\n          } else if (gChangeCase == \"U\") {\n            fmtParts[i] = ch.toUpperCase();\n          } else if (gChangeCase == \"L\") {\n            fmtParts[i] = ch.toLowerCase();\n          }\n        }\n\n        return fmtParts.join(\"\");\n      });\n      this.variables.__ = null;\n      return formatted;\n    };\n\n    this.resolveVariables = function (snippet, editor) {\n      var result = [];\n\n      for (var i = 0; i < snippet.length; i++) {\n        var ch = snippet[i];\n\n        if (typeof ch == \"string\") {\n          result.push(ch);\n        } else if (typeof ch != \"object\") {\n          continue;\n        } else if (ch.skip) {\n          gotoNext(ch);\n        } else if (ch.processed < i) {\n          continue;\n        } else if (ch.text) {\n          var value = this.getVariableValue(editor, ch.text);\n          if (value && ch.fmtString) value = this.tmStrFormat(value, ch);\n          ch.processed = i;\n\n          if (ch.expectIf == null) {\n            if (value) {\n              result.push(value);\n              gotoNext(ch);\n            }\n          } else {\n            if (value) {\n              ch.skip = ch.elseBranch;\n            } else gotoNext(ch);\n          }\n        } else if (ch.tabstopId != null) {\n          result.push(ch);\n        } else if (ch.changeCase != null) {\n          result.push(ch);\n        }\n      }\n\n      function gotoNext(ch) {\n        var i1 = snippet.indexOf(ch, i + 1);\n        if (i1 != -1) i = i1;\n      }\n\n      return result;\n    };\n\n    this.insertSnippetForSelection = function (editor, snippetText) {\n      var cursor = editor.getCursorPosition();\n      var line = editor.session.getLine(cursor.row);\n      var tabString = editor.session.getTabString();\n      var indentString = line.match(/^\\s*/)[0];\n      if (cursor.column < indentString.length) indentString = indentString.slice(0, cursor.column);\n      snippetText = snippetText.replace(/\\r/g, \"\");\n      var tokens = this.tokenizeTmSnippet(snippetText);\n      tokens = this.resolveVariables(tokens, editor);\n      tokens = tokens.map(function (x) {\n        if (x == \"\\n\") return x + indentString;\n        if (typeof x == \"string\") return x.replace(/\\t/g, tabString);\n        return x;\n      });\n      var tabstops = [];\n      tokens.forEach(function (p, i) {\n        if (typeof p != \"object\") return;\n        var id = p.tabstopId;\n        var ts = tabstops[id];\n\n        if (!ts) {\n          ts = tabstops[id] = [];\n          ts.index = id;\n          ts.value = \"\";\n        }\n\n        if (ts.indexOf(p) !== -1) return;\n        ts.push(p);\n        var i1 = tokens.indexOf(p, i + 1);\n        if (i1 === -1) return;\n        var value = tokens.slice(i + 1, i1);\n        var isNested = value.some(function (t) {\n          return typeof t === \"object\";\n        });\n\n        if (isNested && !ts.value) {\n          ts.value = value;\n        } else if (value.length && (!ts.value || typeof ts.value !== \"string\")) {\n          ts.value = value.join(\"\");\n        }\n      });\n      tabstops.forEach(function (ts) {\n        ts.length = 0;\n      });\n      var expanding = {};\n\n      function copyValue(val) {\n        var copy = [];\n\n        for (var i = 0; i < val.length; i++) {\n          var p = val[i];\n\n          if (typeof p == \"object\") {\n            if (expanding[p.tabstopId]) continue;\n            var j = val.lastIndexOf(p, i - 1);\n            p = copy[j] || {\n              tabstopId: p.tabstopId\n            };\n          }\n\n          copy[i] = p;\n        }\n\n        return copy;\n      }\n\n      for (var i = 0; i < tokens.length; i++) {\n        var p = tokens[i];\n        if (typeof p != \"object\") continue;\n        var id = p.tabstopId;\n        var i1 = tokens.indexOf(p, i + 1);\n\n        if (expanding[id]) {\n          if (expanding[id] === p) expanding[id] = null;\n          continue;\n        }\n\n        var ts = tabstops[id];\n        var arg = typeof ts.value == \"string\" ? [ts.value] : copyValue(ts.value);\n        arg.unshift(i + 1, Math.max(0, i1 - i));\n        arg.push(p);\n        expanding[id] = p;\n        tokens.splice.apply(tokens, arg);\n        if (ts.indexOf(p) === -1) ts.push(p);\n      }\n\n      var row = 0,\n          column = 0;\n      var text = \"\";\n      tokens.forEach(function (t) {\n        if (typeof t === \"string\") {\n          var lines = t.split(\"\\n\");\n\n          if (lines.length > 1) {\n            column = lines[lines.length - 1].length;\n            row += lines.length - 1;\n          } else column += t.length;\n\n          text += t;\n        } else {\n          if (!t.start) t.start = {\n            row: row,\n            column: column\n          };else t.end = {\n            row: row,\n            column: column\n          };\n        }\n      });\n      var range = editor.getSelectionRange();\n      var end = editor.session.replace(range, text);\n      var tabstopManager = new TabstopManager(editor);\n      var selectionId = editor.inVirtualSelectionMode && editor.selection.index;\n      tabstopManager.addTabstops(tabstops, range.start, end, selectionId);\n    };\n\n    this.insertSnippet = function (editor, snippetText) {\n      var self = this;\n      if (editor.inVirtualSelectionMode) return self.insertSnippetForSelection(editor, snippetText);\n      editor.forEachSelection(function () {\n        self.insertSnippetForSelection(editor, snippetText);\n      }, null, {\n        keepOrder: true\n      });\n      if (editor.tabstopManager) editor.tabstopManager.tabNext();\n    };\n\n    this.$getScope = function (editor) {\n      var scope = editor.session.$mode.$id || \"\";\n      scope = scope.split(\"/\").pop();\n\n      if (scope === \"html\" || scope === \"php\") {\n        if (scope === \"php\" && !editor.session.$mode.inlinePhp) scope = \"html\";\n        var c = editor.getCursorPosition();\n        var state = editor.session.getState(c.row);\n\n        if (typeof state === \"object\") {\n          state = state[0];\n        }\n\n        if (state.substring) {\n          if (state.substring(0, 3) == \"js-\") scope = \"javascript\";else if (state.substring(0, 4) == \"css-\") scope = \"css\";else if (state.substring(0, 4) == \"php-\") scope = \"php\";\n        }\n      }\n\n      return scope;\n    };\n\n    this.getActiveScopes = function (editor) {\n      var scope = this.$getScope(editor);\n      var scopes = [scope];\n      var snippetMap = this.snippetMap;\n\n      if (snippetMap[scope] && snippetMap[scope].includeScopes) {\n        scopes.push.apply(scopes, snippetMap[scope].includeScopes);\n      }\n\n      scopes.push(\"_\");\n      return scopes;\n    };\n\n    this.expandWithTab = function (editor, options) {\n      var self = this;\n      var result = editor.forEachSelection(function () {\n        return self.expandSnippetForSelection(editor, options);\n      }, null, {\n        keepOrder: true\n      });\n      if (result && editor.tabstopManager) editor.tabstopManager.tabNext();\n      return result;\n    };\n\n    this.expandSnippetForSelection = function (editor, options) {\n      var cursor = editor.getCursorPosition();\n      var line = editor.session.getLine(cursor.row);\n      var before = line.substring(0, cursor.column);\n      var after = line.substr(cursor.column);\n      var snippetMap = this.snippetMap;\n      var snippet;\n      this.getActiveScopes(editor).some(function (scope) {\n        var snippets = snippetMap[scope];\n        if (snippets) snippet = this.findMatchingSnippet(snippets, before, after);\n        return !!snippet;\n      }, this);\n      if (!snippet) return false;\n      if (options && options.dryRun) return true;\n      editor.session.doc.removeInLine(cursor.row, cursor.column - snippet.replaceBefore.length, cursor.column + snippet.replaceAfter.length);\n      this.variables.M__ = snippet.matchBefore;\n      this.variables.T__ = snippet.matchAfter;\n      this.insertSnippetForSelection(editor, snippet.content);\n      this.variables.M__ = this.variables.T__ = null;\n      return true;\n    };\n\n    this.findMatchingSnippet = function (snippetList, before, after) {\n      for (var i = snippetList.length; i--;) {\n        var s = snippetList[i];\n        if (s.startRe && !s.startRe.test(before)) continue;\n        if (s.endRe && !s.endRe.test(after)) continue;\n        if (!s.startRe && !s.endRe) continue;\n        s.matchBefore = s.startRe ? s.startRe.exec(before) : [\"\"];\n        s.matchAfter = s.endRe ? s.endRe.exec(after) : [\"\"];\n        s.replaceBefore = s.triggerRe ? s.triggerRe.exec(before)[0] : \"\";\n        s.replaceAfter = s.endTriggerRe ? s.endTriggerRe.exec(after)[0] : \"\";\n        return s;\n      }\n    };\n\n    this.snippetMap = {};\n    this.snippetNameMap = {};\n\n    this.register = function (snippets, scope) {\n      var snippetMap = this.snippetMap;\n      var snippetNameMap = this.snippetNameMap;\n      var self = this;\n      if (!snippets) snippets = [];\n\n      function wrapRegexp(src) {\n        if (src && !/^\\^?\\(.*\\)\\$?$|^\\\\b$/.test(src)) src = \"(?:\" + src + \")\";\n        return src || \"\";\n      }\n\n      function guardedRegexp(re, guard, opening) {\n        re = wrapRegexp(re);\n        guard = wrapRegexp(guard);\n\n        if (opening) {\n          re = guard + re;\n          if (re && re[re.length - 1] != \"$\") re = re + \"$\";\n        } else {\n          re = re + guard;\n          if (re && re[0] != \"^\") re = \"^\" + re;\n        }\n\n        return new RegExp(re);\n      }\n\n      function addSnippet(s) {\n        if (!s.scope) s.scope = scope || \"_\";\n        scope = s.scope;\n\n        if (!snippetMap[scope]) {\n          snippetMap[scope] = [];\n          snippetNameMap[scope] = {};\n        }\n\n        var map = snippetNameMap[scope];\n\n        if (s.name) {\n          var old = map[s.name];\n          if (old) self.unregister(old);\n          map[s.name] = s;\n        }\n\n        snippetMap[scope].push(s);\n\n        if (s.tabTrigger && !s.trigger) {\n          if (!s.guard && /^\\w/.test(s.tabTrigger)) s.guard = \"\\\\b\";\n          s.trigger = lang.escapeRegExp(s.tabTrigger);\n        }\n\n        if (!s.trigger && !s.guard && !s.endTrigger && !s.endGuard) return;\n        s.startRe = guardedRegexp(s.trigger, s.guard, true);\n        s.triggerRe = new RegExp(s.trigger, \"\", true);\n        s.endRe = guardedRegexp(s.endTrigger, s.endGuard, true);\n        s.endTriggerRe = new RegExp(s.endTrigger, \"\", true);\n      }\n\n      if (snippets && snippets.content) addSnippet(snippets);else if (Array.isArray(snippets)) snippets.forEach(addSnippet);\n\n      this._signal(\"registerSnippets\", {\n        scope: scope\n      });\n    };\n\n    this.unregister = function (snippets, scope) {\n      var snippetMap = this.snippetMap;\n      var snippetNameMap = this.snippetNameMap;\n\n      function removeSnippet(s) {\n        var nameMap = snippetNameMap[s.scope || scope];\n\n        if (nameMap && nameMap[s.name]) {\n          delete nameMap[s.name];\n          var map = snippetMap[s.scope || scope];\n          var i = map && map.indexOf(s);\n          if (i >= 0) map.splice(i, 1);\n        }\n      }\n\n      if (snippets.content) removeSnippet(snippets);else if (Array.isArray(snippets)) snippets.forEach(removeSnippet);\n    };\n\n    this.parseSnippetFile = function (str) {\n      str = str.replace(/\\r/g, \"\");\n      var list = [],\n          snippet = {};\n      var re = /^#.*|^({[\\s\\S]*})\\s*$|^(\\S+) (.*)$|^((?:\\n*\\t.*)+)/gm;\n      var m;\n\n      while (m = re.exec(str)) {\n        if (m[1]) {\n          try {\n            snippet = JSON.parse(m[1]);\n            list.push(snippet);\n          } catch (e) {}\n        }\n\n        if (m[4]) {\n          snippet.content = m[4].replace(/^\\t/gm, \"\");\n          list.push(snippet);\n          snippet = {};\n        } else {\n          var key = m[2],\n              val = m[3];\n\n          if (key == \"regex\") {\n            var guardRe = /\\/((?:[^\\/\\\\]|\\\\.)*)|$/g;\n            snippet.guard = guardRe.exec(val)[1];\n            snippet.trigger = guardRe.exec(val)[1];\n            snippet.endTrigger = guardRe.exec(val)[1];\n            snippet.endGuard = guardRe.exec(val)[1];\n          } else if (key == \"snippet\") {\n            snippet.tabTrigger = val.match(/^\\S*/)[0];\n            if (!snippet.name) snippet.name = val;\n          } else {\n            snippet[key] = val;\n          }\n        }\n      }\n\n      return list;\n    };\n\n    this.getSnippetByName = function (name, editor) {\n      var snippetMap = this.snippetNameMap;\n      var snippet;\n      this.getActiveScopes(editor).some(function (scope) {\n        var snippets = snippetMap[scope];\n        if (snippets) snippet = snippets[name];\n        return !!snippet;\n      }, this);\n      return snippet;\n    };\n  }).call(SnippetManager.prototype);\n\n  var TabstopManager = function TabstopManager(editor) {\n    if (editor.tabstopManager) return editor.tabstopManager;\n    editor.tabstopManager = this;\n    this.$onChange = this.onChange.bind(this);\n    this.$onChangeSelection = lang.delayedCall(this.onChangeSelection.bind(this)).schedule;\n    this.$onChangeSession = this.onChangeSession.bind(this);\n    this.$onAfterExec = this.onAfterExec.bind(this);\n    this.attach(editor);\n  };\n\n  (function () {\n    this.attach = function (editor) {\n      this.index = 0;\n      this.ranges = [];\n      this.tabstops = [];\n      this.$openTabstops = null;\n      this.selectedTabstop = null;\n      this.editor = editor;\n      this.editor.on(\"change\", this.$onChange);\n      this.editor.on(\"changeSelection\", this.$onChangeSelection);\n      this.editor.on(\"changeSession\", this.$onChangeSession);\n      this.editor.commands.on(\"afterExec\", this.$onAfterExec);\n      this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n    };\n\n    this.detach = function () {\n      this.tabstops.forEach(this.removeTabstopMarkers, this);\n      this.ranges = null;\n      this.tabstops = null;\n      this.selectedTabstop = null;\n      this.editor.removeListener(\"change\", this.$onChange);\n      this.editor.removeListener(\"changeSelection\", this.$onChangeSelection);\n      this.editor.removeListener(\"changeSession\", this.$onChangeSession);\n      this.editor.commands.removeListener(\"afterExec\", this.$onAfterExec);\n      this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\n      this.editor.tabstopManager = null;\n      this.editor = null;\n    };\n\n    this.onChange = function (delta) {\n      var changeRange = delta;\n      var isRemove = delta.action[0] == \"r\";\n      var start = delta.start;\n      var end = delta.end;\n      var startRow = start.row;\n      var endRow = end.row;\n      var lineDif = endRow - startRow;\n      var colDiff = end.column - start.column;\n\n      if (isRemove) {\n        lineDif = -lineDif;\n        colDiff = -colDiff;\n      }\n\n      if (!this.$inChange && isRemove) {\n        var ts = this.selectedTabstop;\n        var changedOutside = ts && !ts.some(function (r) {\n          return comparePoints(r.start, start) <= 0 && comparePoints(r.end, end) >= 0;\n        });\n        if (changedOutside) return this.detach();\n      }\n\n      var ranges = this.ranges;\n\n      for (var i = 0; i < ranges.length; i++) {\n        var r = ranges[i];\n        if (r.end.row < start.row) continue;\n\n        if (isRemove && comparePoints(start, r.start) < 0 && comparePoints(end, r.end) > 0) {\n          this.removeRange(r);\n          i--;\n          continue;\n        }\n\n        if (r.start.row == startRow && r.start.column > start.column) r.start.column += colDiff;\n        if (r.end.row == startRow && r.end.column >= start.column) r.end.column += colDiff;\n        if (r.start.row >= startRow) r.start.row += lineDif;\n        if (r.end.row >= startRow) r.end.row += lineDif;\n        if (comparePoints(r.start, r.end) > 0) this.removeRange(r);\n      }\n\n      if (!ranges.length) this.detach();\n    };\n\n    this.updateLinkedFields = function () {\n      var ts = this.selectedTabstop;\n      if (!ts || !ts.hasLinkedRanges) return;\n      this.$inChange = true;\n      var session = this.editor.session;\n      var text = session.getTextRange(ts.firstNonLinked);\n\n      for (var i = ts.length; i--;) {\n        var range = ts[i];\n        if (!range.linked) continue;\n        var fmt = exports.snippetManager.tmStrFormat(text, range.original);\n        session.replace(range, fmt);\n      }\n\n      this.$inChange = false;\n    };\n\n    this.onAfterExec = function (e) {\n      if (e.command && !e.command.readOnly) this.updateLinkedFields();\n    };\n\n    this.onChangeSelection = function () {\n      if (!this.editor) return;\n      var lead = this.editor.selection.lead;\n      var anchor = this.editor.selection.anchor;\n      var isEmpty = this.editor.selection.isEmpty();\n\n      for (var i = this.ranges.length; i--;) {\n        if (this.ranges[i].linked) continue;\n        var containsLead = this.ranges[i].contains(lead.row, lead.column);\n        var containsAnchor = isEmpty || this.ranges[i].contains(anchor.row, anchor.column);\n        if (containsLead && containsAnchor) return;\n      }\n\n      this.detach();\n    };\n\n    this.onChangeSession = function () {\n      this.detach();\n    };\n\n    this.tabNext = function (dir) {\n      var max = this.tabstops.length;\n      var index = this.index + (dir || 1);\n      index = Math.min(Math.max(index, 1), max);\n      if (index == max) index = 0;\n      this.selectTabstop(index);\n      if (index === 0) this.detach();\n    };\n\n    this.selectTabstop = function (index) {\n      this.$openTabstops = null;\n      var ts = this.tabstops[this.index];\n      if (ts) this.addTabstopMarkers(ts);\n      this.index = index;\n      ts = this.tabstops[this.index];\n      if (!ts || !ts.length) return;\n      this.selectedTabstop = ts;\n\n      if (!this.editor.inVirtualSelectionMode) {\n        var sel = this.editor.multiSelect;\n        sel.toSingleRange(ts.firstNonLinked.clone());\n\n        for (var i = ts.length; i--;) {\n          if (ts.hasLinkedRanges && ts[i].linked) continue;\n          sel.addRange(ts[i].clone(), true);\n        }\n\n        if (sel.ranges[0]) sel.addRange(sel.ranges[0].clone());\n      } else {\n        this.editor.selection.setRange(ts.firstNonLinked);\n      }\n\n      this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n    };\n\n    this.addTabstops = function (tabstops, start, end) {\n      if (!this.$openTabstops) this.$openTabstops = [];\n\n      if (!tabstops[0]) {\n        var p = Range.fromPoints(end, end);\n        moveRelative(p.start, start);\n        moveRelative(p.end, start);\n        tabstops[0] = [p];\n        tabstops[0].index = 0;\n      }\n\n      var i = this.index;\n      var arg = [i + 1, 0];\n      var ranges = this.ranges;\n      tabstops.forEach(function (ts, index) {\n        var dest = this.$openTabstops[index] || ts;\n\n        for (var i = ts.length; i--;) {\n          var p = ts[i];\n          var range = Range.fromPoints(p.start, p.end || p.start);\n          movePoint(range.start, start);\n          movePoint(range.end, start);\n          range.original = p;\n          range.tabstop = dest;\n          ranges.push(range);\n          if (dest != ts) dest.unshift(range);else dest[i] = range;\n\n          if (p.fmtString) {\n            range.linked = true;\n            dest.hasLinkedRanges = true;\n          } else if (!dest.firstNonLinked) dest.firstNonLinked = range;\n        }\n\n        if (!dest.firstNonLinked) dest.hasLinkedRanges = false;\n\n        if (dest === ts) {\n          arg.push(dest);\n          this.$openTabstops[index] = dest;\n        }\n\n        this.addTabstopMarkers(dest);\n      }, this);\n\n      if (arg.length > 2) {\n        if (this.tabstops.length) arg.push(arg.splice(2, 1)[0]);\n        this.tabstops.splice.apply(this.tabstops, arg);\n      }\n    };\n\n    this.addTabstopMarkers = function (ts) {\n      var session = this.editor.session;\n      ts.forEach(function (range) {\n        if (!range.markerId) range.markerId = session.addMarker(range, \"ace_snippet-marker\", \"text\");\n      });\n    };\n\n    this.removeTabstopMarkers = function (ts) {\n      var session = this.editor.session;\n      ts.forEach(function (range) {\n        session.removeMarker(range.markerId);\n        range.markerId = null;\n      });\n    };\n\n    this.removeRange = function (range) {\n      var i = range.tabstop.indexOf(range);\n      range.tabstop.splice(i, 1);\n      i = this.ranges.indexOf(range);\n      this.ranges.splice(i, 1);\n      this.editor.session.removeMarker(range.markerId);\n\n      if (!range.tabstop.length) {\n        i = this.tabstops.indexOf(range.tabstop);\n        if (i != -1) this.tabstops.splice(i, 1);\n        if (!this.tabstops.length) this.detach();\n      }\n    };\n\n    this.keyboardHandler = new HashHandler();\n    this.keyboardHandler.bindKeys({\n      \"Tab\": function Tab(ed) {\n        if (exports.snippetManager && exports.snippetManager.expandWithTab(ed)) {\n          return;\n        }\n\n        ed.tabstopManager.tabNext(1);\n      },\n      \"Shift-Tab\": function ShiftTab(ed) {\n        ed.tabstopManager.tabNext(-1);\n      },\n      \"Esc\": function Esc(ed) {\n        ed.tabstopManager.detach();\n      },\n      \"Return\": function Return(ed) {\n        return false;\n      }\n    });\n  }).call(TabstopManager.prototype);\n  var changeTracker = {};\n  changeTracker.onChange = Anchor.prototype.onChange;\n\n  changeTracker.setPosition = function (row, column) {\n    this.pos.row = row;\n    this.pos.column = column;\n  };\n\n  changeTracker.update = function (pos, delta, $insertRight) {\n    this.$insertRight = $insertRight;\n    this.pos = pos;\n    this.onChange(delta);\n  };\n\n  var movePoint = function movePoint(point, diff) {\n    if (point.row == 0) point.column += diff.column;\n    point.row += diff.row;\n  };\n\n  var moveRelative = function moveRelative(point, start) {\n    if (point.row == start.row) point.column -= start.column;\n    point.row -= start.row;\n  };\n\n  acequire(\"./lib/dom\").importCssString(\"\\\n.ace_snippet-marker {\\\n    -moz-box-sizing: border-box;\\\n    box-sizing: border-box;\\\n    background: rgba(194, 193, 208, 0.09);\\\n    border: 1px dotted rgba(211, 208, 235, 0.62);\\\n    position: absolute;\\\n}\");\n  exports.snippetManager = new SnippetManager();\n  var Editor = acequire(\"./editor\").Editor;\n  (function () {\n    this.insertSnippet = function (content, options) {\n      return exports.snippetManager.insertSnippet(this, content, options);\n    };\n\n    this.expandSnippet = function (options) {\n      return exports.snippetManager.expandWithTab(this, options);\n    };\n  }).call(Editor.prototype);\n});\nace.define(\"ace/autocomplete/popup\", [\"require\", \"exports\", \"module\", \"ace/virtual_renderer\", \"ace/editor\", \"ace/range\", \"ace/lib/event\", \"ace/lib/lang\", \"ace/lib/dom\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Renderer = acequire(\"../virtual_renderer\").VirtualRenderer;\n  var Editor = acequire(\"../editor\").Editor;\n  var Range = acequire(\"../range\").Range;\n  var event = acequire(\"../lib/event\");\n  var lang = acequire(\"../lib/lang\");\n  var dom = acequire(\"../lib/dom\");\n\n  var $singleLineEditor = function $singleLineEditor(el) {\n    var renderer = new Renderer(el);\n    renderer.$maxLines = 4;\n    var editor = new Editor(renderer);\n    editor.setHighlightActiveLine(false);\n    editor.setShowPrintMargin(false);\n    editor.renderer.setShowGutter(false);\n    editor.renderer.setHighlightGutterLine(false);\n    editor.$mouseHandler.$focusWaitTimout = 0;\n    editor.$highlightTagPending = true;\n    return editor;\n  };\n\n  var AcePopup = function AcePopup(parentNode) {\n    var el = dom.createElement(\"div\");\n    var popup = new $singleLineEditor(el);\n    if (parentNode) parentNode.appendChild(el);\n    el.style.display = \"none\";\n    popup.renderer.content.style.cursor = \"default\";\n    popup.renderer.setStyle(\"ace_autocomplete\");\n    popup.setOption(\"displayIndentGuides\", false);\n    popup.setOption(\"dragDelay\", 150);\n\n    var noop = function noop() {};\n\n    popup.focus = noop;\n    popup.$isFocused = true;\n    popup.renderer.$cursorLayer.restartTimer = noop;\n    popup.renderer.$cursorLayer.element.style.opacity = 0;\n    popup.renderer.$maxLines = 8;\n    popup.renderer.$keepTextAreaAtCursor = false;\n    popup.setHighlightActiveLine(false);\n    popup.session.highlight(\"\");\n    popup.session.$searchHighlight.clazz = \"ace_highlight-marker\";\n    popup.on(\"mousedown\", function (e) {\n      var pos = e.getDocumentPosition();\n      popup.selection.moveToPosition(pos);\n      selectionMarker.start.row = selectionMarker.end.row = pos.row;\n      e.stop();\n    });\n    var lastMouseEvent;\n    var hoverMarker = new Range(-1, 0, -1, Infinity);\n    var selectionMarker = new Range(-1, 0, -1, Infinity);\n    selectionMarker.id = popup.session.addMarker(selectionMarker, \"ace_active-line\", \"fullLine\");\n\n    popup.setSelectOnHover = function (val) {\n      if (!val) {\n        hoverMarker.id = popup.session.addMarker(hoverMarker, \"ace_line-hover\", \"fullLine\");\n      } else if (hoverMarker.id) {\n        popup.session.removeMarker(hoverMarker.id);\n        hoverMarker.id = null;\n      }\n    };\n\n    popup.setSelectOnHover(false);\n    popup.on(\"mousemove\", function (e) {\n      if (!lastMouseEvent) {\n        lastMouseEvent = e;\n        return;\n      }\n\n      if (lastMouseEvent.x == e.x && lastMouseEvent.y == e.y) {\n        return;\n      }\n\n      lastMouseEvent = e;\n      lastMouseEvent.scrollTop = popup.renderer.scrollTop;\n      var row = lastMouseEvent.getDocumentPosition().row;\n\n      if (hoverMarker.start.row != row) {\n        if (!hoverMarker.id) popup.setRow(row);\n        setHoverMarker(row);\n      }\n    });\n    popup.renderer.on(\"beforeRender\", function () {\n      if (lastMouseEvent && hoverMarker.start.row != -1) {\n        lastMouseEvent.$pos = null;\n        var row = lastMouseEvent.getDocumentPosition().row;\n        if (!hoverMarker.id) popup.setRow(row);\n        setHoverMarker(row, true);\n      }\n    });\n    popup.renderer.on(\"afterRender\", function () {\n      var row = popup.getRow();\n      var t = popup.renderer.$textLayer;\n      var selected = t.element.childNodes[row - t.config.firstRow];\n      if (selected == t.selectedNode) return;\n      if (t.selectedNode) dom.removeCssClass(t.selectedNode, \"ace_selected\");\n      t.selectedNode = selected;\n      if (selected) dom.addCssClass(selected, \"ace_selected\");\n    });\n\n    var hideHoverMarker = function hideHoverMarker() {\n      setHoverMarker(-1);\n    };\n\n    var setHoverMarker = function setHoverMarker(row, suppressRedraw) {\n      if (row !== hoverMarker.start.row) {\n        hoverMarker.start.row = hoverMarker.end.row = row;\n        if (!suppressRedraw) popup.session._emit(\"changeBackMarker\");\n\n        popup._emit(\"changeHoverMarker\");\n      }\n    };\n\n    popup.getHoveredRow = function () {\n      return hoverMarker.start.row;\n    };\n\n    event.addListener(popup.container, \"mouseout\", hideHoverMarker);\n    popup.on(\"hide\", hideHoverMarker);\n    popup.on(\"changeSelection\", hideHoverMarker);\n\n    popup.session.doc.getLength = function () {\n      return popup.data.length;\n    };\n\n    popup.session.doc.getLine = function (i) {\n      var data = popup.data[i];\n      if (typeof data == \"string\") return data;\n      return data && data.value || \"\";\n    };\n\n    var bgTokenizer = popup.session.bgTokenizer;\n\n    bgTokenizer.$tokenizeRow = function (row) {\n      var data = popup.data[row];\n      var tokens = [];\n      if (!data) return tokens;\n      if (typeof data == \"string\") data = {\n        value: data\n      };\n      if (!data.caption) data.caption = data.value || data.name;\n      var last = -1;\n      var flag, c;\n\n      for (var i = 0; i < data.caption.length; i++) {\n        c = data.caption[i];\n        flag = data.matchMask & 1 << i ? 1 : 0;\n\n        if (last !== flag) {\n          tokens.push({\n            type: data.className || \"\" + (flag ? \"completion-highlight\" : \"\"),\n            value: c\n          });\n          last = flag;\n        } else {\n          tokens[tokens.length - 1].value += c;\n        }\n      }\n\n      if (data.meta) {\n        var maxW = popup.renderer.$size.scrollerWidth / popup.renderer.layerConfig.characterWidth;\n        var metaData = data.meta;\n\n        if (metaData.length + data.caption.length > maxW - 2) {\n          metaData = metaData.substr(0, maxW - data.caption.length - 3) + \"\\u2026\";\n        }\n\n        tokens.push({\n          type: \"rightAlignedText\",\n          value: metaData\n        });\n      }\n\n      return tokens;\n    };\n\n    bgTokenizer.$updateOnChange = noop;\n    bgTokenizer.start = noop;\n\n    popup.session.$computeWidth = function () {\n      return this.screenWidth = 0;\n    };\n\n    popup.$blockScrolling = Infinity;\n    popup.isOpen = false;\n    popup.isTopdown = false;\n    popup.autoSelect = true;\n    popup.data = [];\n\n    popup.setData = function (list) {\n      popup.setValue(lang.stringRepeat(\"\\n\", list.length), -1);\n      popup.data = list || [];\n      popup.setRow(0);\n    };\n\n    popup.getData = function (row) {\n      return popup.data[row];\n    };\n\n    popup.getRow = function () {\n      return selectionMarker.start.row;\n    };\n\n    popup.setRow = function (line) {\n      line = Math.max(this.autoSelect ? 0 : -1, Math.min(this.data.length, line));\n\n      if (selectionMarker.start.row != line) {\n        popup.selection.clearSelection();\n        selectionMarker.start.row = selectionMarker.end.row = line || 0;\n\n        popup.session._emit(\"changeBackMarker\");\n\n        popup.moveCursorTo(line || 0, 0);\n        if (popup.isOpen) popup._signal(\"select\");\n      }\n    };\n\n    popup.on(\"changeSelection\", function () {\n      if (popup.isOpen) popup.setRow(popup.selection.lead.row);\n      popup.renderer.scrollCursorIntoView();\n    });\n\n    popup.hide = function () {\n      this.container.style.display = \"none\";\n\n      this._signal(\"hide\");\n\n      popup.isOpen = false;\n    };\n\n    popup.show = function (pos, lineHeight, topdownOnly) {\n      var el = this.container;\n      var screenHeight = window.innerHeight;\n      var screenWidth = window.innerWidth;\n      var renderer = this.renderer;\n      var maxH = renderer.$maxLines * lineHeight * 1.4;\n      var top = pos.top + this.$borderSize;\n      var allowTopdown = top > screenHeight / 2 && !topdownOnly;\n\n      if (allowTopdown && top + lineHeight + maxH > screenHeight) {\n        renderer.$maxPixelHeight = top - 2 * this.$borderSize;\n        el.style.top = \"\";\n        el.style.bottom = screenHeight - top + \"px\";\n        popup.isTopdown = false;\n      } else {\n        top += lineHeight;\n        renderer.$maxPixelHeight = screenHeight - top - 0.2 * lineHeight;\n        el.style.top = top + \"px\";\n        el.style.bottom = \"\";\n        popup.isTopdown = true;\n      }\n\n      el.style.display = \"\";\n      this.renderer.$textLayer.checkForSizeChanges();\n      var left = pos.left;\n      if (left + el.offsetWidth > screenWidth) left = screenWidth - el.offsetWidth;\n      el.style.left = left + \"px\";\n\n      this._signal(\"show\");\n\n      lastMouseEvent = null;\n      popup.isOpen = true;\n    };\n\n    popup.getTextLeftOffset = function () {\n      return this.$borderSize + this.renderer.$padding + this.$imageSize;\n    };\n\n    popup.$imageSize = 0;\n    popup.$borderSize = 1;\n    return popup;\n  };\n\n  dom.importCssString(\"\\\n.ace_editor.ace_autocomplete .ace_marker-layer .ace_active-line {\\\n    background-color: #CAD6FA;\\\n    z-index: 1;\\\n}\\\n.ace_editor.ace_autocomplete .ace_line-hover {\\\n    border: 1px solid #abbffe;\\\n    margin-top: -1px;\\\n    background: rgba(233,233,253,0.4);\\\n}\\\n.ace_editor.ace_autocomplete .ace_line-hover {\\\n    position: absolute;\\\n    z-index: 2;\\\n}\\\n.ace_editor.ace_autocomplete .ace_scroller {\\\n   background: none;\\\n   border: none;\\\n   box-shadow: none;\\\n}\\\n.ace_rightAlignedText {\\\n    color: gray;\\\n    display: inline-block;\\\n    position: absolute;\\\n    right: 4px;\\\n    text-align: right;\\\n    z-index: -1;\\\n}\\\n.ace_editor.ace_autocomplete .ace_completion-highlight{\\\n    color: #000;\\\n    text-shadow: 0 0 0.01em;\\\n}\\\n.ace_editor.ace_autocomplete {\\\n    width: 280px;\\\n    z-index: 200000;\\\n    background: #fbfbfb;\\\n    color: #444;\\\n    border: 1px lightgray solid;\\\n    position: fixed;\\\n    box-shadow: 2px 3px 5px rgba(0,0,0,.2);\\\n    line-height: 1.4;\\\n}\");\n  exports.AcePopup = AcePopup;\n});\nace.define(\"ace/autocomplete/util\", [\"require\", \"exports\", \"module\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  exports.parForEach = function (array, fn, callback) {\n    var completed = 0;\n    var arLength = array.length;\n    if (arLength === 0) callback();\n\n    for (var i = 0; i < arLength; i++) {\n      fn(array[i], function (result, err) {\n        completed++;\n        if (completed === arLength) callback(result, err);\n      });\n    }\n  };\n\n  var ID_REGEX = /[a-zA-Z_0-9\\$\\-\\u00A2-\\uFFFF]/;\n\n  exports.retrievePrecedingIdentifier = function (text, pos, regex) {\n    regex = regex || ID_REGEX;\n    var buf = [];\n\n    for (var i = pos - 1; i >= 0; i--) {\n      if (regex.test(text[i])) buf.push(text[i]);else break;\n    }\n\n    return buf.reverse().join(\"\");\n  };\n\n  exports.retrieveFollowingIdentifier = function (text, pos, regex) {\n    regex = regex || ID_REGEX;\n    var buf = [];\n\n    for (var i = pos; i < text.length; i++) {\n      if (regex.test(text[i])) buf.push(text[i]);else break;\n    }\n\n    return buf;\n  };\n\n  exports.getCompletionPrefix = function (editor) {\n    var pos = editor.getCursorPosition();\n    var line = editor.session.getLine(pos.row);\n    var prefix;\n    editor.completers.forEach(function (completer) {\n      if (completer.identifierRegexps) {\n        completer.identifierRegexps.forEach(function (identifierRegex) {\n          if (!prefix && identifierRegex) prefix = this.retrievePrecedingIdentifier(line, pos.column, identifierRegex);\n        }.bind(this));\n      }\n    }.bind(this));\n    return prefix || this.retrievePrecedingIdentifier(line, pos.column);\n  };\n});\nace.define(\"ace/autocomplete\", [\"require\", \"exports\", \"module\", \"ace/keyboard/hash_handler\", \"ace/autocomplete/popup\", \"ace/autocomplete/util\", \"ace/lib/event\", \"ace/lib/lang\", \"ace/lib/dom\", \"ace/snippets\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var HashHandler = acequire(\"./keyboard/hash_handler\").HashHandler;\n  var AcePopup = acequire(\"./autocomplete/popup\").AcePopup;\n  var util = acequire(\"./autocomplete/util\");\n  var event = acequire(\"./lib/event\");\n  var lang = acequire(\"./lib/lang\");\n  var dom = acequire(\"./lib/dom\");\n  var snippetManager = acequire(\"./snippets\").snippetManager;\n\n  var Autocomplete = function Autocomplete() {\n    this.autoInsert = false;\n    this.autoSelect = true;\n    this.exactMatch = false;\n    this.gatherCompletionsId = 0;\n    this.keyboardHandler = new HashHandler();\n    this.keyboardHandler.bindKeys(this.commands);\n    this.blurListener = this.blurListener.bind(this);\n    this.changeListener = this.changeListener.bind(this);\n    this.mousedownListener = this.mousedownListener.bind(this);\n    this.mousewheelListener = this.mousewheelListener.bind(this);\n    this.changeTimer = lang.delayedCall(function () {\n      this.updateCompletions(true);\n    }.bind(this));\n    this.tooltipTimer = lang.delayedCall(this.updateDocTooltip.bind(this), 50);\n  };\n\n  (function () {\n    this.$init = function () {\n      this.popup = new AcePopup(document.body || document.documentElement);\n      this.popup.on(\"click\", function (e) {\n        this.insertMatch();\n        e.stop();\n      }.bind(this));\n      this.popup.focus = this.editor.focus.bind(this.editor);\n      this.popup.on(\"show\", this.tooltipTimer.bind(null, null));\n      this.popup.on(\"select\", this.tooltipTimer.bind(null, null));\n      this.popup.on(\"changeHoverMarker\", this.tooltipTimer.bind(null, null));\n      return this.popup;\n    };\n\n    this.getPopup = function () {\n      return this.popup || this.$init();\n    };\n\n    this.openPopup = function (editor, prefix, keepPopupPosition) {\n      if (!this.popup) this.$init();\n      this.popup.autoSelect = this.autoSelect;\n      this.popup.setData(this.completions.filtered);\n      editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n      var renderer = editor.renderer;\n      this.popup.setRow(this.autoSelect ? 0 : -1);\n\n      if (!keepPopupPosition) {\n        this.popup.setTheme(editor.getTheme());\n        this.popup.setFontSize(editor.getFontSize());\n        var lineHeight = renderer.layerConfig.lineHeight;\n        var pos = renderer.$cursorLayer.getPixelPosition(this.base, true);\n        pos.left -= this.popup.getTextLeftOffset();\n        var rect = editor.container.getBoundingClientRect();\n        pos.top += rect.top - renderer.layerConfig.offset;\n        pos.left += rect.left - editor.renderer.scrollLeft;\n        pos.left += renderer.gutterWidth;\n        this.popup.show(pos, lineHeight);\n      } else if (keepPopupPosition && !prefix) {\n        this.detach();\n      }\n    };\n\n    this.detach = function () {\n      this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\n      this.editor.off(\"changeSelection\", this.changeListener);\n      this.editor.off(\"blur\", this.blurListener);\n      this.editor.off(\"mousedown\", this.mousedownListener);\n      this.editor.off(\"mousewheel\", this.mousewheelListener);\n      this.changeTimer.cancel();\n      this.hideDocTooltip();\n      this.gatherCompletionsId += 1;\n      if (this.popup && this.popup.isOpen) this.popup.hide();\n      if (this.base) this.base.detach();\n      this.activated = false;\n      this.completions = this.base = null;\n    };\n\n    this.changeListener = function (e) {\n      var cursor = this.editor.selection.lead;\n\n      if (cursor.row != this.base.row || cursor.column < this.base.column) {\n        this.detach();\n      }\n\n      if (this.activated) this.changeTimer.schedule();else this.detach();\n    };\n\n    this.blurListener = function (e) {\n      var el = document.activeElement;\n      var text = this.editor.textInput.getElement();\n      var fromTooltip = e.relatedTarget && this.tooltipNode && this.tooltipNode.contains(e.relatedTarget);\n      var container = this.popup && this.popup.container;\n\n      if (el != text && el.parentNode != container && !fromTooltip && el != this.tooltipNode && e.relatedTarget != text) {\n        this.detach();\n      }\n    };\n\n    this.mousedownListener = function (e) {\n      this.detach();\n    };\n\n    this.mousewheelListener = function (e) {\n      this.detach();\n    };\n\n    this.goTo = function (where) {\n      var row = this.popup.getRow();\n      var max = this.popup.session.getLength() - 1;\n\n      switch (where) {\n        case \"up\":\n          row = row <= 0 ? max : row - 1;\n          break;\n\n        case \"down\":\n          row = row >= max ? -1 : row + 1;\n          break;\n\n        case \"start\":\n          row = 0;\n          break;\n\n        case \"end\":\n          row = max;\n          break;\n      }\n\n      this.popup.setRow(row);\n    };\n\n    this.insertMatch = function (data, options) {\n      if (!data) data = this.popup.getData(this.popup.getRow());\n      if (!data) return false;\n\n      if (data.completer && data.completer.insertMatch) {\n        data.completer.insertMatch(this.editor, data);\n      } else {\n        if (this.completions.filterText) {\n          var ranges = this.editor.selection.getAllRanges();\n\n          for (var i = 0, range; range = ranges[i]; i++) {\n            range.start.column -= this.completions.filterText.length;\n            this.editor.session.remove(range);\n          }\n        }\n\n        if (data.snippet) snippetManager.insertSnippet(this.editor, data.snippet);else this.editor.execCommand(\"insertstring\", data.value || data);\n      }\n\n      this.detach();\n    };\n\n    this.commands = {\n      \"Up\": function Up(editor) {\n        editor.completer.goTo(\"up\");\n      },\n      \"Down\": function Down(editor) {\n        editor.completer.goTo(\"down\");\n      },\n      \"Ctrl-Up|Ctrl-Home\": function CtrlUpCtrlHome(editor) {\n        editor.completer.goTo(\"start\");\n      },\n      \"Ctrl-Down|Ctrl-End\": function CtrlDownCtrlEnd(editor) {\n        editor.completer.goTo(\"end\");\n      },\n      \"Esc\": function Esc(editor) {\n        editor.completer.detach();\n      },\n      \"Return\": function Return(editor) {\n        return editor.completer.insertMatch();\n      },\n      \"Shift-Return\": function ShiftReturn(editor) {\n        editor.completer.insertMatch(null, {\n          deleteSuffix: true\n        });\n      },\n      \"Tab\": function Tab(editor) {\n        var result = editor.completer.insertMatch();\n        if (!result && !editor.tabstopManager) editor.completer.goTo(\"down\");else return result;\n      },\n      \"PageUp\": function PageUp(editor) {\n        editor.completer.popup.gotoPageUp();\n      },\n      \"PageDown\": function PageDown(editor) {\n        editor.completer.popup.gotoPageDown();\n      }\n    };\n\n    this.gatherCompletions = function (editor, callback) {\n      var session = editor.getSession();\n      var pos = editor.getCursorPosition();\n      var prefix = util.getCompletionPrefix(editor);\n      this.base = session.doc.createAnchor(pos.row, pos.column - prefix.length);\n      this.base.$insertRight = true;\n      var matches = [];\n      var total = editor.completers.length;\n      editor.completers.forEach(function (completer, i) {\n        completer.getCompletions(editor, session, pos, prefix, function (err, results) {\n          if (!err && results) matches = matches.concat(results);\n          callback(null, {\n            prefix: util.getCompletionPrefix(editor),\n            matches: matches,\n            finished: --total === 0\n          });\n        });\n      });\n      return true;\n    };\n\n    this.showPopup = function (editor) {\n      if (this.editor) this.detach();\n      this.activated = true;\n      this.editor = editor;\n\n      if (editor.completer != this) {\n        if (editor.completer) editor.completer.detach();\n        editor.completer = this;\n      }\n\n      editor.on(\"changeSelection\", this.changeListener);\n      editor.on(\"blur\", this.blurListener);\n      editor.on(\"mousedown\", this.mousedownListener);\n      editor.on(\"mousewheel\", this.mousewheelListener);\n      this.updateCompletions();\n    };\n\n    this.updateCompletions = function (keepPopupPosition) {\n      if (keepPopupPosition && this.base && this.completions) {\n        var pos = this.editor.getCursorPosition();\n        var prefix = this.editor.session.getTextRange({\n          start: this.base,\n          end: pos\n        });\n        if (prefix == this.completions.filterText) return;\n        this.completions.setFilter(prefix);\n        if (!this.completions.filtered.length) return this.detach();\n        if (this.completions.filtered.length == 1 && this.completions.filtered[0].value == prefix && !this.completions.filtered[0].snippet) return this.detach();\n        this.openPopup(this.editor, prefix, keepPopupPosition);\n        return;\n      }\n\n      var _id = this.gatherCompletionsId;\n      this.gatherCompletions(this.editor, function (err, results) {\n        var detachIfFinished = function () {\n          if (!results.finished) return;\n          return this.detach();\n        }.bind(this);\n\n        var prefix = results.prefix;\n        var matches = results && results.matches;\n        if (!matches || !matches.length) return detachIfFinished();\n        if (prefix.indexOf(results.prefix) !== 0 || _id != this.gatherCompletionsId) return;\n        this.completions = new FilteredList(matches);\n        if (this.exactMatch) this.completions.exactMatch = true;\n        this.completions.setFilter(prefix);\n        var filtered = this.completions.filtered;\n        if (!filtered.length) return detachIfFinished();\n        if (filtered.length == 1 && filtered[0].value == prefix && !filtered[0].snippet) return detachIfFinished();\n        if (this.autoInsert && filtered.length == 1 && results.finished) return this.insertMatch(filtered[0]);\n        this.openPopup(this.editor, prefix, keepPopupPosition);\n      }.bind(this));\n    };\n\n    this.cancelContextMenu = function () {\n      this.editor.$mouseHandler.cancelContextMenu();\n    };\n\n    this.updateDocTooltip = function () {\n      var popup = this.popup;\n      var all = popup.data;\n      var selected = all && (all[popup.getHoveredRow()] || all[popup.getRow()]);\n      var doc = null;\n      if (!selected || !this.editor || !this.popup.isOpen) return this.hideDocTooltip();\n      this.editor.completers.some(function (completer) {\n        if (completer.getDocTooltip) doc = completer.getDocTooltip(selected);\n        return doc;\n      });\n      if (!doc) doc = selected;\n      if (typeof doc == \"string\") doc = {\n        docText: doc\n      };\n      if (!doc || !(doc.docHTML || doc.docText)) return this.hideDocTooltip();\n      this.showDocTooltip(doc);\n    };\n\n    this.showDocTooltip = function (item) {\n      if (!this.tooltipNode) {\n        this.tooltipNode = dom.createElement(\"div\");\n        this.tooltipNode.className = \"ace_tooltip ace_doc-tooltip\";\n        this.tooltipNode.style.margin = 0;\n        this.tooltipNode.style.pointerEvents = \"auto\";\n        this.tooltipNode.tabIndex = -1;\n        this.tooltipNode.onblur = this.blurListener.bind(this);\n        this.tooltipNode.onclick = this.onTooltipClick.bind(this);\n      }\n\n      var tooltipNode = this.tooltipNode;\n\n      if (item.docHTML) {\n        tooltipNode.innerHTML = item.docHTML;\n      } else if (item.docText) {\n        tooltipNode.textContent = item.docText;\n      }\n\n      if (!tooltipNode.parentNode) document.body.appendChild(tooltipNode);\n      var popup = this.popup;\n      var rect = popup.container.getBoundingClientRect();\n      tooltipNode.style.top = popup.container.style.top;\n      tooltipNode.style.bottom = popup.container.style.bottom;\n\n      if (window.innerWidth - rect.right < 320) {\n        tooltipNode.style.right = window.innerWidth - rect.left + \"px\";\n        tooltipNode.style.left = \"\";\n      } else {\n        tooltipNode.style.left = rect.right + 1 + \"px\";\n        tooltipNode.style.right = \"\";\n      }\n\n      tooltipNode.style.display = \"block\";\n    };\n\n    this.hideDocTooltip = function () {\n      this.tooltipTimer.cancel();\n      if (!this.tooltipNode) return;\n      var el = this.tooltipNode;\n      if (!this.editor.isFocused() && document.activeElement == el) this.editor.focus();\n      this.tooltipNode = null;\n      if (el.parentNode) el.parentNode.removeChild(el);\n    };\n\n    this.onTooltipClick = function (e) {\n      var a = e.target;\n\n      while (a && a != this.tooltipNode) {\n        if (a.nodeName == \"A\" && a.href) {\n          a.rel = \"noreferrer\";\n          a.target = \"_blank\";\n          break;\n        }\n\n        a = a.parentNode;\n      }\n    };\n  }).call(Autocomplete.prototype);\n  Autocomplete.startCommand = {\n    name: \"startAutocomplete\",\n    exec: function exec(editor) {\n      if (!editor.completer) editor.completer = new Autocomplete();\n      editor.completer.autoInsert = false;\n      editor.completer.autoSelect = true;\n      editor.completer.showPopup(editor);\n      editor.completer.cancelContextMenu();\n    },\n    bindKey: \"Ctrl-Space|Ctrl-Shift-Space|Alt-Space\"\n  };\n\n  var FilteredList = function FilteredList(array, filterText) {\n    this.all = array;\n    this.filtered = array;\n    this.filterText = filterText || \"\";\n    this.exactMatch = false;\n  };\n\n  (function () {\n    this.setFilter = function (str) {\n      if (str.length > this.filterText && str.lastIndexOf(this.filterText, 0) === 0) var matches = this.filtered;else var matches = this.all;\n      this.filterText = str;\n      matches = this.filterCompletions(matches, this.filterText);\n      matches = matches.sort(function (a, b) {\n        return b.exactMatch - a.exactMatch || b.score - a.score;\n      });\n      var prev = null;\n      matches = matches.filter(function (item) {\n        var caption = item.snippet || item.caption || item.value;\n        if (caption === prev) return false;\n        prev = caption;\n        return true;\n      });\n      this.filtered = matches;\n    };\n\n    this.filterCompletions = function (items, needle) {\n      var results = [];\n      var upper = needle.toUpperCase();\n      var lower = needle.toLowerCase();\n\n      loop: for (var i = 0, item; item = items[i]; i++) {\n        var caption = item.value || item.caption || item.snippet;\n        if (!caption) continue;\n        var lastIndex = -1;\n        var matchMask = 0;\n        var penalty = 0;\n        var index, distance;\n\n        if (this.exactMatch) {\n          if (needle !== caption.substr(0, needle.length)) continue loop;\n        } else {\n          for (var j = 0; j < needle.length; j++) {\n            var i1 = caption.indexOf(lower[j], lastIndex + 1);\n            var i2 = caption.indexOf(upper[j], lastIndex + 1);\n            index = i1 >= 0 ? i2 < 0 || i1 < i2 ? i1 : i2 : i2;\n            if (index < 0) continue loop;\n            distance = index - lastIndex - 1;\n\n            if (distance > 0) {\n              if (lastIndex === -1) penalty += 10;\n              penalty += distance;\n            }\n\n            matchMask = matchMask | 1 << index;\n            lastIndex = index;\n          }\n        }\n\n        item.matchMask = matchMask;\n        item.exactMatch = penalty ? 0 : 1;\n        item.score = (item.score || 0) - penalty;\n        results.push(item);\n      }\n\n      return results;\n    };\n  }).call(FilteredList.prototype);\n  exports.Autocomplete = Autocomplete;\n  exports.FilteredList = FilteredList;\n});\nace.define(\"ace/autocomplete/text_completer\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  var Range = acequire(\"../range\").Range;\n  var splitRegex = /[^a-zA-Z_0-9\\$\\-\\u00C0-\\u1FFF\\u2C00-\\uD7FF\\w]+/;\n\n  function getWordIndex(doc, pos) {\n    var textBefore = doc.getTextRange(Range.fromPoints({\n      row: 0,\n      column: 0\n    }, pos));\n    return textBefore.split(splitRegex).length - 1;\n  }\n\n  function wordDistance(doc, pos) {\n    var prefixPos = getWordIndex(doc, pos);\n    var words = doc.getValue().split(splitRegex);\n    var wordScores = Object.create(null);\n    var currentWord = words[prefixPos];\n    words.forEach(function (word, idx) {\n      if (!word || word === currentWord) return;\n      var distance = Math.abs(prefixPos - idx);\n      var score = words.length - distance;\n\n      if (wordScores[word]) {\n        wordScores[word] = Math.max(score, wordScores[word]);\n      } else {\n        wordScores[word] = score;\n      }\n    });\n    return wordScores;\n  }\n\n  exports.getCompletions = function (editor, session, pos, prefix, callback) {\n    var wordScore = wordDistance(session, pos, prefix);\n    var wordList = Object.keys(wordScore);\n    callback(null, wordList.map(function (word) {\n      return {\n        caption: word,\n        value: word,\n        score: wordScore[word],\n        meta: \"local\"\n      };\n    }));\n  };\n});\nace.define(\"ace/ext/language_tools\", [\"require\", \"exports\", \"module\", \"ace/snippets\", \"ace/autocomplete\", \"ace/config\", \"ace/lib/lang\", \"ace/autocomplete/util\", \"ace/autocomplete/text_completer\", \"ace/editor\", \"ace/config\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var snippetManager = acequire(\"../snippets\").snippetManager;\n  var Autocomplete = acequire(\"../autocomplete\").Autocomplete;\n  var config = acequire(\"../config\");\n  var lang = acequire(\"../lib/lang\");\n  var util = acequire(\"../autocomplete/util\");\n  var textCompleter = acequire(\"../autocomplete/text_completer\");\n  var keyWordCompleter = {\n    getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n      if (session.$mode.completer) {\n        return session.$mode.completer.getCompletions(editor, session, pos, prefix, callback);\n      }\n\n      var state = editor.session.getState(pos.row);\n      var completions = session.$mode.getCompletions(state, session, pos, prefix);\n      callback(null, completions);\n    }\n  };\n  var snippetCompleter = {\n    getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n      var snippetMap = snippetManager.snippetMap;\n      var completions = [];\n      snippetManager.getActiveScopes(editor).forEach(function (scope) {\n        var snippets = snippetMap[scope] || [];\n\n        for (var i = snippets.length; i--;) {\n          var s = snippets[i];\n          var caption = s.name || s.tabTrigger;\n          if (!caption) continue;\n          completions.push({\n            caption: caption,\n            snippet: s.content,\n            meta: s.tabTrigger && !s.name ? s.tabTrigger + \"\\u21E5 \" : \"snippet\",\n            type: \"snippet\"\n          });\n        }\n      }, this);\n      callback(null, completions);\n    },\n    getDocTooltip: function getDocTooltip(item) {\n      if (item.type == \"snippet\" && !item.docHTML) {\n        item.docHTML = [\"<b>\", lang.escapeHTML(item.caption), \"</b>\", \"<hr></hr>\", lang.escapeHTML(item.snippet)].join(\"\");\n      }\n    }\n  };\n  var completers = [snippetCompleter, textCompleter, keyWordCompleter];\n\n  exports.setCompleters = function (val) {\n    completers.length = 0;\n    if (val) completers.push.apply(completers, val);\n  };\n\n  exports.addCompleter = function (completer) {\n    completers.push(completer);\n  };\n\n  exports.textCompleter = textCompleter;\n  exports.keyWordCompleter = keyWordCompleter;\n  exports.snippetCompleter = snippetCompleter;\n  var expandSnippet = {\n    name: \"expandSnippet\",\n    exec: function exec(editor) {\n      return snippetManager.expandWithTab(editor);\n    },\n    bindKey: \"Tab\"\n  };\n\n  var onChangeMode = function onChangeMode(e, editor) {\n    loadSnippetsForMode(editor.session.$mode);\n  };\n\n  var loadSnippetsForMode = function loadSnippetsForMode(mode) {\n    var id = mode.$id;\n    if (!snippetManager.files) snippetManager.files = {};\n    loadSnippetFile(id);\n    if (mode.modes) mode.modes.forEach(loadSnippetsForMode);\n  };\n\n  var loadSnippetFile = function loadSnippetFile(id) {\n    if (!id || snippetManager.files[id]) return;\n    var snippetFilePath = id.replace(\"mode\", \"snippets\");\n    snippetManager.files[id] = {};\n    config.loadModule(snippetFilePath, function (m) {\n      if (m) {\n        snippetManager.files[id] = m;\n        if (!m.snippets && m.snippetText) m.snippets = snippetManager.parseSnippetFile(m.snippetText);\n        snippetManager.register(m.snippets || [], m.scope);\n\n        if (m.includeScopes) {\n          snippetManager.snippetMap[m.scope].includeScopes = m.includeScopes;\n          m.includeScopes.forEach(function (x) {\n            loadSnippetFile(\"ace/mode/\" + x);\n          });\n        }\n      }\n    });\n  };\n\n  var doLiveAutocomplete = function doLiveAutocomplete(e) {\n    var editor = e.editor;\n    var hasCompleter = editor.completer && editor.completer.activated;\n\n    if (e.command.name === \"backspace\") {\n      if (hasCompleter && !util.getCompletionPrefix(editor)) editor.completer.detach();\n    } else if (e.command.name === \"insertstring\") {\n      var prefix = util.getCompletionPrefix(editor);\n\n      if (prefix && !hasCompleter) {\n        if (!editor.completer) {\n          editor.completer = new Autocomplete();\n        }\n\n        editor.completer.autoInsert = false;\n        editor.completer.showPopup(editor);\n      }\n    }\n  };\n\n  var Editor = acequire(\"../editor\").Editor;\n  acequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    enableBasicAutocompletion: {\n      set: function set(val) {\n        if (val) {\n          if (!this.completers) this.completers = Array.isArray(val) ? val : completers;\n          this.commands.addCommand(Autocomplete.startCommand);\n        } else {\n          this.commands.removeCommand(Autocomplete.startCommand);\n        }\n      },\n      value: false\n    },\n    enableLiveAutocompletion: {\n      set: function set(val) {\n        if (val) {\n          if (!this.completers) this.completers = Array.isArray(val) ? val : completers;\n          this.commands.on('afterExec', doLiveAutocomplete);\n        } else {\n          this.commands.removeListener('afterExec', doLiveAutocomplete);\n        }\n      },\n      value: false\n    },\n    enableSnippets: {\n      set: function set(val) {\n        if (val) {\n          this.commands.addCommand(expandSnippet);\n          this.on(\"changeMode\", onChangeMode);\n          onChangeMode(null, this);\n        } else {\n          this.commands.removeCommand(expandSnippet);\n          this.off(\"changeMode\", onChangeMode);\n        }\n      },\n      value: false\n    }\n  });\n});\n\n(function () {\n  ace.acequire([\"ace/ext/language_tools\"], function () {});\n})();"],"sourceRoot":""}