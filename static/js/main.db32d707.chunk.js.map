{"version":3,"sources":["core/logging/logger.ts","core/misc/utils.ts","core/converters/json.ts","core/interpreters/sql.ts","core/interpreters/code.ts","reducers/reducers.ts","store/store.ts","themes/themes.ts","components/Header.tsx","components/source/RequestHeader.tsx","components/source/RequestSource.tsx","components/LateralMenu.tsx","components/common/GrabbleHeader.tsx","components/App.tsx","registerServiceWorker.ts","index.tsx","core/logging/performance.tsx","actions/actions.ts","state/State.ts","store/selectors.ts","hooks/hooks.ts","components/common/ErrorBoundary.tsx","core/converters/string.ts","store/persistence.ts","components/common/GrabbleHeader.module.scss","core/misc/debug.ts","models/array.ts"],"names":["logError","error","payload","console","logDebug","message","info","logPerf","name","duration","customProperties","isDebugMode","appVersion","getAppVersion","version","location","window","href","logEvents","enqueue","queue","offset","this","length","item","push","slice","undefined","__PERF_EVENT_LOGS","jsonBeautify","str","trim","parsed","jsonParseSafe","JSON","stringify","safeStr","replace","parse","map","v","fields","source","constructor","nodes","Star","Array","isArray","x","mapObject","executeQuery","sqlTree","sourceDataObject","fromPath","values","shift","result","_","chain","get","value","filter","where","conditions","leftValue","left","rightValue","right","operation","compareOperands","orderBy","order","orderings","direction","take","limit","toLowerCase","computePath","path","newPath","toLocaleLowerCase","startsWith","endsWith","includes","substring","indexOf","mapped","temp","forEach","field","val","index","alias","key","value2","codeEvaluation","sourceString","queryString","mode","jsEvaluation","sqlEvaluation","Error","e","currentWindow","lodash","code","evaluatedQuery","eval","apply","rootReducer","rootState","getDefaultAppState","action","type","emptyState","newState","query","newOutputState","output","ret","table","state","text","autoFormat","active","defaultAppState","computeOutput","previousState","selectedTab","obj","objSize","searchTerm","match","isModalOpen","displayedColumns","columns","groupBy","errorMessage","outputObject","keyMap","d","Object","is","keys","arrayElementName","sort","ax","b","localeCompare","tab","containsTerm","src","filteredObj","containsIgnoreCase","from","k","getOwnPropertyNames","propertyName","propertyNameContains","splice","groupByList","gb","resetApp","rootReducers","combineReducers","app","undoable","perf","perfStart","perfEnd","undoType","redoType","userSettings","getDefaultUserSettingsState","globalTheme","theme","editorTheme","configureStore","appState","getAppState","userSettingsState","getUserSettings","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","past","present","future","_latestUnfiltered","group","subscribe","persistAppState","getState","persistUserSettings","themeDeps","Map","importThemeStyleCustom","themeLoader","next","availableGeneralThemes","availableEditorThemes","ThemeDropDownItem","props","setTheme","reloadOnChange","onClick","useCallback","setTimeout","reload","DropdownItem","connect","mapStateToProps","currentTheme","getTheme","currentEditorTheme","getEditorTheme","setGeneralTheme","switchTheme","setEditorTheme","switchEditorTheme","memo","withErrorBoundary","withPerformance","Header","useToggleState","isOpen","switchIsOpen","dropDownIsOpen","toggleDropdown","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","role","Collapse","navbar","Nav","className","NavItem","Dropdown","toggle","DropdownToggle","nav","caret","DropdownMenu","header","NavLink","RenderHeaderInput","onRemove","onChange","id","onKeyChange","target","onValueChange","onRemoveCallback","placeholder","Button","outline","HeaderList","headers","h","onChangeCallback","setSource","updateSource","HttpRequestSource","onFinish","useChangeEventState","method","setMethod","url","setUrl","body","setBody","useState","setHeaders","setError","hasBody","setHasBody","submit","a","request","Request","fetch","json","customToString","FormGroup","htmlFor","defaultValue","Form","inline","hidden","block","Alert","stack","getSourceAutoFormat","canUndo","getCanUndo","canRedo","getCanRedo","getQueryMode","onFileContentReady","onReset","resetEditor","onClear","clearEditor","onUndo","undo","onRedo","redo","changeAutoFormat","updateAutoFormatSource","setQueryMode","updateQueryMode","LateralMenu","dropdownIsOpen","modalIsOpen","toggleModal","handleFileChange","files","fileReader","FileReader","onload","toString","readAsText","handleAutoFormatChange","ButtonGroup","vertical","size","disabled","Label","check","ButtonDropdown","style","display","Modal","ModalHeader","ModalBody","ModalFooter","GrabbleHeader","title","children","styles","draggable","CardHeader","grabber","ResponsiveGridLayout","WidthProvider","Responsive","SourceEditor","lazy","Output","QueryEditor","App","layouts","lg","i","y","w","minW","minH","md","sm","xs","xxs","autoSize","isResizable","draggableHandle","grabbleStyles","breakpoints","cols","margin","containerPadding","rowHeight","fallback","Boolean","hostname","Promise","all","promises","createRoot","document","getElementById","render","setInterval","logPerfPeriodically","navigator","serviceWorker","ready","then","registration","unregister","options","firstContentfulPaint","firstPaint","firstInputDelay","dataConsumption","largestContentfulPaint","navigationTiming","analyticsTracker","opt","metricName","data","browserTracker","logPrefix","logging","warning","debugging","perfume","Perfume","start","end","isEmpty","entry","dequeue","Component","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","updateQuery","toggleOutputTableModal","updateTableColumns","updateTableGroupBy","updateSearchTerm","updateOutputTabSelection","initialStateJson","debugMode","getOutputErrorMessage","getOutputIsArray","getOutputActiveTab","getOutputObject","getOutputObjectSize","getOutputSearchTerm","getOutputSearchMatch","getisOutputTableModalOpen","getdisplayedColumns","getOutputarray","getColumns","getGroupBy","getQueryText","getSourceText","getDebugMode","initial","setValue","initialValue","event","ErrorBoundary","setState","notify","toast","position","hideProgressBar","autoClose","Wrapped","join","part","UNITS","toLocaleString","locale","prettyPrintBytes","signed","Number","isFinite","TypeError","isNegative","prefix","numberStr","exponent","Math","min","floor","log10","pow","toPrecision","numberString","unit","appstate","persist","load","storage","getStorage","toBeSaved","setItem","warn","getDefault","savedStateString","loadFromStorage","getItem","merge","localStorage","sessionStorage","module","exports","__DEBUG__"],"mappings":"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","file":"static/js/main.db32d707.chunk.js","sourcesContent":["import { isDebugMode } from 'core/misc/debug'\nimport { getAppVersion } from 'core/misc/utils'\n\n// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload?: any) => {\n    console.error('Keyrier error', error)\n    if (typeof payload !== 'undefined') {\n        console.error(payload)\n    }\n}\n\nexport const logWarning = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.warn(message)\n    }\n    console.warn(message, payload)\n}\n\nexport const logDebug = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.info(message)\n    }\n    console.info(message, payload)\n}\n\nexport const logPerf = (name: string, duration?: number, customProperties?: any) => {\n    if (isDebugMode()) {\n        const appVersion = getAppVersion()\n        const payload = { name, duration, appVersion, ...customProperties, location: window.location.href }\n        logEvents.enqueue(payload)\n    }\n}\n\nclass Queue<T = any> {\n    // initialise the queue and offset\n    private queue: T[] = []\n    private offset = 0\n\n    // Returns the length of the queue.\n    public getLength() {\n        return this.queue.length - this.offset\n    }\n\n    // Returns true if the queue is empty, and false otherwise.\n    public isEmpty() {\n        return this.queue.length === 0\n    }\n\n    /* Enqueues the specified item. The parameter is:\n     *\n     * item - the item to enqueue\n     */\n    public enqueue(item: T) {\n        this.queue.push(item)\n    }\n\n    /* Dequeues an item and returns it. If the queue is empty, the value\n     * 'undefined' is returned.\n     */\n    public dequeue() {\n        // if the queue is empty, return immediately\n        if (this.queue.length === 0) {\n            return undefined\n        }\n\n        // store the item at the front of the queue\n        const item = this.queue[this.offset]\n\n        // increment the offset and remove the free space if necessary\n        if (++this.offset * 2 >= this.queue.length) {\n            this.queue = this.queue.slice(this.offset)\n            this.offset = 0\n        }\n\n        // return the dequeued item\n        return item\n    }\n\n    /* Returns the item at the front of the queue (without dequeuing it). If the\n     * queue is empty then undefined is returned.\n     */\n    public peek() {\n        return this.queue.length > 0 ? this.queue[this.offset] : undefined\n    }\n}\n\nexport const logEvents = new Queue()\n;(window as any).__PERF_EVENT_LOGS = logEvents\n","import { version } from '../../../package.json'\n\nexport const nameof = <T>(name: keyof T) => name\nexport const nameofFactory = <T>() => (name: keyof T) => name\n\nexport type PropType<T, P extends keyof T = keyof T> = T[P]\n\nexport const objectKeys = <T>(obj: T) => {\n    return new Set(Object.keys(obj)) as Set<keyof T>\n}\n\nexport const objectToMap = <T>(obj: T) => {\n    const map = new Map<keyof T, PropType<T>>()\n    if (!obj) {\n        return map\n    }\n    const keys = objectKeys(obj)\n    keys.forEach(key => {\n        map.set(key, obj[key])\n    })\n\n    return map\n}\n\nexport const getAppVersion = () => version\n","import { logError } from '../../core/logging/logger'\n\nexport const jsonBeautify = (str: string) => {\n    if (!str || str.trim() === '') {\n        return ''\n    }\n\n    const parsed = jsonParseSafe(str)\n    if (typeof parsed === 'string') {\n        return parsed\n    }\n\n    try {\n        return JSON.stringify(parsed, null, 2)\n    } catch (error) {\n        logError(error, str)\n    }\n    return str\n}\n\nexport const jsonParseSafe = (str: string) => {\n    if (!str || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n    // .replace(/[\\u0000-\\u0019]+/g, '')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n","import _ from 'lodash'\nimport { parse, nodes, Op, Field, SQLTree, Source } from 'sql-parser'\nimport { jsonParseSafe } from '../converters/json'\n\nexport const computePath = (path: string[]) => {\n    if (!path || path.length === 0) {\n        return []\n    }\n    if (path[0] === 'data') {\n        const newPath = [...path]\n        newPath.shift()\n        return newPath\n    }\n\n    return path\n}\n\nexport const sqlEvaluation = (sourceString: string, queryString: string) => {\n    try {\n        const sqlTree = parse(queryString.replace(/--(.*?)(\\n|$)/gm, ''))\n        if (sqlTree.source.name.values[0] !== 'data') {\n            return new Error(`${sqlTree.source.name.values[0]} table does not exist`)\n        }\n\n        const sourceDataObject = jsonParseSafe(sourceString)\n\n        const result = executeQuery(sqlTree, sourceDataObject)\n\n        return JSON.stringify(result)\n    } catch (e) {\n        return e as Error\n    }\n}\n\nconst map = (v: object, fields: Field[], source: Source) => {\n    if (fields[0].constructor === nodes.Star) {\n        return v\n    }\n\n    if (Array.isArray(v)) {\n        return v.map(x => mapObject(fields, x, source))\n    }\n\n    return mapObject(fields, v, source)\n}\n\nconst executeQuery = (sqlTree: SQLTree, sourceDataObject: object) => {\n    let fromPath: string[] = []\n\n    if (sqlTree.source.name.values && sqlTree.source.name.values.length > 1) {\n        if (sqlTree.source.name.values[0] === 'data') {\n            fromPath = [...sqlTree.source.name.values]\n            fromPath.shift()\n        }\n    }\n\n    let result = _.chain<any>(sourceDataObject)\n\n    if (fromPath && fromPath.length > 0) {\n        result = _.chain<any>(result.get(fromPath))\n    }\n    const value = result.value()\n    if (_.isArray(value)) {\n        return result\n            .filter(v => {\n                if (!sqlTree.where || !sqlTree.where.conditions) {\n                    return true\n                }\n                const leftValue = sqlTree.where.conditions.left\n                const rightValue = sqlTree.where.conditions.right\n                const operation = sqlTree.where.conditions.operation\n                return compareOperands(operation, leftValue, rightValue, v)\n            })\n            .orderBy(\n                sqlTree.order ? sqlTree.order.orderings.map(x => x.value.value) : undefined,\n                sqlTree.order ? sqlTree.order.orderings.map(x => x.direction) : undefined\n            )\n            .map(v => map(v, sqlTree.fields, sqlTree.source))\n            .take(\n                sqlTree.limit && typeof sqlTree.limit.value.value === 'number'\n                    ? sqlTree.limit.value.value\n                    : 999999999999999\n            )\n            .value()\n    }\n    return map(value, sqlTree.fields, sqlTree.source)\n}\n\nconst compareOperands = (operation: string | null, left: Op, right: Op, value: object): boolean => {\n    if (!operation) {\n        return false\n    }\n\n    if (operation.toLowerCase() === 'or') {\n        return (\n            compareOperands(left.operation, left.left, left.right, value) ||\n            compareOperands(right.operation, right.left, right.right, value)\n        )\n    }\n\n    if (operation.toLowerCase() === 'and') {\n        return (\n            compareOperands(left.operation, left.left, left.right, value) &&\n            compareOperands(right.operation, right.left, right.right, value)\n        )\n    }\n\n    if (!left.value) {\n        return false\n    }\n\n    const leftValue = _.get(value, computePath(left.values))\n\n    if (operation === '=' && leftValue === right.value) {\n        return true\n    }\n    if (operation.toLowerCase() === 'is' && leftValue === right.value) {\n        return true\n    }\n    if (operation === '!=' && leftValue !== right.value) {\n        return true\n    }\n    if (operation.toLowerCase() === 'is not' && leftValue !== right.value) {\n        return true\n    }\n    if (operation === '<>' && leftValue !== right.value) {\n        return true\n    }\n\n    if (operation.toLocaleLowerCase() === 'like' && typeof right.value === 'string' && typeof leftValue === 'string') {\n        if (right.value.startsWith('%') && right.value.endsWith('%')) {\n            if (leftValue.includes(right.value.substring(1, right.value.length - 1))) {\n                return true\n            }\n        } else if (right.value.startsWith('%')) {\n            if (leftValue.endsWith(right.value.substring(right.value.indexOf('%') + 1))) {\n                return true\n            }\n        } else if (right.value.endsWith('%')) {\n            if (leftValue.startsWith(right.value.substring(0, right.value.indexOf('%')))) {\n                return true\n            }\n        }\n    }\n\n    if (right.value) {\n        if (operation === '>' && leftValue > right.value) {\n            return true\n        }\n        if (operation === '>=' && leftValue >= right.value) {\n            return true\n        }\n        if (operation === '<' && leftValue < right.value) {\n            return true\n        }\n        if (operation === '<=' && leftValue <= right.value) {\n            return true\n        }\n    }\n\n    if (\n        operation.toLowerCase() === 'in' &&\n        Array.isArray(right.value) &&\n        right.value.filter(x => x.value === leftValue).length > 0\n    ) {\n        return true\n    }\n\n    return false\n}\n\nconst mapObject = (fields: Field[], mapped: object, source: Source) => {\n    const temp: {\n        [key: string]: any\n    } = {}\n    fields.forEach(field => {\n        const value = _.get(\n            mapped,\n            field.field.values.filter((val, index) => !(index === 0 && source.alias && val === source.alias.value))\n        )\n        let key = field.field.value\n        if (field.field.value2) {\n            key = field.field.value2\n        }\n        if (field.name) {\n            key = field.name.value\n        }\n        temp[key] = value\n    })\n    mapped = temp\n    return mapped\n}\n","import { QueryMode } from 'state/State'\nimport { sqlEvaluation } from './sql'\nimport lodash from 'lodash'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (!sourceString || !queryString) {\n        return ''\n    }\n    if (mode === 'Javascript') {\n        return jsEvaluation(sourceString, queryString)\n    } else if (mode === 'SQL') {\n        return sqlEvaluation(sourceString, queryString)\n    }\n\n    return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string): null | string | Error => {\n    if (!sourceString || sourceString.trim() === '') {\n        return null\n    }\n\n    if (!queryString || queryString.trim() === '') {\n        return null\n    }\n    const currentWindow: any = typeof window === 'undefined' ? {} : window\n    try {\n        currentWindow._ = lodash\n        const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString}) \n      `\n        // eslint-disable-next-line\n        const evaluatedQuery = eval.apply(null, [code]) // DANGEROUS\n        const type = typeof evaluatedQuery\n        if (type !== 'string') {\n            return null\n        }\n        return evaluatedQuery as string\n    } catch (error) {\n        return error\n    } finally {\n        currentWindow._ = undefined\n    }\n}\n","import { combineReducers } from 'redux'\nimport { Action } from 'actions/actions'\nimport { codeEvaluation } from 'core/interpreters/code'\nimport { jsonParseSafe, jsonBeautify } from 'core/converters/json'\nimport {\n    OupoutState,\n    getDefaultAppState,\n    itemType,\n    getDefaultUserSettingsState,\n    QueryMode,\n    tabType,\n    emptyState,\n    AppState,\n    UserSettingsState,\n    OupoutTableState,\n    defaultAppState,\n    SourceState,\n    QueryState,\n} from 'state/State'\nimport { containsIgnoreCase } from 'core/converters/string'\nimport { arrayElementName } from 'models/array'\nimport undoable from 'redux-undo'\nimport { perfStart, perfEnd } from 'core/logging/performance'\n\nexport const rootReducer = (rootState = getDefaultAppState(), action: Action) => {\n    if (action.type === 'CLEAR_EDITOR') {\n        return emptyState\n    }\n\n    const newState =\n        rootState && rootState.query && rootState.source\n            ? {\n                  ...rootState,\n                  query: query(rootState.query, action),\n                  source: source(rootState.source, action),\n              }\n            : {}\n\n    const newOutputState = output(rootState, newState, action)\n    const ret = {\n        ...newState,\n        output: {\n            ...newOutputState,\n            table: table(newOutputState ? newOutputState.table : {}, action),\n        },\n    }\n\n    return ret\n}\n\nexport const source = (state: SourceState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_SOURCE_TEXT':\n            return {\n                ...state,\n                text: state && state.autoFormat ? jsonBeautify(action.source.trim()) : action.source,\n            }\n        case 'UPDATE_AUTOFORMAT_SOURCE':\n            return {\n                ...state,\n                text: action.active\n                    ? state && state.text && jsonBeautify(state.text.trim())\n                    : state && state.text\n                    ? state.text\n                    : '',\n                autoFormat: action.active,\n            }\n        default:\n            return state\n    }\n}\n\nexport const userSettings = (state: UserSettingsState | undefined = getDefaultUserSettingsState(), action: Action) => {\n    switch (action.type) {\n        case 'SWITCH_GLOBAL_THEME':\n            return { ...state, globalTheme: action.theme }\n        case 'SWITCH_EDITOR_THEME':\n            return { ...state, editorTheme: action.theme }\n        default:\n            return state\n    }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n            return {\n                ...state,\n                text: action.query,\n            }\n        case 'UPDATE_QUERY_MODE':\n            return {\n                ...state,\n                mode: action.mode,\n                text:\n                    action.mode === 'SQL'\n                        ? defaultAppState && defaultAppState.query\n                            ? defaultAppState.query.text\n                            : ''\n                        : \"// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// you can use lodash helper functions. see https://lodash.com/docs/\\n// ex: _.chain(data).orderBy('age', 'desc')\\n\\n      data\\n    \",\n            } as const\n        default:\n            return state\n    }\n}\n\nexport const computeOutput = (\n    previousState: OupoutState,\n    sourceString: string,\n    queryString: string,\n    action: Action,\n    mode: QueryMode\n) => {\n    const text = codeEvaluation(sourceString, queryString, mode)\n\n    if (!text) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n    if (text instanceof Error) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            errorMessage: text.message,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n\n    let displayedColumns = new Array<string>()\n    const outputObject: itemType[] | object = jsonParseSafe(text)\n    if (Array.isArray(outputObject)) {\n        const keyMap: { [key: string]: string } = {}\n        outputObject.forEach(d => {\n            if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n                const keysToAdd = d ? (typeof d === 'object' ? Object.keys(d) : [arrayElementName]) : []\n                keysToAdd.forEach(key => (keyMap[key] = key))\n            }\n        })\n        displayedColumns = Object.keys(keyMap)\n            .filter(key => key && typeof key === 'string' && key.trim() !== '')\n            .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n    }\n    const isModalOpen =\n        previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n            ? previousState && !previousState.table.isModalOpen\n            : previousState && previousState.table\n            ? previousState.table.isModalOpen\n            : false\n\n    let selectedTab: tabType = Array.isArray(outputObject) ? 'Table' : 'RawJson'\n\n    if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n        selectedTab = action.tab\n    }\n    return {\n        selectedTab,\n        obj: outputObject,\n        objSize: text ? text.length : 0,\n        searchTerm: '',\n        match: false,\n        table: {\n            isArray: Array.isArray(outputObject),\n            isModalOpen,\n            displayedColumns,\n            columns: displayedColumns,\n            groupBy: [],\n        },\n    } as const\n}\n\nexport const output = (previousState: AppState, newState: AppState, action: Action) => {\n    switch (action.type) {\n        case 'EVALUATE_CODE':\n        case 'UPDATE_QUERY':\n        case 'UPDATE_SOURCE_TEXT':\n            if (\n                previousState &&\n                previousState.source &&\n                newState &&\n                newState.source &&\n                previousState.query &&\n                newState.query &&\n                previousState.source.text === newState.source.text &&\n                previousState.query.text === newState.query.text\n            ) {\n                return previousState.output\n            }\n            if (newState && newState.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source && newState.source.text ? newState.source.text : '',\n                    newState.query && newState.query.text ? newState.query.text : '',\n                    action,\n                    newState.query && newState.query.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n        case 'TOGGLE_OUTPUT_TABLE_MODAL':\n            return newState\n                ? {\n                      ...newState.output,\n                      table: {\n                          ...(newState.output ? newState.output.table : {}),\n                          isModalOpen:\n                              newState.output && newState.output.table ? !newState.output.table.isModalOpen : false,\n                      },\n                  }\n                : {}\n        case 'UPDATE_OUTPUT_TAB_SELECTION':\n            if (newState) {\n                return {\n                    ...newState.output,\n                    selectedTab: action.tab,\n                }\n            }\n            break\n        case 'UPDATE_OUTPUT_SEARCH_TERM':\n            if (newState && newState.output) {\n                return {\n                    ...filter(newState.output, action.searchTerm),\n                    searchTerm: action.searchTerm,\n                    selectedTab: 'RawJson',\n                } as const\n            }\n            break\n        default:\n            if (newState && newState.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source && newState.source.text ? newState.source.text : '',\n                    newState.query && newState.query.text ? newState.query.text : '',\n                    action,\n                    newState.query && newState.query.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n    }\n    return {}\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n    if (typeof src !== 'string' && typeof src !== 'object') {\n        return { match: false, filteredObj: src }\n    }\n\n    if (typeof src === 'string') {\n        if (containsIgnoreCase(src, searchTerm)) {\n            return { match: true, filteredObj: src }\n        }\n        return { match: false, filteredObj: src }\n    }\n    const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n    const keys = Array.isArray(obj)\n        ? Array.from({ length: obj.length }, (_, k) => k)\n        : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n    let result = false\n\n    for (const propertyName of keys) {\n        const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n        if (propertyNameContains) {\n            result = true\n            continue\n        }\n        const child = obj[propertyName]\n        const { match, filteredObj } = containsTerm(child, searchTerm)\n        if (propertyNameContains || match) {\n            result = true\n            obj[propertyName] = filteredObj\n        } else {\n            if (Array.isArray(obj) && typeof propertyName === 'number') {\n                obj.splice(propertyName, 1)\n            } else {\n                delete obj[propertyName]\n            }\n        }\n    }\n    if (!result) {\n        if (!Array.isArray(obj)) {\n            ;(keys as string[]).forEach((propertyName: string) => delete obj[propertyName])\n        } else {\n            obj.length = 0\n        }\n    }\n    return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n    if (!searchTerm || searchTerm.trim() === '' || !state) {\n        return { ...state, match: false }\n    }\n    const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n    if (match) {\n        return { ...state, obj: filteredObj, match }\n    }\n\n    return state\n}\n\nexport const table = (state: OupoutTableState | undefined, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_TABLE_COLUMNS':\n            let groupByList = state && state.groupBy ? state.groupBy : []\n            groupByList.forEach(groupBy => {\n                if (action.columns.indexOf(groupBy) === -1) {\n                    groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n                }\n            })\n            return {\n                ...state,\n                displayedColumns: action.columns,\n                groupBy: groupByList,\n            }\n        case 'UPDATE_TABLE_GROUP_BY':\n            return {\n                ...state,\n                groupBy: action.groupBy\n                    .filter(gb => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1)\n                    .filter(gb => gb !== 'Group by...'),\n            }\n        default:\n            return state\n    }\n}\n\nexport const resetApp = (state = getDefaultAppState(), action: Action) => {\n    if (action.type === 'RESET_EDITOR') {\n        return rootReducer({ ...getDefaultAppState() }, action)\n    }\n    return rootReducer(state, action)\n}\n\nconst perf = (state = getDefaultAppState(), action: Action) => {\n    perfStart(`reduce - action: ${action.type}`)\n    const newState = resetApp(state, action)\n    perfEnd(`reduce - action: ${action.type}`)\n    return newState\n}\n\nconst rootReducers = combineReducers({\n    app: undoable(perf, { undoType: 'APP_UNDO', redoType: 'APP_REDO' }),\n    userSettings,\n})\nexport default rootReducers\n","import { createStore, compose } from 'redux'\nimport rootReducers from 'reducers/reducers'\nimport { persistAppState, persistUserSettings, getAppState, getUserSettings } from './persistence'\n\nexport const configureStore = () => {\n    const appState = getAppState()\n    const userSettingsState = getUserSettings()\n\n    const composeEnhancers =\n        typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n            ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n            : compose\n\n    const store = createStore(\n        rootReducers,\n        {\n            app: {\n                past: [],\n                present: appState,\n                future: [],\n                _latestUnfiltered: appState,\n                group: undefined,\n                index: undefined,\n                limit: undefined,\n            },\n            userSettings: userSettingsState,\n        },\n        composeEnhancers()\n    )\n\n    store.subscribe(() => {\n        persistAppState(store.getState().app.present)\n        persistUserSettings(store.getState().userSettings)\n    })\n\n    return store\n}\n","import { logError } from 'core/logging/logger'\n\nexport const themeDeps = new Map([\n    [\n        'materia',\n        () => import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css'),\n    ],\n    [\n        'darkly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css'),\n    ],\n    [\n        'sandstone',\n        () => import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css'),\n    ],\n    ['cosmo', () => import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css')],\n    [\n        'cyborg',\n        () => import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css'),\n    ],\n    [\n        'flatly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css'),\n    ],\n    [\n        'journal',\n        () => import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css'),\n    ],\n    [\n        'litera',\n        () => import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css'),\n    ],\n    ['lumen', () => import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css')],\n    ['lux', () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css')],\n    ['minty', () => import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css')],\n    ['pulse', () => import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css')],\n    [\n        'simplex',\n        () => import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css'),\n    ],\n    ['slate', () => import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css')],\n    ['solar', () => import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css')],\n    [\n        'spacelab',\n        () => import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css'),\n    ],\n    [\n        'superhero',\n        () => import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css'),\n    ],\n    [\n        'united',\n        () => import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css'),\n    ],\n    ['yeti', () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css')],\n] as const)\n\nexport const importThemeStyleCustom = (theme: GeneralTheme | null) => {\n    if (theme) {\n        const themeLoader = themeDeps.get(theme)\n        if (themeLoader) {\n            return themeLoader()\n        }\n    }\n\n    logError(`${theme}: theme is not defined`)\n\n    return themeDeps\n        .values()\n        .next()\n        .value()\n}\n\nexport const availableGeneralThemes = [\n    'materia',\n    'darkly',\n    'sandstone',\n    'cosmo',\n    'cyborg',\n    'flatly',\n    'journal',\n    'litera',\n    'lumen',\n    'lux',\n    'minty',\n    'pulse',\n    'simplex',\n    'slate',\n    'solar',\n    'spacelab',\n    'superhero',\n    'united',\n    'yeti',\n] as const\nexport type GeneralTheme = typeof availableGeneralThemes[number]\n\nexport const availableEditorThemes = ['github', 'monokai', 'tomorrow', 'solarized_dark', 'terminal'] as const\nexport type EditorTheme = typeof availableEditorThemes[number]\n","import * as React from 'react'\nimport { version } from '../../package.json'\nimport { GeneralTheme, availableGeneralThemes, availableEditorThemes, EditorTheme } from 'themes/themes'\nimport { switchTheme, switchEditorTheme } from 'actions/actions'\nimport { connect } from 'react-redux'\nimport { getTheme, getEditorTheme } from 'store/selectors'\nimport { RootState } from 'state/State'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    Collapse,\n    Nav,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    NavItem,\n    NavLink,\n    Dropdown,\n} from 'reactstrap'\nimport { withErrorBoundary } from './common/ErrorBoundary'\nimport { memo, useCallback, FC } from 'react'\nimport { withPerformance } from 'core/logging/performance'\n\ninterface Props {\n    setGeneralTheme: typeof switchTheme\n    setEditorTheme: typeof switchEditorTheme\n    currentTheme: GeneralTheme | null\n    currentEditorTheme: EditorTheme\n}\n\nconst Header: FC<Props> = ({ setGeneralTheme, currentTheme, setEditorTheme, currentEditorTheme }) => {\n    const [isOpen, switchIsOpen] = useToggleState()\n    const [dropDownIsOpen, toggleDropdown] = useToggleState()\n\n    return (\n        <>\n            <Navbar color=\"dark\" dark={true} expand=\"md\">\n                <NavbarBrand href=\"/\">Keyrier JSON</NavbarBrand>\n                <NavbarToggler role=\"presentation\" onClick={switchIsOpen} />\n                <Collapse isOpen={isOpen} navbar={true}>\n                    <Nav className=\"ml-auto\" navbar={true}>\n                        <NavItem>\n                            <Dropdown isOpen={dropDownIsOpen} toggle={toggleDropdown}>\n                                <DropdownToggle nav={true} caret={true}>\n                                    Theme\n                                </DropdownToggle>\n                                <DropdownMenu right={true}>\n                                    <DropdownItem header={true}>Choose editor theme</DropdownItem>\n                                    {availableEditorThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setEditorTheme}\n                                            key={index}\n                                            active={currentEditorTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={false}\n                                        />\n                                    ))}\n                                    <DropdownItem header={true}>Choose general theme</DropdownItem>\n\n                                    {availableGeneralThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setGeneralTheme}\n                                            key={index}\n                                            active={currentTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={true}\n                                        />\n                                    ))}\n                                </DropdownMenu>\n                            </Dropdown>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json/releases/latest\">\n                                v{version}\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </>\n    )\n}\n\ntype ThemeDropDownItemProps<T extends GeneralTheme | EditorTheme> = {\n    theme: T\n    active: boolean\n    setTheme: (v: T) => void\n    reloadOnChange: boolean\n}\n\nconst ThemeDropDownItem = <T extends GeneralTheme | EditorTheme>(props: ThemeDropDownItemProps<T>) => {\n    const { theme, active, setTheme, reloadOnChange } = props\n    const onClick = useCallback(() => {\n        setTheme(theme)\n        if (reloadOnChange) {\n            setTimeout(() => window.location.reload())\n        }\n    }, [theme, setTheme, reloadOnChange])\n    return (\n        <DropdownItem active={active} onClick={onClick}>\n            {theme}\n        </DropdownItem>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    currentTheme: getTheme(state),\n    currentEditorTheme: getEditorTheme(state),\n})\n\nexport default connect(mapStateToProps, { setGeneralTheme: switchTheme, setEditorTheme: switchEditorTheme })(\n    memo(withErrorBoundary(withPerformance(Header, 'Header')))\n)\n","import * as React from 'react'\nimport { Button } from 'reactstrap'\nimport { memo, useCallback, ChangeEvent, FC } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\ninterface Props {\n    header: [string, string]\n    id: number\n    onChange: (h: [string, string]) => void\n    onRemove: (h: [string, string]) => void\n}\n\nexport const RenderHeaderInput: FC<Props> = memo(\n    withErrorBoundary(({ header, onRemove, onChange, id }) => {\n        const [key, value] = header\n\n        const onKeyChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([e.target.value, value]), [\n            onChange,\n            value,\n        ])\n        const onValueChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([key, e.target.value]), [\n            onChange,\n            key,\n        ])\n        const onRemoveCallback = useCallback(() => onRemove(header), [onRemove, header])\n\n        return (\n            <div className=\"row align-items-center\">\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={key}\n                        id={`headerName${id}`}\n                        type=\"text\"\n                        name={`headerName${id}`}\n                        placeholder=\"enter an name\"\n                        onChange={onKeyChange}\n                    />\n                </div>\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={value}\n                        type=\"text\"\n                        name={`headerValue${id}`}\n                        id={`headerValue${id}`}\n                        placeholder=\"enter an value\"\n                        onChange={onValueChange}\n                    />\n                </div>\n                <div className=\"col-sm-2\">\n                    <Button outline={true} color=\"danger\" onClick={onRemoveCallback}>\n                        remove\n                    </Button>\n                </div>\n            </div>\n        )\n    })\n)\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { connect } from 'react-redux'\nimport { updateSource } from 'actions/actions'\nimport { customToString } from 'core/converters/string'\nimport { RenderHeaderInput } from './RequestHeader'\nimport { useState, memo, useCallback, FC } from 'react'\nimport { Alert, FormGroup, Form, Button } from 'reactstrap'\nimport { useToggleState, useChangeEventState } from 'hooks/hooks'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\n\ninterface Props {\n    onFinish: () => void\n    setSource: (src: string) => void\n}\n\nconst HttpRequestSource: FC<Props> = ({ onFinish, setSource }) => {\n    const [method, setMethod] = useChangeEventState('GET')\n    const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n    const [body, setBody] = useChangeEventState('')\n    const [headers, setHeaders] = useState([['Accept', 'application/json'] as [string, string]])\n    const [error, setError] = useState(null as TypeError | null)\n    const [hasBody, setHasBody] = useToggleState()\n\n    const submit = useCallback(async () => {\n        const requestInit: RequestInit = {\n            method,\n            headers,\n            body: hasBody ? body : null,\n        }\n        const request = new Request(url, requestInit)\n        setError(null)\n\n        let json: string\n        try {\n            const result = await fetch(request)\n            json = await result.json()\n        } catch (e) {\n            logError('HttpRequestSource.submit', e)\n            setError(e)\n            return\n        }\n        setSource(customToString(json))\n        onFinish()\n    }, [method, url, body, headers, hasBody, setSource, onFinish])\n\n    return (\n        <div id=\"HttpRequestSource\">\n            <FormGroup>\n                <label htmlFor=\"requestMethod\">Method</label>\n                <select\n                    className=\"form-control-lg form-control\"\n                    defaultValue={method}\n                    name=\"requestMethod\"\n                    id=\"requestMethod\"\n                    onChange={setMethod}\n                >\n                    <option>GET</option>\n                    <option>POST</option>\n                    <option>PUT</option>\n                    <option>OPTIONS</option>\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <label htmlFor=\"requestUrl\">Request URL</label>\n                <input\n                    defaultValue={url}\n                    className=\"form-control-lg form-control\"\n                    type=\"url\"\n                    name=\"requestUrl\"\n                    id=\"requestUrl\"\n                    placeholder=\"enter an URL\"\n                    onChange={setUrl}\n                />\n            </FormGroup>\n            <div className=\"position-relative form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n                </label>\n            </div>\n            <Form inline={true} hidden={!hasBody}>\n                <FormGroup>\n                    <label>Body</label>\n                    <input\n                        className=\"form-control-lg form-control\"\n                        type=\"textarea\"\n                        value={body}\n                        onChange={setBody}\n                    />{' '}\n                </FormGroup>\n            </Form>\n            <label htmlFor=\"headers\">Request headers</label>{' '}\n            <Button\n                outline={true}\n                color=\"primary\"\n                onClick={() => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']])}\n            >\n                Add header\n            </Button>\n            <br />\n            <br />\n            <HeaderList headers={headers} onChange={setHeaders} />\n            <br />\n            <Button block={true} color=\"primary\" onClick={submit}>\n                Submit\n            </Button>\n            {error && (\n                <Alert color=\"danger\">\n                    Error: {error.message ? error.message : ''}\n                    {error.stack ? error.stack : ''}\n                </Alert>\n            )}\n        </div>\n    )\n}\n\ntype HeaderListProps = {\n    headers: Array<[string, string]>\n    onChange: (headers: Array<[string, string]>) => void\n}\n\nconst HeaderList: FC<HeaderListProps> = ({ headers, onChange }) => {\n    const onRemove = useCallback((header: [string, string]) => onChange(headers.filter(h => h !== header)), [\n        headers,\n        onChange,\n    ])\n    const onChangeCallback = useCallback(\n        (header: [string, string]) => {\n            const index = headers.indexOf(header)\n            headers[index] = { ...header }\n            onChange([...headers])\n        },\n        [headers, onChange]\n    )\n    return (\n        <>\n            {headers.map((header, index) => (\n                <RenderHeaderInput\n                    header={header}\n                    key={index}\n                    id={index}\n                    onChange={onChangeCallback}\n                    onRemove={onRemove}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default connect(null, { setSource: updateSource })(withErrorBoundary(memo(HttpRequestSource)))\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    updateSource,\n    resetEditor,\n    clearEditor,\n    updateAutoFormatSource,\n    undo,\n    redo,\n    updateQueryMode,\n} from 'actions/actions'\nimport HttpRequestSource from './source/RequestSource'\nimport { logDebug } from 'core/logging/logger'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    ButtonGroup,\n    Label,\n} from 'reactstrap'\nimport { memo, useCallback, FC, ChangeEvent } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport { getSourceAutoFormat, getCanUndo, getCanRedo, getQueryMode } from 'store/selectors'\nimport { RootState, QueryMode } from 'state/State'\nimport { withPerformance } from 'core/logging/performance'\n\ninterface Props {\n    onFileContentReady: typeof updateSource\n    changeAutoFormat: typeof updateAutoFormatSource\n    onReset: typeof resetEditor\n    onClear: typeof clearEditor\n    setQueryMode: typeof updateQueryMode\n    mode: QueryMode\n    onUndo: typeof undo\n    onRedo: typeof redo\n    canRedo: boolean\n    canUndo: boolean\n    autoFormat: boolean\n}\n\nconst LateralMenu: FC<Props> = ({\n    onReset,\n    onFileContentReady,\n    onClear,\n    autoFormat,\n    changeAutoFormat,\n    onRedo,\n    onUndo,\n    canRedo,\n    canUndo,\n    setQueryMode,\n    mode,\n}) => {\n    const [dropdownIsOpen, toggleDropdown] = useToggleState()\n    const [modalIsOpen, toggleModal] = useToggleState()\n    const handleFileChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            logDebug('onFileChange')\n            toggleDropdown()\n            if (e.target.files && e.target.files.length > 0) {\n                const fileReader = new FileReader()\n                logDebug('e.target.files', e.target.files[0].name)\n                fileReader.onload = () => {\n                    if (fileReader.result) {\n                        onFileContentReady(fileReader.result.toString())\n                    }\n                }\n                fileReader.readAsText(e.target.files[0])\n            }\n        },\n        [toggleDropdown, onFileContentReady]\n    )\n\n    const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n    return (\n        <>\n            <ButtonGroup className=\"d-flex\" vertical={true}>\n                <ButtonGroup vertical={false}>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onUndo}\n                        disabled={!canUndo}\n                    >\n                        <i className=\"material-icons mr-1 md-18\">undo</i>\n                        <span>Undo</span>\n                    </Button>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onRedo}\n                        disabled={!canRedo}\n                    >\n                        Redo\n                        <i className=\"material-icons mr-1 md-18\">redo</i>\n                    </Button>\n                </ButtonGroup>\n                <br />\n                <br />\n                <Label\n                    className=\"d-flex justify-content-center align-content-between\"\n                    check={true}\n                    onClick={handleAutoFormatChange}\n                >\n                    <i className=\"material-icons mr-1\">{autoFormat ? 'check_box' : 'check_box_outline_blank'}</i>\n                    Auto format\n                </Label>\n                <br />\n                <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n                    <DropdownToggle\n                        className=\"d-flex justify-content-center align-content-between\"\n                        size={'lg'}\n                        id=\"import-menu-button\"\n                        color=\"primary\"\n                    >\n                        <i className=\"material-icons mr-1 md-18\">unarchive</i>\n                        Import\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem toggle={false}>\n                            <label id=\"import-file\">\n                                Browse JSON file...\n                                <input\n                                    type=\"file\"\n                                    name=\"file\"\n                                    id=\"sourceFile\"\n                                    style={{ display: 'none' }}\n                                    onChange={handleFileChange}\n                                />\n                            </label>\n                        </DropdownItem>\n                        <DropdownItem id=\"http-request\" onClick={toggleModal}>\n                            <label>HTTP request</label>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n                <br />\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"secondary\"\n                    size={'lg'}\n                    onClick={onReset}\n                >\n                    <div>\n                        <i className=\"material-icons md-18 mr-1\">autorenew</i>\n                    </div>\n                    <div>Reset</div>\n                </Button>\n                <br />\n\n                {mode === 'Javascript' ? (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('SQL')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to SQL-like</div>\n                    </Button>\n                ) : (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('Javascript')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to JS</div>\n                    </Button>\n                )}\n\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"danger\"\n                    size={'lg'}\n                    onClick={onClear}\n                >\n                    <div>\n                        <i className=\"material-icons md-18  mr-1\">clear</i>\n                    </div>\n                    <div>Clear</div>\n                </Button>\n            </ButtonGroup>\n            <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n                <ModalBody>\n                    <HttpRequestSource onFinish={toggleModal} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    autoFormat: getSourceAutoFormat(state),\n    canUndo: getCanUndo(state),\n    canRedo: getCanRedo(state),\n    mode: getQueryMode(state),\n})\n\nexport default connect(mapStateToProps, {\n    onFileContentReady: updateSource,\n    onReset: resetEditor,\n    onClear: clearEditor,\n    onUndo: undo,\n    onRedo: redo,\n    changeAutoFormat: updateAutoFormatSource,\n    setQueryMode: updateQueryMode,\n})(memo(withErrorBoundary(withPerformance(LateralMenu, 'LateralMenu'))))\n","import * as React from 'react'\nimport styles from './GrabbleHeader.module.scss'\nimport { FC, ReactElement } from 'react'\nimport { CardHeader } from 'reactstrap'\n\ntype Props = {\n    title: string\n    children: ReactElement\n}\n\nexport const GrabbleHeader: FC<Props> = ({ title, children }) => (\n    <div className={styles.draggable}>\n        <CardHeader color=\"primary\">\n            <u className=\"font-weight-bold\">{title}</u>\n            <span className={`float-right ${styles.grabber}`}>\n                <i className=\"material-icons\">drag_indicator</i>\n            </span>\n        </CardHeader>\n        {children}\n    </div>\n)\n","import * as React from 'react'\nimport Header from './Header'\nimport { ToastContainer } from 'react-toastify'\nimport { lazy, Suspense, FC } from 'react'\nimport LateralMenu from './LateralMenu'\nimport grabbleStyles from './common/GrabbleHeader.module.scss'\nimport { GrabbleHeader } from './common/GrabbleHeader'\nimport 'react-grid-layout/css/styles.css'\nimport { connect } from 'react-redux'\nimport { getQueryMode } from 'store/selectors'\nimport { QueryMode } from 'state/State'\nimport { Responsive, WidthProvider } from 'react-grid-layout'\nimport { withPerformance } from 'core/logging/performance'\n\nconst ResponsiveGridLayout = WidthProvider(Responsive)\nconst SourceEditor = lazy(() => import(/* webpackChunkName: \"SourceEditor\" */ 'components/source/SourceEditor'))\nconst Output = lazy(() => import(/* webpackChunkName: \"Output\" */ 'components/output/Output'))\nconst QueryEditor = lazy(() => import(/* webpackChunkName: \"QueryEditor\" */ 'components/query/QueryEditor'))\n\ntype Props = {\n    mode: QueryMode\n}\n\nconst lateralMenuKey = 'LateralMenu'\nconst sourceEditorKey = 'SourceEditor'\nconst queryEditorKey = 'QueryEditor'\nconst outputKey = 'Output'\n\nconst App: FC<Props> = ({ mode }) => {\n    const layouts = {\n        lg: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 6, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 20, y: 0, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 20, y: 8, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n        md: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 6, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 0, y: 14, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 0, y: 19, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n        sm: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 6, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 0, y: 14, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 0, y: 19, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n        xs: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 16, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 0, y: 14, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 0, y: 19, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n        xxs: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 16, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 0, y: 14, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 0, y: 19, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n    }\n    return (\n        <>\n            <Header />\n            <div className=\"container-fluid\">\n                <h1 className=\"my-5\">Paste your JSON and Query it.</h1>\n                <ResponsiveGridLayout\n                    autoSize={true}\n                    className=\"layout\"\n                    isResizable={true}\n                    layouts={layouts}\n                    draggableHandle={`.${grabbleStyles.grabber}`}\n                    breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n                    cols={{ lg: 48, md: 36, sm: 24, xs: 12, xxs: 6 }}\n                    margin={[20, 20]}\n                    containerPadding={[0, 0]}\n                    rowHeight={25}\n                >\n                    <div key={lateralMenuKey}>\n                        <GrabbleHeader title=\"Options\">\n                            <LateralMenu />\n                        </GrabbleHeader>\n                    </div>\n                    <div key={sourceEditorKey}>\n                        <GrabbleHeader title=\"1. Paste your JSON:\">\n                            <Suspense fallback={'loading...'}>\n                                <SourceEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={queryEditorKey}>\n                        <GrabbleHeader title={`2. Type your ${mode} query:`}>\n                            <Suspense fallback={'loading...'}>\n                                <QueryEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={outputKey}>\n                        <GrabbleHeader title=\"3. View your results:\">\n                            <Suspense fallback={'loading...'}>\n                                <Output />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                </ResponsiveGridLayout>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default connect(state => ({ mode: getQueryMode(state) }))(withPerformance(App, 'App'))\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log('New content is available; please refresh.')\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log('Content is cached for offline use.')\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import { Provider } from 'react-redux'\nimport './index.scss'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport { configureStore } from 'store/store'\nimport * as React from 'react'\nimport { getTheme } from 'store/selectors'\nimport { importThemeStyleCustom } from 'themes/themes'\nimport App from 'components/App'\nimport { unregister } from 'registerServiceWorker'\nimport { perfStart, perfEnd, logPerfPeriodically } from 'core/logging/performance'\n\nperfStart('Bootstrap.React')\n;(async () => {\n    const store = configureStore()\n\n    const promises = await Promise.all([\n        import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n        importThemeStyleCustom(getTheme(store.getState())),\n    ])\n\n    const ReactDOM = promises[0]\n    ReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        () => {\n            setInterval(logPerfPeriodically, 5000)\n            return perfEnd('Bootstrap.React')\n        }\n    )\n    unregister()\n})()\n","import Perfume, { IAnalyticsTrackerOptions } from 'perfume.js'\nimport { isDebugMode } from 'core/misc/debug'\nimport * as React from 'react'\nimport { ProfilerOnRenderCallback } from 'react'\nimport { logPerf, logEvents, logError } from './logger'\n\nconst analyticsTracker = (opt: IAnalyticsTrackerOptions) => {\n    logPerf(opt.metricName, opt.duration, opt.data)\n}\n\nconst options = {\n    // Metrics\n    firstContentfulPaint: true,\n    firstPaint: true,\n    firstInputDelay: true,\n    dataConsumption: true,\n    largestContentfulPaint: true,\n    navigationTiming: true,\n    // Analytics\n    analyticsTracker,\n    browserTracker: true,\n    // Logging\n    logPrefix: 'Perfume.js:',\n    logging: false,\n    // maxMeasureTime: 18000,\n    // maxDataConsumption: 18000,\n    warning: true,\n    debugging: false,\n}\n\nconst perfume = isDebugMode() ? new Perfume(options) : null\nexport const perfStart = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.start(name)\n}\n\nexport const perfEnd = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.end(name)\n}\n\nexport const perfEndPaint = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.endPaint(name)\n}\n\nexport const logPerfPeriodically = async () => {\n    const payload = []\n    for (let i = 0; i < 50; i++) {\n        if (logEvents.isEmpty()) {\n            break\n        }\n        const entry = logEvents.dequeue()\n\n        payload.push(entry)\n    }\n\n    if (payload.length === 0) {\n        return\n    }\n    const logUrl = 'https://us-central1-keyrier-json.cloudfunctions.net/perflogs'\n\n    try {\n        await fetch(logUrl, { method: 'POST', body: JSON.stringify(payload) })\n    } catch (error) {\n        logError('error sending perf logs', error)\n    }\n}\n\nexport const withPerformance = <P extends object>(Component: React.ComponentType<P>, name: string): React.FC<P> => ({\n    ...props\n}) => {\n    const onRender: ProfilerOnRenderCallback = (\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions\n    ) => {\n        logPerf(name, actualDuration, {\n            type: 'component-render',\n            id,\n            phase,\n            actualDuration,\n            baseDuration,\n            startTime,\n            commitTime,\n            interactions,\n        })\n    }\n\n    return (\n        <React.Profiler id={`perf-${name}`} onRender={onRender}>\n            <Component {...(props as P)} />\n        </React.Profiler>\n    )\n}\n","import { QueryMode, tabType } from 'state/State'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\n\nexport const updateAutoFormatSource = (active: boolean) =>\n    ({\n        active,\n        type: 'UPDATE_AUTOFORMAT_SOURCE',\n    } as const)\n\nexport const updateSource = (source: string) =>\n    ({\n        source,\n        type: 'UPDATE_SOURCE_TEXT',\n    } as const)\n\nexport const updateQuery = (query: string) =>\n    ({\n        query,\n        type: 'UPDATE_QUERY',\n    } as const)\n\nexport const resetEditor = () =>\n    ({\n        type: 'RESET_EDITOR',\n    } as const)\n\nexport const undo = () =>\n    ({\n        type: 'APP_UNDO',\n    } as const)\n\nexport const redo = () =>\n    ({\n        type: 'APP_REDO',\n    } as const)\n\nexport const clearEditor = () =>\n    ({\n        type: 'CLEAR_EDITOR',\n    } as const)\n\nexport const evaluateCode = () =>\n    ({\n        type: 'EVALUATE_CODE',\n    } as const)\n\nexport const toggleOutputTableModal = () =>\n    ({\n        type: 'TOGGLE_OUTPUT_TABLE_MODAL',\n    } as const)\n\nexport const updateTableColumns = (columns: string[]) =>\n    ({\n        columns,\n        type: 'UPDATE_TABLE_COLUMNS',\n    } as const)\n\nexport const updateTableGroupBy = (groupBy: string[]) =>\n    ({\n        groupBy,\n        type: 'UPDATE_TABLE_GROUP_BY',\n    } as const)\n\nexport const switchTheme = (theme: GeneralTheme) => ({\n    theme,\n    type: 'SWITCH_GLOBAL_THEME' as const,\n})\n\nexport const switchEditorTheme = (theme: EditorTheme) => ({\n    theme,\n    type: 'SWITCH_EDITOR_THEME' as const,\n})\n\nexport const updateSearchTerm = (searchTerm: string) =>\n    ({\n        searchTerm,\n        type: 'UPDATE_OUTPUT_SEARCH_TERM',\n    } as const)\n\nexport const updateQueryMode = (mode: QueryMode) =>\n    ({\n        mode,\n        type: 'UPDATE_QUERY_MODE',\n    } as const)\n\nexport const updateOutputTabSelection = (tab: tabType) =>\n    ({\n        tab,\n        type: 'UPDATE_OUTPUT_TAB_SELECTION',\n    } as const)\n\nexport type Action =\n    | ReturnType<typeof evaluateCode>\n    | ReturnType<typeof resetEditor>\n    | ReturnType<typeof clearEditor>\n    | ReturnType<typeof updateQuery>\n    | ReturnType<typeof toggleOutputTableModal>\n    | ReturnType<typeof updateTableColumns>\n    | ReturnType<typeof updateTableGroupBy>\n    | ReturnType<typeof switchTheme>\n    | ReturnType<typeof updateSearchTerm>\n    | ReturnType<typeof updateQueryMode>\n    | ReturnType<typeof updateOutputTabSelection>\n    | ReturnType<typeof updateSource>\n    | ReturnType<typeof updateAutoFormatSource>\n    | ReturnType<typeof switchEditorTheme>\n    | ReturnType<typeof undo>\n    | ReturnType<typeof redo>\n","import initialStateJson from './default-state.json'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\nimport { DeepReadonly } from 'utility-types'\nimport { StateWithHistory } from 'redux-undo'\n\nexport type itemType = any\n\nexport type AppState = DeepReadonly<{\n    source?: SourceState\n    query?: QueryState\n    output?: OupoutState\n    error?: Error\n}>\nexport type QueryState = DeepReadonly<{\n    text?: string\n    mode?: QueryMode\n}>\nexport type SourceState = DeepReadonly<{\n    text?: string\n    autoFormat?: boolean\n}>\nexport type OupoutState = DeepReadonly<{\n    searchTerm?: string\n    match?: boolean\n    selectedTab?: tabType\n    obj?: object | null\n    objSize?: number\n    errorMessage?: string\n    table?: OupoutTableState\n}>\nexport type OupoutTableState = DeepReadonly<{\n    isArray?: boolean\n    isModalOpen?: boolean\n    displayedColumns?: readonly string[]\n    columns?: readonly string[]\n    groupBy?: readonly string[]\n}>\nexport type UserSettingsState = DeepReadonly<{\n    globalTheme?: GeneralTheme\n    editorTheme?: EditorTheme\n    debugMode?: boolean\n}>\n\nexport type tabType = 'RawJson' | 'Table'\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type RootState = DeepReadonly<{\n    app?: StateWithHistory<AppState>\n    userSettings?: UserSettingsState\n}>\n\nexport const getDefaultAppState = () => initialStateJson as AppState\nexport const defaultAppState = initialStateJson as AppState\nexport const getDefaultUserSettingsState = () =>\n    ({\n        globalTheme: 'pulse',\n        editorTheme: 'github',\n        debugMode: false,\n    } as const)\n\nexport const emptyState = {\n    source: { text: '', autoFormat: true },\n    query: { text: '', mode: 'SQL' },\n    output: {\n        match: false,\n        obj: {},\n        objSize: 2,\n        searchTerm: '',\n        selectedTab: 'RawJson',\n        table: {\n            isArray: false,\n            columns: [],\n            displayedColumns: [],\n            isModalOpen: false,\n            groupBy: [],\n        },\n    },\n} as const\n","import { RootState } from 'state/State'\n\nexport const getOutputErrorMessage = (state: RootState) =>\n    state && state.app && state.app.present.output ? state.app.present.output.errorMessage : ''\n\nexport const getOutputIsArray = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.table\n        ? !!state.app.present.output.table.isArray\n        : false\nexport const getOutputActiveTab = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.selectedTab\n        ? state.app.present.output.selectedTab\n        : ('RawJson' as const)\nexport const getOutputObject = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.obj ? state.app.present.output.obj : {}\nexport const getOutputObjectSize = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.objSize\n        ? state.app.present.output.objSize\n        : 0\nexport const getOutputSearchTerm = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.searchTerm\nexport const getOutputSearchMatch = (state: RootState) =>\n    state && state.app && state.app.present.output ? !!state.app.present.output.match : false\nexport const getisOutputTableModalOpen = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.table\n        ? !!state.app.present.output.table.isModalOpen\n        : false\n\nexport const getTheme = (state: RootState) =>\n    state.userSettings && state.userSettings.globalTheme ? state.userSettings.globalTheme : ('pulse' as const)\nexport const getEditorTheme = (state: RootState) =>\n    state.userSettings && state.userSettings.editorTheme ? state.userSettings.editorTheme : ('github' as const)\n\nexport const getdisplayedColumns = (state: RootState) =>\n    state &&\n    state.app &&\n    state.app.present.output &&\n    state.app.present.output.table &&\n    state.app.present.output.table.displayedColumns\n        ? [...state.app.present.output.table.displayedColumns]\n        : []\nexport const getOutputarray = (state: RootState) =>\n    state && state.app && state.app.present.output && Array.isArray(state.app.present.output.obj)\n        ? [...state.app.present.output.obj]\n        : []\nexport const getColumns = (state: RootState) =>\n    state &&\n    state.app &&\n    state.app.present.output &&\n    state.app.present.output.table &&\n    state.app.present.output.table.columns\n        ? [...state.app.present.output.table.columns]\n        : []\nexport const getGroupBy = (state: RootState) =>\n    state &&\n    state.app &&\n    state.app.present.output &&\n    state.app.present.output.table &&\n    state.app.present.output.table.groupBy\n        ? [...state.app.present.output.table.groupBy]\n        : []\n\nexport const getQueryText = (state: RootState) =>\n    state && state.app && state.app.present.query && state.app.present.query.text ? state.app.present.query.text : ''\nexport const getQueryMode = (state: RootState) =>\n    state && state.app && state.app.present.query && state.app.present.query.mode\n        ? state.app.present.query.mode\n        : ('SQL' as const)\n\nexport const getSourceText = (state: RootState) =>\n    state && state.app && state.app.present.source && state.app.present.source.text ? state.app.present.source.text : ''\nexport const getSourceAutoFormat = (state: RootState) =>\n    state && state.app && state.app.present.source ? !!state.app.present.source.autoFormat : false\n\nexport const getCanRedo = (state: RootState) =>\n    state && state.app && state.app.future ? state.app.future.length !== 0 : false\nexport const getCanUndo = (state: RootState) =>\n    state && state.app && state.app.past ? state.app.past.length > 1 : false\n\nexport const getDebugMode = (state: RootState) => (state && state.userSettings ? !!state.userSettings.debugMode : false)\n","import { useState, useCallback, ChangeEvent } from 'react'\n\nexport const useToggleState = (initial: boolean = false): readonly [boolean, () => void] => {\n    const [value, setValue] = useState(initial)\n    return [value, () => setValue(!value)]\n}\n\ntype HtmlElementHookable = HTMLSelectElement | HTMLInputElement\n\nexport const useChangeEventState = (\n    initialValue: string\n): readonly [string, (e: ChangeEvent<HtmlElementHookable>) => void] => {\n    const [value, setValue] = useState(initialValue)\n\n    const eventHandler = useCallback(\n        (event: ChangeEvent<HtmlElementHookable>) => {\n            if (event && event.target) {\n                setValue(event.target.value)\n            }\n        },\n        [setValue]\n    )\n\n    return [value, eventHandler]\n}\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { toast } from 'react-toastify'\nimport { Component, ComponentType } from 'react'\n\nconst MISSING_ERROR = 'Error was swallowed during propagation.'\n\ntype State = {\n    error?: Error\n}\n\nclass ErrorBoundary extends Component<{}, State> {\n    public readonly state: State = {\n        error: undefined,\n    }\n\n    public componentDidCatch(error: Error | null, info: object) {\n        this.setState({ error: error || new Error(MISSING_ERROR) }, () => this.notify(info))\n    }\n\n    public render() {\n        const { children } = this.props\n        const { error } = this.state\n\n        if (error) {\n            return <>An error occured</>\n        }\n\n        return children\n    }\n\n    private notify(info: object) {\n        logError('An error occured', this.state.error)\n        logError('error info:', info)\n        toast.error(JSON.stringify(info), { position: 'bottom-right', hideProgressBar: true, autoClose: false })\n    }\n}\n\nexport const withErrorBoundary = <T extends {}>(Wrapped: ComponentType<T>) => (props: T) => (\n    <ErrorBoundary>\n        <Wrapped {...props} />\n    </ErrorBoundary>\n)\n","export const customToString = (obj: {}): string => {\n    if (Array.isArray(obj)) {\n        const array: any[] = obj\n        return array.map(e => customToString(e)).join(',')\n    }\n    if (typeof obj === 'object') {\n        return JSON.stringify(obj)\n    }\n    if (typeof obj === 'undefined') {\n        return ''\n    }\n    if (obj !== null && obj !== undefined) {\n        return obj.toString()\n    }\n\n    return ''\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n    if (!str || !part) {\n        return false\n    }\n    if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n        return true\n    }\n\n    return false\n}\n\nconst UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\nconst toLocaleString = (value: number, locale: boolean | string = false) => {\n    let result = value.toString()\n    if (typeof locale === 'string') {\n        result = value.toLocaleString(locale)\n    } else if (locale === true) {\n        result = value.toLocaleString()\n    }\n\n    return result\n}\n\nexport const prettyPrintBytes = (value: number, signed = false, locale: boolean | string = false) => {\n    if (!Number.isFinite(value)) {\n        throw new TypeError(`Expected a finite number, got ${typeof value}: ${value}`)\n    }\n    if (value === 0) {\n        return '0 B'\n    }\n    const isNegative = value < 0\n    const prefix = isNegative ? '-' : signed ? '+' : ''\n    if (isNegative) {\n        value = -value\n    }\n    if (value < 1) {\n        const numberStr = toLocaleString(value, locale ? locale : false)\n        return prefix + numberStr + ' B'\n    }\n    const exponent = Math.min(Math.floor(Math.log10(value) / 3), UNITS.length - 1)\n    value = Number((value / Math.pow(1024, exponent)).toPrecision(3))\n    const numberString = toLocaleString(value, locale ? locale : false)\n    const unit = UNITS[exponent]\n    return prefix + numberString + ' ' + unit\n}\n","import { AppState, UserSettingsState, getDefaultAppState, getDefaultUserSettingsState } from 'state/State'\nimport { logError } from 'core/logging/logger'\nimport lodash from 'lodash'\nimport { toast } from 'react-toastify'\nimport { prettyPrintBytes } from 'core/converters/string'\n\nexport const persistAppState = (appstate: AppState) => {\n    persist('keyrier-json.app.state', appstate)\n}\n\nexport const persistUserSettings = (userSettings: UserSettingsState) => {\n    persist('keyrier-json.user.settings', userSettings)\n}\n\nexport const getUserSettings = () => load('keyrier-json.user.settings') as UserSettingsState\nexport const getAppState = () => load('keyrier-json.app.state') as AppState\n\ntype StorageKey = 'keyrier-json.app.state' | 'keyrier-json.user.settings'\n\nconst persist = (key: StorageKey, value: object | undefined) => {\n    const storage = getStorage()\n    if (!storage) {\n        toast.warn(\"Browser does'nt support required storage\")\n        return\n    }\n    const toBeSaved = JSON.stringify(value)\n    try {\n        storage.setItem(key, toBeSaved)\n    } catch (error) {\n        toast.warn(`Error while saving ${key} to storage. size: ${prettyPrintBytes(toBeSaved.length)}`)\n    }\n}\n\nconst loadFromStorage = (key: StorageKey) => {\n    const storage = getStorage()\n    if (storage) {\n        return storage.getItem(key)\n    }\n    return null\n}\n\nconst getDefault = (key: StorageKey) => {\n    switch (key) {\n        case 'keyrier-json.app.state':\n            return getDefaultAppState()\n        case 'keyrier-json.user.settings':\n            return getDefaultUserSettingsState()\n        default:\n            throw new Error(`no defaul value for ${key}`)\n    }\n}\n\nconst load = (key: StorageKey) => {\n    let state = getDefault(key)\n    try {\n        const savedStateString = loadFromStorage(key)\n        if (savedStateString) {\n            state = JSON.parse(savedStateString)\n            state = lodash.merge({}, state)\n        }\n    } catch (error) {\n        logError(error)\n    }\n\n    return state\n}\n\nconst getStorage = () => {\n    if (window.localStorage) {\n        return window.localStorage\n    }\n    if (window.sessionStorage) {\n        return window.sessionStorage\n    }\n    return null\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggable\":\"GrabbleHeader_draggable__3DRIT\",\"grabber\":\"GrabbleHeader_grabber__12Y6q\"};","import { getUserSettings } from 'store/persistence'\n\nexport const isDebugMode = () => (window as any).__DEBUG__ || !!getUserSettings().debugMode\n","export const arrayElementName = 'arrayElement'\n"],"sourceRoot":""}