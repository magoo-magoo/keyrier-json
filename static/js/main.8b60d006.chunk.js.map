{"version":3,"sources":["core/converters/json.ts","core/interpreters/sql.ts","core/interpreters/code.ts","state/State.ts","reducers/reducers.ts","store/persistence.ts","store/store.ts","themes/themes.ts","components/Header.tsx","components/source/RequestHeader.tsx","components/source/RequestSource.tsx","components/LateralMenu.tsx","components/common/GrabbleHeader.tsx","components/App.tsx","registerServiceWorker.ts","index.tsx","core/logging/logger.ts","actions/actions.ts","store/selectors.ts","hooks/hooks.ts","components/common/ErrorBoundary.tsx","core/converters/string.ts","components/common/GrabbleHeader.module.scss","models/array.ts"],"names":["jsonBeautify","str","trim","parsed","jsonParseSafe","JSON","stringify","error","logError","safeStr","replace","parse","map","v","fields","source","constructor","nodes","Star","Array","isArray","x","mapObject","executeQuery","sqlTree","sourceDataObject","fromPath","name","values","length","shift","result","_","chain","get","value","filter","where","conditions","leftValue","left","rightValue","right","operation","compareOperands","orderBy","order","orderings","undefined","direction","take","limit","toLowerCase","path","newPath","computePath","toLocaleLowerCase","startsWith","endsWith","includes","substring","indexOf","mapped","temp","forEach","field","val","index","alias","key","value2","codeEvaluation","sourceString","queryString","mode","jsEvaluation","console","log","Error","e","sqlEvaluation","currentWindow","window","lodash","code","evaluatedQuery","eval","apply","getDefaultAppState","initialStateJson","defaultAppState","emptyState","text","autoFormat","query","output","match","obj","objSize","searchTerm","selectedTab","table","columns","displayedColumns","isModalOpen","groupBy","rootReducer","rootState","action","type","time","newState","newOutputState","ret","timeEnd","state","active","computeOutput","previousState","errorMessage","message","outputObject","keyMap","d","Object","is","keys","arrayElementName","sort","ax","b","localeCompare","tab","containsTerm","src","filteredObj","containsIgnoreCase","from","k","getOwnPropertyNames","propertyName","propertyNameContains","splice","groupByList","gb","rootReducers","combineReducers","app","undoable","undoType","redoType","userSettings","globalTheme","editorTheme","theme","persist","storage","getStorage","toBeSaved","setItem","toast","warn","prettyPrintBytes","load","getDefault","savedStateString","getItem","loadFromStorage","merge","localStorage","sessionStorage","configureStore","appState","userSettingsState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","past","present","future","_latestUnfiltered","group","subscribe","appstate","getState","themeDeps","Map","importThemeStyleCustom","themeLoader","next","availableGeneralThemes","availableEditorThemes","ThemeDropDownItem","props","setTheme","reloadOnChange","onClick","useCallback","setTimeout","location","reload","DropdownItem","connect","currentTheme","getTheme","currentEditorTheme","getEditorTheme","setGeneralTheme","switchTheme","setEditorTheme","switchEditorTheme","memo","withErrorBoundary","useToggleState","isOpen","switchIsOpen","dropDownIsOpen","toggleDropdown","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","Dropdown","toggle","DropdownToggle","nav","caret","DropdownMenu","header","NavItem","NavLink","version","RenderHeaderInput","onRemove","onChange","id","onKeyChange","target","onValueChange","onRemoveCallback","placeholder","Button","outline","HeaderList","headers","h","onChangeCallback","setSource","updateSource","onFinish","useChangeEventState","method","setMethod","url","setUrl","body","setBody","useState","setHeaders","setError","hasBody","setHasBody","submit","a","request","Request","fetch","json","customToString","FormGroup","htmlFor","defaultValue","Form","inline","hidden","block","Alert","stack","getSourceAutoFormat","canUndo","getCanUndo","canRedo","getCanRedo","getQueryMode","onFileContentReady","onReset","resetEditor","onClear","clearEditor","onUndo","undo","onRedo","redo","changeAutoFormat","updateAutoFormatSource","setQueryMode","updateQueryMode","dropdownIsOpen","modalIsOpen","toggleModal","handleFileChange","logInfo","files","fileReader","FileReader","onload","toString","readAsText","handleAutoFormatChange","ButtonGroup","vertical","size","disabled","Label","check","ButtonDropdown","style","display","Modal","role","ModalHeader","ModalBody","ModalFooter","GrabbleHeader","title","children","styles","draggable","CardHeader","grabber","SourceEditor","lazy","Output","QueryEditor","autoSize","isResizable","draggableHandle","grabbleStyles","layout","i","y","w","minW","minH","cols","width","margin","containerPadding","rowHeight","fallback","Boolean","hostname","Promise","all","promises","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","payload","info","updateQuery","toggleOutputTableModal","updateTableColumns","updateTableGroupBy","updateSearchTerm","updateOutputTabSelection","getOutputErrorMessage","getOutputIsArray","getOutputActiveTab","getOutputObject","getOutputObjectSize","getOutputSearchTerm","getOutputSearchMatch","getisOutputTableModalOpen","getdisplayedColumns","getOutputarray","getColumns","getGroupBy","getQueryText","getSourceText","initial","setValue","initialValue","event","ErrorBoundary","this","setState","notify","position","hideProgressBar","autoClose","Component","Wrapped","join","part","UNITS","toLocaleString","locale","signed","Number","isFinite","TypeError","isNegative","prefix","numberStr","exponent","Math","min","floor","log10","pow","toPrecision","numberString","unit","module","exports"],"mappings":"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","file":"static/js/main.8b60d006.chunk.js","sourcesContent":["import { logError } from '../../core/logging/logger'\n\nexport const jsonBeautify = (str: string) => {\n    if (!str || str.trim() === '') {\n        return ''\n    }\n\n    const parsed = jsonParseSafe(str)\n    if (typeof parsed === 'string') {\n        return parsed\n    }\n\n    try {\n        return JSON.stringify(parsed, null, 2)\n    } catch (error) {\n        logError(error, str)\n    }\n    return str\n}\n\nexport const jsonParseSafe = (str: string) => {\n    if (!str || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n    // .replace(/[\\u0000-\\u0019]+/g, '')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n","import _ from 'lodash'\nimport { parse, nodes, Op, Field, SQLTree, Source } from 'sql-parser'\nimport { jsonParseSafe } from '../converters/json'\n\nexport const computePath = (path: string[]) => {\n    if (!path || path.length === 0) {\n        return []\n    }\n    if (path[0] === 'data') {\n        const newPath = [...path]\n        newPath.shift()\n        return newPath\n    }\n\n    return path\n}\n\nexport const sqlEvaluation = (sourceString: string, queryString: string) => {\n    try {\n        const sqlTree = parse(queryString.replace(/--(.*?)(\\n|$)/gm, ''))\n        console.log({ sqlTree })\n        if (sqlTree.source.name.values[0] !== 'data') {\n            return new Error(`${sqlTree.source.name.values[0]} table does not exist`)\n        }\n\n        const sourceDataObject = jsonParseSafe(sourceString)\n\n        const result = executeQuery(sqlTree, sourceDataObject)\n\n        return JSON.stringify(result)\n    } catch (e) {\n        return e as Error\n    }\n}\n\nconst map = (v: object, fields: Field[], source: Source) => {\n    if (fields[0].constructor === nodes.Star) {\n        return v\n    }\n\n    if (Array.isArray(v)) {\n        return v.map(x => mapObject(fields, x, source))\n    }\n\n    return mapObject(fields, v, source)\n}\n\nconst executeQuery = (sqlTree: SQLTree, sourceDataObject: object) => {\n    let fromPath: string[] = []\n\n    if (sqlTree.source.name.values && sqlTree.source.name.values.length > 1) {\n        if (sqlTree.source.name.values[0] === 'data') {\n            fromPath = [...sqlTree.source.name.values]\n            fromPath.shift()\n        }\n    }\n\n    let result = _.chain(sourceDataObject)\n\n    if (fromPath && fromPath.length > 0) {\n        result = result.get(fromPath)\n    }\n    sourceDataObject = result.value()\n    if (_.isArray(sourceDataObject)) {\n        return result\n            .filter(v => {\n                if (!sqlTree.where || !sqlTree.where.conditions) {\n                    return true\n                }\n                const leftValue = sqlTree.where.conditions.left\n                const rightValue = sqlTree.where.conditions.right\n                const operation = sqlTree.where.conditions.operation\n                return compareOperands(operation, leftValue, rightValue, v)\n            })\n            .orderBy(\n                sqlTree.order ? sqlTree.order.orderings.map(x => x.value.value) : undefined,\n                sqlTree.order ? sqlTree.order.orderings.map(x => x.direction) : undefined\n            )\n            .map(v => map(v, sqlTree.fields, sqlTree.source))\n            .take(\n                sqlTree.limit && typeof sqlTree.limit.value.value === 'number'\n                    ? sqlTree.limit.value.value\n                    : 999999999999999\n            )\n            .value()\n    } else {\n        return map(sourceDataObject, sqlTree.fields, sqlTree.source)\n    }\n}\n\nconst compareOperands = (operation: string | null, left: Op, right: Op, value: object): boolean => {\n    if (!operation) {\n        return false\n    }\n\n    if (operation.toLowerCase() === 'or') {\n        return (\n            compareOperands(left.operation, left.left, left.right, value) ||\n            compareOperands(right.operation, right.left, right.right, value)\n        )\n    }\n\n    if (operation.toLowerCase() === 'and') {\n        return (\n            compareOperands(left.operation, left.left, left.right, value) &&\n            compareOperands(right.operation, right.left, right.right, value)\n        )\n    }\n\n    if (!left.value) {\n        return false\n    }\n\n    const leftValue = _.get(value, computePath(left.values))\n\n    if (operation === '=' && leftValue === right.value) {\n        return true\n    }\n    if (operation.toLowerCase() === 'is' && leftValue === right.value) {\n        return true\n    }\n    if (operation === '!=' && leftValue !== right.value) {\n        return true\n    }\n    if (operation.toLowerCase() === 'is not' && leftValue !== right.value) {\n        return true\n    }\n    if (operation === '<>' && leftValue !== right.value) {\n        return true\n    }\n\n    if (operation.toLocaleLowerCase() === 'like' && typeof right.value === 'string' && typeof leftValue === 'string') {\n        if (right.value.startsWith('%') && right.value.endsWith('%')) {\n            if (leftValue.includes(right.value.substring(1, right.value.length - 1))) {\n                return true\n            }\n        } else if (right.value.startsWith('%')) {\n            if (leftValue.endsWith(right.value.substring(right.value.indexOf('%') + 1))) {\n                return true\n            }\n        } else if (right.value.endsWith('%')) {\n            if (leftValue.startsWith(right.value.substring(0, right.value.indexOf('%')))) {\n                return true\n            }\n        }\n    }\n\n    if (right.value) {\n        if (operation === '>' && leftValue > right.value) {\n            return true\n        }\n        if (operation === '>=' && leftValue >= right.value) {\n            return true\n        }\n        if (operation === '<' && leftValue < right.value) {\n            return true\n        }\n        if (operation === '<=' && leftValue <= right.value) {\n            return true\n        }\n    }\n\n    if (\n        operation.toLowerCase() === 'in' &&\n        Array.isArray(right.value) &&\n        right.value.filter(x => x.value === leftValue).length > 0\n    ) {\n        return true\n    }\n\n    return false\n}\n\nconst mapObject = (fields: Field[], mapped: object, source: Source) => {\n    const temp: {\n        [key: string]: any\n    } = {}\n    fields.forEach(field => {\n        const value = _.get(\n            mapped,\n            field.field.values.filter((val, index) => !(index === 0 && source.alias && val === source.alias.value))\n        )\n        let key = field.field.value\n        if (field.field.value2) {\n            key = field.field.value2\n        }\n        if (field.name) {\n            key = field.name.value\n        }\n        temp[key] = value\n    })\n    mapped = temp\n    return mapped\n}\n","import { QueryMode } from 'state/State'\nimport { sqlEvaluation } from './sql'\nimport lodash from 'lodash'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (!sourceString || !queryString) {\n        return ''\n    }\n    if (mode === 'Javascript') {\n        return jsEvaluation(sourceString, queryString)\n    } else if (mode === 'SQL') {\n        return sqlEvaluation(sourceString, queryString)\n    }\n\n    return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string): null | string | Error => {\n    if (!sourceString || sourceString.trim() === '') {\n        return null\n    }\n\n    if (!queryString || queryString.trim() === '') {\n        return null\n    }\n    const currentWindow: any = typeof window === 'undefined' ? {} : window\n    try {\n        currentWindow._ = lodash\n        const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString}) \n      `\n        // eslint-disable-next-line\n        const evaluatedQuery = eval.apply(null, [code]) // DANGEROUS\n        const type = typeof evaluatedQuery\n        if (type !== 'string') {\n            return null\n        }\n        return evaluatedQuery as string\n    } catch (error) {\n        return error\n    } finally {\n        currentWindow._ = undefined\n    }\n}\n","import initialStateJson from './default-state.json'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\nimport { DeepReadonly } from 'utility-types'\nimport { PropType as PropertyTypeOf } from 'core/misc/utils'\nimport { StateWithHistory } from 'redux-undo'\n\nexport type itemType = any\n\nexport type All = PropertyTypeOf<AppState>\nexport type AppState = DeepReadonly<{\n  source?: SourceState\n  query?: QueryState\n  output?: OupoutState\n  error?: Error\n}>\nexport type QueryState = DeepReadonly<{\n  text?: string\n  mode?: QueryMode\n}>\nexport type SourceState = DeepReadonly<{\n  text?: string\n  autoFormat?: boolean\n}>\nexport type OupoutState = DeepReadonly<{\n  searchTerm?: string\n  match?: boolean\n  selectedTab?: tabType\n  obj?: object | null\n  objSize?: number\n  errorMessage?: string\n  table?: OupoutTableState\n}>\nexport type OupoutTableState = DeepReadonly<{\n  isArray?: boolean\n  isModalOpen?: boolean\n  displayedColumns?: readonly string[]\n  columns?: readonly string[]\n  groupBy?: readonly string[]\n}>\nexport type UserSettingsState = DeepReadonly<{\n  globalTheme?: GeneralTheme\n  editorTheme?: EditorTheme\n}>\n\nexport type tabType = 'RawJson' | 'Table'\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type RootState = DeepReadonly<{\n  app?: StateWithHistory<AppState>\n  userSettings?: UserSettingsState\n}>\n\nexport const getDefaultAppState = () => initialStateJson as AppState\nexport const defaultAppState = initialStateJson as AppState\nexport const getDefaultUserSettingsState = () =>\n  ({\n    globalTheme: 'pulse',\n    editorTheme: 'github',\n  } as const)\n\nexport const emptyState = {\n  source: { text: '', autoFormat: true },\n  query: { text: '', mode: 'SQL' },\n  output: {\n    match: false,\n    obj: {},\n    objSize: 2,\n    searchTerm: '',\n    selectedTab: 'RawJson',\n    table: {\n      isArray: false,\n      columns: [],\n      displayedColumns: [],\n      isModalOpen: false,\n      groupBy: [],\n    },\n  },\n} as const\n","import { combineReducers } from 'redux'\nimport { Action } from 'actions/actions'\nimport { codeEvaluation } from 'core/interpreters/code'\nimport { jsonParseSafe, jsonBeautify } from 'core/converters/json'\nimport {\n    OupoutState,\n    getDefaultAppState,\n    itemType,\n    getDefaultUserSettingsState,\n    QueryMode,\n    tabType,\n    emptyState,\n    AppState,\n    UserSettingsState,\n    OupoutTableState,\n    defaultAppState,\n    SourceState,\n    QueryState,\n} from 'state/State'\nimport { containsIgnoreCase } from 'core/converters/string'\nimport { arrayElementName } from 'models/array'\nimport undoable from 'redux-undo'\n\nexport const rootReducer = (rootState = getDefaultAppState(), action: Action) => {\n    if (action.type === 'CLEAR_EDITOR') {\n        return emptyState\n    }\n\n    console.time('rootReducer')\n    const newState =\n        rootState && rootState.query && rootState.source\n            ? {\n                  ...rootState,\n                  query: query(rootState.query, action),\n                  source: source(rootState.source, action),\n              }\n            : {}\n\n    const newOutputState = output(rootState, newState, action)\n    const ret = {\n        ...newState,\n        output: {\n            ...newOutputState,\n            table: table(newOutputState ? newOutputState.table : {}, action),\n        },\n    }\n\n    console.timeEnd('rootReducer')\n    return ret\n}\n\nexport const source = (state: SourceState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_SOURCE_TEXT':\n            return {\n                ...state,\n                text: state && state.autoFormat ? jsonBeautify(action.source.trim()) : action.source,\n            }\n        case 'UPDATE_AUTOFORMAT_SOURCE':\n            return {\n                ...state,\n                text: action.active\n                    ? state && state.text && jsonBeautify(state.text.trim())\n                    : state && state.text\n                    ? state.text\n                    : '',\n                autoFormat: action.active,\n            }\n        default:\n            return state\n    }\n}\n\nexport const userSettings = (state: UserSettingsState | undefined = getDefaultUserSettingsState(), action: Action) => {\n    switch (action.type) {\n        case 'SWITCH_GLOBAL_THEME':\n            return { ...state, globalTheme: action.theme }\n        case 'SWITCH_EDITOR_THEME':\n            return { ...state, editorTheme: action.theme }\n        default:\n            return state\n    }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n            return {\n                ...state,\n                text: action.query,\n            }\n        case 'UPDATE_QUERY_MODE':\n            return {\n                ...state,\n                mode: action.mode,\n                text:\n                    action.mode === 'SQL'\n                        ? defaultAppState && defaultAppState.query\n                            ? defaultAppState.query.text\n                            : ''\n                        : \"// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// you can use lodash helper functions. see https://lodash.com/docs/\\n// ex: _.chain(data).orderBy('age', 'desc')\\n\\n      data\\n    \",\n            } as const\n        default:\n            return state\n    }\n}\n\nexport const computeOutput = (\n    previousState: OupoutState,\n    sourceString: string,\n    queryString: string,\n    action: Action,\n    mode: QueryMode\n) => {\n    const text = codeEvaluation(sourceString, queryString, mode)\n\n    if (!text) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n    if (text instanceof Error) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            errorMessage: text.message,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n\n    let displayedColumns = new Array<string>()\n    const outputObject: itemType[] | object = jsonParseSafe(text)\n    if (Array.isArray(outputObject)) {\n        const keyMap: { [key: string]: string } = {}\n        outputObject.forEach(d => {\n            if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n                const keysToAdd = d ? (typeof d === 'object' ? Object.keys(d) : [arrayElementName]) : []\n                keysToAdd.forEach(key => (keyMap[key] = key))\n            }\n        })\n        displayedColumns = Object.keys(keyMap)\n            .filter(key => key && typeof key === 'string' && key.trim() !== '')\n            .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n    }\n    const isModalOpen =\n        previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n            ? previousState && !previousState.table.isModalOpen\n            : previousState && previousState.table\n            ? previousState.table.isModalOpen\n            : false\n\n    let selectedTab: tabType = Array.isArray(outputObject) ? 'Table' : 'RawJson'\n\n    if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n        selectedTab = action.tab\n    }\n    return {\n        selectedTab,\n        obj: outputObject,\n        objSize: text ? text.length : 0,\n        searchTerm: '',\n        match: false,\n        table: {\n            isArray: Array.isArray(outputObject),\n            isModalOpen,\n            displayedColumns,\n            columns: displayedColumns,\n            groupBy: [],\n        },\n    } as const\n}\n\nexport const output = (previousState: AppState, newState: AppState, action: Action) => {\n    switch (action.type) {\n        case 'EVALUATE_CODE':\n        case 'UPDATE_QUERY':\n        case 'UPDATE_SOURCE_TEXT':\n            if (\n                previousState &&\n                previousState.source &&\n                newState &&\n                newState.source &&\n                previousState.query &&\n                newState.query &&\n                previousState.source.text === newState.source.text &&\n                previousState.query.text === newState.query.text\n            ) {\n                return previousState.output\n            }\n            if (newState && newState.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source && newState.source.text ? newState.source.text : '',\n                    newState.query && newState.query.text ? newState.query.text : '',\n                    action,\n                    newState.query && newState.query.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n        case 'TOGGLE_OUTPUT_TABLE_MODAL':\n            return newState\n                ? {\n                      ...newState.output,\n                      table: {\n                          ...(newState.output ? newState.output.table : {}),\n                          isModalOpen:\n                              newState.output && newState.output.table ? !newState.output.table.isModalOpen : false,\n                      },\n                  }\n                : {}\n        case 'UPDATE_OUTPUT_TAB_SELECTION':\n            if (newState) {\n                return {\n                    ...newState.output,\n                    selectedTab: action.tab,\n                }\n            }\n            break\n        case 'UPDATE_OUTPUT_SEARCH_TERM':\n            if (newState && newState.output) {\n                return {\n                    ...filter(newState.output, action.searchTerm),\n                    searchTerm: action.searchTerm,\n                    selectedTab: 'RawJson',\n                } as const\n            }\n            break\n        default:\n            if (newState && newState.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source && newState.source.text ? newState.source.text : '',\n                    newState.query && newState.query.text ? newState.query.text : '',\n                    action,\n                    newState.query && newState.query.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n    }\n    return {}\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n    if (typeof src !== 'string' && typeof src !== 'object') {\n        return { match: false, filteredObj: src }\n    }\n\n    if (typeof src === 'string') {\n        if (containsIgnoreCase(src, searchTerm)) {\n            return { match: true, filteredObj: src }\n        }\n        return { match: false, filteredObj: src }\n    }\n    const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n    const keys = Array.isArray(obj)\n        ? Array.from({ length: obj.length }, (_, k) => k)\n        : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n    let result = false\n\n    for (const propertyName of keys) {\n        const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n        if (propertyNameContains) {\n            result = true\n            continue\n        }\n        const child = obj[propertyName]\n        const { match, filteredObj } = containsTerm(child, searchTerm)\n        if (propertyNameContains || match) {\n            result = true\n            obj[propertyName] = filteredObj\n        } else {\n            if (Array.isArray(obj) && typeof propertyName === 'number') {\n                obj.splice(propertyName, 1)\n            } else {\n                delete obj[propertyName]\n            }\n        }\n    }\n    if (!result) {\n        if (!Array.isArray(obj)) {\n            ;(keys as string[]).forEach((propertyName: string) => delete obj[propertyName])\n        } else {\n            obj.length = 0\n        }\n    }\n    return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n    if (!searchTerm || searchTerm.trim() === '' || !state) {\n        return { ...state, match: false }\n    }\n    const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n    if (match) {\n        return { ...state, obj: filteredObj, match }\n    }\n\n    return state\n}\n\nexport const table = (state: OupoutTableState | undefined, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_TABLE_COLUMNS':\n            let groupByList = state && state.groupBy ? state.groupBy : []\n            groupByList.forEach(groupBy => {\n                if (action.columns.indexOf(groupBy) === -1) {\n                    groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n                }\n            })\n            return {\n                ...state,\n                displayedColumns: action.columns,\n                groupBy: groupByList,\n            }\n        case 'UPDATE_TABLE_GROUP_BY':\n            return {\n                ...state,\n                groupBy: action.groupBy\n                    .filter(gb => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1)\n                    .filter(gb => gb !== 'Group by...'),\n            }\n        default:\n            return state\n    }\n}\n\nexport const rootReducerReset = (state = getDefaultAppState(), action: Action) => {\n    if (action.type === 'RESET_EDITOR') {\n        return rootReducer({ ...getDefaultAppState() }, action)\n    }\n    return rootReducer(state, action)\n}\nconst rootReducers = combineReducers({\n    app: undoable(rootReducerReset, { undoType: 'APP_UNDO', redoType: 'APP_REDO' }),\n    userSettings,\n})\nexport default rootReducers\n","import { AppState, UserSettingsState, getDefaultAppState, getDefaultUserSettingsState } from 'state/State'\nimport { logError } from 'core/logging/logger'\nimport lodash from 'lodash'\nimport { toast } from 'react-toastify'\nimport { prettyPrintBytes } from 'core/converters/string'\n\nexport const persistAppState = (appstate: AppState) => {\n  persist('keyrier-json.app.state', appstate)\n}\n\nexport const persistUserSettings = (userSettings: UserSettingsState) => {\n  persist('keyrier-json.user.settings', userSettings)\n}\n\nexport const getUserSettings = () => load('keyrier-json.user.settings') as UserSettingsState\nexport const getAppState = () => load('keyrier-json.app.state') as AppState\n\ntype StorageKey = 'keyrier-json.app.state' | 'keyrier-json.user.settings'\n\nconst persist = (key: StorageKey, value: object | undefined) => {\n  const storage = getStorage()\n  if (!storage) {\n    toast.warn(\"Browser does'nt support required storage\")\n    return\n  }\n  const toBeSaved = JSON.stringify(value)\n  try {\n    storage.setItem(key, toBeSaved)\n  } catch (error) {\n    toast.warn(`Error while saving ${key} to storage. size: ${prettyPrintBytes(toBeSaved.length)}`)\n  }\n}\n\nconst loadFromStorage = (key: StorageKey) => {\n  const storage = getStorage()\n  if (storage) {\n    return storage.getItem(key)\n  }\n  return null\n}\n\nconst getDefault = (key: StorageKey) => {\n  switch (key) {\n    case 'keyrier-json.app.state':\n      return getDefaultAppState()\n    case 'keyrier-json.user.settings':\n      return getDefaultUserSettingsState()\n    default:\n      throw new Error(`no defaul value for ${key}`)\n  }\n}\n\nconst load = (key: StorageKey) => {\n  let state = getDefault(key)\n  try {\n    const savedStateString = loadFromStorage(key)\n    if (savedStateString) {\n      state = JSON.parse(savedStateString)\n      state = lodash.merge({}, state)\n    }\n  } catch (error) {\n    logError(error)\n  }\n\n  return state\n}\n\nconst getStorage = () => {\n  if (window.localStorage) {\n    return window.localStorage\n  }\n  if (window.sessionStorage) {\n    return window.sessionStorage\n  }\n  return null\n}\n","import { createStore, compose } from 'redux'\nimport rootReducers from 'reducers/reducers'\nimport { persistAppState, persistUserSettings, getAppState, getUserSettings } from './persistence'\n\nexport const configureStore = () => {\n  const appState = getAppState()\n  const userSettingsState = getUserSettings()\n\n  const composeEnhancers =\n    typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose\n\n  const store = createStore(\n    rootReducers,\n    {\n      app: {\n        past: [],\n        present: appState,\n        future: [],\n        _latestUnfiltered: appState,\n        group: undefined,\n        index: undefined,\n        limit: undefined,\n      },\n      userSettings: userSettingsState,\n    },\n    composeEnhancers()\n  )\n\n  store.subscribe(() => {\n    persistAppState(store.getState().app.present)\n    persistUserSettings(store.getState().userSettings)\n  })\n\n  return store\n}\n","import { logError } from 'core/logging/logger'\n\nexport const themeDeps = new Map([\n  [\n    'materia' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css'),\n  ],\n  [\n    'darkly' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css'),\n  ],\n  [\n    'sandstone' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css'),\n  ],\n  [\n    'cosmo' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css'),\n  ],\n  [\n    'cyborg' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css'),\n  ],\n  [\n    'flatly' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css'),\n  ],\n  [\n    'journal' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css'),\n  ],\n  [\n    'litera' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css'),\n  ],\n  [\n    'lumen' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css'),\n  ],\n  ['lux' as const, () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css')],\n  [\n    'minty' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css'),\n  ],\n  [\n    'pulse' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css'),\n  ],\n  [\n    'simplex' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css'),\n  ],\n  [\n    'slate' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css'),\n  ],\n  [\n    'solar' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css'),\n  ],\n  [\n    'spacelab' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css'),\n  ],\n  [\n    'superhero' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css'),\n  ],\n  [\n    'united' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css'),\n  ],\n  [\n    'yeti' as const,\n    () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css'),\n  ],\n])\n\nexport const importThemeStyleCustom = (theme: GeneralTheme | null) => {\n  if (theme) {\n    const themeLoader = themeDeps.get(theme)\n    if (themeLoader) {\n      return themeLoader()\n    }\n  }\n\n  logError(`${theme}: theme is not defined`)\n\n  return themeDeps\n    .values()\n    .next()\n    .value()\n}\n\nexport const availableGeneralThemes = [\n  'materia',\n  'darkly',\n  'sandstone',\n  'cosmo',\n  'cyborg',\n  'flatly',\n  'journal',\n  'litera',\n  'lumen',\n  'lux',\n  'minty',\n  'pulse',\n  'simplex',\n  'slate',\n  'solar',\n  'spacelab',\n  'superhero',\n  'united',\n  'yeti',\n] as const\nexport type GeneralTheme = typeof availableGeneralThemes[number]\n\nexport const availableEditorThemes = ['github', 'monokai', 'tomorrow', 'solarized_dark', 'terminal'] as const\nexport type EditorTheme = typeof availableEditorThemes[number]\n","import * as React from 'react'\nimport { version } from '../../package.json'\nimport { GeneralTheme, availableGeneralThemes, availableEditorThemes, EditorTheme } from 'themes/themes'\nimport { switchTheme, switchEditorTheme } from 'actions/actions'\nimport { connect } from 'react-redux'\nimport { getTheme, getEditorTheme } from 'store/selectors'\nimport { RootState } from 'state/State'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  Nav,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavItem,\n  NavLink,\n  Dropdown,\n} from 'reactstrap'\nimport { withErrorBoundary } from './common/ErrorBoundary'\nimport { memo, useCallback, FC } from 'react'\n\ninterface Props {\n  setGeneralTheme: typeof switchTheme\n  setEditorTheme: typeof switchEditorTheme\n  currentTheme: GeneralTheme | null\n  currentEditorTheme: EditorTheme\n}\n\nconst Header: FC<Props> = ({ setGeneralTheme, currentTheme, setEditorTheme, currentEditorTheme }) => {\n  const [isOpen, switchIsOpen] = useToggleState()\n  const [dropDownIsOpen, toggleDropdown] = useToggleState()\n\n  return (\n    <>\n      <Navbar color=\"dark\" dark={true} expand=\"md\">\n        <NavbarBrand href=\"/\">Keyrier JSON</NavbarBrand>\n        <NavbarToggler onClick={switchIsOpen} />\n        <Collapse isOpen={isOpen} navbar={true}>\n          <Nav className=\"ml-auto\" navbar={true}>\n            <Dropdown isOpen={dropDownIsOpen} toggle={toggleDropdown}>\n              <DropdownToggle nav={true} caret={true}>\n                Theme\n              </DropdownToggle>\n              <DropdownMenu right={true}>\n                <DropdownItem header={true}>Choose editor theme</DropdownItem>\n                {availableEditorThemes.map((theme, index) => (\n                  <ThemeDropDownItem\n                    setTheme={setEditorTheme}\n                    key={index}\n                    active={currentEditorTheme === theme}\n                    theme={theme}\n                    reloadOnChange={false}\n                  />\n                ))}\n                <DropdownItem header={true}>Choose general theme</DropdownItem>\n\n                {availableGeneralThemes.map((theme, index) => (\n                  <ThemeDropDownItem\n                    setTheme={setGeneralTheme}\n                    key={index}\n                    active={currentTheme === theme}\n                    theme={theme}\n                    reloadOnChange={true}\n                  />\n                ))}\n              </DropdownMenu>\n            </Dropdown>\n            <NavItem>\n              <NavLink href=\"https://github.com/magoo-magoo/keyrier-json/releases/latest\">v{version}</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://github.com/magoo-magoo/keyrier-json\">GitHub</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </>\n  )\n}\n\ntype ThemeDropDownItemProps<T extends GeneralTheme | EditorTheme> = {\n  theme: T\n  active: boolean\n  setTheme: (v: T) => void\n  reloadOnChange: boolean\n}\n\nconst ThemeDropDownItem = <T extends GeneralTheme | EditorTheme>(props: ThemeDropDownItemProps<T>) => {\n  const { theme, active, setTheme, reloadOnChange } = props\n  const onClick = useCallback(() => {\n    setTheme(theme)\n    if (reloadOnChange) {\n      setTimeout(() => window.location.reload())\n    }\n  }, [theme, setTheme, reloadOnChange])\n  return (\n    <DropdownItem active={active} onClick={onClick}>\n      {theme}\n    </DropdownItem>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  currentTheme: getTheme(state),\n  currentEditorTheme: getEditorTheme(state),\n})\n\nexport default connect(\n  mapStateToProps,\n  { setGeneralTheme: switchTheme, setEditorTheme: switchEditorTheme }\n)(memo(withErrorBoundary(Header)))\n","import * as React from 'react'\nimport { Button } from 'reactstrap'\nimport { memo, useCallback, ChangeEvent, FC } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\ninterface Props {\n  header: [string, string]\n  id: number\n  onChange: (h: [string, string]) => void\n  onRemove: (h: [string, string]) => void\n}\n\nexport const RenderHeaderInput: FC<Props> = memo(\n  withErrorBoundary(({ header, onRemove, onChange, id }) => {\n    const [key, value] = header\n\n    const onKeyChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([e.target.value, value]), [\n      onChange,\n      value,\n    ])\n    const onValueChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([key, e.target.value]), [\n      onChange,\n      key,\n    ])\n    const onRemoveCallback = useCallback(() => onRemove(header), [onRemove, header])\n\n    return (\n      <div className=\"row align-items-center\">\n        <div className=\"col-sm-5\">\n          <input\n            className=\"form-control-lg form-control\"\n            value={key}\n            id={`headerName${id}`}\n            type=\"text\"\n            name={`headerName${id}`}\n            placeholder=\"enter an name\"\n            onChange={onKeyChange}\n          />\n        </div>\n        <div className=\"col-sm-5\">\n          <input\n            className=\"form-control-lg form-control\"\n            value={value}\n            type=\"text\"\n            name={`headerValue${id}`}\n            id={`headerValue${id}`}\n            placeholder=\"enter an value\"\n            onChange={onValueChange}\n          />\n        </div>\n        <div className=\"col-sm-2\">\n          <Button outline={true} color=\"danger\" onClick={onRemoveCallback}>\n            remove\n          </Button>\n        </div>\n      </div>\n    )\n  })\n)\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { connect } from 'react-redux'\nimport { updateSource } from 'actions/actions'\nimport { customToString } from 'core/converters/string'\nimport { RenderHeaderInput } from './RequestHeader'\nimport { useState, memo, useCallback, FC } from 'react'\nimport { Alert, FormGroup, Form, Button } from 'reactstrap'\nimport { useToggleState, useChangeEventState } from 'hooks/hooks'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\n\ninterface Props {\n  onFinish: () => void\n  setSource: (src: string) => void\n}\n\nconst HttpRequestSource: FC<Props> = ({ onFinish, setSource }) => {\n  const [method, setMethod] = useChangeEventState('GET')\n  const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n  const [body, setBody] = useChangeEventState('')\n  const [headers, setHeaders] = useState([['Accept', 'application/json'] as [string, string]])\n  const [error, setError] = useState(null as TypeError | null)\n  const [hasBody, setHasBody] = useToggleState()\n\n  const submit = useCallback(async () => {\n    const requestInit: RequestInit = {\n      method,\n      headers,\n      body: hasBody ? body : null,\n    }\n    const request = new Request(url, requestInit)\n    setError(null)\n\n    let json: string\n    try {\n      const result = await fetch(request)\n      json = await result.json()\n    } catch (e) {\n      logError('HttpRequestSource.submit', e)\n      setError(e)\n      return\n    }\n    setSource(customToString(json))\n    onFinish()\n  }, [method, url, body, headers, hasBody, setError, setSource, onFinish])\n\n  return (\n    <div id=\"HttpRequestSource\">\n      <FormGroup>\n        <label htmlFor=\"requestMethod\">Method</label>\n        <select\n          className=\"form-control-lg form-control\"\n          defaultValue={method}\n          name=\"requestMethod\"\n          id=\"requestMethod\"\n          onChange={setMethod}\n        >\n          <option>GET</option>\n          <option>POST</option>\n          <option>PUT</option>\n          <option>OPTIONS</option>\n        </select>\n      </FormGroup>\n      <FormGroup>\n        <label htmlFor=\"requestUrl\">Request URL</label>\n        <input\n          defaultValue={url}\n          className=\"form-control-lg form-control\"\n          type=\"url\"\n          name=\"requestUrl\"\n          id=\"requestUrl\"\n          placeholder=\"enter an URL\"\n          onChange={setUrl}\n        />\n      </FormGroup>\n      <div className=\"position-relative form-check\">\n        <label className=\"form-check-label\">\n          <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n        </label>\n      </div>\n      <Form inline={true} hidden={!hasBody}>\n        <FormGroup>\n          <label>Body</label>\n          <input className=\"form-control-lg form-control\" type=\"textarea\" value={body} onChange={setBody} />{' '}\n        </FormGroup>\n      </Form>\n      <label htmlFor=\"headers\">Request headers</label>{' '}\n      <Button\n        outline={true}\n        color=\"primary\"\n        onClick={() => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']])}\n      >\n        Add header\n      </Button>\n      <br />\n      <br />\n      <HeaderList headers={headers} onChange={setHeaders} />\n      <br />\n      <Button block={true} color=\"primary\" onClick={submit}>\n        Submit\n      </Button>\n      {error && (\n        <Alert color=\"danger\">\n          Error: {error.message ? error.message : ''}\n          {error.stack ? error.stack : ''}\n        </Alert>\n      )}\n    </div>\n  )\n}\n\ntype HeaderListProps = {\n  headers: Array<[string, string]>\n  onChange: (headers: Array<[string, string]>) => void\n}\n\nconst HeaderList: FC<HeaderListProps> = ({ headers, onChange }) => {\n  const onRemove = useCallback((header: [string, string]) => onChange(headers.filter(h => h !== header)), [\n    headers,\n    onChange,\n  ])\n  const onChangeCallback = useCallback(\n    (header: [string, string]) => {\n      const index = headers.indexOf(header)\n      headers[index] = { ...header }\n      onChange([...headers])\n    },\n    [headers, onChange]\n  )\n  return (\n    <>\n      {headers.map((header, index) => (\n        <RenderHeaderInput header={header} key={index} id={index} onChange={onChangeCallback} onRemove={onRemove} />\n      ))}\n    </>\n  )\n}\n\nexport default connect(\n  null,\n  { setSource: updateSource }\n)(withErrorBoundary(memo(HttpRequestSource)))\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    updateSource,\n    resetEditor,\n    clearEditor,\n    updateAutoFormatSource,\n    undo,\n    redo,\n    updateQueryMode,\n} from 'actions/actions'\nimport HttpRequestSource from './source/RequestSource'\nimport { logInfo } from 'core/logging/logger'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    ButtonGroup,\n    Label,\n} from 'reactstrap'\nimport { memo, useCallback, FC, ChangeEvent } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport { getSourceAutoFormat, getCanUndo, getCanRedo, getQueryMode } from 'store/selectors'\nimport { RootState, QueryMode } from 'state/State'\n\ninterface Props {\n    onFileContentReady: typeof updateSource\n    changeAutoFormat: typeof updateAutoFormatSource\n    onReset: typeof resetEditor\n    onClear: typeof clearEditor\n    setQueryMode: typeof updateQueryMode\n    mode: QueryMode\n    onUndo: typeof undo\n    onRedo: typeof redo\n    canRedo: boolean\n    canUndo: boolean\n    autoFormat: boolean\n}\n\nconst LateralMenu: FC<Props> = ({\n    onReset,\n    onFileContentReady,\n    onClear,\n    autoFormat,\n    changeAutoFormat,\n    onRedo,\n    onUndo,\n    canRedo,\n    canUndo,\n    setQueryMode,\n    mode,\n}) => {\n    const [dropdownIsOpen, toggleDropdown] = useToggleState()\n    const [modalIsOpen, toggleModal] = useToggleState()\n    const handleFileChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            logInfo('onFileChange')\n            toggleDropdown()\n            if (e.target.files && e.target.files.length > 0) {\n                const fileReader = new FileReader()\n                logInfo('e.target.files', e.target.files[0].name)\n                fileReader.onload = () => {\n                    if (fileReader.result) {\n                        onFileContentReady(fileReader.result.toString())\n                    }\n                }\n                fileReader.readAsText(e.target.files[0])\n            }\n        },\n        [toggleDropdown, onFileContentReady]\n    )\n\n    const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n    return (\n        <>\n            <ButtonGroup className=\"d-flex\" vertical={true}>\n                <ButtonGroup vertical={false}>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onUndo}\n                        disabled={!canUndo}\n                    >\n                        <i className=\"material-icons mr-1 md-18\">undo</i>\n                        <span>Undo</span>\n                    </Button>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onRedo}\n                        disabled={!canRedo}\n                    >\n                        Redo\n                        <i className=\"material-icons mr-1 md-18\">redo</i>\n                    </Button>\n                </ButtonGroup>\n                <br />\n                <br />\n                <Label\n                    className=\"d-flex justify-content-center align-content-between\"\n                    check={true}\n                    onClick={handleAutoFormatChange}\n                >\n                    <i className=\"material-icons mr-1\">{autoFormat ? 'check_box' : 'check_box_outline_blank'}</i>\n                    Auto format\n                </Label>\n                <br />\n                <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n                    <DropdownToggle\n                        className=\"d-flex justify-content-center align-content-between\"\n                        size={'lg'}\n                        id=\"import-menu-button\"\n                        color=\"primary\"\n                    >\n                        <i className=\"material-icons mr-1 md-18\">unarchive</i>\n                        Import\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem toggle={false}>\n                            <label id=\"import-file\">\n                                Browse JSON file...\n                                <input\n                                    type=\"file\"\n                                    name=\"file\"\n                                    id=\"sourceFile\"\n                                    style={{ display: 'none' }}\n                                    onChange={handleFileChange}\n                                />\n                            </label>\n                        </DropdownItem>\n                        <DropdownItem id=\"http-request\" onClick={toggleModal}>\n                            <label>HTTP request</label>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n                <br />\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"secondary\"\n                    size={'lg'}\n                    onClick={onReset}\n                >\n                    <div>\n                        <i className=\"material-icons md-18 mr-1\">autorenew</i>\n                    </div>\n                    <div>Reset</div>\n                </Button>\n                <br />\n\n                {mode === 'Javascript' ? (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('SQL')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to SQL-like</div>\n                    </Button>\n                ) : (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('Javascript')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to JS</div>\n                    </Button>\n                )}\n\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"danger\"\n                    size={'lg'}\n                    onClick={onClear}\n                >\n                    <div>\n                        <i className=\"material-icons md-18  mr-1\">clear</i>\n                    </div>\n                    <div>Clear</div>\n                </Button>\n            </ButtonGroup>\n            <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n                <ModalBody>\n                    <HttpRequestSource onFinish={toggleModal} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    autoFormat: getSourceAutoFormat(state),\n    canUndo: getCanUndo(state),\n    canRedo: getCanRedo(state),\n    mode: getQueryMode(state),\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        onFileContentReady: updateSource,\n        onReset: resetEditor,\n        onClear: clearEditor,\n        onUndo: undo,\n        onRedo: redo,\n        changeAutoFormat: updateAutoFormatSource,\n        setQueryMode: updateQueryMode,\n    }\n)(memo(withErrorBoundary(LateralMenu)))\n","import * as React from 'react'\nimport styles from './GrabbleHeader.module.scss'\nimport { ComponentType, FC, ReactElement } from 'react'\nimport { CardHeader } from 'reactstrap'\n\nexport const WitXhGrabbleHeader = <T extends {}>(Wrapped: ComponentType<T>) => (\n    props: T & {\n        title: string\n    }\n) => {\n    const { title, ...restProps } = props\n    return (\n        <div className={styles.draggable}>\n            <div className=\"card-header\">\n                {title}\n                <span className={`${styles.grabber}`}>\n                    <i className=\"material-icons\">drag_indicator</i>\n                </span>\n            </div>\n            <Wrapped {...((restProps as unknown) as T)} />\n        </div>\n    )\n}\n\ntype Props = {\n    title: string\n    children: ReactElement\n}\n\nexport const GrabbleHeader: FC<Props> = ({ title, children }) => (\n    <div className={styles.draggable}>\n        <CardHeader color=\"primary\">\n            {title}\n            <span className={`float-right ${styles.grabber}`}>\n                <i className=\"material-icons\">drag_indicator</i>\n            </span>\n        </CardHeader>\n        {children}\n    </div>\n)\n","import * as React from 'react'\nimport Header from './Header'\nimport { ToastContainer } from 'react-toastify'\nimport { lazy, Suspense, FC } from 'react'\nimport LateralMenu from './LateralMenu'\nimport GridLayout from 'react-grid-layout'\nimport grabbleStyles from './common/GrabbleHeader.module.scss'\nimport { GrabbleHeader } from './common/GrabbleHeader'\nimport 'react-grid-layout/css/styles.css'\nimport { connect } from 'react-redux'\nimport { getQueryMode } from 'store/selectors'\nimport { QueryMode } from 'state/State'\n\nconst SourceEditor = lazy(() => import(/* webpackChunkName: \"SourceEditor\" */ 'components/source/SourceEditor'))\nconst Output = lazy(() => import(/* webpackChunkName: \"Output\" */ 'components/output/Output'))\nconst QueryEditor = lazy(() => import(/* webpackChunkName: \"QueryEditor\" */ 'components/query/QueryEditor'))\n\ntype Props = {\n    mode: QueryMode\n}\n\nconst App: FC<Props> = ({ mode }) => {\n    const layout = [\n        { i: 'LateralMenu', x: 0, y: 0, w: 6, h: 7, minW: 5 },\n        { i: 'SourceEditor', x: 6, y: 0, w: 14, h: 8, minW: 10, minH: 8 },\n        { i: 'QueryEditor', x: 20, y: 0, w: 28, h: 4, minW: 8, minH: 4 },\n        { i: 'Output', x: 20, y: 8, w: 28, h: 16, minW: 10, minH: 16 },\n    ]\n    return (\n        <>\n            <Header />\n            <div className=\"container-fluid\">\n                <h1 className=\"my-5\">Paste your JSON and Query it.</h1>\n                <GridLayout\n                    autoSize={true}\n                    className=\"layout\"\n                    isResizable={true}\n                    draggableHandle={`.${grabbleStyles.grabber}`}\n                    layout={layout}\n                    cols={48}\n                    width={1800}\n                    margin={[20, 20]}\n                    containerPadding={[0, 0]}\n                    rowHeight={50}\n                >\n                    <div key=\"LateralMenu\">\n                        <GrabbleHeader title=\"Keyrier\">\n                            <LateralMenu />\n                        </GrabbleHeader>\n                    </div>\n                    <div key=\"SourceEditor\">\n                        <GrabbleHeader title=\"1. Paste your JSON:\">\n                            <Suspense fallback={'loading...'}>\n                                <SourceEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key=\"QueryEditor\">\n                        <GrabbleHeader title={`2. Type your ${mode} query:`}>\n                            <Suspense fallback={'loading...'}>\n                                <QueryEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key=\"Output\">\n                        <GrabbleHeader title=\"3. View your results:\">\n                            <Suspense fallback={'loading...'}>\n                                <Output />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                </GridLayout>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default connect(state => ({ mode: getQueryMode(state) }))(App)\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.')\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.')\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { Provider } from 'react-redux'\nimport './index.scss'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport { configureStore } from 'store/store'\nimport * as React from 'react'\nimport { getTheme } from 'store/selectors'\nimport { importThemeStyleCustom } from 'themes/themes'\nimport App from 'components/App'\nimport { unregister } from 'registerServiceWorker'\n;(async () => {\n    const store = configureStore()\n\n    const promises = await Promise.all([\n        import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n        importThemeStyleCustom(getTheme(store.getState())),\n    ])\n\n    const ReactDOM = promises[0]\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    )\n\n    unregister()\n})()\n","// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload?: any) => {\n  console.error('Keyrier error', error)\n  if (typeof payload !== 'undefined') {\n    console.error(payload)\n  }\n}\n\nexport const logWarning = (message: string, payload?: any) => {\n  if (typeof payload === 'undefined') {\n    console.warn(message)\n  }\n  console.warn(message, payload)\n}\n\nexport const logInfo = (message: string, payload?: any) => {\n  if (typeof payload === 'undefined') {\n    console.info(message)\n  }\n  console.info(message, payload)\n}\n","import { QueryMode, tabType } from 'state/State'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\n\nexport const updateAutoFormatSource = (active: boolean) =>\n    ({\n        active,\n        type: 'UPDATE_AUTOFORMAT_SOURCE',\n    } as const)\n\nexport const updateSource = (source: string) =>\n    ({\n        source,\n        type: 'UPDATE_SOURCE_TEXT',\n    } as const)\n\nexport const updateQuery = (query: string) =>\n    ({\n        query,\n        type: 'UPDATE_QUERY',\n    } as const)\n\nexport const resetEditor = () =>\n    ({\n        type: 'RESET_EDITOR',\n    } as const)\n\nexport const undo = () =>\n    ({\n        type: 'APP_UNDO',\n    } as const)\n\nexport const redo = () =>\n    ({\n        type: 'APP_REDO',\n    } as const)\n\nexport const clearEditor = () =>\n    ({\n        type: 'CLEAR_EDITOR',\n    } as const)\n\nexport const evaluateCode = () =>\n    ({\n        type: 'EVALUATE_CODE',\n    } as const)\n\nexport const toggleOutputTableModal = () =>\n    ({\n        type: 'TOGGLE_OUTPUT_TABLE_MODAL',\n    } as const)\n\nexport const updateTableColumns = (columns: string[]) =>\n    ({\n        columns,\n        type: 'UPDATE_TABLE_COLUMNS',\n    } as const)\n\nexport const updateTableGroupBy = (groupBy: string[]) =>\n    ({\n        groupBy,\n        type: 'UPDATE_TABLE_GROUP_BY',\n    } as const)\n\nexport const switchTheme = (theme: GeneralTheme) => ({\n    theme,\n    type: 'SWITCH_GLOBAL_THEME' as const,\n})\n\nexport const switchEditorTheme = (theme: EditorTheme) => ({\n    theme,\n    type: 'SWITCH_EDITOR_THEME' as const,\n})\n\nexport const updateSearchTerm = (searchTerm: string) =>\n    ({\n        searchTerm,\n        type: 'UPDATE_OUTPUT_SEARCH_TERM',\n    } as const)\n\nexport const updateQueryMode = (mode: QueryMode) =>\n    ({\n        mode,\n        type: 'UPDATE_QUERY_MODE',\n    } as const)\n\nexport const updateOutputTabSelection = (tab: tabType) =>\n    ({\n        tab,\n        type: 'UPDATE_OUTPUT_TAB_SELECTION',\n    } as const)\n\nexport type Action =\n    | ReturnType<typeof evaluateCode>\n    | ReturnType<typeof resetEditor>\n    | ReturnType<typeof clearEditor>\n    | ReturnType<typeof updateQuery>\n    | ReturnType<typeof toggleOutputTableModal>\n    | ReturnType<typeof updateTableColumns>\n    | ReturnType<typeof updateTableGroupBy>\n    | ReturnType<typeof switchTheme>\n    | ReturnType<typeof updateSearchTerm>\n    | ReturnType<typeof updateQueryMode>\n    | ReturnType<typeof updateOutputTabSelection>\n    | ReturnType<typeof updateSource>\n    | ReturnType<typeof updateAutoFormatSource>\n    | ReturnType<typeof switchEditorTheme>\n    | ReturnType<typeof undo>\n    | ReturnType<typeof redo>\n","import { RootState } from 'state/State'\n\nexport const getOutputErrorMessage = (state: RootState) =>\n  state && state.app && state.app.present.output ? state.app.present.output.errorMessage : ''\n\nexport const getOutputIsArray = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.table\n    ? !!state.app.present.output.table.isArray\n    : false\nexport const getOutputActiveTab = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.selectedTab\n    ? state.app.present.output.selectedTab\n    : ('RawJson' as const)\nexport const getOutputObject = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.obj ? state.app.present.output.obj : {}\nexport const getOutputObjectSize = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.objSize\n    ? state.app.present.output.objSize\n    : 0\nexport const getOutputSearchTerm = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.searchTerm\nexport const getOutputSearchMatch = (state: RootState) =>\n  state && state.app && state.app.present.output ? !!state.app.present.output.match : false\nexport const getisOutputTableModalOpen = (state: RootState) =>\n  state && state.app && state.app.present.output && state.app.present.output.table\n    ? !!state.app.present.output.table.isModalOpen\n    : false\n\nexport const getTheme = (state: RootState) =>\n  state.userSettings && state.userSettings.globalTheme ? state.userSettings.globalTheme : ('pulse' as const)\nexport const getEditorTheme = (state: RootState) =>\n  state.userSettings && state.userSettings.editorTheme ? state.userSettings.editorTheme : ('github' as const)\n\nexport const getdisplayedColumns = (state: RootState) =>\n  state &&\n  state.app &&\n  state.app.present.output &&\n  state.app.present.output.table &&\n  state.app.present.output.table.displayedColumns\n    ? [...state.app.present.output.table.displayedColumns]\n    : []\nexport const getOutputarray = (state: RootState) =>\n  state && state.app && state.app.present.output && Array.isArray(state.app.present.output.obj)\n    ? [...state.app.present.output.obj]\n    : []\nexport const getColumns = (state: RootState) =>\n  state &&\n  state.app &&\n  state.app.present.output &&\n  state.app.present.output.table &&\n  state.app.present.output.table.columns\n    ? [...state.app.present.output.table.columns]\n    : []\nexport const getGroupBy = (state: RootState) =>\n  state &&\n  state.app &&\n  state.app.present.output &&\n  state.app.present.output.table &&\n  state.app.present.output.table.groupBy\n    ? [...state.app.present.output.table.groupBy]\n    : []\n\nexport const getQueryText = (state: RootState) =>\n  state && state.app && state.app.present.query && state.app.present.query.text ? state.app.present.query.text : ''\nexport const getQueryMode = (state: RootState) =>\n  state && state.app && state.app.present.query && state.app.present.query.mode\n    ? state.app.present.query.mode\n    : ('SQL' as const)\n\nexport const getSourceText = (state: RootState) =>\n  state && state.app && state.app.present.source && state.app.present.source.text ? state.app.present.source.text : ''\nexport const getSourceAutoFormat = (state: RootState) =>\n  state && state.app && state.app.present.source ? !!state.app.present.source.autoFormat : false\n\nexport const getCanRedo = (state: RootState) =>\n  state && state.app && state.app.future ? state.app.future.length !== 0 : false\nexport const getCanUndo = (state: RootState) =>\n  state && state.app && state.app.past ? state.app.past.length > 1 : false\n","import { useState, useCallback, ChangeEvent } from 'react'\n\nexport const useToggleState = (initial: boolean = false): readonly [boolean, () => void] => {\n  const [value, setValue] = useState(initial)\n  return [value, () => setValue(!value)]\n}\n\ntype HtmlElementHookable = HTMLSelectElement | HTMLInputElement\n\nexport const useChangeEventState = (\n  initialValue: string\n): readonly [string, (e: ChangeEvent<HtmlElementHookable>) => void] => {\n  const [value, setValue] = useState(initialValue)\n\n  const eventHandler = useCallback(\n    (event: ChangeEvent<HtmlElementHookable>) => {\n      if (event && event.target) {\n        setValue(event.target.value)\n      }\n    },\n    [setValue]\n  )\n\n  return [value, eventHandler]\n}\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { toast } from 'react-toastify'\nimport { Component, ComponentType } from 'react'\n\nconst MISSING_ERROR = 'Error was swallowed during propagation.'\n\ntype State = {\n  error?: Error\n}\n\nclass ErrorBoundary extends Component<{}, State> {\n  public readonly state: State = {\n    error: undefined,\n  }\n\n  public componentDidCatch(error: Error | null, info: object) {\n    this.setState({ error: error || new Error(MISSING_ERROR) }, () => this.notify(info))\n  }\n\n  public render() {\n    const { children } = this.props\n    const { error } = this.state\n\n    if (error) {\n      return <>An error occured</>\n    }\n\n    return children\n  }\n\n  private notify(info: object) {\n    logError('An error occured', this.state.error)\n    logError('error info:', info)\n    toast.error(JSON.stringify(info), { position: 'bottom-right', hideProgressBar: true, autoClose: false })\n  }\n}\n\nexport const withErrorBoundary = <T extends {}>(Wrapped: ComponentType<T>) => (props: T) => (\n  <ErrorBoundary>\n    <Wrapped {...props} />\n  </ErrorBoundary>\n)\n","export const customToString = (obj: {}): string => {\n  if (Array.isArray(obj)) {\n    const array: any[] = obj\n    return array.map(e => customToString(e)).join(',')\n  }\n  if (typeof obj === 'object') {\n    return JSON.stringify(obj)\n  }\n  if (typeof obj === 'undefined') {\n    return ''\n  }\n  if (obj !== null && obj !== undefined) {\n    return obj.toString()\n  }\n\n  return ''\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n  if (!str || !part) {\n    return false\n  }\n  if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n    return true\n  }\n\n  return false\n}\n\nconst UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\nconst toLocaleString = (value: number, locale: boolean | string = false) => {\n  let result = value.toString()\n  if (typeof locale === 'string') {\n    result = value.toLocaleString(locale)\n  } else if (locale === true) {\n    result = value.toLocaleString()\n  }\n\n  return result\n}\n\nexport const prettyPrintBytes = (value: number, signed = false, locale: boolean | string = false) => {\n  if (!Number.isFinite(value)) {\n    throw new TypeError(`Expected a finite number, got ${typeof value}: ${value}`)\n  }\n  if (value === 0) {\n    return '0 B'\n  }\n  const isNegative = value < 0\n  const prefix = isNegative ? '-' : signed ? '+' : ''\n  if (isNegative) {\n    value = -value\n  }\n  if (value < 1) {\n    const numberStr = toLocaleString(value, locale ? locale : false)\n    return prefix + numberStr + ' B'\n  }\n  const exponent = Math.min(Math.floor(Math.log10(value) / 3), UNITS.length - 1)\n  value = Number((value / Math.pow(1024, exponent)).toPrecision(3))\n  const numberString = toLocaleString(value, locale ? locale : false)\n  const unit = UNITS[exponent]\n  return prefix + numberString + ' ' + unit\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggable\":\"GrabbleHeader_draggable__3DRIT\",\"grabber\":\"GrabbleHeader_grabber__12Y6q\"};","export const arrayElementName = 'arrayElement'\n"],"sourceRoot":""}