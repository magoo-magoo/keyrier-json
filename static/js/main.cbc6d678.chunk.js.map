{"version":3,"sources":["core/converters/json.ts","core/interpreters/sql.ts","core/interpreters/code.ts","state/State.ts","reducers/reducers.ts","store/persistence.ts","store/store.ts","themes/themes.ts","components/Header.tsx","components/source/RequestHeader.tsx","components/source/RequestSource.tsx","components/LateralMenu.tsx","components/common/GrabbleHeader.tsx","components/App.tsx","registerServiceWorker.ts","index.tsx","core/logging/logger.ts","actions/actions.ts","store/selectors.ts","hooks/hooks.ts","components/common/ErrorBoundary.tsx","core/converters/string.ts","components/common/GrabbleHeader.module.scss","models/array.ts"],"names":["jsonBeautify","str","trim","parsed","jsonParseSafe","JSON","stringify","error","logError","safeStr","replace","parse","map","v","fields","source","constructor","nodes","Star","Array","isArray","x","mapObject","executeQuery","sqlTree","sourceDataObject","fromPath","name","values","length","shift","result","_","chain","get","value","filter","where","conditions","leftValue","left","rightValue","right","operation","compareOperands","orderBy","order","orderings","undefined","direction","take","limit","toLowerCase","path","newPath","computePath","toLocaleLowerCase","startsWith","endsWith","includes","substring","indexOf","mapped","temp","forEach","field","val","index","alias","key","value2","codeEvaluation","sourceString","queryString","mode","jsEvaluation","Error","e","sqlEvaluation","currentWindow","window","lodash","code","evaluatedQuery","eval","apply","getDefaultAppState","initialStateJson","defaultAppState","emptyState","text","autoFormat","query","output","match","obj","objSize","searchTerm","selectedTab","table","columns","displayedColumns","isModalOpen","groupBy","rootReducer","rootState","action","type","console","time","newState","newOutputState","ret","timeEnd","state","active","computeOutput","previousState","errorMessage","message","outputObject","keyMap","d","Object","is","keys","arrayElementName","sort","ax","b","localeCompare","tab","containsTerm","src","filteredObj","containsIgnoreCase","from","k","getOwnPropertyNames","propertyName","propertyNameContains","splice","groupByList","gb","rootReducers","combineReducers","app","undoable","undoType","redoType","userSettings","globalTheme","editorTheme","theme","persist","storage","getStorage","toBeSaved","setItem","toast","warn","prettyPrintBytes","load","getDefault","savedStateString","getItem","loadFromStorage","merge","localStorage","sessionStorage","configureStore","appState","userSettingsState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","past","present","future","_latestUnfiltered","group","subscribe","appstate","getState","themeDeps","Map","importThemeStyleCustom","themeLoader","next","availableGeneralThemes","availableEditorThemes","ThemeDropDownItem","props","setTheme","reloadOnChange","onClick","useCallback","setTimeout","location","reload","DropdownItem","connect","currentTheme","getTheme","currentEditorTheme","getEditorTheme","setGeneralTheme","switchTheme","setEditorTheme","switchEditorTheme","memo","withErrorBoundary","useToggleState","isOpen","switchIsOpen","dropDownIsOpen","toggleDropdown","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","role","Collapse","navbar","Nav","className","NavItem","Dropdown","toggle","DropdownToggle","nav","caret","DropdownMenu","header","NavLink","version","RenderHeaderInput","onRemove","onChange","id","onKeyChange","target","onValueChange","onRemoveCallback","placeholder","Button","outline","HeaderList","headers","h","onChangeCallback","setSource","updateSource","onFinish","useChangeEventState","method","setMethod","url","setUrl","body","setBody","useState","setHeaders","setError","hasBody","setHasBody","submit","a","request","Request","fetch","json","customToString","FormGroup","htmlFor","defaultValue","Form","inline","hidden","block","Alert","stack","getSourceAutoFormat","canUndo","getCanUndo","canRedo","getCanRedo","getQueryMode","onFileContentReady","onReset","resetEditor","onClear","clearEditor","onUndo","undo","onRedo","redo","changeAutoFormat","updateAutoFormatSource","setQueryMode","updateQueryMode","dropdownIsOpen","modalIsOpen","toggleModal","handleFileChange","logInfo","files","fileReader","FileReader","onload","toString","readAsText","handleAutoFormatChange","ButtonGroup","vertical","size","disabled","Label","check","ButtonDropdown","style","display","Modal","ModalHeader","ModalBody","ModalFooter","GrabbleHeader","title","children","styles","draggable","CardHeader","grabber","ResponsiveGridLayout","WidthProvider","Responsive","SourceEditor","lazy","Output","QueryEditor","layouts","lg","i","y","w","minW","minH","md","sm","xs","xxs","autoSize","isResizable","draggableHandle","grabbleStyles","breakpoints","cols","margin","containerPadding","rowHeight","fallback","Boolean","hostname","Promise","all","promises","createRoot","document","getElementById","render","navigator","serviceWorker","ready","then","registration","unregister","payload","info","updateQuery","toggleOutputTableModal","updateTableColumns","updateTableGroupBy","updateSearchTerm","updateOutputTabSelection","getOutputErrorMessage","getOutputIsArray","getOutputActiveTab","getOutputObject","getOutputObjectSize","getOutputSearchTerm","getOutputSearchMatch","getisOutputTableModalOpen","getdisplayedColumns","getOutputarray","getColumns","getGroupBy","getQueryText","getSourceText","initial","setValue","initialValue","event","ErrorBoundary","this","setState","notify","position","hideProgressBar","autoClose","Component","Wrapped","join","part","UNITS","toLocaleString","locale","signed","Number","isFinite","TypeError","isNegative","prefix","numberStr","exponent","Math","min","floor","log10","pow","toPrecision","numberString","unit","module","exports"],"mappings":"uOAEaA,EAAe,SAACC,GACzB,IAAKA,GAAsB,KAAfA,EAAIC,OACZ,MAAO,GAGX,IAAMC,EAASC,EAAcH,GAC7B,GAAsB,kBAAXE,EACP,OAAOA,EAGX,IACI,OAAOE,KAAKC,UAAUH,EAAQ,KAAM,GACtC,MAAOI,GACLC,YAASD,EAAON,GAEpB,OAAOA,GAGEG,EAAgB,SAACH,GAC1B,IAAKA,GAAsB,KAAfA,EAAIC,OACZ,OAAO,KAGX,IAAMO,EAAUR,EACXS,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAGrB,IACI,OAAOL,KAAKM,MAAMF,GACpB,MAAOF,GACL,OAAON,ICLTW,EAAM,SAACC,EAAWC,EAAiBC,GACrC,OAAID,EAAO,GAAGE,cAAgBC,QAAMC,KACzBL,EAGPM,MAAMC,QAAQP,GACPA,EAAED,IAAI,SAAAS,GAAC,OAAIC,EAAUR,EAAQO,EAAGN,KAGpCO,EAAUR,EAAQD,EAAGE,IAG1BQ,EAAe,SAACC,EAAkBC,GACpC,IAAIC,EAAqB,GAErBF,EAAQT,OAAOY,KAAKC,QAAUJ,EAAQT,OAAOY,KAAKC,OAAOC,OAAS,GAC5B,SAAlCL,EAAQT,OAAOY,KAAKC,OAAO,KAC3BF,EAAQ,YAAOF,EAAQT,OAAOY,KAAKC,SAC1BE,QAIjB,IAAIC,EAASC,IAAEC,MAAWR,GAEtBC,GAAYA,EAASG,OAAS,IAC9BE,EAASC,IAAEC,MAAWF,EAAOG,IAAIR,KAErC,IAAMS,EAAQJ,EAAOI,QACrB,OAAIH,IAAEZ,QAAQe,GACHJ,EACFK,OAAO,SAAAvB,GACJ,IAAKW,EAAQa,QAAUb,EAAQa,MAAMC,WACjC,OAAO,EAEX,IAAMC,EAAYf,EAAQa,MAAMC,WAAWE,KACrCC,EAAajB,EAAQa,MAAMC,WAAWI,MACtCC,EAAYnB,EAAQa,MAAMC,WAAWK,UAC3C,OAAOC,EAAgBD,EAAWJ,EAAWE,EAAY5B,KAE5DgC,QACGrB,EAAQsB,MAAQtB,EAAQsB,MAAMC,UAAUnC,IAAI,SAAAS,GAAC,OAAIA,EAAEc,MAAMA,aAASa,EAClExB,EAAQsB,MAAQtB,EAAQsB,MAAMC,UAAUnC,IAAI,SAAAS,GAAC,OAAIA,EAAE4B,iBAAaD,GAEnEpC,IAAI,SAAAC,GAAC,OAAID,EAAIC,EAAGW,EAAQV,OAAQU,EAAQT,UACxCmC,KACG1B,EAAQ2B,OAA8C,kBAA9B3B,EAAQ2B,MAAMhB,MAAMA,MACtCX,EAAQ2B,MAAMhB,MAAMA,MACpB,iBAETA,QAEFvB,EAAIuB,EAAOX,EAAQV,OAAQU,EAAQT,SAGxC6B,EAAkB,SAAlBA,EAAmBD,EAA0BH,EAAUE,EAAWP,GACpE,IAAKQ,EACD,OAAO,EAGX,GAAgC,OAA5BA,EAAUS,cACV,OACIR,EAAgBJ,EAAKG,UAAWH,EAAKA,KAAMA,EAAKE,MAAOP,IACvDS,EAAgBF,EAAMC,UAAWD,EAAMF,KAAME,EAAMA,MAAOP,GAIlE,GAAgC,QAA5BQ,EAAUS,cACV,OACIR,EAAgBJ,EAAKG,UAAWH,EAAKA,KAAMA,EAAKE,MAAOP,IACvDS,EAAgBF,EAAMC,UAAWD,EAAMF,KAAME,EAAMA,MAAOP,GAIlE,IAAKK,EAAKL,MACN,OAAO,EAGX,IAAMI,EAAYP,IAAEE,IAAIC,EA3GD,SAACkB,GACxB,IAAKA,GAAwB,IAAhBA,EAAKxB,OACd,MAAO,GAEX,GAAgB,SAAZwB,EAAK,GAAe,CACpB,IAAMC,EAAO,YAAOD,GAEpB,OADAC,EAAQxB,QACDwB,EAGX,OAAOD,EAiGwBE,CAAYf,EAAKZ,SAEhD,GAAkB,MAAde,GAAqBJ,IAAcG,EAAMP,MACzC,OAAO,EAEX,GAAgC,OAA5BQ,EAAUS,eAA0Bb,IAAcG,EAAMP,MACxD,OAAO,EAEX,GAAkB,OAAdQ,GAAsBJ,IAAcG,EAAMP,MAC1C,OAAO,EAEX,GAAgC,WAA5BQ,EAAUS,eAA8Bb,IAAcG,EAAMP,MAC5D,OAAO,EAEX,GAAkB,OAAdQ,GAAsBJ,IAAcG,EAAMP,MAC1C,OAAO,EAGX,GAAsC,SAAlCQ,EAAUa,qBAAyD,kBAAhBd,EAAMP,OAA2C,kBAAdI,EACtF,GAAIG,EAAMP,MAAMsB,WAAW,MAAQf,EAAMP,MAAMuB,SAAS,MACpD,GAAInB,EAAUoB,SAASjB,EAAMP,MAAMyB,UAAU,EAAGlB,EAAMP,MAAMN,OAAS,IACjE,OAAO,OAER,GAAIa,EAAMP,MAAMsB,WAAW,MAC9B,GAAIlB,EAAUmB,SAAShB,EAAMP,MAAMyB,UAAUlB,EAAMP,MAAM0B,QAAQ,KAAO,IACpE,OAAO,OAER,GAAInB,EAAMP,MAAMuB,SAAS,MACxBnB,EAAUkB,WAAWf,EAAMP,MAAMyB,UAAU,EAAGlB,EAAMP,MAAM0B,QAAQ,OAClE,OAAO,EAKnB,GAAInB,EAAMP,MAAO,CACb,GAAkB,MAAdQ,GAAqBJ,EAAYG,EAAMP,MACvC,OAAO,EAEX,GAAkB,OAAdQ,GAAsBJ,GAAaG,EAAMP,MACzC,OAAO,EAEX,GAAkB,MAAdQ,GAAqBJ,EAAYG,EAAMP,MACvC,OAAO,EAEX,GAAkB,OAAdQ,GAAsBJ,GAAaG,EAAMP,MACzC,OAAO,EAIf,SACgC,OAA5BQ,EAAUS,eACVjC,MAAMC,QAAQsB,EAAMP,QACpBO,EAAMP,MAAMC,OAAO,SAAAf,GAAC,OAAIA,EAAEc,QAAUI,IAAWV,OAAS,IAQ1DP,EAAY,SAACR,EAAiBgD,EAAgB/C,GAChD,IAAMgD,EAEF,GAgBJ,OAfAjD,EAAOkD,QAAQ,SAAAC,GACX,IAAM9B,EAAQH,IAAEE,IACZ4B,EACAG,EAAMA,MAAMrC,OAAOQ,OAAO,SAAC8B,EAAKC,GAAN,QAA4B,IAAVA,GAAepD,EAAOqD,OAASF,IAAQnD,EAAOqD,MAAMjC,UAEhGkC,EAAMJ,EAAMA,MAAM9B,MAClB8B,EAAMA,MAAMK,SACZD,EAAMJ,EAAMA,MAAMK,QAElBL,EAAMtC,OACN0C,EAAMJ,EAAMtC,KAAKQ,OAErB4B,EAAKM,GAAOlC,IAEhB2B,EAASC,GCzLAQ,EAAiB,SAACC,EAAsBC,EAAqBC,GACtE,OAAKF,GAAiBC,EAGT,eAATC,EACOC,EAAaH,EAAcC,GAClB,QAATC,EDOc,SAACF,EAAsBC,GAChD,IACI,IAAMjD,EAAUb,gBAAM8D,EAAY/D,QAAQ,kBAAmB,KAC7D,GAAsC,SAAlCc,EAAQT,OAAOY,KAAKC,OAAO,GAC3B,OAAO,IAAIgD,MAAJ,UAAapD,EAAQT,OAAOY,KAAKC,OAAO,GAAxC,0BAGX,IAAMH,EAAmBrB,EAAcoE,GAEjCzC,EAASR,EAAaC,EAASC,GAErC,OAAOpB,KAAKC,UAAUyB,GACxB,MAAO8C,GACL,OAAOA,GCnBAC,CAAcN,EAAcC,GAGhC,IAAIG,MAAM,oBARN,IAWTD,EAAe,SAACH,EAAsBC,GACxC,IAAKD,GAAwC,KAAxBA,EAAatE,OAC9B,OAAO,KAGX,IAAKuE,GAAsC,KAAvBA,EAAYvE,OAC5B,OAAO,KAEX,IAAM6E,EAAuC,qBAAXC,OAAyB,GAAKA,OAChE,IACID,EAAc/C,EAAIiD,IAClB,IAAMC,EAAI,8CAEUV,EAFV,qCAGOC,EAHP,cAMJU,EAAiBC,KAAKC,MAAM,KAAM,CAACH,IAEzC,MAAa,kBADOC,EAET,KAEJA,EACT,MAAO5E,GACL,OAAOA,EAfX,QAiBIwE,EAAc/C,OAAIgB,I,QCSbsC,EAAqB,kBAAMC,GAC3BC,EAAkBD,EAOlBE,EAAa,CACtB1E,OAAQ,CAAE2E,KAAM,GAAIC,YAAY,GAChCC,MAAO,CAAEF,KAAM,GAAIhB,KAAM,OACzBmB,OAAQ,CACJC,OAAO,EACPC,IAAK,GACLC,QAAS,EACTC,WAAY,GACZC,YAAa,UACbC,MAAO,CACH/E,SAAS,EACTgF,QAAS,GACTC,iBAAkB,GAClBC,aAAa,EACbC,QAAS,M,olBCnDd,IAAMC,EAAc,WAAuD,IAAtDC,EAAqD,uDAAzCnB,IAAsBoB,EAAmB,uCAC7E,GAAoB,iBAAhBA,EAAOC,KACP,OAAOlB,EAGXmB,QAAQC,KAAK,eACb,IAAMC,EACFL,GAAaA,EAAUb,OAASa,EAAU1F,OAA1C,KAEa0F,EAFb,CAGUb,MAAOA,EAAMa,EAAUb,MAAOc,GAC9B3F,OAAQA,EAAO0F,EAAU1F,OAAQ2F,KAErC,GAEJK,EAAiBlB,EAAOY,EAAWK,EAAUJ,GAC7CM,EAAG,KACFF,EADE,CAELjB,OAAO,EAAD,GACCkB,EADD,CAEFZ,MAAOA,EAAMY,EAAiBA,EAAeZ,MAAQ,GAAIO,OAKjE,OADAE,QAAQK,QAAQ,eACTD,GAGEjG,EAAS,SAACmG,EAAoBR,GACvC,OAAQA,EAAOC,MACX,IAAK,qBACD,OAAO,EAAP,GACOO,EADP,CAEIxB,KAAMwB,GAASA,EAAMvB,WAAa3F,EAAa0G,EAAO3F,OAAOb,QAAUwG,EAAO3F,SAEtF,IAAK,2BACD,OAAO,EAAP,GACOmG,EADP,CAEIxB,KAAMgB,EAAOS,OACPD,GAASA,EAAMxB,MAAQ1F,EAAakH,EAAMxB,KAAKxF,QAC/CgH,GAASA,EAAMxB,KACfwB,EAAMxB,KACN,GACNC,WAAYe,EAAOS,SAE3B,QACI,OAAOD,IAeNtB,EAAQ,SAACsB,EAAmBR,GACrC,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,EAAP,GACOO,EADP,CAEIxB,KAAMgB,EAAOd,QAErB,IAAK,oBACD,OAAO,EAAP,GACOsB,EADP,CAEIxC,KAAMgC,EAAOhC,KACbgB,KACoB,QAAhBgB,EAAOhC,KACDc,GAAmBA,EAAgBI,MAC/BJ,EAAgBI,MAAMF,KACtB,GACJ,wPAElB,QACI,OAAOwB,IAINE,EAAgB,SACzBC,EACA7C,EACAC,EACAiC,EACAhC,GAEA,IAAMgB,EAAOnB,EAAeC,EAAcC,EAAaC,GAEvD,IAAKgB,EACD,MAAO,CACHQ,YAAa,UACbH,IAAK,KACLC,QAAS,EACTC,WAAY,GACZH,OAAO,EACPK,MAAO,CACH/E,SAAS,EACTkF,aAAa,EACbD,iBAAkB,GAClBD,QAAS,GACTG,QAAS,KAIrB,GAAIb,aAAgBd,MAChB,MAAO,CACHsB,YAAa,UACbH,IAAK,KACLC,QAAS,EACTC,WAAY,GACZH,OAAO,EACPwB,aAAc5B,EAAK6B,QACnBpB,MAAO,CACH/E,SAAS,EACTkF,aAAa,EACbD,iBAAkB,GAClBD,QAAS,GACTG,QAAS,KAKrB,IAAIF,EAAmB,IAAIlF,MACrBqG,EAAoCpH,EAAcsF,GACxD,GAAIvE,MAAMC,QAAQoG,GAAe,CAC7B,IAAMC,EAAoC,GAC1CD,EAAaxD,QAAQ,SAAA0D,GACP,OAANA,QAAoB1E,IAAN0E,GAAoBC,OAAOC,GAAGF,EAAG,KAAQvG,MAAMC,QAAQsG,KACnDA,EAAkB,kBAANA,EAAiBC,OAAOE,KAAKH,GAAK,CAACI,KAAqB,IAC5E9D,QAAQ,SAAAK,GAAG,OAAKoD,EAAOpD,GAAOA,MAGhDgC,EAAmBsB,OAAOE,KAAKJ,GAC1BrF,OAAO,SAAAiC,GAAG,OAAIA,GAAsB,kBAARA,GAAmC,KAAfA,EAAInE,SACpD6H,KAAK,SAACC,EAAIC,GAAL,OAAWD,EAAG5E,cAAc8E,cAAcD,EAAE7E,iBAE1D,IAAMkD,EACFe,GAAiBA,EAAclB,OAAyB,8BAAhBO,EAAOC,KACzCU,IAAkBA,EAAclB,MAAMG,eACtCe,IAAiBA,EAAclB,QAC/BkB,EAAclB,MAAMG,YAG1BJ,EAAuB/E,MAAMC,QAAQoG,GAAgB,QAAU,UAKnE,MAHoB,gCAAhBd,EAAOC,OACPT,EAAcQ,EAAOyB,KAElB,CACHjC,cACAH,IAAKyB,EACLxB,QAASN,EAAOA,EAAK7D,OAAS,EAC9BoE,WAAY,GACZH,OAAO,EACPK,MAAO,CACH/E,QAASD,MAAMC,QAAQoG,GACvBlB,cACAD,mBACAD,QAASC,EACTE,QAAS,MAKRV,EAAS,SAACwB,EAAyBP,EAAoBJ,GAChE,OAAQA,EAAOC,MACX,IAAK,gBACL,IAAK,eACL,IAAK,qBACD,GACIU,GACAA,EAActG,QACd+F,GACAA,EAAS/F,QACTsG,EAAczB,OACdkB,EAASlB,OACTyB,EAActG,OAAO2E,OAASoB,EAAS/F,OAAO2E,MAC9C2B,EAAczB,MAAMF,OAASoB,EAASlB,MAAMF,KAE5C,OAAO2B,EAAcxB,OAEzB,GAAIiB,GAAYA,EAASjB,OACrB,OAAOuB,EACHN,EAASjB,OACTiB,EAAS/F,QAAU+F,EAAS/F,OAAO2E,KAAOoB,EAAS/F,OAAO2E,KAAO,GACjEoB,EAASlB,OAASkB,EAASlB,MAAMF,KAAOoB,EAASlB,MAAMF,KAAO,GAC9DgB,EACAI,EAASlB,OAASkB,EAASlB,MAAMlB,KAAOoC,EAASlB,MAAMlB,KAAO,OAGtE,MACJ,IAAK,4BACD,OAAOoC,EAAQ,KAEFA,EAASjB,OAFP,CAGLM,MAAM,EAAD,GACGW,EAASjB,OAASiB,EAASjB,OAAOM,MAAQ,GAD7C,CAEDG,eACIQ,EAASjB,SAAUiB,EAASjB,OAAOM,SAASW,EAASjB,OAAOM,MAAMG,gBAG9E,GACV,IAAK,8BACD,GAAIQ,EACA,OAAO,EAAP,GACOA,EAASjB,OADhB,CAEIK,YAAaQ,EAAOyB,MAG5B,MACJ,IAAK,4BACD,GAAIrB,GAAYA,EAASjB,OACrB,OAAO,EAAP,GACOzD,EAAO0E,EAASjB,OAAQa,EAAOT,YADtC,CAEIA,WAAYS,EAAOT,WACnBC,YAAa,YAGrB,MACJ,QACI,GAAIY,GAAYA,EAASjB,OACrB,OAAOuB,EACHN,EAASjB,OACTiB,EAAS/F,QAAU+F,EAAS/F,OAAO2E,KAAOoB,EAAS/F,OAAO2E,KAAO,GACjEoB,EAASlB,OAASkB,EAASlB,MAAMF,KAAOoB,EAASlB,MAAMF,KAAO,GAC9DgB,EACAI,EAASlB,OAASkB,EAASlB,MAAMlB,KAAOoC,EAASlB,MAAMlB,KAAO,OAK9E,MAAO,IAmDLtC,EAAS,SAAC8E,EAAoBjB,GAChC,IAAKA,GAAoC,KAAtBA,EAAW/F,SAAkBgH,EAC5C,OAAO,EAAP,GAAYA,EAAZ,CAAmBpB,OAAO,IAFyB,MAhD/B,SAAfsC,EAAgBC,EAAyBpC,GAClD,GAAmB,kBAARoC,GAAmC,kBAARA,EAClC,MAAO,CAAEvC,OAAO,EAAOwC,YAAaD,GAGxC,GAAmB,kBAARA,EACP,OAAIE,YAAmBF,EAAKpC,GACjB,CAAEH,OAAO,EAAMwC,YAAaD,GAEhC,CAAEvC,OAAO,EAAOwC,YAAaD,GAExC,IAAMtC,EAA8B5E,MAAMC,QAAQiH,GAAd,YAAyBA,GAAzB,KAAqCA,GAEnER,EAAO1G,MAAMC,QAAQ2E,GACrB5E,MAAMqH,KAAK,CAAE3G,OAAQkE,EAAIlE,QAAU,SAACG,EAAGyG,GAAJ,OAAUA,IAC7Cd,OAAOe,oBAAoB3C,GAAK3D,OAAO,SAAAuG,GAAY,OAAIA,IAEzD5G,GAAS,EAjB4D,uBAmBzE,YAA2B8F,EAA3B,+CAAiC,CAAC,IAAvBc,EAAsB,QACvBC,EAA+C,kBAAjBD,GAA6BJ,YAAmBI,EAAc1C,GAClG,GAAI2C,EACA7G,GAAS,MADb,CAIA,IAN6B,EAOEqG,EADjBrC,EAAI4C,GACiC1C,GAA3CH,EAPqB,EAOrBA,MAAOwC,EAPc,EAOdA,YACXM,GAAwB9C,GACxB/D,GAAS,EACTgE,EAAI4C,GAAgBL,GAEhBnH,MAAMC,QAAQ2E,IAAgC,kBAAjB4C,EAC7B5C,EAAI8C,OAAOF,EAAc,UAElB5C,EAAI4C,KAlCkD,kFA6CzE,OAPK5G,IACIZ,MAAMC,QAAQ2E,GAGfA,EAAIlE,OAAS,EAFXgG,EAAkB7D,QAAQ,SAAC2E,GAAD,cAAiC5C,EAAI4C,MAKlE,CAAE7C,MAAO/D,EAAQuG,YAAavC,GAONqC,CAAalB,EAAMnB,IAAKE,GAA/CqC,EAJ+C,EAI/CA,YAAaxC,EAJkC,EAIlCA,MACrB,OAAIA,EACO,EAAP,GAAYoB,EAAZ,CAAmBnB,IAAKuC,EAAaxC,UAGlCoB,GAGEf,EAAQ,SAACe,EAAqCR,GACvD,OAAQA,EAAOC,MACX,IAAK,uBACD,IAAImC,EAAc5B,GAASA,EAAMX,QAAUW,EAAMX,QAAU,GAM3D,OALAuC,EAAY9E,QAAQ,SAAAuC,IACyB,IAArCG,EAAON,QAAQvC,QAAQ0C,KACvBuC,EAAcA,EAAY1G,OAAO,SAAA2G,GAAE,OAAoC,IAAhCrC,EAAON,QAAQvC,QAAQkF,QAG/D,EAAP,GACO7B,EADP,CAEIb,iBAAkBK,EAAON,QACzBG,QAASuC,IAEjB,IAAK,wBACD,OAAO,EAAP,GACO5B,EADP,CAEIX,QAASG,EAAOH,QACXnE,OAAO,SAAA2G,GAAE,OAAI7B,GAASA,EAAMb,mBAA4D,IAAxCa,EAAMb,iBAAiBxC,QAAQkF,KAC/E3G,OAAO,SAAA2G,GAAE,MAAW,gBAAPA,MAE1B,QACI,OAAO7B,IAcJ8B,EAJMC,YAAgB,CACjCC,IAAKC,IAPuB,WAAmD,IAAlDjC,EAAiD,uDAAzC5B,IAAsBoB,EAAmB,uCAC9E,MAAoB,iBAAhBA,EAAOC,KACAH,EAAY,EAAD,GAAMlB,KAAwBoB,GAE7CF,EAAYU,EAAOR,IAGM,CAAE0C,SAAU,WAAYC,SAAU,aAClEC,aA3RwB,WAA2F,IAA1FpC,EAAyF,uDDlBjH,CACGqC,YAAa,QACbC,YAAa,UCgB8E9C,EAAmB,uCAClH,OAAQA,EAAOC,MACX,IAAK,sBACD,OAAO,EAAP,GAAYO,EAAZ,CAAmBqC,YAAa7C,EAAO+C,QAC3C,IAAK,sBACD,OAAO,EAAP,GAAYvC,EAAZ,CAAmBsC,YAAa9C,EAAO+C,QAC3C,QACI,OAAOvC,M,QC7DbwC,EAAU,SAACrF,EAAiBlC,GAC9B,IAAMwH,EAAUC,IAChB,GAAKD,EAAL,CAIA,IAAME,EAAYxJ,KAAKC,UAAU6B,GACjC,IACIwH,EAAQG,QAAQzF,EAAKwF,GACvB,MAAOtJ,GACLwJ,IAAMC,KAAN,6BAAiC3F,EAAjC,8BAA0D4F,YAAiBJ,EAAUhI,gBAPrFkI,IAAMC,KAAK,6CA8BbE,EAAO,SAAC7F,GACV,IAAI6C,EAZW,SAAC7C,GAChB,OAAQA,GACJ,IAAK,yBACD,OAAOiB,IACX,IAAK,6BACD,MFSP,CACGiE,YAAa,QACbC,YAAa,UEVb,QACI,MAAM,IAAI5E,MAAJ,8BAAiCP,KAKnC8F,CAAW9F,GACvB,IACI,IAAM+F,EAtBU,SAAC/F,GACrB,IAAMsF,EAAUC,IAChB,OAAID,EACOA,EAAQU,QAAQhG,GAEpB,KAiBsBiG,CAAgBjG,GACrC+F,IACAlD,EAAQ7G,KAAKM,MAAMyJ,GACnBlD,EAAQjC,IAAOsF,MAAM,GAAIrD,IAE/B,MAAO3G,GACLC,YAASD,GAGb,OAAO2G,GAGL0C,EAAa,WACf,OAAI5E,OAAOwF,aACAxF,OAAOwF,aAEdxF,OAAOyF,eACAzF,OAAOyF,eAEX,MCtEEC,EAAiB,WAC1B,IAAMC,EDUuBT,EAAK,0BCT5BU,EDQ2BV,EAAK,8BCNhCW,EACgB,kBAAX7F,QAAwBA,OAAe8F,qCACvC9F,OAAe8F,qCAAqC,IACrDC,IAEJC,EAAQC,YACVjC,EACA,CACIE,IAAK,CACDgC,KAAM,GACNC,QAASR,EACTS,OAAQ,GACRC,kBAAmBV,EACnBW,WAAOtI,EACPmB,WAAOnB,EACPG,WAAOH,GAEXsG,aAAcsB,GAElBC,KAQJ,OALAG,EAAMO,UAAU,WDxBW,IAACC,EAIIlC,EAJJkC,ECyBRR,EAAMS,WAAWvC,IAAIiC,QDxBzCzB,EAAQ,yBAA0B8B,GAGFlC,ECsBR0B,EAAMS,WAAWnC,aDrBzCI,EAAQ,6BAA8BJ,KCwB/B0B,G,eCjCEU,EAAY,IAAIC,IAAI,CAC7B,CACI,UACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CACI,YACA,kBAAM,qCAEV,CAAC,QAAS,kBAAM,qCAChB,CACI,SACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CACI,UACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CAAC,QAAS,kBAAM,qCAChB,CAAC,MAAO,kBAAM,qCACd,CAAC,QAAS,kBAAM,qCAChB,CAAC,QAAS,kBAAM,qCAChB,CACI,UACA,kBAAM,qCAEV,CAAC,QAAS,kBAAM,qCAChB,CAAC,QAAS,kBAAM,qCAChB,CACI,WACA,kBAAM,qCAEV,CACI,YACA,kBAAM,qCAEV,CACI,SACA,kBAAM,qCAEV,CAAC,OAAQ,kBAAM,uCAGNC,EAAyB,SAACnC,GACnC,GAAIA,EAAO,CACP,IAAMoC,EAAcH,EAAUxJ,IAAIuH,GAClC,GAAIoC,EACA,OAAOA,IAMf,OAFArL,YAAS,GAAD,OAAIiJ,EAAJ,2BAEDiC,EACF9J,SACAkK,OACA3J,SAGI4J,EAAyB,CAClC,UACA,SACA,YACA,QACA,SACA,SACA,UACA,SACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,WACA,YACA,SACA,QAISC,EAAwB,CAAC,SAAU,UAAW,WAAY,iBAAkB,Y,uJCFnFC,GAAoB,SAAuCC,GAAsC,IAC3FzC,EAA4CyC,EAA5CzC,MAAOtC,EAAqC+E,EAArC/E,OAAQgF,EAA6BD,EAA7BC,SAAUC,EAAmBF,EAAnBE,eAC3BC,EAAUC,sBAAY,WACxBH,EAAS1C,GACL2C,GACAG,WAAW,kBAAMvH,OAAOwH,SAASC,YAEtC,CAAChD,EAAO0C,EAAUC,IACrB,OACI,gBAACM,GAAA,EAAD,CAAcvF,OAAQA,EAAQkF,QAASA,GAClC5C,IAUEkD,eALS,SAACzF,GAAD,MAAuB,CAC3C0F,aAAcC,YAAS3F,GACvB4F,mBAAoBC,YAAe7F,KAKnC,CAAE8F,gBAAiBC,IAAaC,eAAgBC,KAFrCR,CAGbS,eAAKC,aAtFmB,SAAC,GAA2E,IAAzEL,EAAwE,EAAxEA,gBAAiBJ,EAAuD,EAAvDA,aAAcM,EAAyC,EAAzCA,eAAgBJ,EAAyB,EAAzBA,mBAAyB,EAClEQ,eADkE,mBAC1FC,EAD0F,KAClFC,EADkF,OAExDF,eAFwD,mBAE1FG,EAF0F,KAE1EC,EAF0E,KAIjG,OACI,gCACI,gBAACC,GAAA,EAAD,CAAQC,MAAM,OAAOC,MAAM,EAAMC,OAAO,MACpC,gBAACC,GAAA,EAAD,CAAaC,KAAK,KAAlB,gBACA,gBAACC,GAAA,EAAD,CAAeC,KAAK,eAAe7B,QAASmB,IAC5C,gBAACW,GAAA,EAAD,CAAUZ,OAAQA,EAAQa,QAAQ,GAC9B,gBAACC,GAAA,EAAD,CAAKC,UAAU,UAAUF,QAAQ,GAC7B,gBAACG,GAAA,EAAD,KACI,gBAACC,GAAA,EAAD,CAAUjB,OAAQE,EAAgBgB,OAAQf,GACtC,gBAACgB,GAAA,EAAD,CAAgBC,KAAK,EAAMC,OAAO,GAAlC,SAGA,gBAACC,GAAA,EAAD,CAAcnM,OAAO,GACjB,gBAACgK,GAAA,EAAD,CAAcoC,QAAQ,GAAtB,uBACC9C,EAAsBpL,IAAI,SAAC6I,EAAOtF,GAAR,OACvB,gBAAC,GAAD,CACIgI,SAAUe,EACV7I,IAAKF,EACLgD,OAAQ2F,IAAuBrD,EAC/BA,MAAOA,EACP2C,gBAAgB,MAGxB,gBAACM,GAAA,EAAD,CAAcoC,QAAQ,GAAtB,wBAEC/C,EAAuBnL,IAAI,SAAC6I,EAAOtF,GAAR,OACxB,gBAAC,GAAD,CACIgI,SAAUa,EACV3I,IAAKF,EACLgD,OAAQyF,IAAiBnD,EACzBA,MAAOA,EACP2C,gBAAgB,SAMpC,gBAACmC,GAAA,EAAD,KACI,gBAACQ,GAAA,EAAD,CAASf,KAAK,+DAAd,IACMgB,MAGV,gBAACT,GAAA,EAAD,KACI,gBAACQ,GAAA,EAAD,CAASf,KAAK,+CAAd,mB,SCnEfiB,GAA+B7B,eACxCC,aAAkB,YAAyC,IAAtCyB,EAAqC,EAArCA,OAAQI,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GAAS,cACjCN,EADiC,GAC/CzK,EAD+C,KAC1ClC,EAD0C,KAGhDkN,EAAc/C,sBAAY,SAACzH,GAAD,OAAsCsK,EAAS,CAACtK,EAAEyK,OAAOnN,MAAOA,KAAS,CACrGgN,EACAhN,IAEEoN,EAAgBjD,sBAAY,SAACzH,GAAD,OAAsCsK,EAAS,CAAC9K,EAAKQ,EAAEyK,OAAOnN,SAAS,CACrGgN,EACA9K,IAEEmL,EAAmBlD,sBAAY,kBAAM4C,EAASJ,IAAS,CAACI,EAAUJ,IAExE,OACI,uBAAKR,UAAU,0BACX,uBAAKA,UAAU,YACX,yBACIA,UAAU,+BACVnM,MAAOkC,EACP+K,GAAE,oBAAeA,GACjBzI,KAAK,OACLhF,KAAI,oBAAeyN,GACnBK,YAAY,gBACZN,SAAUE,KAGlB,uBAAKf,UAAU,YACX,yBACIA,UAAU,+BACVnM,MAAOA,EACPwE,KAAK,OACLhF,KAAI,qBAAgByN,GACpBA,GAAE,qBAAgBA,GAClBK,YAAY,iBACZN,SAAUI,KAGlB,uBAAKjB,UAAU,YACX,gBAACoB,GAAA,EAAD,CAAQC,SAAS,EAAM/B,MAAM,SAASvB,QAASmD,GAA/C,e,2PClCpB,IAyGMI,GAAkC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASV,EAAe,EAAfA,SAC1CD,EAAW5C,sBAAY,SAACwC,GAAD,OAA8BK,EAASU,EAAQzN,OAAO,SAAA0N,GAAC,OAAIA,IAAMhB,MAAU,CACpGe,EACAV,IAEEY,EAAmBzD,sBACrB,SAACwC,GACG,IAAM3K,EAAQ0L,EAAQhM,QAAQiL,GAC9Be,EAAQ1L,G,uVAAR,IAAsB2K,GACtBK,EAAS,YAAIU,KAEjB,CAACA,EAASV,IAEd,OACI,gCACKU,EAAQjP,IAAI,SAACkO,EAAQ3K,GAAT,OACT,gBAAC8K,GAAD,CACIH,OAAQA,EACRzK,IAAKF,EACLiL,GAAIjL,EACJgL,SAAUY,EACVb,SAAUA,QAOfvC,eACX,KACA,CAAEqD,UAAWC,KAFFtD,CAGbU,aAAkBD,eAxIiB,SAAC,GAA6B,IAA3B8C,EAA0B,EAA1BA,SAAUF,EAAgB,EAAhBA,UAAgB,EAClCG,aAAoB,OADc,mBACvDC,EADuD,KAC/CC,EAD+C,OAExCF,aAAoB,8CAFoB,mBAEvDG,EAFuD,KAElDC,EAFkD,OAGtCJ,aAAoB,IAHkB,mBAGvDK,EAHuD,KAGjDC,EAHiD,OAIhCC,mBAAS,CAAC,CAAC,SAAU,sBAJW,mBAIvDb,EAJuD,KAI9Cc,EAJ8C,OAKpCD,mBAAS,MAL2B,mBAKvDnQ,EALuD,KAKhDqQ,EALgD,OAMhCtD,eANgC,mBAMvDuD,EANuD,KAM9CC,EAN8C,KAQxDC,EAASzE,sBAAW,qBAAC,gCAAA0E,EAAA,4DAMjBC,EAAU,IAAIC,QAAQZ,EALK,CAC7BF,SACAP,UACAW,KAAMK,EAAUL,EAAO,OAG3BI,EAAS,MAPc,kBAWEO,MAAMF,GAXR,cAWblP,EAXa,gBAYNA,EAAOqP,OAZD,OAYnBA,EAZmB,gEAcnB5Q,YAAS,2BAAD,MACRoQ,EAAS,EAAD,IAfW,2BAkBvBZ,EAAUqB,YAAeD,IACzBlB,IAnBuB,wDAoBxB,CAACE,EAAQE,EAAKE,EAAMX,EAASgB,EAASD,EAAUZ,EAAWE,IAE9D,OACI,uBAAKd,GAAG,qBACJ,gBAACkC,GAAA,EAAD,KACI,yBAAOC,QAAQ,iBAAf,UACA,0BACIjD,UAAU,+BACVkD,aAAcpB,EACdzO,KAAK,gBACLyN,GAAG,gBACHD,SAAUkB,GAEV,qCACA,sCACA,qCACA,2CAGR,gBAACiB,GAAA,EAAD,KACI,yBAAOC,QAAQ,cAAf,eACA,yBACIC,aAAclB,EACdhC,UAAU,+BACV3H,KAAK,MACLhF,KAAK,aACLyN,GAAG,aACHK,YAAY,eACZN,SAAUoB,KAGlB,uBAAKjC,UAAU,gCACX,yBAAOA,UAAU,oBACb,yBAAO3H,KAAK,WAAW2H,UAAU,mBAAmBa,SAAU2B,IADlE,cAIJ,gBAACW,GAAA,EAAD,CAAMC,QAAQ,EAAMC,QAASd,GACzB,gBAACS,GAAA,EAAD,KACI,qCACA,yBACIhD,UAAU,+BACV3H,KAAK,WACLxE,MAAOqO,EACPrB,SAAUsB,IACX,MAGX,yBAAOc,QAAQ,WAAf,mBAAiD,IACjD,gBAAC7B,GAAA,EAAD,CACIC,SAAS,EACT/B,MAAM,UACNvB,QAAS,kBAAMsE,EAAW,GAAD,mBAAKd,GAAL,CAAc,CAAC,QAAD,OAASA,EAAQhO,OAAS,GAAK,cAH1E,cAOA,2BACA,2BACA,gBAAC,GAAD,CAAYgO,QAASA,EAASV,SAAUwB,IACxC,2BACA,gBAACjB,GAAA,EAAD,CAAQkC,OAAO,EAAMhE,MAAM,UAAUvB,QAAS0E,GAA9C,UAGCxQ,GACG,gBAACsR,GAAA,EAAD,CAAOjE,MAAM,UAAb,UACYrN,EAAMgH,QAAUhH,EAAMgH,QAAU,GACvChH,EAAMuR,MAAQvR,EAAMuR,MAAQ,S,sECgHlCnF,eAPS,SAACzF,GAAD,MAAuB,CAC3CvB,WAAYoM,YAAoB7K,GAChC8K,QAASC,YAAW/K,GACpBgL,QAASC,YAAWjL,GACpBxC,KAAM0N,YAAalL,KAKnB,CACImL,mBAAoBpC,IACpBqC,QAASC,IACTC,QAASC,IACTC,OAAQC,IACRC,OAAQC,IACRC,iBAAkBC,IAClBC,aAAcC,KATPtG,CAWbS,eAAKC,aA1LwB,SAAC,GAYzB,IAXHiF,EAWE,EAXFA,QACAD,EAUE,EAVFA,mBACAG,EASE,EATFA,QACA7M,EAQE,EARFA,WACAmN,EAOE,EAPFA,iBACAF,EAME,EANFA,OACAF,EAKE,EALFA,OACAR,EAIE,EAJFA,QACAF,EAGE,EAHFA,QACAgB,EAEE,EAFFA,aACAtO,EACE,EADFA,KACE,EACuC4I,eADvC,mBACK4F,EADL,KACqBxF,EADrB,OAEiCJ,eAFjC,mBAEK6F,EAFL,KAEkBC,EAFlB,KAGIC,EAAmB/G,sBACrB,SAACzH,GAGG,GAFAyO,YAAQ,gBACR5F,IACI7I,EAAEyK,OAAOiE,OAAS1O,EAAEyK,OAAOiE,MAAM1R,OAAS,EAAG,CAC7C,IAAM2R,EAAa,IAAIC,WACvBH,YAAQ,iBAAkBzO,EAAEyK,OAAOiE,MAAM,GAAG5R,MAC5C6R,EAAWE,OAAS,WACZF,EAAWzR,QACXsQ,EAAmBmB,EAAWzR,OAAO4R,aAG7CH,EAAWI,WAAW/O,EAAEyK,OAAOiE,MAAM,MAG7C,CAAC7F,EAAgB2E,IAGfwB,EAAyBvH,sBAAY,kBAAMwG,GAAkBnN,IAAa,CAACmN,EAAkBnN,IAEnG,OACI,gCACI,gBAACmO,GAAA,EAAD,CAAaxF,UAAU,SAASyF,UAAU,GACtC,gBAACD,GAAA,EAAD,CAAaC,UAAU,GACnB,gBAACrE,GAAA,EAAD,CACIpB,UAAU,sDACVV,MAAM,YACNoG,KAAM,KACN3H,QAASqG,EACTuB,UAAWjC,GAEX,qBAAG1D,UAAU,6BAAb,QACA,qCAEJ,gBAACoB,GAAA,EAAD,CACIpB,UAAU,sDACVV,MAAM,YACNoG,KAAM,KACN3H,QAASuG,EACTqB,UAAW/B,GALf,OAQI,qBAAG5D,UAAU,6BAAb,UAGR,2BACA,2BACA,gBAAC4F,GAAA,EAAD,CACI5F,UAAU,sDACV6F,OAAO,EACP9H,QAASwH,GAET,qBAAGvF,UAAU,uBAAuB3I,EAAa,YAAc,2BALnE,eAQA,2BACA,gBAACyO,GAAA,EAAD,CAAgB7G,OAAQ2F,EAAgBzE,OAAQf,GAC5C,gBAACgB,GAAA,EAAD,CACIJ,UAAU,sDACV0F,KAAM,KACN5E,GAAG,qBACHxB,MAAM,WAEN,qBAAGU,UAAU,6BAAb,aANJ,UASA,gBAACO,GAAA,EAAD,KACI,gBAACnC,GAAA,EAAD,CAAc+B,QAAQ,GAClB,yBAAOW,GAAG,eAAV,sBAEI,yBACIzI,KAAK,OACLhF,KAAK,OACLyN,GAAG,aACHiF,MAAO,CAAEC,QAAS,QAClBnF,SAAUkE,MAItB,gBAAC3G,GAAA,EAAD,CAAc0C,GAAG,eAAe/C,QAAS+G,GACrC,gDAIZ,2BACA,2BACA,gBAAC1D,GAAA,EAAD,CACIpB,UAAU,sDACVV,MAAM,YACNoG,KAAM,KACN3H,QAASiG,GAET,2BACI,qBAAGhE,UAAU,6BAAb,cAEJ,qCAEJ,2BAEU,eAAT5J,EACG,gBAACgL,GAAA,EAAD,CACIpB,UAAU,sDACVV,MAAM,YACNoG,KAAM,KACN3H,QAAS,kBAAM2G,EAAa,SAE5B,2BACI,qBAAG1E,UAAU,8BAAb,aAEJ,kDAGJ,gBAACoB,GAAA,EAAD,CACIpB,UAAU,sDACVV,MAAM,YACNoG,KAAM,KACN3H,QAAS,kBAAM2G,EAAa,gBAE5B,2BACI,qBAAG1E,UAAU,8BAAb,aAEJ,4CAIR,2BACA,gBAACoB,GAAA,EAAD,CACIpB,UAAU,sDACVV,MAAM,SACNoG,KAAM,KACN3H,QAASmG,GAET,2BACI,qBAAGlE,UAAU,8BAAb,UAEJ,sCAGR,gBAACiG,GAAA,EAAD,CAAOnF,GAAG,eAAelB,KAAK,SAAS8F,KAAK,KAAKzG,OAAQ4F,EAAa1E,OAAQ2E,GAC1E,gBAACoB,GAAA,EAAD,CAAa/F,OAAQ2E,GAArB,oCACA,gBAACqB,GAAA,EAAD,KACI,gBAAC,GAAD,CAAmBvE,SAAUkD,KAEjC,gBAACsB,GAAA,EAAD,KACI,gBAAChF,GAAA,EAAD,CAAQ9B,MAAM,YAAYvB,QAAS+G,GAAnC,iB,8BCnMPuB,GAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACpC,uBAAKvG,UAAWwG,KAAOC,WACnB,gBAACC,GAAA,EAAD,CAAYpH,MAAM,WACd,qBAAGU,UAAU,oBAAoBsG,GACjC,wBAAMtG,UAAS,sBAAiBwG,KAAOG,UACnC,qBAAG3G,UAAU,kBAAb,oBAGPuG,I,kBCLHK,GAAuBC,yBAAcC,eACrCC,GAAeC,eAAK,kBAAM,sDAC1BC,GAASD,eAAK,kBAAM,sDACpBE,GAAcF,eAAK,kBAAM,sDA8FhB3I,eAAQ,SAAAzF,GAAK,MAAK,CAAExC,KAAM0N,YAAalL,KAAvCyF,CAnFQ,SAAC,GAAc,IAAZjI,EAAW,EAAXA,KAChB+Q,EAAU,CACZC,GAAI,CACA,CAAEC,EARS,cAQUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,EAAG/F,EAAG,GAAIgG,KAAM,EAAGC,KAAM,IAC7D,CAAEJ,EARU,eAQUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,IAChE,CAAEJ,EARS,cAQUtU,EAAG,GAAIuU,EAAG,EAAGC,EAAG,GAAI/F,EAAG,EAAGgG,KAAM,EAAGC,KAAM,GAC9D,CAAEJ,EARI,SAQUtU,EAAG,GAAIuU,EAAG,EAAGC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,KAE/DC,GAAI,CACA,CAAEL,EAdS,cAcUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,EAAG/F,EAAG,GAAIgG,KAAM,EAAGC,KAAM,IAC7D,CAAEJ,EAdU,eAcUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,IAChE,CAAEJ,EAdS,cAcUtU,EAAG,EAAGuU,EAAG,GAAIC,EAAG,GAAI/F,EAAG,EAAGgG,KAAM,EAAGC,KAAM,GAC9D,CAAEJ,EAdI,SAcUtU,EAAG,EAAGuU,EAAG,GAAIC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,KAE/DE,GAAI,CACA,CAAEN,EApBS,cAoBUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,EAAG/F,EAAG,GAAIgG,KAAM,EAAGC,KAAM,IAC7D,CAAEJ,EApBU,eAoBUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,IAChE,CAAEJ,EApBS,cAoBUtU,EAAG,EAAGuU,EAAG,GAAIC,EAAG,GAAI/F,EAAG,EAAGgG,KAAM,EAAGC,KAAM,GAC9D,CAAEJ,EApBI,SAoBUtU,EAAG,EAAGuU,EAAG,GAAIC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,KAE/DG,GAAI,CACA,CAAEP,EA1BS,cA0BUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,EAAGC,KAAM,IAC9D,CAAEJ,EA1BU,eA0BUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,IAChE,CAAEJ,EA1BS,cA0BUtU,EAAG,EAAGuU,EAAG,GAAIC,EAAG,GAAI/F,EAAG,EAAGgG,KAAM,EAAGC,KAAM,GAC9D,CAAEJ,EA1BI,SA0BUtU,EAAG,EAAGuU,EAAG,GAAIC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,KAE/DI,IAAK,CACD,CAAER,EAhCS,cAgCUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,EAAGC,KAAM,IAC9D,CAAEJ,EAhCU,eAgCUtU,EAAG,EAAGuU,EAAG,EAAGC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,IAChE,CAAEJ,EAhCS,cAgCUtU,EAAG,EAAGuU,EAAG,GAAIC,EAAG,GAAI/F,EAAG,EAAGgG,KAAM,EAAGC,KAAM,GAC9D,CAAEJ,EAhCI,SAgCUtU,EAAG,EAAGuU,EAAG,GAAIC,EAAG,GAAI/F,EAAG,GAAIgG,KAAM,GAAIC,KAAM,MAGnE,OACI,gCACI,gBAAC,GAAD,MACA,uBAAKzH,UAAU,mBACX,sBAAIA,UAAU,QAAd,iCACA,gBAAC4G,GAAD,CACIkB,UAAU,EACV9H,UAAU,SACV+H,aAAa,EACbZ,QAASA,EACTa,gBAAe,WAAMC,KAActB,SACnCuB,YAAa,CAAEd,GAAI,KAAMM,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,IAAK,GACzDM,KAAM,CAAEf,GAAI,GAAIM,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,GAC7CO,OAAQ,CAAC,GAAI,IACbC,iBAAkB,CAAC,EAAG,GACtBC,UAAW,IAEX,uBAAKvS,IAvDF,eAwDC,gBAAC,GAAD,CAAeuQ,MAAM,WACjB,gBAAC,GAAD,QAGR,uBAAKvQ,IA3DD,gBA4DA,gBAAC,GAAD,CAAeuQ,MAAM,uBACjB,gBAAC,WAAD,CAAUiC,SAAU,cAChB,gBAACxB,GAAD,SAIZ,uBAAKhR,IAjEF,eAkEC,gBAAC,GAAD,CAAeuQ,MAAK,uBAAkBlQ,EAAlB,YAChB,gBAAC,WAAD,CAAUmS,SAAU,cAChB,gBAACrB,GAAD,SAIZ,uBAAKnR,IAvEP,UAwEM,gBAAC,GAAD,CAAeuQ,MAAM,yBACjB,gBAAC,WAAD,CAAUiC,SAAU,cAChB,gBAACtB,GAAD,WAMpB,gBAAC,IAAD,SC9FQuB,QACa,cAA7B9R,OAAOwH,SAASuK,UAEiB,UAA7B/R,OAAOwH,SAASuK,UAEhB/R,OAAOwH,SAASuK,SAASjR,MAAM,2DCPtC,qBAAC,8BAAAkL,EAAA,4DACQhG,EAAQN,IADhB,SAGyBsM,QAAQC,IAAI,CAC/B,4CACArL,EAAuBiB,YAAS7B,EAAMS,eAL5C,OAGQyL,EAHR,OAQmBA,EAAS,GACjBC,WAAWC,SAASC,eAAe,SAAwBC,OAChE,gBAAC,IAAD,CAAUtM,MAAOA,GACb,gBAAC,GAAD,QDuFJ,kBAAmBuM,WACnBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAC/BA,EAAaC,eCpGvB,wCAAD,I,gCCTD,gEAEO,IAAMpX,EAAW,SAACD,EAAuBsX,GAC5CjR,QAAQrG,MAAM,gBAAiBA,GACR,qBAAZsX,GACPjR,QAAQrG,MAAMsX,IAWTvE,EAAU,SAAC/L,EAAiBsQ,GACd,qBAAZA,GACPjR,QAAQkR,KAAKvQ,GAEjBX,QAAQkR,KAAKvQ,EAASsQ,K,gCCjB1B,geAAO,IAAM9E,EAAyB,SAAC5L,GAAD,MACjC,CACGA,SACAR,KAAM,6BAGDsJ,EAAe,SAAClP,GAAD,MACvB,CACGA,SACA4F,KAAM,uBAGDoR,EAAc,SAACnS,GAAD,MACtB,CACGA,QACAe,KAAM,iBAGD4L,EAAc,iBACtB,CACG5L,KAAM,iBAGDgM,EAAO,iBACf,CACGhM,KAAM,aAGDkM,EAAO,iBACf,CACGlM,KAAM,aAGD8L,EAAc,iBACtB,CACG9L,KAAM,iBAQDqR,EAAyB,iBACjC,CACGrR,KAAM,8BAGDsR,EAAqB,SAAC7R,GAAD,MAC7B,CACGA,UACAO,KAAM,yBAGDuR,EAAqB,SAAC3R,GAAD,MAC7B,CACGA,UACAI,KAAM,0BAGDsG,EAAc,SAACxD,GAAD,MAA0B,CACjDA,QACA9C,KAAM,wBAGGwG,EAAoB,SAAC1D,GAAD,MAAyB,CACtDA,QACA9C,KAAM,wBAGGwR,EAAmB,SAAClS,GAAD,MAC3B,CACGA,aACAU,KAAM,8BAGDsM,EAAkB,SAACvO,GAAD,MAC1B,CACGA,OACAiC,KAAM,sBAGDyR,EAA2B,SAACjQ,GAAD,MACnC,CACGA,MACAxB,KAAM,iC,4qBCtFD0R,EAAwB,SAACnR,GAAD,OACjCA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQtF,OAASqB,EAAMgC,IAAIiC,QAAQtF,OAAOyB,aAAe,IAEhFgR,EAAmB,SAACpR,GAAD,SAC5BA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQtF,QAAUqB,EAAMgC,IAAIiC,QAAQtF,OAAOM,UACnEe,EAAMgC,IAAIiC,QAAQtF,OAAOM,MAAM/E,SAE9BmX,EAAqB,SAACrR,GAAD,OAC9BA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQtF,QAAUqB,EAAMgC,IAAIiC,QAAQtF,OAAOK,YACrEgB,EAAMgC,IAAIiC,QAAQtF,OAAOK,YACxB,WACEsS,EAAkB,SAACtR,GAAD,OAC3BA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQtF,QAAUqB,EAAMgC,IAAIiC,QAAQtF,OAAOE,IAAMmB,EAAMgC,IAAIiC,QAAQtF,OAAOE,IAAM,IACvG0S,EAAsB,SAACvR,GAAD,OAC/BA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQtF,QAAUqB,EAAMgC,IAAIiC,QAAQtF,OAAOG,QACrEkB,EAAMgC,IAAIiC,QAAQtF,OAAOG,QACzB,GACG0S,EAAsB,SAACxR,GAAD,OAC/BA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQtF,QAAUqB,EAAMgC,IAAIiC,QAAQtF,OAAOI,YAClE0S,EAAuB,SAACzR,GAAD,SAChCA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQtF,WAAWqB,EAAMgC,IAAIiC,QAAQtF,OAAOC,OACnE8S,EAA4B,SAAC1R,GAAD,SACrCA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQtF,QAAUqB,EAAMgC,IAAIiC,QAAQtF,OAAOM,UACnEe,EAAMgC,IAAIiC,QAAQtF,OAAOM,MAAMG,aAG9BuG,EAAW,SAAC3F,GAAD,OACpBA,EAAMoC,cAAgBpC,EAAMoC,aAAaC,YAAcrC,EAAMoC,aAAaC,YAAe,SAChFwD,EAAiB,SAAC7F,GAAD,OAC1BA,EAAMoC,cAAgBpC,EAAMoC,aAAaE,YAActC,EAAMoC,aAAaE,YAAe,UAEhFqP,EAAsB,SAAC3R,GAAD,OAC/BA,GACAA,EAAMgC,KACNhC,EAAMgC,IAAIiC,QAAQtF,QAClBqB,EAAMgC,IAAIiC,QAAQtF,OAAOM,OACzBe,EAAMgC,IAAIiC,QAAQtF,OAAOM,MAAME,iBAJ/B,YAKUa,EAAMgC,IAAIiC,QAAQtF,OAAOM,MAAME,kBACnC,IACGyS,EAAiB,SAAC5R,GAAD,OAC1BA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQtF,QAAU1E,MAAMC,QAAQ8F,EAAMgC,IAAIiC,QAAQtF,OAAOE,KAAzF,YACUmB,EAAMgC,IAAIiC,QAAQtF,OAAOE,KAC7B,IACGgT,EAAa,SAAC7R,GAAD,OACtBA,GACAA,EAAMgC,KACNhC,EAAMgC,IAAIiC,QAAQtF,QAClBqB,EAAMgC,IAAIiC,QAAQtF,OAAOM,OACzBe,EAAMgC,IAAIiC,QAAQtF,OAAOM,MAAMC,QAJ/B,YAKUc,EAAMgC,IAAIiC,QAAQtF,OAAOM,MAAMC,SACnC,IACG4S,EAAa,SAAC9R,GAAD,OACtBA,GACAA,EAAMgC,KACNhC,EAAMgC,IAAIiC,QAAQtF,QAClBqB,EAAMgC,IAAIiC,QAAQtF,OAAOM,OACzBe,EAAMgC,IAAIiC,QAAQtF,OAAOM,MAAMI,QAJ/B,YAKUW,EAAMgC,IAAIiC,QAAQtF,OAAOM,MAAMI,SACnC,IAEG0S,EAAe,SAAC/R,GAAD,OACxBA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQvF,OAASsB,EAAMgC,IAAIiC,QAAQvF,MAAMF,KAAOwB,EAAMgC,IAAIiC,QAAQvF,MAAMF,KAAO,IACtG0M,EAAe,SAAClL,GAAD,OACxBA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQvF,OAASsB,EAAMgC,IAAIiC,QAAQvF,MAAMlB,KACnEwC,EAAMgC,IAAIiC,QAAQvF,MAAMlB,KACvB,OAEEwU,EAAgB,SAAChS,GAAD,OACzBA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQpK,QAAUmG,EAAMgC,IAAIiC,QAAQpK,OAAO2E,KAAOwB,EAAMgC,IAAIiC,QAAQpK,OAAO2E,KAAO,IACzGqM,EAAsB,SAAC7K,GAAD,SAC/BA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIiC,QAAQpK,WAAWmG,EAAMgC,IAAIiC,QAAQpK,OAAO4E,YAEnEwM,EAAa,SAACjL,GAAD,SACtBA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIkC,SAAqC,IAA5BlE,EAAMgC,IAAIkC,OAAOvJ,QACjDoQ,EAAa,SAAC/K,GAAD,SACtBA,GAASA,EAAMgC,KAAOhC,EAAMgC,IAAIgC,OAAOhE,EAAMgC,IAAIgC,KAAKrJ,OAAS,I,mHC3EtDyL,EAAiB,WAA+D,IAA9D6L,EAA6D,0DAC9DzI,mBAASyI,GADqD,mBACjFhX,EADiF,KAC1EiX,EAD0E,KAExF,MAAO,CAACjX,EAAO,kBAAMiX,GAAUjX,MAKtBgO,EAAsB,SAC/BkJ,GACoE,IAAD,EACzC3I,mBAAS2I,GADgC,mBAC5DlX,EAD4D,KACrDiX,EADqD,KAYnE,MAAO,CAACjX,EATamK,sBACjB,SAACgN,GACOA,GAASA,EAAMhK,QACf8J,EAASE,EAAMhK,OAAOnN,QAG9B,CAACiX,O,mICTHG,E,2MACcrS,MAAe,CAC3B3G,WAAOyC,G,iFAGczC,EAAqBuX,GAAe,IAAD,OACxD0B,KAAKC,SAAS,CAAElZ,MAAOA,GAAS,IAAIqE,MAZtB,4CAY8C,kBAAM,EAAK8U,OAAO5B,O,+BAGjE,IACLjD,EAAa2E,KAAKtN,MAAlB2I,SAGR,OAFkB2E,KAAKtS,MAAf3G,MAGG,oDAGJsU,I,6BAGIiD,GACXtX,YAAS,mBAAoBgZ,KAAKtS,MAAM3G,OACxCC,YAAS,cAAesX,GACxB/N,IAAMxJ,MAAMF,KAAKC,UAAUwX,GAAO,CAAE6B,SAAU,eAAgBC,iBAAiB,EAAMC,WAAW,Q,GAvB5EC,aA2BfzM,EAAoB,SAAe0M,GAAf,OAA6C,SAAC7N,GAAD,OAC1E,gBAACqN,EAAD,KACI,gBAACQ,EAAY7N,O,gCCxCrB,gGAAO,IAAMmF,EAAiB,SAAjBA,EAAkBtL,GAC3B,OAAI5E,MAAMC,QAAQ2E,GACOA,EACRnF,IAAI,SAAAiE,GAAC,OAAIwM,EAAexM,KAAImV,KAAK,KAE/B,kBAARjU,EACA1F,KAAKC,UAAUyF,GAEP,qBAARA,EACA,GAEC,OAARA,QAAwB/C,IAAR+C,EACTA,EAAI4N,WAGR,IAGEpL,EAAqB,SAACtI,EAAaga,GAC5C,SAAKha,IAAQga,MAGTha,EAAIuD,oBAAoBG,SAASsW,EAAKzW,sBAOxC0W,EAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAExDC,EAAiB,SAAChY,GAAqD,IAAtCiY,EAAqC,wDACpErY,EAASI,EAAMwR,WAOnB,MANsB,kBAAXyG,EACPrY,EAASI,EAAMgY,eAAeC,IACZ,IAAXA,IACPrY,EAASI,EAAMgY,kBAGZpY,GAGEkI,EAAmB,SAAC9H,GAAqE,IAAtDkY,EAAqD,wDAArCD,EAAqC,wDACjG,IAAKE,OAAOC,SAASpY,GACjB,MAAM,IAAIqY,UAAJ,+CAAsDrY,EAAtD,aAAgEA,IAE1E,GAAc,IAAVA,EACA,MAAO,MAEX,IAAMsY,EAAatY,EAAQ,EACrBuY,EAASD,EAAa,IAAMJ,EAAS,IAAM,GAIjD,GAHII,IACAtY,GAASA,GAETA,EAAQ,EAAG,CACX,IAAMwY,EAAYR,EAAehY,EAAOiY,IAAkB,GAC1D,OAAOM,EAASC,EAAY,KAEhC,IAAMC,EAAWC,KAAKC,IAAID,KAAKE,MAAMF,KAAKG,MAAM7Y,GAAS,GAAI+X,EAAMrY,OAAS,GAC5EM,EAAQmY,QAAQnY,EAAQ0Y,KAAKI,IAAI,KAAML,IAAWM,YAAY,IAC9D,IAAMC,EAAehB,EAAehY,EAAOiY,IAAkB,GACvDgB,EAAOlB,EAAMU,GACnB,OAAOF,EAASS,EAAe,IAAMC,I,mBC7DzCC,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,iC,g3ICDzE,gCAAO,IAAMxT,EAAmB,gB","file":"static/js/main.cbc6d678.chunk.js","sourcesContent":["import { logError } from '../../core/logging/logger'\n\nexport const jsonBeautify = (str: string) => {\n    if (!str || str.trim() === '') {\n        return ''\n    }\n\n    const parsed = jsonParseSafe(str)\n    if (typeof parsed === 'string') {\n        return parsed\n    }\n\n    try {\n        return JSON.stringify(parsed, null, 2)\n    } catch (error) {\n        logError(error, str)\n    }\n    return str\n}\n\nexport const jsonParseSafe = (str: string) => {\n    if (!str || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n    // .replace(/[\\u0000-\\u0019]+/g, '')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n","import _ from 'lodash'\nimport { parse, nodes, Op, Field, SQLTree, Source } from 'sql-parser'\nimport { jsonParseSafe } from '../converters/json'\n\nexport const computePath = (path: string[]) => {\n    if (!path || path.length === 0) {\n        return []\n    }\n    if (path[0] === 'data') {\n        const newPath = [...path]\n        newPath.shift()\n        return newPath\n    }\n\n    return path\n}\n\nexport const sqlEvaluation = (sourceString: string, queryString: string) => {\n    try {\n        const sqlTree = parse(queryString.replace(/--(.*?)(\\n|$)/gm, ''))\n        if (sqlTree.source.name.values[0] !== 'data') {\n            return new Error(`${sqlTree.source.name.values[0]} table does not exist`)\n        }\n\n        const sourceDataObject = jsonParseSafe(sourceString)\n\n        const result = executeQuery(sqlTree, sourceDataObject)\n\n        return JSON.stringify(result)\n    } catch (e) {\n        return e as Error\n    }\n}\n\nconst map = (v: object, fields: Field[], source: Source) => {\n    if (fields[0].constructor === nodes.Star) {\n        return v\n    }\n\n    if (Array.isArray(v)) {\n        return v.map(x => mapObject(fields, x, source))\n    }\n\n    return mapObject(fields, v, source)\n}\n\nconst executeQuery = (sqlTree: SQLTree, sourceDataObject: object) => {\n    let fromPath: string[] = []\n\n    if (sqlTree.source.name.values && sqlTree.source.name.values.length > 1) {\n        if (sqlTree.source.name.values[0] === 'data') {\n            fromPath = [...sqlTree.source.name.values]\n            fromPath.shift()\n        }\n    }\n\n    let result = _.chain<any>(sourceDataObject)\n\n    if (fromPath && fromPath.length > 0) {\n        result = _.chain<any>(result.get(fromPath))\n    }\n    const value = result.value()\n    if (_.isArray(value)) {\n        return result\n            .filter(v => {\n                if (!sqlTree.where || !sqlTree.where.conditions) {\n                    return true\n                }\n                const leftValue = sqlTree.where.conditions.left\n                const rightValue = sqlTree.where.conditions.right\n                const operation = sqlTree.where.conditions.operation\n                return compareOperands(operation, leftValue, rightValue, v)\n            })\n            .orderBy(\n                sqlTree.order ? sqlTree.order.orderings.map(x => x.value.value) : undefined,\n                sqlTree.order ? sqlTree.order.orderings.map(x => x.direction) : undefined\n            )\n            .map(v => map(v, sqlTree.fields, sqlTree.source))\n            .take(\n                sqlTree.limit && typeof sqlTree.limit.value.value === 'number'\n                    ? sqlTree.limit.value.value\n                    : 999999999999999\n            )\n            .value()\n    }\n    return map(value, sqlTree.fields, sqlTree.source)\n}\n\nconst compareOperands = (operation: string | null, left: Op, right: Op, value: object): boolean => {\n    if (!operation) {\n        return false\n    }\n\n    if (operation.toLowerCase() === 'or') {\n        return (\n            compareOperands(left.operation, left.left, left.right, value) ||\n            compareOperands(right.operation, right.left, right.right, value)\n        )\n    }\n\n    if (operation.toLowerCase() === 'and') {\n        return (\n            compareOperands(left.operation, left.left, left.right, value) &&\n            compareOperands(right.operation, right.left, right.right, value)\n        )\n    }\n\n    if (!left.value) {\n        return false\n    }\n\n    const leftValue = _.get(value, computePath(left.values))\n\n    if (operation === '=' && leftValue === right.value) {\n        return true\n    }\n    if (operation.toLowerCase() === 'is' && leftValue === right.value) {\n        return true\n    }\n    if (operation === '!=' && leftValue !== right.value) {\n        return true\n    }\n    if (operation.toLowerCase() === 'is not' && leftValue !== right.value) {\n        return true\n    }\n    if (operation === '<>' && leftValue !== right.value) {\n        return true\n    }\n\n    if (operation.toLocaleLowerCase() === 'like' && typeof right.value === 'string' && typeof leftValue === 'string') {\n        if (right.value.startsWith('%') && right.value.endsWith('%')) {\n            if (leftValue.includes(right.value.substring(1, right.value.length - 1))) {\n                return true\n            }\n        } else if (right.value.startsWith('%')) {\n            if (leftValue.endsWith(right.value.substring(right.value.indexOf('%') + 1))) {\n                return true\n            }\n        } else if (right.value.endsWith('%')) {\n            if (leftValue.startsWith(right.value.substring(0, right.value.indexOf('%')))) {\n                return true\n            }\n        }\n    }\n\n    if (right.value) {\n        if (operation === '>' && leftValue > right.value) {\n            return true\n        }\n        if (operation === '>=' && leftValue >= right.value) {\n            return true\n        }\n        if (operation === '<' && leftValue < right.value) {\n            return true\n        }\n        if (operation === '<=' && leftValue <= right.value) {\n            return true\n        }\n    }\n\n    if (\n        operation.toLowerCase() === 'in' &&\n        Array.isArray(right.value) &&\n        right.value.filter(x => x.value === leftValue).length > 0\n    ) {\n        return true\n    }\n\n    return false\n}\n\nconst mapObject = (fields: Field[], mapped: object, source: Source) => {\n    const temp: {\n        [key: string]: any\n    } = {}\n    fields.forEach(field => {\n        const value = _.get(\n            mapped,\n            field.field.values.filter((val, index) => !(index === 0 && source.alias && val === source.alias.value))\n        )\n        let key = field.field.value\n        if (field.field.value2) {\n            key = field.field.value2\n        }\n        if (field.name) {\n            key = field.name.value\n        }\n        temp[key] = value\n    })\n    mapped = temp\n    return mapped\n}\n","import { QueryMode } from 'state/State'\nimport { sqlEvaluation } from './sql'\nimport lodash from 'lodash'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (!sourceString || !queryString) {\n        return ''\n    }\n    if (mode === 'Javascript') {\n        return jsEvaluation(sourceString, queryString)\n    } else if (mode === 'SQL') {\n        return sqlEvaluation(sourceString, queryString)\n    }\n\n    return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string): null | string | Error => {\n    if (!sourceString || sourceString.trim() === '') {\n        return null\n    }\n\n    if (!queryString || queryString.trim() === '') {\n        return null\n    }\n    const currentWindow: any = typeof window === 'undefined' ? {} : window\n    try {\n        currentWindow._ = lodash\n        const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString}) \n      `\n        // eslint-disable-next-line\n        const evaluatedQuery = eval.apply(null, [code]) // DANGEROUS\n        const type = typeof evaluatedQuery\n        if (type !== 'string') {\n            return null\n        }\n        return evaluatedQuery as string\n    } catch (error) {\n        return error\n    } finally {\n        currentWindow._ = undefined\n    }\n}\n","import initialStateJson from './default-state.json'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\nimport { DeepReadonly } from 'utility-types'\nimport { PropType as PropertyTypeOf } from 'core/misc/utils'\nimport { StateWithHistory } from 'redux-undo'\n\nexport type itemType = any\n\nexport type All = PropertyTypeOf<AppState>\nexport type AppState = DeepReadonly<{\n    source?: SourceState\n    query?: QueryState\n    output?: OupoutState\n    error?: Error\n}>\nexport type QueryState = DeepReadonly<{\n    text?: string\n    mode?: QueryMode\n}>\nexport type SourceState = DeepReadonly<{\n    text?: string\n    autoFormat?: boolean\n}>\nexport type OupoutState = DeepReadonly<{\n    searchTerm?: string\n    match?: boolean\n    selectedTab?: tabType\n    obj?: object | null\n    objSize?: number\n    errorMessage?: string\n    table?: OupoutTableState\n}>\nexport type OupoutTableState = DeepReadonly<{\n    isArray?: boolean\n    isModalOpen?: boolean\n    displayedColumns?: readonly string[]\n    columns?: readonly string[]\n    groupBy?: readonly string[]\n}>\nexport type UserSettingsState = DeepReadonly<{\n    globalTheme?: GeneralTheme\n    editorTheme?: EditorTheme\n}>\n\nexport type tabType = 'RawJson' | 'Table'\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type RootState = DeepReadonly<{\n    app?: StateWithHistory<AppState>\n    userSettings?: UserSettingsState\n}>\n\nexport const getDefaultAppState = () => initialStateJson as AppState\nexport const defaultAppState = initialStateJson as AppState\nexport const getDefaultUserSettingsState = () =>\n    ({\n        globalTheme: 'pulse',\n        editorTheme: 'github',\n    } as const)\n\nexport const emptyState = {\n    source: { text: '', autoFormat: true },\n    query: { text: '', mode: 'SQL' },\n    output: {\n        match: false,\n        obj: {},\n        objSize: 2,\n        searchTerm: '',\n        selectedTab: 'RawJson',\n        table: {\n            isArray: false,\n            columns: [],\n            displayedColumns: [],\n            isModalOpen: false,\n            groupBy: [],\n        },\n    },\n} as const\n","import { combineReducers } from 'redux'\nimport { Action } from 'actions/actions'\nimport { codeEvaluation } from 'core/interpreters/code'\nimport { jsonParseSafe, jsonBeautify } from 'core/converters/json'\nimport {\n    OupoutState,\n    getDefaultAppState,\n    itemType,\n    getDefaultUserSettingsState,\n    QueryMode,\n    tabType,\n    emptyState,\n    AppState,\n    UserSettingsState,\n    OupoutTableState,\n    defaultAppState,\n    SourceState,\n    QueryState,\n} from 'state/State'\nimport { containsIgnoreCase } from 'core/converters/string'\nimport { arrayElementName } from 'models/array'\nimport undoable from 'redux-undo'\n\nexport const rootReducer = (rootState = getDefaultAppState(), action: Action) => {\n    if (action.type === 'CLEAR_EDITOR') {\n        return emptyState\n    }\n\n    console.time('rootReducer')\n    const newState =\n        rootState && rootState.query && rootState.source\n            ? {\n                  ...rootState,\n                  query: query(rootState.query, action),\n                  source: source(rootState.source, action),\n              }\n            : {}\n\n    const newOutputState = output(rootState, newState, action)\n    const ret = {\n        ...newState,\n        output: {\n            ...newOutputState,\n            table: table(newOutputState ? newOutputState.table : {}, action),\n        },\n    }\n\n    console.timeEnd('rootReducer')\n    return ret\n}\n\nexport const source = (state: SourceState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_SOURCE_TEXT':\n            return {\n                ...state,\n                text: state && state.autoFormat ? jsonBeautify(action.source.trim()) : action.source,\n            }\n        case 'UPDATE_AUTOFORMAT_SOURCE':\n            return {\n                ...state,\n                text: action.active\n                    ? state && state.text && jsonBeautify(state.text.trim())\n                    : state && state.text\n                    ? state.text\n                    : '',\n                autoFormat: action.active,\n            }\n        default:\n            return state\n    }\n}\n\nexport const userSettings = (state: UserSettingsState | undefined = getDefaultUserSettingsState(), action: Action) => {\n    switch (action.type) {\n        case 'SWITCH_GLOBAL_THEME':\n            return { ...state, globalTheme: action.theme }\n        case 'SWITCH_EDITOR_THEME':\n            return { ...state, editorTheme: action.theme }\n        default:\n            return state\n    }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n            return {\n                ...state,\n                text: action.query,\n            }\n        case 'UPDATE_QUERY_MODE':\n            return {\n                ...state,\n                mode: action.mode,\n                text:\n                    action.mode === 'SQL'\n                        ? defaultAppState && defaultAppState.query\n                            ? defaultAppState.query.text\n                            : ''\n                        : \"// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// you can use lodash helper functions. see https://lodash.com/docs/\\n// ex: _.chain(data).orderBy('age', 'desc')\\n\\n      data\\n    \",\n            } as const\n        default:\n            return state\n    }\n}\n\nexport const computeOutput = (\n    previousState: OupoutState,\n    sourceString: string,\n    queryString: string,\n    action: Action,\n    mode: QueryMode\n) => {\n    const text = codeEvaluation(sourceString, queryString, mode)\n\n    if (!text) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n    if (text instanceof Error) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            errorMessage: text.message,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n\n    let displayedColumns = new Array<string>()\n    const outputObject: itemType[] | object = jsonParseSafe(text)\n    if (Array.isArray(outputObject)) {\n        const keyMap: { [key: string]: string } = {}\n        outputObject.forEach(d => {\n            if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n                const keysToAdd = d ? (typeof d === 'object' ? Object.keys(d) : [arrayElementName]) : []\n                keysToAdd.forEach(key => (keyMap[key] = key))\n            }\n        })\n        displayedColumns = Object.keys(keyMap)\n            .filter(key => key && typeof key === 'string' && key.trim() !== '')\n            .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n    }\n    const isModalOpen =\n        previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n            ? previousState && !previousState.table.isModalOpen\n            : previousState && previousState.table\n            ? previousState.table.isModalOpen\n            : false\n\n    let selectedTab: tabType = Array.isArray(outputObject) ? 'Table' : 'RawJson'\n\n    if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n        selectedTab = action.tab\n    }\n    return {\n        selectedTab,\n        obj: outputObject,\n        objSize: text ? text.length : 0,\n        searchTerm: '',\n        match: false,\n        table: {\n            isArray: Array.isArray(outputObject),\n            isModalOpen,\n            displayedColumns,\n            columns: displayedColumns,\n            groupBy: [],\n        },\n    } as const\n}\n\nexport const output = (previousState: AppState, newState: AppState, action: Action) => {\n    switch (action.type) {\n        case 'EVALUATE_CODE':\n        case 'UPDATE_QUERY':\n        case 'UPDATE_SOURCE_TEXT':\n            if (\n                previousState &&\n                previousState.source &&\n                newState &&\n                newState.source &&\n                previousState.query &&\n                newState.query &&\n                previousState.source.text === newState.source.text &&\n                previousState.query.text === newState.query.text\n            ) {\n                return previousState.output\n            }\n            if (newState && newState.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source && newState.source.text ? newState.source.text : '',\n                    newState.query && newState.query.text ? newState.query.text : '',\n                    action,\n                    newState.query && newState.query.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n        case 'TOGGLE_OUTPUT_TABLE_MODAL':\n            return newState\n                ? {\n                      ...newState.output,\n                      table: {\n                          ...(newState.output ? newState.output.table : {}),\n                          isModalOpen:\n                              newState.output && newState.output.table ? !newState.output.table.isModalOpen : false,\n                      },\n                  }\n                : {}\n        case 'UPDATE_OUTPUT_TAB_SELECTION':\n            if (newState) {\n                return {\n                    ...newState.output,\n                    selectedTab: action.tab,\n                }\n            }\n            break\n        case 'UPDATE_OUTPUT_SEARCH_TERM':\n            if (newState && newState.output) {\n                return {\n                    ...filter(newState.output, action.searchTerm),\n                    searchTerm: action.searchTerm,\n                    selectedTab: 'RawJson',\n                } as const\n            }\n            break\n        default:\n            if (newState && newState.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source && newState.source.text ? newState.source.text : '',\n                    newState.query && newState.query.text ? newState.query.text : '',\n                    action,\n                    newState.query && newState.query.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n    }\n    return {}\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n    if (typeof src !== 'string' && typeof src !== 'object') {\n        return { match: false, filteredObj: src }\n    }\n\n    if (typeof src === 'string') {\n        if (containsIgnoreCase(src, searchTerm)) {\n            return { match: true, filteredObj: src }\n        }\n        return { match: false, filteredObj: src }\n    }\n    const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n    const keys = Array.isArray(obj)\n        ? Array.from({ length: obj.length }, (_, k) => k)\n        : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n    let result = false\n\n    for (const propertyName of keys) {\n        const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n        if (propertyNameContains) {\n            result = true\n            continue\n        }\n        const child = obj[propertyName]\n        const { match, filteredObj } = containsTerm(child, searchTerm)\n        if (propertyNameContains || match) {\n            result = true\n            obj[propertyName] = filteredObj\n        } else {\n            if (Array.isArray(obj) && typeof propertyName === 'number') {\n                obj.splice(propertyName, 1)\n            } else {\n                delete obj[propertyName]\n            }\n        }\n    }\n    if (!result) {\n        if (!Array.isArray(obj)) {\n            ;(keys as string[]).forEach((propertyName: string) => delete obj[propertyName])\n        } else {\n            obj.length = 0\n        }\n    }\n    return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n    if (!searchTerm || searchTerm.trim() === '' || !state) {\n        return { ...state, match: false }\n    }\n    const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n    if (match) {\n        return { ...state, obj: filteredObj, match }\n    }\n\n    return state\n}\n\nexport const table = (state: OupoutTableState | undefined, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_TABLE_COLUMNS':\n            let groupByList = state && state.groupBy ? state.groupBy : []\n            groupByList.forEach(groupBy => {\n                if (action.columns.indexOf(groupBy) === -1) {\n                    groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n                }\n            })\n            return {\n                ...state,\n                displayedColumns: action.columns,\n                groupBy: groupByList,\n            }\n        case 'UPDATE_TABLE_GROUP_BY':\n            return {\n                ...state,\n                groupBy: action.groupBy\n                    .filter(gb => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1)\n                    .filter(gb => gb !== 'Group by...'),\n            }\n        default:\n            return state\n    }\n}\n\nexport const rootReducerReset = (state = getDefaultAppState(), action: Action) => {\n    if (action.type === 'RESET_EDITOR') {\n        return rootReducer({ ...getDefaultAppState() }, action)\n    }\n    return rootReducer(state, action)\n}\nconst rootReducers = combineReducers({\n    app: undoable(rootReducerReset, { undoType: 'APP_UNDO', redoType: 'APP_REDO' }),\n    userSettings,\n})\nexport default rootReducers\n","import { AppState, UserSettingsState, getDefaultAppState, getDefaultUserSettingsState } from 'state/State'\nimport { logError } from 'core/logging/logger'\nimport lodash from 'lodash'\nimport { toast } from 'react-toastify'\nimport { prettyPrintBytes } from 'core/converters/string'\n\nexport const persistAppState = (appstate: AppState) => {\n    persist('keyrier-json.app.state', appstate)\n}\n\nexport const persistUserSettings = (userSettings: UserSettingsState) => {\n    persist('keyrier-json.user.settings', userSettings)\n}\n\nexport const getUserSettings = () => load('keyrier-json.user.settings') as UserSettingsState\nexport const getAppState = () => load('keyrier-json.app.state') as AppState\n\ntype StorageKey = 'keyrier-json.app.state' | 'keyrier-json.user.settings'\n\nconst persist = (key: StorageKey, value: object | undefined) => {\n    const storage = getStorage()\n    if (!storage) {\n        toast.warn(\"Browser does'nt support required storage\")\n        return\n    }\n    const toBeSaved = JSON.stringify(value)\n    try {\n        storage.setItem(key, toBeSaved)\n    } catch (error) {\n        toast.warn(`Error while saving ${key} to storage. size: ${prettyPrintBytes(toBeSaved.length)}`)\n    }\n}\n\nconst loadFromStorage = (key: StorageKey) => {\n    const storage = getStorage()\n    if (storage) {\n        return storage.getItem(key)\n    }\n    return null\n}\n\nconst getDefault = (key: StorageKey) => {\n    switch (key) {\n        case 'keyrier-json.app.state':\n            return getDefaultAppState()\n        case 'keyrier-json.user.settings':\n            return getDefaultUserSettingsState()\n        default:\n            throw new Error(`no defaul value for ${key}`)\n    }\n}\n\nconst load = (key: StorageKey) => {\n    let state = getDefault(key)\n    try {\n        const savedStateString = loadFromStorage(key)\n        if (savedStateString) {\n            state = JSON.parse(savedStateString)\n            state = lodash.merge({}, state)\n        }\n    } catch (error) {\n        logError(error)\n    }\n\n    return state\n}\n\nconst getStorage = () => {\n    if (window.localStorage) {\n        return window.localStorage\n    }\n    if (window.sessionStorage) {\n        return window.sessionStorage\n    }\n    return null\n}\n","import { createStore, compose } from 'redux'\nimport rootReducers from 'reducers/reducers'\nimport { persistAppState, persistUserSettings, getAppState, getUserSettings } from './persistence'\n\nexport const configureStore = () => {\n    const appState = getAppState()\n    const userSettingsState = getUserSettings()\n\n    const composeEnhancers =\n        typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n            ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n            : compose\n\n    const store = createStore(\n        rootReducers,\n        {\n            app: {\n                past: [],\n                present: appState,\n                future: [],\n                _latestUnfiltered: appState,\n                group: undefined,\n                index: undefined,\n                limit: undefined,\n            },\n            userSettings: userSettingsState,\n        },\n        composeEnhancers()\n    )\n\n    store.subscribe(() => {\n        persistAppState(store.getState().app.present)\n        persistUserSettings(store.getState().userSettings)\n    })\n\n    return store\n}\n","import { logError } from 'core/logging/logger'\n\nexport const themeDeps = new Map([\n    [\n        'materia',\n        () => import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css'),\n    ],\n    [\n        'darkly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css'),\n    ],\n    [\n        'sandstone',\n        () => import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css'),\n    ],\n    ['cosmo', () => import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css')],\n    [\n        'cyborg',\n        () => import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css'),\n    ],\n    [\n        'flatly',\n        () => import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css'),\n    ],\n    [\n        'journal',\n        () => import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css'),\n    ],\n    [\n        'litera',\n        () => import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css'),\n    ],\n    ['lumen', () => import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css')],\n    ['lux', () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css')],\n    ['minty', () => import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css')],\n    ['pulse', () => import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css')],\n    [\n        'simplex',\n        () => import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css'),\n    ],\n    ['slate', () => import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css')],\n    ['solar', () => import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css')],\n    [\n        'spacelab',\n        () => import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css'),\n    ],\n    [\n        'superhero',\n        () => import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css'),\n    ],\n    [\n        'united',\n        () => import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css'),\n    ],\n    ['yeti', () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css')],\n] as const)\n\nexport const importThemeStyleCustom = (theme: GeneralTheme | null) => {\n    if (theme) {\n        const themeLoader = themeDeps.get(theme)\n        if (themeLoader) {\n            return themeLoader()\n        }\n    }\n\n    logError(`${theme}: theme is not defined`)\n\n    return themeDeps\n        .values()\n        .next()\n        .value()\n}\n\nexport const availableGeneralThemes = [\n    'materia',\n    'darkly',\n    'sandstone',\n    'cosmo',\n    'cyborg',\n    'flatly',\n    'journal',\n    'litera',\n    'lumen',\n    'lux',\n    'minty',\n    'pulse',\n    'simplex',\n    'slate',\n    'solar',\n    'spacelab',\n    'superhero',\n    'united',\n    'yeti',\n] as const\nexport type GeneralTheme = typeof availableGeneralThemes[number]\n\nexport const availableEditorThemes = ['github', 'monokai', 'tomorrow', 'solarized_dark', 'terminal'] as const\nexport type EditorTheme = typeof availableEditorThemes[number]\n","import * as React from 'react'\nimport { version } from '../../package.json'\nimport { GeneralTheme, availableGeneralThemes, availableEditorThemes, EditorTheme } from 'themes/themes'\nimport { switchTheme, switchEditorTheme } from 'actions/actions'\nimport { connect } from 'react-redux'\nimport { getTheme, getEditorTheme } from 'store/selectors'\nimport { RootState } from 'state/State'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    Collapse,\n    Nav,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    NavItem,\n    NavLink,\n    Dropdown,\n} from 'reactstrap'\nimport { withErrorBoundary } from './common/ErrorBoundary'\nimport { memo, useCallback, FC } from 'react'\n\ninterface Props {\n    setGeneralTheme: typeof switchTheme\n    setEditorTheme: typeof switchEditorTheme\n    currentTheme: GeneralTheme | null\n    currentEditorTheme: EditorTheme\n}\n\nconst Header: FC<Props> = ({ setGeneralTheme, currentTheme, setEditorTheme, currentEditorTheme }) => {\n    const [isOpen, switchIsOpen] = useToggleState()\n    const [dropDownIsOpen, toggleDropdown] = useToggleState()\n\n    return (\n        <>\n            <Navbar color=\"dark\" dark={true} expand=\"md\">\n                <NavbarBrand href=\"/\">Keyrier JSON</NavbarBrand>\n                <NavbarToggler role=\"presentation\" onClick={switchIsOpen} />\n                <Collapse isOpen={isOpen} navbar={true}>\n                    <Nav className=\"ml-auto\" navbar={true}>\n                        <NavItem>\n                            <Dropdown isOpen={dropDownIsOpen} toggle={toggleDropdown}>\n                                <DropdownToggle nav={true} caret={true}>\n                                    Theme\n                                </DropdownToggle>\n                                <DropdownMenu right={true}>\n                                    <DropdownItem header={true}>Choose editor theme</DropdownItem>\n                                    {availableEditorThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setEditorTheme}\n                                            key={index}\n                                            active={currentEditorTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={false}\n                                        />\n                                    ))}\n                                    <DropdownItem header={true}>Choose general theme</DropdownItem>\n\n                                    {availableGeneralThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setGeneralTheme}\n                                            key={index}\n                                            active={currentTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={true}\n                                        />\n                                    ))}\n                                </DropdownMenu>\n                            </Dropdown>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json/releases/latest\">\n                                v{version}\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </>\n    )\n}\n\ntype ThemeDropDownItemProps<T extends GeneralTheme | EditorTheme> = {\n    theme: T\n    active: boolean\n    setTheme: (v: T) => void\n    reloadOnChange: boolean\n}\n\nconst ThemeDropDownItem = <T extends GeneralTheme | EditorTheme>(props: ThemeDropDownItemProps<T>) => {\n    const { theme, active, setTheme, reloadOnChange } = props\n    const onClick = useCallback(() => {\n        setTheme(theme)\n        if (reloadOnChange) {\n            setTimeout(() => window.location.reload())\n        }\n    }, [theme, setTheme, reloadOnChange])\n    return (\n        <DropdownItem active={active} onClick={onClick}>\n            {theme}\n        </DropdownItem>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    currentTheme: getTheme(state),\n    currentEditorTheme: getEditorTheme(state),\n})\n\nexport default connect(\n    mapStateToProps,\n    { setGeneralTheme: switchTheme, setEditorTheme: switchEditorTheme }\n)(memo(withErrorBoundary(Header)))\n","import * as React from 'react'\nimport { Button } from 'reactstrap'\nimport { memo, useCallback, ChangeEvent, FC } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\ninterface Props {\n    header: [string, string]\n    id: number\n    onChange: (h: [string, string]) => void\n    onRemove: (h: [string, string]) => void\n}\n\nexport const RenderHeaderInput: FC<Props> = memo(\n    withErrorBoundary(({ header, onRemove, onChange, id }) => {\n        const [key, value] = header\n\n        const onKeyChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([e.target.value, value]), [\n            onChange,\n            value,\n        ])\n        const onValueChange = useCallback((e: ChangeEvent<HTMLInputElement>) => onChange([key, e.target.value]), [\n            onChange,\n            key,\n        ])\n        const onRemoveCallback = useCallback(() => onRemove(header), [onRemove, header])\n\n        return (\n            <div className=\"row align-items-center\">\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={key}\n                        id={`headerName${id}`}\n                        type=\"text\"\n                        name={`headerName${id}`}\n                        placeholder=\"enter an name\"\n                        onChange={onKeyChange}\n                    />\n                </div>\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={value}\n                        type=\"text\"\n                        name={`headerValue${id}`}\n                        id={`headerValue${id}`}\n                        placeholder=\"enter an value\"\n                        onChange={onValueChange}\n                    />\n                </div>\n                <div className=\"col-sm-2\">\n                    <Button outline={true} color=\"danger\" onClick={onRemoveCallback}>\n                        remove\n                    </Button>\n                </div>\n            </div>\n        )\n    })\n)\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { connect } from 'react-redux'\nimport { updateSource } from 'actions/actions'\nimport { customToString } from 'core/converters/string'\nimport { RenderHeaderInput } from './RequestHeader'\nimport { useState, memo, useCallback, FC } from 'react'\nimport { Alert, FormGroup, Form, Button } from 'reactstrap'\nimport { useToggleState, useChangeEventState } from 'hooks/hooks'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\n\ninterface Props {\n    onFinish: () => void\n    setSource: (src: string) => void\n}\n\nconst HttpRequestSource: FC<Props> = ({ onFinish, setSource }) => {\n    const [method, setMethod] = useChangeEventState('GET')\n    const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n    const [body, setBody] = useChangeEventState('')\n    const [headers, setHeaders] = useState([['Accept', 'application/json'] as [string, string]])\n    const [error, setError] = useState(null as TypeError | null)\n    const [hasBody, setHasBody] = useToggleState()\n\n    const submit = useCallback(async () => {\n        const requestInit: RequestInit = {\n            method,\n            headers,\n            body: hasBody ? body : null,\n        }\n        const request = new Request(url, requestInit)\n        setError(null)\n\n        let json: string\n        try {\n            const result = await fetch(request)\n            json = await result.json()\n        } catch (e) {\n            logError('HttpRequestSource.submit', e)\n            setError(e)\n            return\n        }\n        setSource(customToString(json))\n        onFinish()\n    }, [method, url, body, headers, hasBody, setError, setSource, onFinish])\n\n    return (\n        <div id=\"HttpRequestSource\">\n            <FormGroup>\n                <label htmlFor=\"requestMethod\">Method</label>\n                <select\n                    className=\"form-control-lg form-control\"\n                    defaultValue={method}\n                    name=\"requestMethod\"\n                    id=\"requestMethod\"\n                    onChange={setMethod}\n                >\n                    <option>GET</option>\n                    <option>POST</option>\n                    <option>PUT</option>\n                    <option>OPTIONS</option>\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <label htmlFor=\"requestUrl\">Request URL</label>\n                <input\n                    defaultValue={url}\n                    className=\"form-control-lg form-control\"\n                    type=\"url\"\n                    name=\"requestUrl\"\n                    id=\"requestUrl\"\n                    placeholder=\"enter an URL\"\n                    onChange={setUrl}\n                />\n            </FormGroup>\n            <div className=\"position-relative form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n                </label>\n            </div>\n            <Form inline={true} hidden={!hasBody}>\n                <FormGroup>\n                    <label>Body</label>\n                    <input\n                        className=\"form-control-lg form-control\"\n                        type=\"textarea\"\n                        value={body}\n                        onChange={setBody}\n                    />{' '}\n                </FormGroup>\n            </Form>\n            <label htmlFor=\"headers\">Request headers</label>{' '}\n            <Button\n                outline={true}\n                color=\"primary\"\n                onClick={() => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']])}\n            >\n                Add header\n            </Button>\n            <br />\n            <br />\n            <HeaderList headers={headers} onChange={setHeaders} />\n            <br />\n            <Button block={true} color=\"primary\" onClick={submit}>\n                Submit\n            </Button>\n            {error && (\n                <Alert color=\"danger\">\n                    Error: {error.message ? error.message : ''}\n                    {error.stack ? error.stack : ''}\n                </Alert>\n            )}\n        </div>\n    )\n}\n\ntype HeaderListProps = {\n    headers: Array<[string, string]>\n    onChange: (headers: Array<[string, string]>) => void\n}\n\nconst HeaderList: FC<HeaderListProps> = ({ headers, onChange }) => {\n    const onRemove = useCallback((header: [string, string]) => onChange(headers.filter(h => h !== header)), [\n        headers,\n        onChange,\n    ])\n    const onChangeCallback = useCallback(\n        (header: [string, string]) => {\n            const index = headers.indexOf(header)\n            headers[index] = { ...header }\n            onChange([...headers])\n        },\n        [headers, onChange]\n    )\n    return (\n        <>\n            {headers.map((header, index) => (\n                <RenderHeaderInput\n                    header={header}\n                    key={index}\n                    id={index}\n                    onChange={onChangeCallback}\n                    onRemove={onRemove}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default connect(\n    null,\n    { setSource: updateSource }\n)(withErrorBoundary(memo(HttpRequestSource)))\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    updateSource,\n    resetEditor,\n    clearEditor,\n    updateAutoFormatSource,\n    undo,\n    redo,\n    updateQueryMode,\n} from 'actions/actions'\nimport HttpRequestSource from './source/RequestSource'\nimport { logInfo } from 'core/logging/logger'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    ButtonGroup,\n    Label,\n} from 'reactstrap'\nimport { memo, useCallback, FC, ChangeEvent } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport { getSourceAutoFormat, getCanUndo, getCanRedo, getQueryMode } from 'store/selectors'\nimport { RootState, QueryMode } from 'state/State'\n\ninterface Props {\n    onFileContentReady: typeof updateSource\n    changeAutoFormat: typeof updateAutoFormatSource\n    onReset: typeof resetEditor\n    onClear: typeof clearEditor\n    setQueryMode: typeof updateQueryMode\n    mode: QueryMode\n    onUndo: typeof undo\n    onRedo: typeof redo\n    canRedo: boolean\n    canUndo: boolean\n    autoFormat: boolean\n}\n\nconst LateralMenu: FC<Props> = ({\n    onReset,\n    onFileContentReady,\n    onClear,\n    autoFormat,\n    changeAutoFormat,\n    onRedo,\n    onUndo,\n    canRedo,\n    canUndo,\n    setQueryMode,\n    mode,\n}) => {\n    const [dropdownIsOpen, toggleDropdown] = useToggleState()\n    const [modalIsOpen, toggleModal] = useToggleState()\n    const handleFileChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            logInfo('onFileChange')\n            toggleDropdown()\n            if (e.target.files && e.target.files.length > 0) {\n                const fileReader = new FileReader()\n                logInfo('e.target.files', e.target.files[0].name)\n                fileReader.onload = () => {\n                    if (fileReader.result) {\n                        onFileContentReady(fileReader.result.toString())\n                    }\n                }\n                fileReader.readAsText(e.target.files[0])\n            }\n        },\n        [toggleDropdown, onFileContentReady]\n    )\n\n    const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n    return (\n        <>\n            <ButtonGroup className=\"d-flex\" vertical={true}>\n                <ButtonGroup vertical={false}>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onUndo}\n                        disabled={!canUndo}\n                    >\n                        <i className=\"material-icons mr-1 md-18\">undo</i>\n                        <span>Undo</span>\n                    </Button>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onRedo}\n                        disabled={!canRedo}\n                    >\n                        Redo\n                        <i className=\"material-icons mr-1 md-18\">redo</i>\n                    </Button>\n                </ButtonGroup>\n                <br />\n                <br />\n                <Label\n                    className=\"d-flex justify-content-center align-content-between\"\n                    check={true}\n                    onClick={handleAutoFormatChange}\n                >\n                    <i className=\"material-icons mr-1\">{autoFormat ? 'check_box' : 'check_box_outline_blank'}</i>\n                    Auto format\n                </Label>\n                <br />\n                <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n                    <DropdownToggle\n                        className=\"d-flex justify-content-center align-content-between\"\n                        size={'lg'}\n                        id=\"import-menu-button\"\n                        color=\"primary\"\n                    >\n                        <i className=\"material-icons mr-1 md-18\">unarchive</i>\n                        Import\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem toggle={false}>\n                            <label id=\"import-file\">\n                                Browse JSON file...\n                                <input\n                                    type=\"file\"\n                                    name=\"file\"\n                                    id=\"sourceFile\"\n                                    style={{ display: 'none' }}\n                                    onChange={handleFileChange}\n                                />\n                            </label>\n                        </DropdownItem>\n                        <DropdownItem id=\"http-request\" onClick={toggleModal}>\n                            <label>HTTP request</label>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n                <br />\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"secondary\"\n                    size={'lg'}\n                    onClick={onReset}\n                >\n                    <div>\n                        <i className=\"material-icons md-18 mr-1\">autorenew</i>\n                    </div>\n                    <div>Reset</div>\n                </Button>\n                <br />\n\n                {mode === 'Javascript' ? (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('SQL')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to SQL-like</div>\n                    </Button>\n                ) : (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('Javascript')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to JS</div>\n                    </Button>\n                )}\n\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"danger\"\n                    size={'lg'}\n                    onClick={onClear}\n                >\n                    <div>\n                        <i className=\"material-icons md-18  mr-1\">clear</i>\n                    </div>\n                    <div>Clear</div>\n                </Button>\n            </ButtonGroup>\n            <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n                <ModalBody>\n                    <HttpRequestSource onFinish={toggleModal} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    autoFormat: getSourceAutoFormat(state),\n    canUndo: getCanUndo(state),\n    canRedo: getCanRedo(state),\n    mode: getQueryMode(state),\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        onFileContentReady: updateSource,\n        onReset: resetEditor,\n        onClear: clearEditor,\n        onUndo: undo,\n        onRedo: redo,\n        changeAutoFormat: updateAutoFormatSource,\n        setQueryMode: updateQueryMode,\n    }\n)(memo(withErrorBoundary(LateralMenu)))\n","import * as React from 'react'\nimport styles from './GrabbleHeader.module.scss'\nimport { FC, ReactElement } from 'react'\nimport { CardHeader } from 'reactstrap'\n\ntype Props = {\n    title: string\n    children: ReactElement\n}\n\nexport const GrabbleHeader: FC<Props> = ({ title, children }) => (\n    <div className={styles.draggable}>\n        <CardHeader color=\"primary\">\n            <u className=\"font-weight-bold\">{title}</u>\n            <span className={`float-right ${styles.grabber}`}>\n                <i className=\"material-icons\">drag_indicator</i>\n            </span>\n        </CardHeader>\n        {children}\n    </div>\n)\n","import * as React from 'react'\nimport Header from './Header'\nimport { ToastContainer } from 'react-toastify'\nimport { lazy, Suspense, FC } from 'react'\nimport LateralMenu from './LateralMenu'\nimport grabbleStyles from './common/GrabbleHeader.module.scss'\nimport { GrabbleHeader } from './common/GrabbleHeader'\nimport 'react-grid-layout/css/styles.css'\nimport { connect } from 'react-redux'\nimport { getQueryMode } from 'store/selectors'\nimport { QueryMode } from 'state/State'\nimport { Responsive, WidthProvider } from 'react-grid-layout'\n\nconst ResponsiveGridLayout = WidthProvider(Responsive)\nconst SourceEditor = lazy(() => import(/* webpackChunkName: \"SourceEditor\" */ 'components/source/SourceEditor'))\nconst Output = lazy(() => import(/* webpackChunkName: \"Output\" */ 'components/output/Output'))\nconst QueryEditor = lazy(() => import(/* webpackChunkName: \"QueryEditor\" */ 'components/query/QueryEditor'))\n\ntype Props = {\n    mode: QueryMode\n}\n\nconst lateralMenuKey = 'LateralMenu'\nconst sourceEditorKey = 'SourceEditor'\nconst queryEditorKey = 'QueryEditor'\nconst outputKey = 'Output'\n\nconst App: FC<Props> = ({ mode }) => {\n    const layouts = {\n        lg: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 6, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 20, y: 0, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 20, y: 8, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n        md: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 6, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 0, y: 14, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 0, y: 19, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n        sm: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 6, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 0, y: 14, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 0, y: 19, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n        xs: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 16, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 0, y: 14, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 0, y: 19, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n        xxs: [\n            { i: lateralMenuKey, x: 0, y: 0, w: 16, h: 11, minW: 5, minH: 11 },\n            { i: sourceEditorKey, x: 6, y: 0, w: 14, h: 14, minW: 10, minH: 14 },\n            { i: queryEditorKey, x: 0, y: 14, w: 28, h: 6, minW: 8, minH: 6 },\n            { i: outputKey, x: 0, y: 19, w: 28, h: 16, minW: 10, minH: 16 },\n        ],\n    }\n    return (\n        <>\n            <Header />\n            <div className=\"container-fluid\">\n                <h1 className=\"my-5\">Paste your JSON and Query it.</h1>\n                <ResponsiveGridLayout\n                    autoSize={true}\n                    className=\"layout\"\n                    isResizable={true}\n                    layouts={layouts}\n                    draggableHandle={`.${grabbleStyles.grabber}`}\n                    breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n                    cols={{ lg: 48, md: 36, sm: 24, xs: 12, xxs: 6 }}\n                    margin={[20, 20]}\n                    containerPadding={[0, 0]}\n                    rowHeight={25}\n                >\n                    <div key={lateralMenuKey}>\n                        <GrabbleHeader title=\"Options\">\n                            <LateralMenu />\n                        </GrabbleHeader>\n                    </div>\n                    <div key={sourceEditorKey}>\n                        <GrabbleHeader title=\"1. Paste your JSON:\">\n                            <Suspense fallback={'loading...'}>\n                                <SourceEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={queryEditorKey}>\n                        <GrabbleHeader title={`2. Type your ${mode} query:`}>\n                            <Suspense fallback={'loading...'}>\n                                <QueryEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={outputKey}>\n                        <GrabbleHeader title=\"3. View your results:\">\n                            <Suspense fallback={'loading...'}>\n                                <Output />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                </ResponsiveGridLayout>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default connect(state => ({ mode: getQueryMode(state) }))(App)\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    )\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log('New content is available; please refresh.')\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log('Content is cached for offline use.')\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import { Provider } from 'react-redux'\nimport './index.scss'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport { configureStore } from 'store/store'\nimport * as React from 'react'\nimport { getTheme } from 'store/selectors'\nimport { importThemeStyleCustom } from 'themes/themes'\nimport App from 'components/App'\nimport { unregister } from 'registerServiceWorker'\n;(async () => {\n    const store = configureStore()\n\n    const promises = await Promise.all([\n        import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n        importThemeStyleCustom(getTheme(store.getState())),\n    ])\n\n    const ReactDOM = promises[0]\n    ReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\n        <Provider store={store}>\n            <App />\n        </Provider>\n    )\n\n    unregister()\n})()\n","// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload?: any) => {\n    console.error('Keyrier error', error)\n    if (typeof payload !== 'undefined') {\n        console.error(payload)\n    }\n}\n\nexport const logWarning = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.warn(message)\n    }\n    console.warn(message, payload)\n}\n\nexport const logInfo = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.info(message)\n    }\n    console.info(message, payload)\n}\n","import { QueryMode, tabType } from 'state/State'\nimport { GeneralTheme, EditorTheme } from 'themes/themes'\n\nexport const updateAutoFormatSource = (active: boolean) =>\n    ({\n        active,\n        type: 'UPDATE_AUTOFORMAT_SOURCE',\n    } as const)\n\nexport const updateSource = (source: string) =>\n    ({\n        source,\n        type: 'UPDATE_SOURCE_TEXT',\n    } as const)\n\nexport const updateQuery = (query: string) =>\n    ({\n        query,\n        type: 'UPDATE_QUERY',\n    } as const)\n\nexport const resetEditor = () =>\n    ({\n        type: 'RESET_EDITOR',\n    } as const)\n\nexport const undo = () =>\n    ({\n        type: 'APP_UNDO',\n    } as const)\n\nexport const redo = () =>\n    ({\n        type: 'APP_REDO',\n    } as const)\n\nexport const clearEditor = () =>\n    ({\n        type: 'CLEAR_EDITOR',\n    } as const)\n\nexport const evaluateCode = () =>\n    ({\n        type: 'EVALUATE_CODE',\n    } as const)\n\nexport const toggleOutputTableModal = () =>\n    ({\n        type: 'TOGGLE_OUTPUT_TABLE_MODAL',\n    } as const)\n\nexport const updateTableColumns = (columns: string[]) =>\n    ({\n        columns,\n        type: 'UPDATE_TABLE_COLUMNS',\n    } as const)\n\nexport const updateTableGroupBy = (groupBy: string[]) =>\n    ({\n        groupBy,\n        type: 'UPDATE_TABLE_GROUP_BY',\n    } as const)\n\nexport const switchTheme = (theme: GeneralTheme) => ({\n    theme,\n    type: 'SWITCH_GLOBAL_THEME' as const,\n})\n\nexport const switchEditorTheme = (theme: EditorTheme) => ({\n    theme,\n    type: 'SWITCH_EDITOR_THEME' as const,\n})\n\nexport const updateSearchTerm = (searchTerm: string) =>\n    ({\n        searchTerm,\n        type: 'UPDATE_OUTPUT_SEARCH_TERM',\n    } as const)\n\nexport const updateQueryMode = (mode: QueryMode) =>\n    ({\n        mode,\n        type: 'UPDATE_QUERY_MODE',\n    } as const)\n\nexport const updateOutputTabSelection = (tab: tabType) =>\n    ({\n        tab,\n        type: 'UPDATE_OUTPUT_TAB_SELECTION',\n    } as const)\n\nexport type Action =\n    | ReturnType<typeof evaluateCode>\n    | ReturnType<typeof resetEditor>\n    | ReturnType<typeof clearEditor>\n    | ReturnType<typeof updateQuery>\n    | ReturnType<typeof toggleOutputTableModal>\n    | ReturnType<typeof updateTableColumns>\n    | ReturnType<typeof updateTableGroupBy>\n    | ReturnType<typeof switchTheme>\n    | ReturnType<typeof updateSearchTerm>\n    | ReturnType<typeof updateQueryMode>\n    | ReturnType<typeof updateOutputTabSelection>\n    | ReturnType<typeof updateSource>\n    | ReturnType<typeof updateAutoFormatSource>\n    | ReturnType<typeof switchEditorTheme>\n    | ReturnType<typeof undo>\n    | ReturnType<typeof redo>\n","import { RootState } from 'state/State'\n\nexport const getOutputErrorMessage = (state: RootState) =>\n    state && state.app && state.app.present.output ? state.app.present.output.errorMessage : ''\n\nexport const getOutputIsArray = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.table\n        ? !!state.app.present.output.table.isArray\n        : false\nexport const getOutputActiveTab = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.selectedTab\n        ? state.app.present.output.selectedTab\n        : ('RawJson' as const)\nexport const getOutputObject = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.obj ? state.app.present.output.obj : {}\nexport const getOutputObjectSize = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.objSize\n        ? state.app.present.output.objSize\n        : 0\nexport const getOutputSearchTerm = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.searchTerm\nexport const getOutputSearchMatch = (state: RootState) =>\n    state && state.app && state.app.present.output ? !!state.app.present.output.match : false\nexport const getisOutputTableModalOpen = (state: RootState) =>\n    state && state.app && state.app.present.output && state.app.present.output.table\n        ? !!state.app.present.output.table.isModalOpen\n        : false\n\nexport const getTheme = (state: RootState) =>\n    state.userSettings && state.userSettings.globalTheme ? state.userSettings.globalTheme : ('pulse' as const)\nexport const getEditorTheme = (state: RootState) =>\n    state.userSettings && state.userSettings.editorTheme ? state.userSettings.editorTheme : ('github' as const)\n\nexport const getdisplayedColumns = (state: RootState) =>\n    state &&\n    state.app &&\n    state.app.present.output &&\n    state.app.present.output.table &&\n    state.app.present.output.table.displayedColumns\n        ? [...state.app.present.output.table.displayedColumns]\n        : []\nexport const getOutputarray = (state: RootState) =>\n    state && state.app && state.app.present.output && Array.isArray(state.app.present.output.obj)\n        ? [...state.app.present.output.obj]\n        : []\nexport const getColumns = (state: RootState) =>\n    state &&\n    state.app &&\n    state.app.present.output &&\n    state.app.present.output.table &&\n    state.app.present.output.table.columns\n        ? [...state.app.present.output.table.columns]\n        : []\nexport const getGroupBy = (state: RootState) =>\n    state &&\n    state.app &&\n    state.app.present.output &&\n    state.app.present.output.table &&\n    state.app.present.output.table.groupBy\n        ? [...state.app.present.output.table.groupBy]\n        : []\n\nexport const getQueryText = (state: RootState) =>\n    state && state.app && state.app.present.query && state.app.present.query.text ? state.app.present.query.text : ''\nexport const getQueryMode = (state: RootState) =>\n    state && state.app && state.app.present.query && state.app.present.query.mode\n        ? state.app.present.query.mode\n        : ('SQL' as const)\n\nexport const getSourceText = (state: RootState) =>\n    state && state.app && state.app.present.source && state.app.present.source.text ? state.app.present.source.text : ''\nexport const getSourceAutoFormat = (state: RootState) =>\n    state && state.app && state.app.present.source ? !!state.app.present.source.autoFormat : false\n\nexport const getCanRedo = (state: RootState) =>\n    state && state.app && state.app.future ? state.app.future.length !== 0 : false\nexport const getCanUndo = (state: RootState) =>\n    state && state.app && state.app.past ? state.app.past.length > 1 : false\n","import { useState, useCallback, ChangeEvent } from 'react'\n\nexport const useToggleState = (initial: boolean = false): readonly [boolean, () => void] => {\n    const [value, setValue] = useState(initial)\n    return [value, () => setValue(!value)]\n}\n\ntype HtmlElementHookable = HTMLSelectElement | HTMLInputElement\n\nexport const useChangeEventState = (\n    initialValue: string\n): readonly [string, (e: ChangeEvent<HtmlElementHookable>) => void] => {\n    const [value, setValue] = useState(initialValue)\n\n    const eventHandler = useCallback(\n        (event: ChangeEvent<HtmlElementHookable>) => {\n            if (event && event.target) {\n                setValue(event.target.value)\n            }\n        },\n        [setValue]\n    )\n\n    return [value, eventHandler]\n}\n","import * as React from 'react'\nimport { logError } from 'core/logging/logger'\nimport { toast } from 'react-toastify'\nimport { Component, ComponentType } from 'react'\n\nconst MISSING_ERROR = 'Error was swallowed during propagation.'\n\ntype State = {\n    error?: Error\n}\n\nclass ErrorBoundary extends Component<{}, State> {\n    public readonly state: State = {\n        error: undefined,\n    }\n\n    public componentDidCatch(error: Error | null, info: object) {\n        this.setState({ error: error || new Error(MISSING_ERROR) }, () => this.notify(info))\n    }\n\n    public render() {\n        const { children } = this.props\n        const { error } = this.state\n\n        if (error) {\n            return <>An error occured</>\n        }\n\n        return children\n    }\n\n    private notify(info: object) {\n        logError('An error occured', this.state.error)\n        logError('error info:', info)\n        toast.error(JSON.stringify(info), { position: 'bottom-right', hideProgressBar: true, autoClose: false })\n    }\n}\n\nexport const withErrorBoundary = <T extends {}>(Wrapped: ComponentType<T>) => (props: T) => (\n    <ErrorBoundary>\n        <Wrapped {...props} />\n    </ErrorBoundary>\n)\n","export const customToString = (obj: {}): string => {\n    if (Array.isArray(obj)) {\n        const array: any[] = obj\n        return array.map(e => customToString(e)).join(',')\n    }\n    if (typeof obj === 'object') {\n        return JSON.stringify(obj)\n    }\n    if (typeof obj === 'undefined') {\n        return ''\n    }\n    if (obj !== null && obj !== undefined) {\n        return obj.toString()\n    }\n\n    return ''\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n    if (!str || !part) {\n        return false\n    }\n    if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n        return true\n    }\n\n    return false\n}\n\nconst UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\nconst toLocaleString = (value: number, locale: boolean | string = false) => {\n    let result = value.toString()\n    if (typeof locale === 'string') {\n        result = value.toLocaleString(locale)\n    } else if (locale === true) {\n        result = value.toLocaleString()\n    }\n\n    return result\n}\n\nexport const prettyPrintBytes = (value: number, signed = false, locale: boolean | string = false) => {\n    if (!Number.isFinite(value)) {\n        throw new TypeError(`Expected a finite number, got ${typeof value}: ${value}`)\n    }\n    if (value === 0) {\n        return '0 B'\n    }\n    const isNegative = value < 0\n    const prefix = isNegative ? '-' : signed ? '+' : ''\n    if (isNegative) {\n        value = -value\n    }\n    if (value < 1) {\n        const numberStr = toLocaleString(value, locale ? locale : false)\n        return prefix + numberStr + ' B'\n    }\n    const exponent = Math.min(Math.floor(Math.log10(value) / 3), UNITS.length - 1)\n    value = Number((value / Math.pow(1024, exponent)).toPrecision(3))\n    const numberString = toLocaleString(value, locale ? locale : false)\n    const unit = UNITS[exponent]\n    return prefix + numberString + ' ' + unit\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggable\":\"GrabbleHeader_draggable__3DRIT\",\"grabber\":\"GrabbleHeader_grabber__12Y6q\"};","export const arrayElementName = 'arrayElement'\n"],"sourceRoot":""}