{"version":3,"sources":["config.ts","models/array.ts","core/logging/logger.ts","core/misc/utils.ts","core/code.ts","../../core/dist/index.js","../../src/operators.ts","../../src/lexer.ts","../../src/actions-visitor.ts","../../src/parser.ts","../../src/utils.ts","../../src/sql.ts","components/common/GrabbleHeader.tsx","themes/themes.ts","components/Header.tsx","components/source/RequestHeader.tsx","components/source/RequestSource.tsx","components/LateralMenu.tsx","components/App.tsx","registerServiceWorker.ts","core/converters/json.ts","reducers/reducers.ts","store/persistence.ts","store/store.ts","index.tsx","state/State.ts","store/selectors.ts","hooks/hooks.ts","components/common/ErrorBoundary.tsx","core/logging/performance.tsx","core/converters/string.ts","components/common/GrabbleHeader.module.scss","components/App.module.scss","core/misc/debug.ts","actions/actions.ts"],"names":["configuration","limitUndo","storageKey","appState","userSettings","layout","keys","lateralMenuKey","sourceEditorKey","queryEditorKey","outputKey","arrayElementName","logError","error","payload","console","logDebug","message","debug","logPerf","name","duration","customProperties","isDebugMode","appVersion","getAppVersion","version","location","window","href","logEvents","enqueue","queue","offset","this","length","item","push","slice","undefined","__PERF_EVENT_LOGS","codeEvaluation","sourceString","queryString","mode","trim","evaluation","evaluate","Error","obj","text","JSON","stringify","jsEvaluation","sqlEvaluation","code","eval","module","exports","require","stringTokenRegex","RegExp","Identifier","createToken","pattern","WhiteSpace","group","Lexer","SKIPPED","Comment","Select","longer_alt","From","Where","Comma","Like","label","Limit","Null","In","On","IsNot","Is","NotLike","OrderBy","InnerJoin","OrderByDirection","As","OrAnd","Star","Integer","StringToken","GreaterOrEqualThan","GreaterThan","LessOrEqualThan","LessThan","Equal","NotEqual","OpenParenthesis","CloseParenthesis","tokenVocabulary","SelectLexer","Object","values","parserInstance","config","lexer","_this","RULE","SUBRULE","selectClause","fromClause","OPTION","joinClause","OPTION2","whereClause","OPTION3","orderByClause","OPTION4","limitClause","rule","CONSUME","projection","OR","ALT","AT_LEAST_ONE_SEP","SEP","DEF","columnClause","OR1","LABEL","OR2","CONSUME1","CONSUME2","MANY_SEP","SUBRULE2","value","OPTION1","OR3","CONSUME4","expressionClause","MANY","subExpression","atomicExpression","relationalOperator","SUBRULE3","selectStatement","CONSUME3","SUBRULE1","performSelfAnalysis","implementation","CstParser","toAstVisitorInstance","validateVisitor","ctx","type","fields","visit","source","where","order","limit","joins","image","tokenType","convertStringTokenToJsString","Array","isArray","func","parameters","map","x","_this2","join","buildField","_this3","index","tableName","table","alias","splitPropertyPath","pathArray","conditions","forEach","_table","from","_this4","parseInt","orderings","propertyName","direction","i","left","operation","right","field","context","entries","key","entryValue","intValue","stringValue","firstItemValue","getBaseCstVisitorConstructor","toAst","inputText","lexResult","lexingResult","tokenize","errors","input","tokens","cst","stringPath","String","split","str","substring","namePropertyName","fieldPathArray","fieldPropertyName","jsonParseSafe","safeStr","replace","parse","get","path","defaultValue","travel","regexp","prototype","call","filter","Boolean","reduce","res","result","sqlQueryWithMultipleSources","query","sqlTree","some","toLowerCase","SyntaxError","sourceDataObjects","utils","executeQuery","e","sourceDataObject","data","fromPath","shift","mapper","jointures","rows","real","projected","dataContext","ordered","orderBy","results","row","match","joinRow","joinRowData","compareOperands","mapped","leftValue","getValue","rightValue","leftStr","rightStr","startsWith","endsWith","includes","indexOf","functions","lower","upper","toUpperCase","trimleft","trimLeft","trimright","trimRight","reverse","len","concat","operand","getIdentifierValue","v","sources","mappedObject","funcVal","toApply","availableTables","allowedSourceNames","json","GrabbleHeader","title","children","useMeasure","parentref","parentHeight","height","headerRef","ref","className","styles","draggable","CardHeader","style","background","grabber","overflowY","overflowX","themeDeps","Map","importThemeStyleCustom","theme","themeLoader","next","availableGeneralThemes","availableEditorThemes","ThemeDropDownItem","props","active","setTheme","reloadOnChange","onClick","useCallback","setTimeout","reload","DropdownItem","connect","mapStateToProps","state","currentTheme","getTheme","currentEditorTheme","getEditorTheme","setGeneralTheme","Actions","switchTheme","setEditorTheme","switchEditorTheme","memo","withErrorBoundary","withPerformance","Header","useToggleState","isOpen","switchIsOpen","dropDownIsOpen","toggleDropdown","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","role","Collapse","navbar","Nav","NavItem","Dropdown","toggle","DropdownToggle","nav","caret","DropdownMenu","header","NavLink","RenderHeaderInput","onRemove","onChange","id","placeholder","onKeyChange","target","onValueChange","Button","outline","onRemoveCallback","HttpRequestSource","onFinish","setSource","useChangeEventState","method","setMethod","url","setUrl","body","setBody","useState","headers","setHeaders","setError","hasBody","setHasBody","submit","a","request","Request","fetch","customToString","FormGroup","htmlFor","onBlur","Form","inline","hidden","block","Alert","stack","HeaderList","h","onChangeCallback","updateSource","autoFormat","getSourceAutoFormat","canUndo","getCanUndo","canRedo","getCanRedo","getQueryMode","onFileContentReady","onReset","resetEditor","onClear","clearEditor","onUndo","undo","onRedo","redo","resetHistory","ActionCreators","clearHistory","changeAutoFormat","updateAutoFormatSource","setQueryMode","updateQueryMode","LateralMenu","dropdownIsOpen","modalIsOpen","toggleModal","handleFileChange","files","fileReader","FileReader","onload","toString","readAsText","handleAutoFormatChange","ButtonGroup","vertical","size","disabled","Label","check","ButtonDropdown","display","Modal","ModalHeader","ModalBody","ModalFooter","ResponsiveGridLayout","WidthProvider","Responsive","SourceEditor","lazy","Output","QueryEditor","layouts","getLayouts","updateGridLayouts","updateLayouts","execQuery","App","useEffect","autoSize","isResizable","draggableHandle","grabbleStyles","breakpoints","xs","lg","cols","margin","containerPadding","rowHeight","onLayoutChange","_","newLayouts","compactType","maxRows","appStyles","gridborder","fallback","hostname","jsonBeautify","parsed","appReducer","createReducer","State","builder","addCase","actions","addMatcher","action","draft","output","computeOutput","isModalOpen","selectedTab","searchTerm","_action","globalTheme","editorTheme","updateQuery","initialStateJson","previousState","objSize","errorMessage","displayedColumns","columns","groupBy","keyMap","d","is","sort","ax","b","localeCompare","updateTableColumns","element","splice","updateTableGroupBy","gb","containsTerm","src","filteredObj","containsIgnoreCase","k","getOwnPropertyNames","propertyNameContains","rootReducers","combineReducers","app","undoable","resetApp","undoType","redoType","persist","localForage","setItem","toast","warn","getDefault","getDefaultAppState","getDefaultUserSettingsState","loadAppState","present","merge","getItem","savedState","future","past","loadUserSettings","persistence","getAppState","getUserSettings","persistAppState","appstate","persistUserSettings","configureStore","userSettingsState","preloadedState","logger","createLogger","predicate","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","store","conf","reducer","devTools","subscribe","getState","Promise","all","promises","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","bootstrap","catch","debugMode","y","w","minW","minH","emptyState","copyArrayOrEmpty","array","getOutputErrorMessage","getOutputIsArray","getOutputActiveTab","getOutputObject","getOutputObjectSize","getOutputSearchTerm","getOutputSearchMatch","getisOutputTableModalOpen","getdisplayedColumns","getOutputarray","getColumns","getGroupBy","getQueryText","getSourceText","getDebugMode","initial","setValue","initialValue","event","ErrorBoundary","info","setState","notify","position","hideProgressBar","autoClose","Component","Wrapped","WithErrorBoundary","options","firstContentfulPaint","firstPaint","firstInputDelay","dataConsumption","largestContentfulPaint","navigationTiming","analyticsTracker","opt","metricName","browserTracker","logPrefix","logging","warning","debugging","Perfume","WithPerf","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","takeFirst","n","part","toLocaleLowerCase","UNITS","prettyPrintBytes","Number","isFinite","TypeError","isNegative","prefix","exponent","Math","min","floor","log10","pow","toPrecision","__DEBUG__","createAction","updateOutputTabSelection","toggleOutputTableModal","updateSearchTerm"],"mappings":"iHAAA,kCAAO,IAAMA,EAAgB,CACzBC,UAAW,KACXC,WAAY,CACRC,SAAU,yBACVC,aAAc,iCAElBC,OAAQ,CACJC,KAAM,CACFC,eAAgB,cAChBC,gBAAiB,eACjBC,eAAgB,cAChBC,UAAW,a,iCCXvB,kCAAO,IAAMC,EAAmB,gB,oNCGnBC,EAAW,SAAXA,SAAYC,EAAuBC,GAC5CC,QAAQF,MAAM,UAAWA,GACF,qBAAZC,GACPC,QAAQF,MAAMC,IAUTE,EAAW,SAAXA,SAAYC,EAAiBH,GACf,qBAAZA,EACPC,QAAQG,MAAM,UAAWD,GACtBF,QAAQG,MAAM,UAAWD,EAASH,IAGhCK,EAAU,SAAVA,QAAWC,EAAcC,EAAmBC,GACrD,GAAIC,cAAe,CACf,IAAMC,ECtBe,SAAhBC,gBAAgB,OAAMC,IDsBRD,GACbX,EAAO,yBAAKM,OAAMC,WAAUG,cAAeF,GAApC,IAAsDK,SAAUC,OAAOD,SAASE,OAC7FC,EAAUC,QAAQjB,KAyDbgB,EAAY,I,yDAnDbE,MAAa,G,KACbC,OAAS,E,sEAIb,OAAOC,KAAKF,MAAMG,OAASD,KAAKD,S,wCAKhC,OAA6B,IAAtBC,KAAKF,MAAMG,S,sCAOPC,GACXF,KAAKF,MAAMK,KAAKD,K,wCAQhB,GAA0B,IAAtBF,KAAKF,MAAMG,OAAf,CAKA,IAAMC,EAAOF,KAAKF,MAAME,KAAKD,QAS7B,OANoB,IAAdC,KAAKD,QAAcC,KAAKF,MAAMG,SAChCD,KAAKF,MAAQE,KAAKF,MAAMM,MAAMJ,KAAKD,QACnCC,KAAKD,OAAS,GAIXG,K,kCAOP,OAAOF,KAAKF,MAAMG,OAAS,EAAID,KAAKF,MAAME,KAAKD,aAAUM,M,UAK/DX,OAAeY,kBAAoBV,G,0EEpFrC,gRAIaW,eAAiB,SAAjBA,eAAkBC,EAAsBC,EAAqBC,GACtE,IAAKF,IAAiBC,EAClB,OAAO,KAGX,GAA4B,KAAxBD,EAAaG,OACb,OAAO,KAGX,GAA2B,KAAvBF,EAAYE,OACZ,OAAO,KAGX,IAAMC,EAAaC,SAASL,EAAcC,EAAaC,GACvD,OAAIE,aAAsBE,MACfF,EAEJ,CAAEG,IAAKH,EAAYI,KAAMC,KAAKC,UAAUN,KAG7CC,SAAW,SAAXA,SAAYL,EAAsBC,EAAqBC,GACzD,MAAa,eAATA,EACOS,aAAaX,EAAcC,GAClB,QAATC,EACAU,4DAAcZ,EAAcC,GAEhC,IAAIK,MAAM,qBAGfK,aAAe,SAAfA,aAAgBX,aAAsBC,aACxC,IACI,IAAMY,KAAI,8CAEUb,aAFV,sBAGRC,YAHQ,YAMV,OAAOa,KAAKD,MACd,MAAO1C,OACL,OAAOA,S,iCCvCb4C,EAAOC,QAAUC,EAAQ,M,2uCCJpB,ICKDC,EAAmB,IAAIC,uIAEhBC,EAAaC,cAAY,CAAE3C,KAAM,aAAc4C,QAAS,sBACxDC,EAAaF,cAAY,CAAE3C,KAAM,aAAc4C,QAAS,MAAOE,MAAOC,QAAMC,UAC5EC,EAAUN,cAAY,CAAE3C,KAAM,UAAW4C,QAAS,OAAQE,MAAOC,QAAMC,UACvEE,EAASP,cAAY,CAAE3C,KAAM,SAAU4C,QAAS,UAAWO,WAAYT,IACvEU,EAAOT,cAAY,CAAE3C,KAAM,OAAQ4C,QAAS,QAASO,WAAYT,IACjEW,EAAQV,cAAY,CAAE3C,KAAM,QAAS4C,QAAS,SAAUO,WAAYT,IACpEY,EAAQX,cAAY,CAAE3C,KAAM,QAAS4C,QAAS,MAC9CW,EAAOZ,cAAY,CAAE3C,KAAM,OAAQ4C,QAAS,QAASO,WAAYT,EAAYc,MDDhF,SCEGC,EAAQd,cAAY,CAAE3C,KAAM,QAAS4C,QAAS,SAAUO,WAAYT,IACpEgB,EAAOf,cAAY,CAAE3C,KAAM,OAAQ4C,QAAS,QAASO,WAAYT,IACjEiB,EAAKhB,cAAY,CAAE3C,KAAM,KAAM4C,QAAS,MAAOO,WAAYT,EAAYc,MDL5E,OCMKI,EAAKjB,cAAY,CAAE3C,KAAM,KAAM4C,QAAS,MAAOO,WAAYT,IAC3DmB,EAAQlB,cAAY,CAC7B3C,KAAM,QACN4C,QAAS,YACTO,WAAYT,EACZc,MDhBO,WCkBEM,EAAKnB,cAAY,CAAE3C,KAAM,KAAM4C,QAAS,MAAOO,WAAYT,EAAYc,MDpB5E,OCqBKO,EAAUpB,cAAY,CAAE3C,KAAM,UAAW4C,QAAS,cAAeY,MDZjE,aCaAQ,EAAUrB,cAAY,CAAE3C,KAAM,UAAW4C,QAAS,iBAClDqB,EAAYtB,cAAY,CAAE3C,KAAM,YAAa4C,QAAS,kBACtDsB,EAAmBvB,cAAY,CACxC3C,KAAM,mBACN4C,QAAS,cACTO,WAAYT,IAEHyB,EAAKxB,cAAY,CAAE3C,KAAM,KAAM4C,QAAS,MAAOO,WAAYT,IAC3D0B,EAAQzB,cAAY,CAAE3C,KAAM,QAAS4C,QAAS,YAAaO,WAAYT,IACvE2B,EAAO1B,cAAY,CAAE3C,KAAM,OAAQ4C,QAAS,OAC5C0B,EAAU3B,cAAY,CAAE3C,KAAM,UAAW4C,QAAS,eAClD2B,EAAc5B,cAAY,CAAE3C,KAAM,cAAe4C,QAASJ,IAC1DgC,EAAqB7B,cAAY,CAC1C3C,KAAM,qBACN4C,QAAS,KACTY,MDjCoB,OCmCXiB,EAAc9B,cAAY,CAAE3C,KAAM,cAAe4C,QAAS,IAAKY,MDpC3D,MCqCJkB,EAAkB/B,cAAY,CAAE3C,KAAM,kBAAmB4C,QAAS,KAAMY,MDlChE,OCmCRmB,EAAWhC,cAAY,CAAE3C,KAAM,WAAY4C,QAAS,IAAKY,MDpCxD,MCqCDoB,EAAQjC,cAAY,CAAE3C,KAAM,QAAS4C,QAAS,IAAKY,MD3CrD,MC4CEqB,EAAWlC,cAAY,CAAE3C,KAAM,WAAY4C,QAAS,UAAWY,MD1C9D,OC2CDsB,EAAkBnC,cAAY,CAAE3C,KAAM,kBAAmB4C,QAAS,OAClEmC,EAAmBpC,cAAY,CAAE3C,KAAM,mBAAoB4C,QAAS,OAEpEoC,EAAkB,CAC3B/B,UACAJ,aACAK,SACAE,OACAC,QACAC,QACAC,OACAE,QACAC,OACAO,YACAN,KACAC,KACAC,QACAC,KACAC,UACAC,UACAE,mBACAC,KACAC,QAEA1B,aAEA2B,OACAC,UACAC,cAEAK,QACAC,WACAL,qBACAC,cACAC,kBACAC,WAEAG,kBACAC,oBAKEE,GAAc,IAAIlC,QAAMmC,OAAOC,OAAOH,ICrFtCI,GAAiB,2BC4OPC,8BACFC,EAAuBD,0BAxNCE,EAAKC,KAAK,mBAAmB,aACtDC,QAAQF,EAAKG,gBACbD,QAAQF,EAAKI,cAEbC,QAAO,aACHH,QAAQF,EAAKM,iBAGjBC,SAAQ,aACJL,QAAQF,EAAKQ,kBAGjBC,SAAQ,aACJP,QAAQF,EAAKU,oBAEjBC,SAAQ,aACJT,QAAQF,EAAKY,kCAIKZ,EAAKa,KAAK,gBAAgB,aAChDC,QAAQf,KACRG,QAAQF,EAAKe,4BAGOf,EAAKa,KAAK,cAAc,aAC5CG,GAAG,CACJ,CACIC,IAAK,sBACDjB,EAAKkB,iBAAiB,CAClBC,IAAKpB,EACLqB,IAAK,iBACIlB,QAAQF,EAAKqB,gCAOlBrB,EAAKa,KAAK,SAAS,aAClCS,IAAI,CACL,CAAEL,IAAK,sBAAMjB,EAAKc,QAAQf,EAAY,CAAEwB,MA/DzC,YAgEC,CACIN,IAAK,sBAAMjB,EAAKc,QAAQf,EAAmB,CAAEwB,MAjElD,YAmEC,CACIN,IAAK,sBAAMjB,EAAKc,QAAQf,EAAkB,CAAEwB,MApEjD,gBAuEElB,QAAO,aACHS,QAAQf,KACRyB,IAAI,CACL,CACIP,IAAK,sBAAMjB,EAAKyB,SAAS1B,EAAmB,CAAEwB,MAxExD,WA0EM,CACIN,IAAK,sBAAMjB,EAAKyB,SAAS1B,EAAkB,CAAEwB,MA3EvD,kCAiFyBvB,EAAKa,KAAK,gBAAgB,aAChDG,GAAG,CACJ,CACIC,IAAK,iBACIS,SAAS3B,EAAkB,CAAEwB,MAvFxC,eAwFWT,QAAQf,KACR4B,SAAS,CACVR,IAAKpB,EACLqB,IAAK,iBACIQ,SAAS5B,EAAK6B,YAGtBf,QAAQf,KACR+B,SAAQ,aACJL,SAAS1B,KACTgC,IAAI,CACL,CACId,IAAK,sBAAMjB,EAAK0B,SAAS3B,EAAmB,CAAEwB,MAlGpE,WAoGkB,CACIN,IAAK,sBAAMjB,EAAKgC,SAASjC,EAAkB,CAAEwB,MArGnE,kBA2GE,CACIN,IAAK,iBACIf,QAAQF,EAAK6B,2BAML7B,EAAKa,KAAK,cAAc,aAC5CC,QAAQf,KACRiB,GAAG,CACJ,CACIC,IAAK,sBAAMjB,EAAKc,QAAQf,EAAkB,CAAEwB,MAxHjD,YA0HC,CACIN,IAAK,sBAAMjB,EAAKc,QAAQf,EAAmB,CAAEwB,MA3HlD,gBA8HElB,QAAO,kBAAML,EAAK0B,SAAS3B,EAAkB,CAAEwB,MA5HjD,8BA+HuBvB,EAAKa,KAAK,eAAe,aAC9CC,QAAQf,KACRG,QAAQF,EAAKiC,qCAGUjC,EAAKa,KAAK,iBAAiB,aAClDC,QAAQf,KACRe,QAAQf,KACRM,OAAO,CACRe,IAAK,sBAAMpB,EAAKc,QAAQf,uBAIFC,EAAKa,KAAK,eAAe,aAC9CC,QAAQf,KACRe,QAAQf,mBAGYC,EAAKa,KAAK,cAAc,aAC5CqB,MAAK,aACDpB,QAAQf,KACRiB,GAAG,CACJ,CACIC,IAAK,sBAAMjB,EAAKc,QAAQf,EAAkB,CAAEwB,MAxJrD,YA0JK,CACIN,IAAK,sBAAMjB,EAAKc,QAAQf,EAAmB,CAAEwB,MA3JtD,gBA8JMlB,QAAO,kBAAML,EAAK0B,SAAS3B,EAAkB,CAAEwB,MA5JrD,eA6JMT,QAAQf,KACRG,QAAQF,EAAKiC,2CAISjC,EAAKa,KAAK,oBAAoB,aACxDc,SAAS,CACVR,IAAKpB,EACLqB,IAAK,sBAAMpB,EAAKE,QAAQF,EAAKmC,qCAILnC,EAAKa,KAAK,iBAAiB,aAClDX,QAAQF,EAAKoC,iBAAkB,CAAEb,MAzKpC,WA0KGP,GAAG,CACJ,CACIC,IAAK,iBACIf,QAAQF,EAAKqC,sBACbX,SAAS3B,KACTuC,SAAStC,EAAKuC,gBAAiB,CAAEhB,MA9K/C,YA+KciB,SAASzC,KAGtB,CACIkB,IAAK,iBACIwB,SAASzC,EAAKqC,sBACdT,SAAS5B,EAAKoC,iBAAkB,CAAEb,MArLhD,oCA2L4BvB,EAAKa,KAAK,oBAAoB,aACxDG,GAAG,CACJ,CAAEC,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CACIkB,IAAK,iBACIH,QAAQf,KACR4B,SAAS,CACVR,IAAKpB,EACLqB,IAAK,iBACIE,IAAI,CACL,CACIL,IAAK,sBAAMjB,EAAKyB,SAAS1B,EAAe,CAAEwB,MAxMtE,SA0MwB,CACIN,IAAK,sBAAMjB,EAAKyB,SAAS1B,EAAmB,CAAEwB,MA3M1E,gBAgNiBT,QAAQf,+BAMQC,EAAKa,KAAK,sBAAsB,aAC5DG,GAAG,CACJ,CAAEC,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,KAC1B,CAAEkB,IAAK,sBAAMjB,EAAKc,QAAQf,YAMzB2C,wCD9Oc,CC8OdA,gGAnOC7B,cAAKpG,EAAyCkI,EAA6C7C,sBACpFG,eAAKxF,EAAMkI,EAAgB7C,MAG5CG,cAAKxF,EAAyCkI,EAA6C7C,sBAC1EG,eAAKxF,EAAMkI,EAAgB7C,MA8NnC4C,CApO6CE,eD4OpDC,GAAuB,gEA1OhBC,sDAGFP,yBAAgBQ,SAgBZ,CACHC,KAAM,kBACNnB,MAXoB,CACpBoB,OAPWF,EAAI5C,cAAgB5E,KAAK2H,MAAMH,EAAI5C,cAQ9CgD,OAPWJ,EAAI3C,YAAc7E,KAAK2H,MAAMH,EAAI3C,YAQ5CgD,MAPUL,EAAIvC,aAAejF,KAAK2H,MAAMH,EAAIvC,aAQ5C6C,MAPUN,EAAIrC,eAAiBnF,KAAK2H,MAAMH,EAAIrC,eAQ9C4C,MAPUP,EAAInC,aAAerF,KAAK2H,MAAMH,EAAInC,aAQ5C2C,MAPUR,EAAIzC,YAAc/E,KAAK2H,MAAMH,EAAIzC,iBAgB5CH,sBAAa4C,UACTxH,KAAK2H,MAAMH,EAAIhC,eAGnBc,eAAMkB,SACLlB,EAAQ,cACRkB,EAAIlB,0BAAJkB,EAAWvH,UACXqG,EAAQkB,EAAIlB,MAAM,GAAG2B,WAErBR,EAAkB,kBAClBD,EAAIlB,OAASkB,EAAIlB,MAAM,GAAG4B,YAAchE,EAAgBT,cACxD6C,EAAQ6B,GAA6B7B,GACrCmB,EAAO,mBAGPvI,EAAOsI,EAAItI,MAAQsI,EAAItI,KAAK,GAAKsI,EAAItI,KAAK,GAAG+I,MAAQ3B,SAErDkB,EAAItI,MAAQsI,EAAItI,KAAK,GAAGgJ,YAAchE,EAAgBT,cACtDvE,EAAOiJ,GAA6BjJ,IAGjC,CACHA,OACAoH,QACAmB,WAGD3B,sBAAa0B,iBACZA,YAAgBY,MAAMC,QAAQb,aAAiBY,MAAMC,QAAQb,EAAIlB,OAAQ,KACnEgC,EAAOd,WAAa,GAAGS,MACvBM,EAAaf,EAAIlB,MAAMkC,KAAI,SAACC,UAAMC,EAAKf,MAAMc,MAC7CvJ,EAAOsI,EAAItI,MAAQsI,EAAItI,KAAK,GAAKsI,EAAItI,KAAK,GAAG+I,MAAWK,MAAQC,EAAWC,KAAI,SAACC,UAAMA,EAAEvJ,QAAMyJ,KAAK,gBAClGC,GACH1J,EACAoJ,EACA,gBACAC,EAAWC,KAAI,SAACC,UAAMG,GAAWH,EAAEvJ,KAAMuJ,EAAEnC,MAAOmC,EAAEhB,gBAG1BzH,KAAK2H,MAAMH,EAAIlB,cACtCsC,KADC1J,OAAMoH,QAAOmB,SAKtBjC,oBAAWgC,qBACPA,EAAI1B,aAAa0C,KAAI,SAACC,UAAMI,EAAKlB,MAAMc,SAG3C5D,oBAAW2C,EAAUsB,wBAAQ,OAC5BC,EAAoBvB,EAAIwB,MAAMF,GAAOb,MACrCT,EAAIwB,MAAMF,GAAOZ,YAAchE,EAAgBT,cAC/CsF,EAAYZ,GAA6BY,QAEvCE,YAASzB,EAAIyB,OAASzB,EAAIyB,MAAMH,GAAOb,qBAAUc,QAChD,CACHtB,KAAM,OACNvI,KAAM,CACFuI,KAAM,YACNnB,MAAOyC,EACP1E,OAAQ6E,GAAkBH,GAAWI,WAEzCF,MAAO,CACHxB,KAAM,YACNnB,MAAO2C,EACP5E,OAAQ6E,GAAkBD,GAAOE,eAKtClE,qBAAYuC,SAGR,CACH4B,WAHepJ,KAAK2H,MAAMH,EAAId,sBAO/B3B,oBAAWyC,kBACTA,EAAIwB,aACE,SAGLhB,EAAQ,IAAII,aAClBZ,EAAIwB,MAAMK,SAAQ,SAACC,EAAQR,OACjBS,EAAOC,EAAK3E,WAAW2C,EAAKsB,GAC5BM,EAAaI,EAAK7B,MAAMH,EAAId,iBAAiBoC,IACnDd,EAAM7H,KAAK,CACPoJ,OACAH,kBAGDpB,KAGJ3C,qBAAYmC,SAER,CACHlB,MAAO,CACHA,MAHMmD,SAASjC,EAAIhE,QAAQ,GAAGyE,YAOnC9C,uBAAcqC,SAaV,CACHkC,UAAW,CATS,CACpBpD,MAAO,CACHmB,KAAM,cACNnB,MAPiB4C,GAAkB1B,EAAI5F,WAAW,GAAGqG,OAArD0B,cASJC,UAPcpC,EAAIpE,iBAAoBoE,EAAIpE,iBAAiB,GAAG6E,MAA2B,YAe1FvB,0BAAiBc,EAAUqC,2BAAI,cAC9BrC,EAAIZ,oCAAe3G,QAAS4J,GAAM,SAC3B7J,KAAK2H,MAAMH,EAAIZ,cAAciD,QAElCC,EAAO9J,KAAK2H,MAAMH,EAAIZ,cAAciD,IAEpCE,EAAYvC,EAAIlE,MAAMuG,GAAG5B,YAGxB,CACHR,KAAM,aACNqC,OACAE,MALmBhK,KAAK0G,iBAAiBc,EAAKqC,EAAI,GAMlDE,gBAIDnD,uBAAcY,OACXsC,EAAO9J,KAAK2H,MAAMH,EAAIsC,MACtBC,EAAY/J,KAAK2H,MAAMH,EAAIV,oBAC3BkD,EAAQhK,KAAK2H,MAAMH,EAAIwC,aACtB,CACHvC,KAAM,aACNqC,KAAM,CACFrC,KAAMqC,EAAKrC,KACXnB,MAAOwD,EAAKxD,MACZjC,OAAQ6E,GAAkBY,EAAKxD,OAAO6C,UACtCc,MAAOH,EAAKG,OAEhBF,YACAC,MAAO,CACHvC,KAAMuC,EAAMvC,KACZnB,MAAO0D,EAAM1D,MACbjC,OAAQ6E,GAAkBc,EAAM1D,OAAO6C,UACvCc,MAAOD,EAAMC,WAKlBpD,0BAAiBqD,iBACJ9F,OAAO+F,QAAQD,kBACU,YAA7BE,OAAKC,UACD,OAARD,QAWO,CAAE3C,KAAM,QAASnB,MAVD+D,EAAW7B,KAAI,SAAClC,MAC/BA,EAAM4B,YAAc1E,EAAS,KAEvB8G,EAAWb,SAASnD,EAAM2B,aACzB,CAAER,KAFI,cAEEnB,MAAOgE,EAAUjG,OAAQ,CAACiG,QAGvCC,EAAcpC,GAA6B7B,EAAM2B,aAChD,CAAER,KAFI,cAEEnB,MAAOiE,EAAalG,OAAQ,CAACkG,WAIxC,YAARH,QACO,CAAE3C,KAAM,UAAWnB,MAAOmD,SAASY,EAAW,GAAGpC,WAEhD,SAARmC,QACO,CAAE3C,KAAM,OAAQnB,MAAO,SAEtB,eAAR8D,EAAsB,KAChBH,EAAQrB,GAAWyB,EAAW,GAAGpC,MAAOoC,EAAW,GAAGpC,MAAO,yBAC5D,CACHR,KAAM,eACNnB,MAAO+D,EAAW,GAAGpC,MACrBgC,YAGI,gBAARG,QACO,CAAE3C,KAAM,SAAUnB,MAAO6B,GAA6BkC,EAAW,GAAGpC,cAG7E,IAAInH,SAGPgG,4BAAmBU,OAChBnD,EAASD,OAAOC,OAAOmD,GACvBgD,EAAiBnG,EAAO,IAAMA,EAAO,GAAG,MAC1CmG,SAGIA,EADAtC,UAAalC,YAIf,IAAIlF,SAIe,CArPmCwD,GAAemG,iCAuP7EC,GAAQ,SAARA,EAASC,OACLC,EDlKS,SAACD,OACVE,EAAe1G,GAAY2G,SAASH,MAEtCE,EAAaE,OAAO9K,OAAS,QACvBa,MAAMG,KAAKC,UAAU2J,EAAaE,gBAGrCF,EAPQ,CCkKOF,GAEtBrG,GAAe0G,MAAQJ,EAAUK,WAC3BC,EAA2B5G,GAAe0C,qBAE5C1C,GAAeyG,OAAO9K,OAAS,QACzBa,MAAMG,KAAKC,UAAUoD,GAAeyG,gBAElCzD,GAAqBK,MAAMuD,GAC3B5E,OAGV4C,GAAoB,SAApBA,EAAqBiC,OACjBhC,EAAYiC,OAAOD,GAAYE,MAAM,WAEpC,CAAE1B,aAAcR,EAAUA,EAAUlJ,OAAS,GAAIkJ,cAGtDhB,GAA+B,SAA/BA,EAAgCmD,UAAgBA,EAAIC,UAAU,EAAGD,EAAIrL,OAAS,IAE9E2I,GAAa,SAAbA,EAAc1J,EAAcoH,EAAemB,EAAiBc,OACxCiD,EAAqBtC,GAAkBhK,GAArDyK,eAC+DT,GAAkB5C,GAAtEmF,IAAXtC,UAAyCuC,IAAd/B,mBACtB,kBAATlC,EACO,CACHA,OACAvI,KAAM,CACFuI,KAAM,cACNnB,MAAOkF,GAEXvB,MAAO,CACHxC,KAAM,YACNnB,MAAOoF,EACPrH,OAAQoH,YAEF,CACNvM,KAAMoH,EACNiC,WAAYA,UAAc,KAK/B,CACHd,OACAvI,KAAM,CACFuI,KAAM,cACNnB,MAAOkF,GAEXvB,MAAO,CACHxC,KAAM,YACNnB,MAAOoF,EACPrH,OAAQoH,KEnTPE,GAAgB,SAAhBA,EAAiBL,MACP,iBAARA,GAAmC,KAAfA,EAAI3K,cACxB,SAGLiL,EAAUN,EACXO,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,kBAGV5K,KAAK6K,MAAMF,GACpB,MAAOjN,UACE2M,IAIFS,GAAM,SAANA,EAAOhL,EAAUiL,EAA2BC,0BAAoB5L,IACnE6L,EAAS,SAATA,EAAUC,UACZf,OAAOgB,UAAUf,MACZgB,KAAKL,EAAMG,GACXG,OAAOC,SACPC,QAAO,SAACC,EAAKrC,UAASqC,QAAoCA,EAAIrC,GAAOqC,IAAM1L,IAC9E2L,EAASR,EAAO,aAAeA,EAAO,6BACrCQ,GAAwBA,IAAW3L,EAAMkL,EAAeS,GCEtDC,GAA8B,SAA9BA,EAA+B/E,EAAgCgF,WAE9DC,EAAUnC,GAAMkC,OAGjBxI,OAAOhG,KAAKwJ,GAAQkF,MACjB,SAACrE,UACGA,EAAEsE,gBAAkB3B,OAAOyB,EAAQjF,OAAOqB,MAAM5E,OAAO,IAAI0I,eAC3DtE,EAAEsE,gBAAkB3B,OAAOyB,EAAQjF,OAAO1I,KAAKoH,iBAGhD,IAAI0G,YAAY5B,OAAOyB,EAAQjF,OAAO1I,KAAKmF,OAAO,SAGvD4I,EAA6C,UACnD7I,OAAOhG,KAAKwJ,GAAQyB,SAAQ,SAACe,GACzB6C,EAAkB7C,GAAO8C,GAAoBtF,EAAOwC,OAGjD+C,GAAaN,EAASI,GAC/B,MAAOG,UACEA,IA0BFD,GAAe,SAAfA,EAAgBN,EAAkBQ,eACrCC,EAvBY,SAACT,EAAkBQ,MACjCA,EAAiBR,EAAQjF,OAAO1I,KAAKoH,cAC9B+G,EAAiBR,EAAQjF,OAAO1I,KAAKoH,WAG1CiH,YAAeV,EAAQjF,OAAO1I,KAAKmF,eACzCkJ,EAASC,QAEFN,GAAUG,EAAiBR,EAAQjF,OAAO1I,KAAKmF,OAAO,IAAKkJ,GARhD,CAuBSV,EAASQ,OAE/BjF,MAAMC,QAAQiF,UACRG,GAAOH,EAAMT,EAAQnF,eAAWmF,EAAQjF,OAAOqB,MAAM3C,OAAQgH,KAAQD,OAG1EK,EAAY,IAAItF,gBACtByE,EAAQ7E,sBAAOqB,SAAQ,SAACV,GACpB+E,EAAUvN,KAAK,CACXoJ,KAAMZ,EAAKY,KACXH,WAAYT,EAAKS,WACjBxB,OAAQyF,EAAiB1E,EAAKY,KAAKrK,KAAKoH,gBAG1CqH,EAAcL,EAAK9E,KAAI,SAACC,eAAgB,CAC1CmF,KAAMnF,EACNoF,UAAWpF,EACXqF,oBACKjB,EAAQjF,OAAO1I,KAAKoH,OAAQmC,IAC5BoE,EAAQjF,OAAOqB,MAAM3C,OAAQmC,SAIhCsF,EAAUC,UACZL,YACAd,EAAQ/E,0BAAR+E,EAAenD,UAAUlB,KAAI,SAACC,iBAAcA,EAAEnC,MAAMA,mBACpDuG,EAAQ/E,0BAAR+E,EAAenD,UAAUlB,KAAI,SAACC,UAAMA,EAAEmB,cAGpCqE,EAAU,IAAI7F,aACpB2F,EAAQ1E,SAAQ,SAAC6E,QACTrB,EAAQ9E,OAAS8E,EAAQ9E,MAAMzB,MAAMA,OAAS2H,EAAQhO,SAsKlE,SACIyN,EACAQ,EACAb,EACAxF,iBAE2C6F,kBAAW,qBAAjCtE,eAAYG,SACzB4E,KAAQ,MADHvG,uBAEqB,OAAnBwG,UACDC,UACD9E,EAAKrK,KAAKoH,OAAQ8H,IAClB7E,EAAKN,MAAM3C,OAAQ8H,KAExBF,EAAIJ,iBAAmBI,EAAIJ,YAAgBO,GACxBC,GAAgBlF,EAAWW,UAAWX,EAAWU,KAAMV,EAAWY,MAAOkE,EAAIJ,YAAaT,KAEzGc,MAAQ,IAGXA,WACM,OAIVtG,IAAUA,EAAMuB,YAOFkF,GAFDzG,EAAMuB,WAAWW,UAFjBlC,EAAMuB,WAAWU,KAChBjC,EAAMuB,WAAWY,MAGiCkE,EAAIJ,YAAaT,GA/B1F,CAnKqEK,EAAWQ,EAAKb,EAAkBR,EAAQhF,OAEzE,KACpB0G,EAASd,GAAOS,EAAIN,KAAMf,EAAQnF,OAAQwG,EAAIJ,YAAaT,GACjEa,EAAIL,UAAYU,EAChBN,EAAQ9N,KAAKoO,OAIdN,GAGLK,GAAkB,SAAlBA,EACFvE,EACAD,EACAE,EACA3F,EACAgJ,OAEMmB,EAAiBC,GAAS3E,EAAMzF,EAAQgJ,GACxCqB,EAAkBD,GAASzE,EAAO3F,EAAQgJ,UACxCtD,OACC,WAEkB,eAAdD,EAAKrC,MAAyB6G,EAAgBxE,EAAKC,UAAWD,EAAKA,KAAMA,EAAKE,MAAO3F,EAAQgJ,IAC9E,eAAfrD,EAAMvC,MAAyB6G,EAAgBtE,EAAMD,UAAWC,EAAMF,KAAME,EAAMA,MAAO3F,EAAQgJ,OAErG,YAEiB,eAAdvD,EAAKrC,MACL6G,EAAgBxE,EAAKC,UAAWD,EAAKA,KAAMA,EAAKE,MAAO3F,EAAQgJ,IAChD,eAAfrD,EAAMvC,MACN6G,EAAgBtE,EAAMD,UAAWC,EAAMF,KAAME,EAAMA,MAAO3F,EAAQgJ,UAGtEtD,OACC,QACA,YACMyE,IAAcE,MACpB,SACA,gBACMF,IAAcE,MACpB,WACKC,EAAUvD,OAAOoD,GACjBI,EAAWxD,OAAOsD,MACpBE,EAASC,WL7Jb,MK6J6CD,EAASE,SL7JtD,SK8JQH,EAAQI,SAASH,EAASrD,UAAU,EAAGqD,EAAS3O,OAAS,kBAG1D,GAAI2O,EAASC,WLjKpB,SKkKQF,EAAQG,SAASF,EAASrD,UAAUqD,EAASI,QLlKrD,KKkKiF,kBAG1E,GAAIJ,EAASE,SLrKpB,MKsKQH,EAAQE,WAAWD,EAASrD,UAAU,EAAGqD,EAASI,QLtK1D,gBKuKe,SAGR,IAEN,eACKL,EAAUvD,OAAOoD,GACjBI,EAAWxD,OAAOsD,MACpBE,EAASC,WL/Kb,MK+K6CD,EAASE,SL/KtD,SKgLQH,EAAQI,SAASH,EAASrD,UAAU,EAAGqD,EAAS3O,OAAS,kBAG1D,GAAI2O,EAASC,WLnLpB,SKoLQF,EAAQG,SAASF,EAASrD,UAAUqD,EAASI,QLpLrD,KKoLiF,kBAG1E,GAAIJ,EAASE,SLvLpB,MKwLQH,EAAQE,WAAWD,EAASrD,UAAU,EAAGqD,EAASI,QLxL1D,gBKyLe,SAGR,IAEN,YACQN,KAAgBF,GAAaA,EAAYE,MACjD,aACQA,KAAgBF,GAAaA,GAAaE,MAClD,YACQA,KAAgBF,GAAaA,EAAYE,MACjD,aACQA,KAAgBF,GAAaA,GAAaE,MAClD,YACMA,EAAWpC,QAAO,SAAC7D,UAA+BA,EAAEnC,QAAUkI,KAAWvO,OAAS,YAkB/FgP,GAAiF,CACnFC,MAAO,eAAC3G,UAAe6C,OAAO7C,EAAW,IAAIwE,eAC7CoC,MAAO,eAAC5G,UAAe6C,OAAO7C,EAAW,IAAI6G,eAC7CzO,KAAM,cAAC4H,UAAe6C,OAAO7C,EAAW,IAAI5H,QAC5C0O,SAAU,kBAAC9G,UAAe6C,OAAO7C,EAAW,IAAI+G,YAChDC,UAAW,mBAAChH,UAAe6C,OAAO7C,EAAW,IAAIiH,aACjDC,QAAS,iBAAClH,UAAe6C,OAAO7C,EAAW,IAAI8C,MAAM,IAAIoE,UAAU9G,KAAK,KACxE1I,OAAQ,gBAACsI,UAAe6C,OAAO7C,EAAW,IAAItI,QAC9CyP,IAAK,aAACnH,UAAe6C,OAAO7C,EAAW,IAAItI,QAC3C0P,OAAQ,gBAACpH,UAAeA,EAAWI,KAAK,MAYtC8F,GAAW,SAAXA,EAAYmB,EAA0BvL,EAAiCgJ,MACpD,gBAAjBuC,EAAQnI,KAAwB,KAC1BnB,EAAQuJ,GAAmBxL,EAAQuL,mBACrCtJ,EACOA,EAEJsJ,EAAQ3F,MAAM3D,YAGJ,YAAjBsJ,EAAQnI,MACS,WAAjBmI,EAAQnI,MACS,UAAjBmI,EAAQnI,MACS,SAAjBmI,EAAQnI,MACS,eAAjBmI,EAAQnI,KAEDmI,EAAQtJ,MAEE,iBAAjBsJ,EAAQnI,KAEDoI,GAAmBxL,EADRuL,EAAV3F,OAGS,oBAAjB2F,EAAQnI,KACW0F,GAAayC,EAAQtJ,MAAO+G,GAClC7E,KAAI,SAACC,SAAY,CAAEnC,MAAOmC,EAAEmH,EAAQtJ,MAAMoB,OAAO,GAAGuC,MAAM3D,WAGpEuJ,GAAmBxL,EAAQuL,IAGhCnC,GAAS,SAATA,EAAUqC,EAAYpI,EAAiBqI,EAAkC1C,UACvE3F,EAAOoF,MAAK,SAACrE,SAAwB,MAAlBA,EAAEwB,MAAM3D,SACpBwJ,EAjEG,SAACpI,EAAiBqI,EAAkC1C,OAC5D2C,EAA6C,UACnDtI,EAAO2B,SAAQ,SAACY,OACN3D,EAAQmI,GAASxE,EAAO8F,EAAS1C,GAEnC2C,EAAa/F,EAAM/K,KAAKoH,OADT,kBAAf2D,EAAMxC,KAoBI,SAACwI,EAAeF,EAAkC1C,OAC9D9E,EAAa0H,EAAQ1H,WAAWC,KAAI,SAACC,UAAMgG,GAAShG,EAAGsH,EAAS1C,MAChE/E,EAAO2H,EAAQ/Q,KAAK6N,cACpBmD,EAAUjB,GAAU3G,MACtB4H,SACOA,EAAQ3H,SAEb,IAAIzH,+BAA+BwH,yCAA2ClE,OAAOhG,KAAK6Q,IAAWtG,KAAK,OAP9F,CAnBqCsB,WAAgB8F,EAAS1C,GAEvC/G,KAGlC0J,EAVO,CAoEGtI,EAAQqI,EAAS1C,IAuCtC,SAASwC,GAAmBxL,EAAiC4F,OACnDkG,EAAkB/L,OAAOhG,KAAKiG,KAlTb,SAAC2H,EAAuCoE,UAC1DpE,EAGDoE,EAAmBtD,MAAK,SAACrE,gBAAMA,eAAM2C,OAAOY,EAAK,wBAAZZ,EAAiB2B,kBAC/C,CAAEhE,UAAWiD,EAAK,GAAIA,KAAM,UAAIA,GAAM5L,MAAM,IAGhD,CAAE4L,QANE,CAAEA,KAAM,IAFI,CAmTiB/B,iBAAOA,MAAM5F,OAAQ8L,GAArDnE,SAAMjD,iBAEVA,IAAcoH,EAAgBrD,MAAK,SAACrE,UAAMA,IAAMM,WAC1CjI,MAAMA,uBAAuBiI,OAElCA,GAAaoH,EAAgBlQ,OAAS,QACjCa,MAAMA,yBAAyBmJ,EAAMA,MAAM3D,WAG/CA,EAAQyC,EAAY1E,EAAO0E,GAAa3E,OAAOC,OAAOA,GAAQ,UAC7D6I,GAAU5G,EAAO0F,mDA7SJ,SAACqE,EAAczD,UAC5BD,GAA4B,CAAEW,KAAM+C,EAAMA,QAAQzD,iD,wNCZhD0D,EAA2B,SAA3BA,cAA4B,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACfC,cADe,mBACtDC,EADsD,KACjCC,EADiC,KACzCC,OADyC,EAEfH,cAFe,mBAEtDI,EAFsD,KAGvDD,EAASD,EAA8B,EAHgB,KAEzCC,OAC6B,EAEjD,OACI,uBAAKE,IAAKJ,EAAWK,UAAS,UAAKC,IAAOC,UAAZ,8BAC1B,uBAAKF,UAAU,QACX,gBAACG,EAAA,EAAD,CAAYH,UAAU,gBAAgBI,MAAO,CAAEC,WAAY,gBACvD,uBAAKN,IAAKD,GACN,qBAAGE,UAAU,kCAAkCR,GAC/C,wBAAMQ,UAAS,sBAAiBC,IAAOK,UACnC,qBAAGN,UAAU,kBAAb,qBAIZ,uBACII,MAAO,CACHP,OAAO,GAAD,OAAKA,EAAL,MACNU,UAAW,OACXC,UAAW,UAEfR,UAAU,QAETP,M,mHClCRgB,EAAY,IAAIC,IAA0C,CACnE,CAAC,UAAW,kBAAM,qCAClB,CAAC,SAAU,kBAAM,qCACjB,CAAC,YAAa,kBAAM,qCACpB,CAAC,QAAS,kBAAM,qCAChB,CAAC,SAAU,kBAAM,qCACjB,CAAC,SAAU,kBAAM,qCACjB,CAAC,UAAW,kBAAM,qCAClB,CAAC,SAAU,kBAAM,qCACjB,CAAC,QAAS,kBAAM,qCAChB,CAAC,MAAO,kBAAM,qCACd,CAAC,QAAS,kBAAM,qCAChB,CAAC,QAAS,kBAAM,qCAChB,CAAC,UAAW,kBAAM,qCAClB,CAAC,QAAS,kBAAM,qCAChB,CAAC,QAAS,kBAAM,qCAChB,CAAC,WAAY,kBAAM,qCACnB,CAAC,YAAa,kBAAM,qCACpB,CAAC,SAAU,kBAAM,qCACjB,CAAC,OAAQ,kBAAM,uCAGNC,EAAyB,SAAzBA,uBAA0BC,GACnC,GAAIA,EAAO,CACP,IAAMC,EAAcJ,EAAUzF,IAAI4F,GAClC,GAAIC,EACA,OAAOA,IAMf,OAFAlT,YAAS,GAAD,OAAIiT,EAAJ,2BAEDH,EAAUnN,SAASwN,OAAOvL,SAGxBwL,EAAyB,CAClC,UACA,SACA,YACA,QACA,SACA,SACA,UACA,SACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,WACA,YACA,SACA,QAISC,GAAwB,CAAC,SAAU,UAAW,WAAY,iBAAkB,Y,kBCkCnFC,GAAoB,SAApBA,kBAA2DC,GAAsC,IAC3FN,EAA4CM,EAA5CN,MAAOO,EAAqCD,EAArCC,OAAQC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,eAC3BC,EAAUC,uBAAY,WACxBH,EAASR,GACLS,GACAG,YAAW,kBAAM7S,OAAOD,SAAS+S,cAEtC,CAACb,EAAOQ,EAAUC,IACrB,OACI,gBAACK,EAAA,EAAD,CAAcP,OAAQA,EAAQG,QAASA,GAClCV,IAUEe,gBALS,SAAlBC,gBAAmBC,GAAD,MAAuB,CAC3CC,aAAcC,YAASF,GACvBG,mBAAoBC,YAAeJ,MAGC,CACpCK,gBAAiBC,IAAQC,YACzBC,eAAgBF,IAAQG,mBAFbX,CAGZY,eAAKC,aAAkBC,aApFA,SAApBC,OAAqB,GAA2E,IAAzER,EAAwE,EAAxEA,gBAAiBJ,EAAuD,EAAvDA,aAAcO,EAAyC,EAAzCA,eAAgBL,EAAyB,EAAzBA,mBAAyB,EAClEW,cADkE,mBAC1FC,EAD0F,KAClFC,EADkF,OAExDF,cAFwD,mBAE1FG,EAF0F,KAE1EC,EAF0E,KAIjG,OACI,gCACI,gBAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAM,EAAMC,OAAO,MACpC,gBAACC,EAAA,EAAD,CAAaxU,KAAK,KAAlB,gBACA,gBAACyU,EAAA,EAAD,CAAeC,KAAK,eAAehC,QAASuB,IAC5C,gBAACU,EAAA,EAAD,CAAUX,OAAQA,EAAQY,QAAQ,GAC9B,gBAACC,EAAA,EAAD,CAAKzD,UAAU,UAAUwD,QAAQ,GAC7B,gBAACE,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,CAAUf,OAAQE,EAAgBc,OAAQb,GACtC,gBAACc,EAAA,EAAD,CAAgBC,KAAK,EAAMC,OAAO,GAAlC,SAGA,gBAACC,EAAA,EAAD,CAAc/K,OAAO,GACjB,gBAACyI,EAAA,EAAD,CAAcuC,QAAQ,GAAtB,uBACCjD,GAAsBvJ,KAAI,SAACmJ,EAAO7I,GAAR,OACvB,gBAAC,GAAD,CACIqJ,SAAUiB,EACVhJ,IAAKtB,EACLoJ,OAAQa,IAAuBpB,EAC/BA,MAAOA,EACPS,gBAAgB,OAGxB,gBAACK,EAAA,EAAD,CAAcuC,QAAQ,GAAtB,wBAEClD,EAAuBtJ,KAAI,SAACmJ,EAAO7I,GAAR,OACxB,gBAAC,GAAD,CACIqJ,SAAUc,EACV7I,IAAKtB,EACLoJ,OAAQW,IAAiBlB,EACzBA,MAAOA,EACPS,gBAAgB,UAMpC,gBAACqC,EAAA,EAAD,KACI,gBAACQ,EAAA,EAAD,CAAStV,KAAK,+DAAd,IAA8EH,OAElF,gBAACiV,EAAA,EAAD,KACI,gBAACQ,EAAA,EAAD,CAAStV,KAAK,+CAAd,iBAuCsB,a,6JCzGrCuV,GAA+B5B,eACxCC,cAAkB,YAAyC,IAAtCyB,EAAqC,EAArCA,OAAQG,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GAAS,cACjCL,EADiC,GAC/C5K,EAD+C,KAC1C9D,EAD0C,KAOtD,OACI,uBAAKyK,UAAU,0BACX,uBAAKA,UAAU,YACX,yBACIA,UAAU,+BACVzK,MAAO8D,EACPiL,GAAE,oBAAeA,GACjB5N,KAAK,OACLvI,KAAI,oBAAemW,GACnBC,YAAY,gBACZF,SAdI,SAAdG,YAAenI,GAAD,OAAsCgI,EAAS,CAAChI,EAAEoI,OAAOlP,MAAOA,QAiB5E,uBAAKyK,UAAU,YACX,yBACIA,UAAU,+BACVzK,MAAOA,EACPmB,KAAK,OACLvI,KAAI,qBAAgBmW,GACpBA,GAAE,qBAAgBA,GAClBC,YAAY,iBACZF,SAxBM,SAAhBK,cAAiBrI,GAAD,OAAsCgI,EAAS,CAAChL,EAAKgD,EAAEoI,OAAOlP,YA2B5E,uBAAKyK,UAAU,YACX,gBAAC2E,GAAA,EAAD,CAAQC,SAAS,EAAM3B,MAAM,SAAS3B,QA3BzB,SAAnBuD,mBAAmB,OAAMT,EAASH,KA2B5B,gBC5Bda,GAA+B,SAA/BA,kBAAgC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAAgB,EAClCC,YAAoB,OADc,mBACvDC,EADuD,KAC/CC,EAD+C,OAExCF,YAAoB,8CAFoB,mBAEvDG,EAFuD,KAElDC,EAFkD,OAGtCJ,YAAoB,IAHkB,mBAGvDK,EAHuD,KAGjDC,EAHiD,OAIhCC,mBAAS,CAAC,CAAC,SAAU,sBAJW,mBAIvDC,EAJuD,KAI9CC,EAJ8C,OAKpCF,mBAAS,MAL2B,mBAKvD5X,EALuD,KAKhD+X,EALgD,OAMhChD,cANgC,mBAMvDiD,EANuD,KAM9CC,EAN8C,KAQxDC,EAASvE,sBAAW,sBAAC,sCAAAwE,EAAA,sEAMjBC,EAAU,IAAIC,QAAQb,EALK,CAC7BF,SACAO,UACAH,KAAMM,EAAUN,EAAO,OAG3BK,EAAS,MAPc,kBAWEO,MAAMF,GAXR,cAWbrK,EAXa,gBAYNA,EAAO2D,OAZD,OAYnBA,EAZmB,gEAcnB3R,YAAS,2BAAD,MACRgY,EAAS,EAAD,IAfW,2BAkBvBX,EAAUmB,aAAe7G,IACzByF,IAnBuB,gEAoBxB,CAACG,EAAQE,EAAKE,EAAMG,EAASG,EAASZ,EAAWD,IAEpD,OACI,uBAAKT,GAAG,qBACJ,gBAAC8B,GAAA,EAAD,KACI,yBAAOC,QAAQ,iBAAf,UACA,0BACIrG,UAAU,+BACV9E,aAAcgK,EACd/W,KAAK,gBACLmW,GAAG,gBACHgC,OAAQnB,GAER,qCACA,sCACA,qCACA,2CAGR,gBAACiB,GAAA,EAAD,KACI,yBAAOC,QAAQ,cAAf,eACA,yBACInL,aAAckK,EACdpF,UAAU,+BACVtJ,KAAK,MACLvI,KAAK,aACLmW,GAAG,aACHC,YAAY,eACZF,SAAUgB,KAGlB,uBAAKrF,UAAU,gCACX,yBAAOA,UAAU,oBACb,yBAAOtJ,KAAK,WAAWsJ,UAAU,mBAAmBqE,SAAUwB,IADlE,cAIJ,gBAACU,GAAA,EAAD,CAAMC,QAAQ,EAAMC,QAASb,GACzB,gBAACQ,GAAA,EAAD,KACI,yBAAOC,QAAQ,QAAf,QACA,yBAAO/B,GAAG,OAAOtE,UAAU,+BAA+BtJ,KAAK,WAAWnB,MAAO+P,EAAMjB,SAAUkB,IAAY,MAGrH,yBAAOc,QAAQ,WAAf,mBAAiD,IACjD,gBAAC1B,GAAA,EAAD,CAAQC,SAAS,EAAM3B,MAAM,UAAU3B,QAAS,0BAAMoE,EAAW,GAAD,oBAAKD,GAAL,CAAc,CAAC,QAAD,OAASA,EAAQvW,OAAS,GAAK,cAA7G,cAGA,2BACA,2BACA,gBAAC,GAAD,CAAYuW,QAASA,EAASpB,SAAUqB,IACxC,2BACA,gBAACf,GAAA,EAAD,CAAQ+B,OAAO,EAAMzD,MAAM,UAAU3B,QAASwE,GAA9C,UAGClY,GACG,gBAAC+Y,GAAA,EAAD,CAAO1D,MAAM,UAAb,UACYrV,EAAMI,QAAUJ,EAAMI,QAAU,GACvCJ,EAAMgZ,MAAQhZ,EAAMgZ,MAAQ,MAY3CC,GAAkC,SAAlCA,WAAmC,GAA2B,IAAzBpB,EAAwB,EAAxBA,QAASpB,EAAe,EAAfA,SAC1CD,EAAW7C,uBAAY,SAAC0C,GAAD,OAA8BI,EAASoB,EAAQlK,QAAO,SAACuL,GAAD,OAAOA,IAAM7C,QAAU,CAACwB,EAASpB,IAC9G0C,EAAmBxF,uBACrB,SAAC0C,GACG,IAAMlM,EAAQ0N,EAAQxH,QAAQgG,GAC9BwB,EAAQ1N,GAAR,gBAAsBkM,GACtBI,EAAS,aAAIoB,MAEjB,CAACA,EAASpB,IAEd,OACI,gCACKoB,EAAQhO,KAAI,SAACwM,EAAQlM,GAAT,OACT,gBAACoM,GAAD,CAAmBF,OAAQA,EAAQ5K,IAAKtB,EAAOuM,GAAIvM,EAAOsM,SAAU0C,EAAkB3C,SAAUA,SAMjGzC,eAAQ,KAAM,CAAEqD,UAAW7C,IAAQ6E,cAAnCrF,CAAmDa,aAAkBD,eAAKuC,MC0E1EnD,gBAPS,SAAlBC,gBAAmBC,GAAD,MAAuB,CAC3CoF,WAAYC,YAAoBrF,GAChCsF,QAASC,YAAWvF,GACpBwF,QAASC,YAAWzF,GACpBlS,KAAM4X,YAAa1F,MAGiB,CACpC2F,mBAAoBrF,IAAQ6E,aAC5BS,QAAStF,IAAQuF,YACjBC,QAASxF,IAAQyF,YACjBC,OAAQ1F,IAAQ2F,KAChBC,OAAQ5F,IAAQ6F,KAChBC,aAAcC,kBAAeC,aAC7BC,iBAAkBjG,IAAQkG,uBAC1BC,aAAcnG,IAAQoG,iBARX5G,CASZY,eAAKC,aAAkBC,aA7KK,SAAzB+F,YAA0B,GAazB,IAZHf,EAYE,EAZFA,QACAD,EAWE,EAXFA,mBACAG,EAUE,EAVFA,QACAV,EASE,EATFA,WACAmB,EAQE,EARFA,iBACAL,EAOE,EAPFA,OACAF,EAME,EANFA,OACAR,EAKE,EALFA,QACAF,EAIE,EAJFA,QACAmB,EAGE,EAHFA,aACA3Y,EAEE,EAFFA,KACAsY,EACE,EADFA,aACE,EACuCtF,cADvC,mBACK8F,EADL,KACqB1F,EADrB,OAEiCJ,cAFjC,mBAEK+F,EAFL,KAEkBC,EAFlB,KAGIC,EAAmBrH,uBACrB,SAAClF,GAAsC,IAAD,IAGlC,GAFAtO,YAAS,gBACTgV,IACI1G,EAAEoI,OAAOoE,QAAS,UAAAxM,EAAEoI,cAAF,mBAAUoE,aAAV,eAAiB3Z,QAAS,EAAG,CAC/C,IAAM4Z,EAAa,IAAIC,WACvBhb,YAAS,iBAAkBsO,EAAEoI,OAAOoE,MAAM,GAAG1a,MAC7C2a,EAAWE,OAAS,WACZF,EAAWnN,QACX6L,EAAmBsB,EAAWnN,OAAOsN,aAG7CH,EAAWI,WAAW7M,EAAEoI,OAAOoE,MAAM,OAG7C,CAAC9F,EAAgByE,IAGf2B,EAAyB5H,uBAAY,kBAAM6G,GAAkBnB,KAAa,CAACmB,EAAkBnB,IAEnG,OACI,gCACI,gBAACmC,GAAA,EAAD,CAAapJ,UAAU,SAASqJ,UAAU,GACtC,gBAACD,GAAA,EAAD,CAAaC,UAAU,GACnB,gBAAC1E,GAAA,EAAD,CACI3E,UAAU,sDACViD,MAAM,YACNqG,KAAM,KACNhI,QAASuG,EACT0B,UAAWpC,GAEX,qBAAGnH,UAAU,6BAAb,QACA,qCAEJ,gBAAC2E,GAAA,EAAD,CACI3E,UAAU,sDACViD,MAAM,YACNqG,KAAM,KACNhI,QAASyG,EACTwB,UAAWlC,GALf,OAQI,qBAAGrH,UAAU,6BAAb,UAGR,2BACA,2BACA,gBAACwJ,GAAA,EAAD,CAAOxJ,UAAU,sDAAsDyJ,OAAO,EAAMnI,QAAS6H,GACzF,qBAAGnJ,UAAU,uBAAuBiH,EAAa,YAAc,2BADnE,eAIA,2BACA,gBAACyC,GAAA,EAAD,CAAgB9G,OAAQ6F,EAAgB7E,OAAQb,GAC5C,gBAACc,EAAA,EAAD,CACI7D,UAAU,sDACVsJ,KAAM,KACNhF,GAAG,qBACHrB,MAAM,WAEN,qBAAGjD,UAAU,6BAAb,aANJ,UASA,gBAACgE,EAAA,EAAD,KACI,gBAACtC,EAAA,EAAD,CAAckC,QAAQ,GAClB,wBAAMU,GAAG,eAAT,sBAEI,yBAAO5N,KAAK,OAAOvI,KAAK,OAAOmW,GAAG,aAAalE,MAAO,CAAEuJ,QAAS,QAAUtF,SAAUuE,MAG7F,gBAAClH,EAAA,EAAD,CAAc4C,GAAG,eAAehD,QAASqH,GACrC,+CAIZ,2BACA,2BACA,gBAAChE,GAAA,EAAD,CACI3E,UAAU,sDACViD,MAAM,YACNqG,KAAM,KACNhI,QAAS,mBACLmG,IACAQ,MAGJ,2BACI,qBAAGjI,UAAU,6BAAb,cAEJ,qCAEJ,2BAEU,eAATrQ,EACG,gBAACgV,GAAA,EAAD,CACI3E,UAAU,sDACViD,MAAM,YACNqG,KAAM,KACNhI,QAAS,0BAAMgH,EAAa,SAE5B,2BACI,qBAAGtI,UAAU,8BAAb,aAEJ,kDAGJ,gBAAC2E,GAAA,EAAD,CACI3E,UAAU,sDACViD,MAAM,YACNqG,KAAM,KACNhI,QAAS,0BAAMgH,EAAa,gBAE5B,2BACI,qBAAGtI,UAAU,8BAAb,aAEJ,4CAIR,2BACA,gBAAC2E,GAAA,EAAD,CAAQ3E,UAAU,sDAAsDiD,MAAM,SAASqG,KAAM,KAAMhI,QAASqG,GACxG,2BACI,qBAAG3H,UAAU,8BAAb,UAEJ,sCAGR,gBAAC4J,GAAA,EAAD,CAAOtF,GAAG,eAAehB,KAAK,SAASgG,KAAK,KAAK1G,OAAQ8F,EAAa9E,OAAQ+E,GAC1E,gBAACkB,GAAA,EAAD,CAAajG,OAAQ+E,GAArB,oCACA,gBAACmB,GAAA,EAAD,KACI,gBAAC,GAAD,CAAmB/E,SAAU4D,KAEjC,gBAACoB,GAAA,EAAD,KACI,gBAACpF,GAAA,EAAD,CAAQ1B,MAAM,YAAY3B,QAASqH,GAAnC,eAyBmC,kBCpMjDqB,GAAuBC,wBAAcC,cACrCC,GAAeC,gBAAK,kBAAM,uDAC1BC,GAASD,gBAAK,kBAAM,uDACpBE,GAAcF,gBAAK,kBAAM,uDAmEhBzI,gBAAQ,SAACE,GAAD,MAAY,CAAElS,KAAM4X,YAAa1F,GAAQ0I,QAASC,YAAW3I,MAAW,CAC3F4I,kBAAmBtI,IAAQuI,cAC3BC,UAAWxI,IAAQwI,WAFRhJ,CAGZc,aA9DoB,SAAjBmI,IAAkB,GAAqD,IAAnDjb,EAAkD,EAAlDA,KAAM4a,EAA4C,EAA5CA,QAASE,EAAmC,EAAnCA,kBAAmBE,EAAgB,EAAhBA,UACxDE,qBAAU,WACNF,MACD,CAACA,IAGJ,OACI,gCACI,gBAAC,GAAD,MACA,uBAAK3K,UAAU,wBACX,sBAAIA,UAAU,QAAd,iCACA,gBAACgK,GAAD,CACIc,UAAU,EACV9K,UAAU,SACV+K,aAAa,EACbR,QAASA,EACTS,gBAAe,WAAMC,IAAc3K,SACnC4K,YAAa,CAAEC,GAAI,EAAGC,GAAI,MAC1BC,KAAM,CAAED,GAAI,GAAID,GAAI,GACpBG,OAAQ,CAAC,EAAG,GACZC,iBAAkB,CAAC,EAAG,GACtBC,UAAW,GACXC,eAlBO,SAAjBA,eAAkBC,EAA6BC,GAA9B,OAAsElB,EAAkBkB,IAmB/FC,YAAa,KACbC,QAAS,IAET,uBAAKxS,IAAKtM,IAAcK,OAAOC,KAAKC,eAAgB0S,UAAS,kBAAa8L,IAAUC,aAChF,gBAAC,EAAD,CAAevM,MAAM,WACjB,gBAAC,GAAD,QAGR,uBAAKnG,IAAKtM,IAAcK,OAAOC,KAAKE,gBAAiByS,UAAS,kBAAa8L,IAAUC,aACjF,gBAAC,EAAD,CAAevM,MAAM,uBACjB,gBAAC,WAAD,CAAUwM,SAAU,cAChB,gBAAC7B,GAAD,SAIZ,uBAAK9Q,IAAKtM,IAAcK,OAAOC,KAAKG,eAAgBwS,UAAS,kBAAa8L,IAAUC,aAChF,gBAAC,EAAD,CAAevM,MAAK,uBAAkB7P,EAAlB,YAChB,gBAAC,WAAD,CAAUqc,SAAU,cAChB,gBAAC1B,GAAD,SAIZ,uBAAKjR,IAAKtM,IAAcK,OAAOC,KAAKI,UAAWuS,UAAS,kBAAa8L,IAAUC,aAC3E,gBAAC,EAAD,CAAevM,MAAM,yBACjB,gBAAC,WAAD,CAAUwM,SAAU,cAChB,gBAAC3B,GAAD,WAMpB,gBAAC,IAAD,SAQY,QCjFJ7O,QACa,cAA7B7M,OAAOD,SAASud,UAEiB,UAA7Btd,OAAOD,SAASud,UAEhBtd,OAAOD,SAASud,SAAS7O,MAAM,2D,mDChB1B8O,GAAe,SAAfA,aAAgB3R,GACzB,GAAmB,kBAARA,EACP,MAAO,GAGX,IAAM4R,EAASvR,GAAcL,GAC7B,MAAsB,kBAAX4R,EACAA,EAGI,OAAXA,EACO,GAGJjc,KAAKC,UAAUgc,EAAQ,KAAM,IAG3BvR,GAAgB,SAAhBA,cAAiBL,GAC1B,GAAmB,kBAARA,GAAmC,KAAfA,EAAI3K,OAC/B,OAAO,KAGX,IAAMiL,EAAUN,EACXO,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAErB,IACI,OAAO5K,KAAK6K,MAAMF,GACpB,MAAOjN,GACL,OAAO2M,I,4BCtBF6R,GAAaC,aAA8BC,QAA4B,SAACC,GAAD,OAChFA,EACKC,QAAQC,IAAQ7E,aAAa,kBAAM0E,QACnCI,YACG,SAACC,GACG,MAAuB,iBAAhBA,EAAOjW,MAA2BrD,OAAOC,OAAOmZ,KAAS1Q,MAAK,SAACrE,GAAD,OAAOA,EAAEhB,OAASiW,EAAOjW,WAElG,SAACkW,EAAOD,GAAY,IAAD,QAQf,OAPIC,EAAM/Q,QACN+Q,EAAM/Q,MAAQA,GAAM+Q,EAAM/Q,MAAO8Q,IAEjCC,EAAM/V,SACN+V,EAAM/V,OAASA,GAAO+V,EAAM/V,OAAQ8V,IAGhCA,EAAOjW,MACX,IAAK,eACL,IAAK,qBACL,IAAK,eACL,IAAK,oBACL,IAAK,gBAQD,YAPAkW,EAAMC,OAASC,GACXF,EAAMC,QACN,UAAAD,EAAM/V,cAAN,eAAc5G,MAAO2c,EAAM/V,OAAO5G,KAAO,IACzC,UAAA2c,EAAM/Q,aAAN,eAAa5L,MAAO2c,EAAM/Q,MAAM5L,KAAO,GACvC0c,GACA,UAAAC,EAAM/Q,aAAN,eAAalM,MAAOid,EAAM/Q,MAAMlM,KAAO,QAG/C,IAAK,4BACyB,IAAD,EAAzB,aAAIid,EAAMC,cAAV,aAAI,EAAc5U,MACd2U,EAAMC,OAAO5U,MAAM8U,cAAc,UAACH,EAAMC,OAAO5U,aAAd,aAAC,EAAoB8U,aAE1D,OAEJ,IAAK,8BAID,YAHIH,EAAMC,SACND,EAAMC,OAAOG,YAAcL,EAAO9e,UAG1C,IAAK,4BAMD,YALI+e,EAAMC,SACND,EAAMC,OAAStR,GAAOqR,EAAMC,OAAQF,EAAO9e,SAC3C+e,EAAMC,OAAOI,WAAaN,EAAO9e,QACjC+e,EAAMC,OAAOG,YAAc,gBAM9CN,YACG,SAACQ,GAAD,OAAgC,KAChC,SAACN,EAAOD,GACe,IAAD,EAAdC,EAAMC,SACND,EAAMC,OAAO5U,MAAQA,GAAK,UAAC2U,EAAMC,cAAP,aAAC,EAAc5U,MAAO0U,UAMvD9V,GAASwV,aAAiC,IAAI,SAACE,GAAD,OACvDA,EACKC,QAAQC,IAAQzF,cAAc,SAACnF,EAAO8K,GACnC9K,EAAM5R,MAAY,OAAL4R,QAAK,IAALA,OAAA,EAAAA,EAAOoF,YAAaiF,GAAaS,EAAO9e,QAAQ+B,QAAU+c,EAAO9e,WAEjF2e,QAAQC,IAAQpE,wBAAwB,SAACxG,EAAO8K,GAAY,IAAD,IACxD9K,EAAM5R,KAAO0c,EAAO9e,QAAUqe,GAAY,OAACrK,QAAD,IAACA,GAAD,UAACA,EAAO5R,YAAR,aAAC,EAAaL,QAA3C,iBAAqDiS,QAArD,IAAqDA,OAArD,EAAqDA,EAAO5R,YAA5D,QAAoE,GACjF4R,EAAMoF,WAAa0F,EAAO9e,cAIzBV,GAAekf,aAAuCC,QAAqC,SAACC,GAAD,OACpGA,EACKC,QAAQC,IAAQ/E,aAAa,kBAAM4E,UACnCE,QAAQC,IAAQrK,aAAa,SAACP,EAAO8K,GAClC9K,EAAMsL,YAAcR,EAAO9e,WAE9B2e,QAAQC,IAAQnK,mBAAmB,SAACT,EAAO8K,GACxC9K,EAAMuL,YAAcT,EAAO9e,WAE9B2e,QAAQC,IAAQ/B,eAAe,SAAC7I,EAAO8K,GACpC9K,EAAM0I,QAAUoC,EAAO9e,cAGtBgO,GAAQwQ,aAAgC,IAAI,SAACE,GAAD,OACrDA,EACKC,QAAQC,IAAQY,aAAa,SAACxL,EAAO8K,GAClC9K,EAAM5R,KAAO0c,EAAO9e,WAEvB2e,QAAQC,IAAQlE,iBAAiB,SAAC1G,EAAO8K,GACtC9K,EAAMlS,KAAOgd,EAAO9e,QACpBgU,EAAM5R,KACiB,QAAnB0c,EAAO9e,QACDyf,GAAiBzR,MAAM5L,KACvB,8IAIT6c,GAAgB,SAAhBA,cACTS,EACA9d,EACAC,EACAid,EACAhd,GACE,IAAD,IACKE,EAAaL,aAAeC,EAAcC,EAAaC,GAE7D,GAAIE,aAAsBE,MACtB,MAAO,CACHid,YAAa,UACbhd,IAAK,KACLwd,QAAS,EACTP,WAAY,GACZ7P,OAAO,EACPqQ,aAAc5d,EAAW7B,QACzBiK,MAAO,CACHX,SAAS,EACTyV,aAAa,EACbW,iBAAkB,GAClBC,QAAS,GACTC,QAAS,KAhBpB,aAqBqB/d,QArBrB,IAqBqBA,IAAc,CAAEI,KAAM,KAAMD,IAAK,MAA/CC,EArBP,EAqBOA,KAAMD,EArBb,EAqBaA,IACV0d,EAAmB,IAAIrW,MAC3B,GAAIA,MAAMC,QAAQtH,GAAM,CACpB,IAAM6d,EAAoC,GAC1C7d,EAAIsI,SAAQ,SAACwV,GACC,OAANA,QAAoBxe,IAANwe,GAAoBza,OAAO0a,GAAGD,EAAG,KAAQzW,MAAMC,QAAQwW,KACnDA,EAAkB,kBAANA,EAAiBza,OAAOhG,KAAKygB,GAAK,CAACpgB,MAAqB,IAC5E4K,SAAQ,SAACe,GAAD,OAAUwU,EAAOxU,GAAOA,QAGlDqU,EAAmBra,OAAOhG,KAAKwgB,GAC1BtS,QAAO,SAAClC,GAAD,OAASA,GAAsB,kBAARA,GAAmC,KAAfA,EAAIzJ,UACtDoe,MAAK,SAACC,EAAIC,GAAL,OAAWD,EAAGjS,cAAcmS,cAAcD,EAAElS,kBAE1D,IAAM+Q,EACFQ,GAAiBA,EAActV,OAAyB,8BAAhB0U,EAAOjW,KACzC6W,IAAkBA,EAActV,MAAM8U,eACtCQ,IAAiBA,EAActV,QAC/BsV,EAActV,MAAM8U,YAG1BC,EAA6B3V,MAAMC,QAAQtH,GAAO,QAAU,UAKhE,MAHoB,gCAAhB2c,EAAOjW,OACPsW,EAAcL,EAAO9e,SAElB,CACHmf,cACAhd,IAAKA,EACLwd,QAASvd,EAAOA,EAAKf,OAAS,EAC9B+d,WAAY,GACZ7P,OAAO,EACPnF,MAAO,CACHX,QAASD,MAAMC,QAAQtH,GACvB+c,cACAW,mBACAC,QAASD,EACTE,QAAO,iBAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAetV,aAAjB,aAAE,EAAsB2V,eAAxB,QAAmC,MAKhD3V,GAAQoU,aAAsCC,OAA2BO,OAAO5U,OAAiC,SAACsU,GAAD,OACnHA,EACKC,QAAQC,IAAQ2B,oBAAoB,SAACvM,EAAO8K,GAGzC,GAFA9K,EAAM6L,iBAAmBf,EAAO9e,QAE3BgU,EAAM+L,QAGX,IAAK,IAAI9U,EAAI,EAAGA,EAAI+I,EAAM+L,QAAQ1e,OAAQ4J,IAAK,CAC3C,IAAMuV,EAAUxM,EAAM+L,QAAQ9U,GACzB6T,EAAO9e,QAAQmQ,SAASqQ,IACzBxM,EAAM+L,QAAQU,OAAOxV,EAAG,OAInC0T,QAAQC,IAAQ8B,oBAAoB,SAAC1M,EAAO8K,GACzC9K,EAAM+L,QAAUjB,EAAO9e,QAClB0N,QAAO,SAACiT,GAAD,OAAQ3M,GAASA,EAAM6L,mBAA4D,IAAxC7L,EAAM6L,iBAAiBzP,QAAQuQ,MACjFjT,QAAO,SAACiT,GAAD,MAAe,gBAAPA,WAoD1BjT,GAAS,SAATA,OAAUsG,EAA0BoL,GACtC,IAAKA,GAAoC,KAAtBA,EAAWrd,SAAkBiS,EAC5C,OAAO,6BAAKA,GAAZ,IAAmBzE,OAAO,IAF+B,MAhDrC,SAAfqR,aAAgBC,EAAUzB,GACnC,GAAmB,kBAARyB,GAAmC,kBAARA,EAClC,MAAO,CAAEtR,OAAO,EAAOuR,YAAaD,GAGxC,GAAmB,kBAARA,EACP,OAAIE,aAAmBF,EAAKzB,GACjB,CAAE7P,OAAO,EAAMuR,YAAaD,GAEhC,CAAEtR,OAAO,EAAOuR,YAAaD,GAExC,IAX0D,EAWpD1e,EAAkCqH,MAAMC,QAAQoX,GAAd,aAAyBA,GAAzB,gBAAqCA,GAEvErhB,EAAOgK,MAAMC,QAAQtH,GACrBqH,MAAMmB,KAAK,CAAEtJ,OAAQc,EAAId,SAAU,SAACwc,EAAGmD,GAAJ,OAAUA,KAC7Cxb,OAAOyb,oBAAoB9e,GAAKuL,QAAO,SAAC3C,GAAD,OAAkBA,KAE3D+C,GAAS,EAjB6C,eAmB/BtO,GAnB+B,IAmB1D,2BAAiC,CAAC,IAAvBuL,EAAsB,QACvBmW,EAA+C,kBAAjBnW,GAA6BgW,aAAmBhW,EAAcqU,GAClG,GAAI8B,EACApT,GAAS,MADb,CAIA,IAN6B,EAOE8S,aADjBze,EAAI4I,GACiCqU,GAA3C7P,EAPqB,EAOrBA,MAAOuR,EAPc,EAOdA,YACXI,GAAwB3R,GACxBzB,GAAS,EACT3L,EAAI4I,GAAgB+V,GAEhBtX,MAAMC,QAAQtH,IAAgC,kBAAjB4I,EAC7B5I,EAAIse,OAAO1V,EAAc,UAElB5I,EAAI4I,KAlCmC,8BA6C1D,OAPK+C,IACItE,MAAMC,QAAQtH,GAGfA,EAAId,OAAS,EAFb7B,EAAKiL,SAAQ,SAACM,GAAD,cAA0C5I,EAAI4I,OAK5D,CAAEwE,MAAOzB,EAAQgT,YAAa3e,GAONye,CAAa5M,EAAM7R,IAAKid,GAA/C0B,EAJqD,EAIrDA,YAAavR,EAJwC,EAIxCA,MACrB,OAAIA,EACO,6BAAKyE,GAAZ,IAAmB7R,IAAK2e,EAAavR,UAGlCyE,GAkBImN,GARMC,aAAgB,CACjCC,IAAKC,MARe,SAAXC,WAAoF,IAAxEvN,EAAuE,uDAA/CyK,OAA4BK,EAAmB,uCAC5F,MAAoB,iBAAhBA,EAAOjW,KACA0V,GAAWE,OAA4BK,GAE3CP,GAAWvK,EAAO8K,KAID,CACpB0C,SAAU,WACVC,SAAU,WACVtY,MAAOjK,IAAcC,YAEzBG,kB,8BChQEoiB,GAAO,uCAAG,iBAAOlW,EAAa9D,GAApB,SAAAwQ,EAAA,wFAEFyJ,KAAYC,QAAQpW,EAAK9D,GAFvB,sDAIRma,IAAMC,KAAN,6BAAiCtW,EAAjC,+BAJQ,8DAAH,gBAAPkW,QAAO,wCAQPK,GAAa,SAAbA,WAAcvW,GAChB,OAAQA,GACJ,KAAKtM,IAAcE,WAAWC,SAC1B,OAAO2iB,eACX,KAAK9iB,IAAcE,WAAWE,aAC1B,OAAO2iB,eACX,QACI,MAAM,IAAI/f,MAAJ,8BAAiCsJ,MAI7C0W,GAAY,uCAAG,kBAAO1W,GAAP,iBAAA0M,EAAA,uEACXiK,EAAUC,aAAM,GAAIL,GAAWvW,IADpB,kBAGYmW,KAAYU,QAAoC7W,GAH5D,cAGP8W,EAHO,yBAINF,aAAM,CAAED,WAAH,OAAcG,QAAd,IAAcA,IAAc,KAJ3B,gCAMbxiB,YAAS,EAAD,IANK,iCASV,CAAEyiB,OAAQ,GAAIC,KAAM,GAAIL,QAAS,KATvB,gEAAH,gBAAZD,aAAY,sCAWZO,GAAgB,uCAAG,kBAAOjX,GAAP,iBAAA0M,EAAA,uEACflE,EAAQ+N,GAAWvW,GADJ,kBAGQmW,KAAYU,QAA2B7W,GAH/C,cAGX8W,EAHW,yBAIVF,aAAMpO,EAAD,OAAQsO,QAAR,IAAQA,IAAc,KAJjB,gCAMjBxiB,YAAS,EAAD,IANS,iCASd,IATc,gEAAH,gBAAhB2iB,iBAAgB,sCAmBPC,GAPK,CAChBC,YA7CgB,SAAdA,cAAc,OAA2CT,GAAahjB,IAAcE,WAAWC,WA8CjGujB,gBA/CoB,SAAlBA,kBAAkB,OAAkCH,GAAiBvjB,IAAcE,WAAWE,eAgDhGujB,gBAxDoB,SAAlBA,gBAAmBC,GAChBpB,GAAQxiB,IAAcE,WAAWC,SAAUyjB,IAwDhDC,oBArDwB,SAAtBA,oBAAuBzjB,GACpBoiB,GAAQxiB,IAAcE,WAAWE,aAAcA,KCN3C0jB,GAAc,uCAAG,gDAAA9K,EAAA,+EACHwK,GAAYC,cADT,cACpBtjB,EADoB,gBAEMqjB,GAAYE,kBAFlB,cAEpBK,EAFoB,OAGpBC,EAAiB,CACnB7B,IAAK,CACDmB,KAAI,UAAEnjB,EAASmjB,YAAX,QAAmB,GACvBL,QAAS9iB,EAAS8iB,QAClBI,OAAM,UAAEljB,EAASkjB,cAAX,QAAqB,IAE/BjjB,aAAc2jB,GAGZE,EAASC,wBAAa,CACxBC,UAAW,4BAAMC,GACjB/iB,UAAU,IAERgjB,EAhBoB,uBAiBnBC,aAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACpP,IAAQyF,YAAYlR,UAnBvB,CAsBtBsa,KAGEQ,EAAQC,aAAK,CACfC,QAAS1C,GACT2C,UAAUR,EACVJ,iBACAK,gBAGEQ,WAAU,WACZrB,GAAYG,gBAAgBc,EAAMK,WAAW3C,KAC7CqB,GAAYK,oBAAoBY,EAAMK,WAAW1kB,iBAlC3B,kBAqCnBqkB,GArCmB,kDAAH,gBAAdX,iBAAc,oCCMZ,uCAAG,oCAAA9K,EAAA,+EACM8K,KADN,cACRW,EADQ,gBAESM,QAAQC,IAAI,CAC/B,4CACApR,EAAuBoB,YAASyP,EAAMK,eAJ5B,OAERG,EAFQ,OAOGA,EAAS,GACjBC,OACL,gBAAC,IAAD,CAAUT,MAAOA,GACb,gBAAC,GAAD,OAEJU,SAASC,eAAe,SL+ExB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAChCA,EAAaC,gBK7FP,iDAAH,gBAATC,YAAS,mCAiBfA,GACKH,MAAK,kBAAMxkB,YAAS,aACpB4kB,OAAM,SAACtW,GAAD,OAAO1O,YAAS,iBAAkB0O,O,gCChC7C,0HAsDawT,EAAqB,SAArBA,qBAAqB,OAAOvC,GAE5BwC,EAA8B,SAA9BA,8BAA8B,MACtC,CACG3C,YAAa,QACbC,YAAa,SACbwF,WAAW,EACXrI,QAAS,CACLY,GAAI,CACA,CAAErS,EAAG/L,IAAcK,OAAOC,KAAKC,eAAgBoK,EAAG,EAAGmb,EAAG,EAAGC,EAAG,EAAGhM,EAAG,GAAIiM,KAAM,EAAGC,KAAM,IACvF,CAAEla,EAAG/L,IAAcK,OAAOC,KAAKE,gBAAiBmK,EAAG,EAAGmb,EAAG,GAAIC,EAAG,EAAGhM,EAAG,EAAGiM,KAAM,EAAGC,KAAM,GACxF,CAAEla,EAAG/L,IAAcK,OAAOC,KAAKG,eAAgBkK,EAAG,EAAGmb,EAAG,GAAIC,EAAG,EAAGhM,EAAG,EAAGiM,KAAM,EAAGC,KAAM,GACvF,CAAEla,EAAG/L,IAAcK,OAAOC,KAAKI,UAAWiK,EAAG,EAAGmb,EAAG,GAAIC,EAAG,EAAGhM,EAAG,GAAIiM,KAAM,EAAGC,KAAM,KAEvF5H,GAAI,CACA,CAAEtS,EAAG/L,IAAcK,OAAOC,KAAKC,eAAgBoK,EAAG,GAAImb,EAAG,EAAGC,EAAG,EAAGhM,EAAG,GAAIiM,KAAM,EAAGC,KAAM,IACxF,CAAEla,EAAG/L,IAAcK,OAAOC,KAAKE,gBAAiBmK,EAAG,EAAGmb,EAAG,EAAGC,EAAG,EAAGhM,EAAG,GAAIiM,KAAM,EAAGC,KAAM,IACxF,CAAEla,EAAG/L,IAAcK,OAAOC,KAAKG,eAAgBkK,EAAG,GAAImb,EAAG,EAAGC,EAAG,EAAGhM,EAAG,GAAIiM,KAAM,EAAGC,KAAM,IACxF,CAAEla,EAAG/L,IAAcK,OAAOC,KAAKI,UAAWiK,EAAG,EAAGmb,EAAG,GAAIC,EAAG,GAAIhM,EAAG,GAAIiM,KAAM,GAAIC,KAAM,QAKxFC,EAAa,CACtBpc,OAAQ,CAAE5G,KAAM,GAAIgX,YAAY,GAChCpL,MAAO,CAAE5L,KAAM,GAAIN,KAAM,OACzBkd,OAAQ,CACJzP,OAAO,EACPpN,IAAK,GACLwd,QAAS,EACTP,WAAY,GACZD,YAAa,UACb/U,MAAO,CACHX,SAAS,EACTqW,QAAS,GACTD,iBAAkB,GAClBX,aAAa,EACba,QAAS,O,gyBCzFfsF,EAAmB,SAAnBA,iBAAiCC,GACnC,OAAKA,EAIE,YAAIA,GAHA,IAMFC,EAAwB,SAAxBA,sBAAyBvR,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOqN,WAA7B,iBAAsB,EAAYc,eAAlC,iBAAsB,EAAqBnD,cAA3C,aAAsB,EAA6BY,oBAAnD,QAAmE,IAC3F4F,EAAmB,SAAnBA,iBAAoBxR,GAAD,qBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOqN,WAAR,iBAAC,EAAYc,eAAb,iBAAC,EAAqBnD,cAAtB,iBAAC,EAA6B5U,aAA9B,aAAC,EAAoCX,UAC/Egc,EAAqB,SAArBA,mBAAsBzR,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOqN,WAA7B,iBAAsB,EAAYc,eAAlC,iBAAsB,EAAqBnD,cAA3C,aAAsB,EAA6BG,mBAAnD,QAAmE,WACxFuG,EAAkB,SAAlBA,gBAAmB1R,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOqN,WAA7B,iBAAsB,EAAYc,eAAlC,iBAAsB,EAAqBnD,cAA3C,aAAsB,EAA6B7c,WAAnD,QAA0D,IAC5EwjB,EAAsB,SAAtBA,oBAAuB3R,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOqN,WAA7B,iBAAsB,EAAYc,eAAlC,iBAAsB,EAAqBnD,cAA3C,aAAsB,EAA6BW,eAAnD,QAA8D,GACpFiG,EAAsB,SAAtBA,oBAAuB5R,GAAD,wBAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOqN,WAA7B,iBAAsB,EAAYc,eAAlC,iBAAsB,EAAqBnD,cAA3C,aAAsB,EAA6BI,YACzEyG,EAAuB,SAAvBA,qBAAwB7R,GAAD,mBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOqN,WAAR,iBAAC,EAAYc,eAAb,iBAAC,EAAqBnD,cAAtB,aAAC,EAA6BzP,QAC5EuW,EAA4B,SAA5BA,0BAA6B9R,GAAD,qBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOqN,WAAR,iBAAC,EAAYc,eAAb,iBAAC,EAAqBnD,cAAtB,iBAAC,EAA6B5U,aAA9B,aAAC,EAAoC8U,cAExFhL,EAAW,SAAXA,SAAYF,GAAD,gCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAO1U,oBAA7B,aAAsB,EAAqBggB,mBAA3C,QAA0D2C,cAA8B3C,aACnGlL,EAAiB,SAAjBA,eAAkBJ,GAAD,gCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAO1U,oBAA7B,aAAsB,EAAqBigB,mBAA3C,QAA0D0C,cAA8B1C,aACzG5C,EAAa,SAAbA,WAAc3I,GAAD,gCACrBA,QADqB,IACrBA,GADqB,UACrBA,EAAO1U,oBADc,aACrB,EAAqBod,eADA,QACWuF,cAA8BvF,SAEtDqJ,EAAsB,SAAtBA,oBAAuB/R,GAAD,mBAAsBqR,EAAgB,OAACrR,QAAD,IAACA,GAAD,UAACA,EAAOqN,WAAR,iBAAC,EAAYc,eAAb,iBAAC,EAAqBnD,cAAtB,iBAAC,EAA6B5U,aAA9B,aAAC,EAAoCyV,mBACjGmG,EAAiB,SAAjBA,eAAkBhS,GAAD,uBAC1BxK,MAAMC,QAAN,OAAcuK,QAAd,IAAcA,GAAd,UAAcA,EAAOqN,WAArB,iBAAc,EAAYc,eAA1B,iBAAc,EAAqBnD,cAAnC,aAAc,EAA6B7c,KAAOkjB,EAAgB,OAACrR,QAAD,IAACA,GAAD,UAACA,EAAOqN,WAAR,iBAAC,EAAYc,eAAb,iBAAC,EAAqBnD,cAAtB,aAAC,EAA6B7c,KAAO,IAC9F8jB,EAAa,SAAbA,WAAcjS,GAAD,mBAAsBqR,EAAgB,OAACrR,QAAD,IAACA,GAAD,UAACA,EAAOqN,WAAR,iBAAC,EAAYc,eAAb,iBAAC,EAAqBnD,cAAtB,iBAAC,EAA6B5U,aAA9B,aAAC,EAAoC0V,UACxFoG,EAAa,SAAbA,WAAclS,GAAD,mBAAsBqR,EAAgB,OAACrR,QAAD,IAACA,GAAD,UAACA,EAAOqN,WAAR,iBAAC,EAAYc,eAAb,iBAAC,EAAqBnD,cAAtB,iBAAC,EAA6B5U,aAA9B,aAAC,EAAoC2V,UAExFoG,EAAe,SAAfA,aAAgBnS,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOqN,WAA7B,iBAAsB,EAAYc,eAAlC,iBAAsB,EAAqBnU,aAA3C,aAAsB,EAA4B5L,YAAlD,QAA0D,IACzEsX,EAAe,SAAfA,aAAgB1F,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOqN,WAA7B,iBAAsB,EAAYc,eAAlC,iBAAsB,EAAqBnU,aAA3C,aAAsB,EAA4BlM,YAAlD,QAA2D,OAC1EskB,EAAgB,SAAhBA,cAAiBpS,GAAD,oCAAsBA,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAOqN,WAA7B,iBAAsB,EAAYc,eAAlC,iBAAsB,EAAqBnZ,cAA3C,aAAsB,EAA6B5G,YAAnD,QAA2D,IAC3EiX,EAAsB,SAAtBA,oBAAuBrF,GAAD,mBAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOqN,WAAR,iBAAC,EAAYc,eAAb,iBAAC,EAAqBnZ,cAAtB,aAAC,EAA6BoQ,aAC3EK,EAAa,SAAbA,WAAczF,GAAD,eAAqD,KAA1B,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOqN,WAAP,mBAAYkB,cAAZ,eAAoBlhB,SACvDkY,EAAa,SAAbA,WAAcvF,GAAD,iBAAsB,iBAACA,QAAD,IAACA,GAAD,UAACA,EAAOqN,WAAR,iBAAC,EAAYmB,YAAb,aAAC,EAAkBnhB,cAAnB,QAA6B,GAAK,GACrEglB,EAAe,SAAfA,aAAgBrS,GAAD,eAAuB,OAACA,QAAD,IAACA,GAAD,UAACA,EAAO1U,oBAAR,aAAC,EAAqBylB,a,uHClC5DjQ,EAAiB,SAAjBA,iBAAuE,IAArDwR,EAAoD,0DACrD3O,mBAAS2O,GAD4C,mBACxE5e,EADwE,KACjE6e,EADiE,KAE/E,MAAO,CAAC7e,EAAO,kBAAM6e,GAAU7e,MAKtB0P,EAAsB,SAAtBA,oBAAuBoP,GAA4F,IAAD,EACjG7O,mBAAS6O,GADwF,mBACpH9e,EADoH,KAC7G6e,EAD6G,KAY3H,MAAO,CAAC7e,EATagM,uBACjB,SAAC+S,GACOA,GAASA,EAAM7P,QACf2P,EAASE,EAAM7P,OAAOlP,SAG9B,CAAC6e,O,+HCPHG,E,4PACc1S,MAAe,CAC3BjU,WAAO0B,G,8FAGc1B,EAAqB4mB,GAAgB,IAAD,OACzDvlB,KAAKwlB,SAAS,CAAE7mB,MAAOA,GAAS,IAAImC,MAZtB,6CAY8C,kBAAM,EAAK2kB,OAAOF,Q,sCAGjE,IACL/U,EAAaxQ,KAAKiS,MAAlBzB,SAGR,OAFkBxQ,KAAK4S,MAAfjU,MAGG,oDAGJ6R,I,oCAGI+U,GACX7mB,YAAS,mBAAoBsB,KAAK4S,MAAMjU,OACxCD,YAAS,cAAe6mB,GACxB9E,IAAM9hB,MAAMsC,KAAKC,UAAUqkB,GAAO,CAAEG,SAAU,eAAgBC,iBAAiB,EAAMC,WAAW,Q,eAvB5EC,aA4BftS,EAAoB,SAApBA,kBAAmCuS,GAM5C,OAL0B,SAApBC,kBAAqB9T,GAAD,OACtB,gBAACqT,EAAD,KACI,gBAACQ,EAAY7T,O,gIC9BnB+T,EAAU,CAEZC,sBAAsB,EACtBC,YAAY,EACZC,iBAAiB,EACjBC,iBAAiB,EACjBC,wBAAwB,EACxBC,kBAAkB,EAElBC,iBAbqB,SAAnBA,iBAAoBC,GACtBvnB,YAAQunB,EAAIC,WAAYD,EAAIrnB,SAAUqnB,EAAIlZ,OAa1CoZ,gBAAgB,EAEhBC,UAAW,cACXC,SAAS,EAGTC,SAAS,EACTC,WAAW,GAGCznB,eAAgB,IAAI0nB,IAAQf,GA6CrC,SAASxS,gBAAmBqS,EAAmC3mB,GAqBlE,OApBiB,SAAX8nB,SAAY,GAAkB,IAAb/U,EAAY,oBAc/B,OACI,gBAAC,WAAD,CAAgBoD,GAAE,eAAUnW,GAAQ+nB,SAdG,SAArCA,SAAsC5R,EAAI6R,EAAOC,EAAgBC,EAAcC,EAAWC,EAAYC,GACxGtoB,YAAQC,EAAMioB,EAAgB,CAC1B1f,KAAM,mBACN4N,KACA6R,QACAC,iBACAC,eACAC,YACAC,aACAC,mBAMA,gBAAC1B,EAAe5T,O,gCC9FhC,wIAAO,IAAMiF,EAAiB,SAAjBA,eAAkBnW,GAC3B,OAAIqH,MAAMC,QAAQtH,GACPA,EAAIyH,KAAI,SAAC4E,GAAD,OAAO8J,eAAe9J,MAAIzE,KAAK,KAE/B,kBAAR5H,EACAE,KAAKC,UAAUH,GAEd,OAARA,QAAwBV,IAARU,EACRA,EAAYiZ,WAGjB,IAGEwN,EAAY,SAAZA,UAAalc,EAAgCmc,GACtD,MAAmB,kBAARnc,EACA,KAEPA,EAAIrL,QAAUwnB,EACPnc,EAEL,GAAN,OAAUA,EAAIC,UAAU,EAAGkc,GAA3B,QAGS9H,EAAqB,SAArBA,mBAAsBrU,EAAaoc,GAC5C,SAAKpc,IAAQoc,MAGTpc,EAAIqc,oBAAoB5Y,SAAS2Y,EAAKC,sBAOxCC,EAAQ,CAAC,IAAK,KAAM,KAAM,MAEnBC,EAAmB,SAAnBA,iBAAoBvhB,GAC7B,IAAKwhB,OAAOC,SAASzhB,GACjB,MAAM,IAAI0hB,UAAJ,+CAAsD1hB,EAAtD,aAAgEA,IAG1E,IAAM2hB,EAAa3hB,EAAQ,EACrB4hB,EAASD,EAAa,IAAM,GAIlC,GAHIA,IACA3hB,GAASA,GAETA,EAAQ,EAER,OAAO4hB,EADW5hB,EAAM0T,WACI,KAEhC,IAAMmO,EAAWC,KAAKC,IAAID,KAAKE,MAAMF,KAAKG,MAAMjiB,GAAS,GAAIshB,EAAM3nB,OAAS,GAI5E,OAAOioB,GAHP5hB,EAAQwhB,QAAQxhB,EAAQ8hB,KAAKI,IAAI,KAAML,IAAWM,YAAY,KACnCzO,WAEI,IADlB4N,EAAMO,K,+0ICrDvB5mB,EAAOC,QAAU,CAAC,UAAY,iCAAiC,QAAU,iC,mBCAzED,EAAOC,QAAU,CAAC,WAAa,0B,gCCD/B,kCAAO,IAAMnC,EAAc,SAAdA,cAAc,OAAMK,OAAOgpB,Y,sFCAxC,WAIMxV,EAAU,CACZuF,YAAakQ,YAAa,gBAC1BhQ,YAAagQ,YAAa,gBAC1BjN,UAAWiN,YAAa,iBACxB5Q,aAAc4Q,YAA2C,sBACzDvP,uBAAwBuP,YAAkD,4BAC1ErP,gBAAiBqP,YAA6C,qBAC9DvK,YAAauK,YAAqC,gBAClDC,yBAA0BD,YAAqD,+BAC/EE,uBAAwBF,YAAa,6BACrCxJ,mBAAoBwJ,YAA+C,wBACnErJ,mBAAoBqJ,YAAgD,yBACpEG,iBAAkBH,YAAkD,6BACpE9P,KAAM8P,YAAa,YACnB5P,KAAM4P,YAAa,YACnBxV,YAAawV,YAAiE,sCAC9EtV,kBAAmBsV,YAAgE,sCACnFlN,cAAekN,YAAuE,kCAK3EzV,Q","file":"static/js/main.c9429cab.chunk.js","sourcesContent":["export const configuration = {\n    limitUndo: 9999,\n    storageKey: {\n        appState: 'keyrier-json.app.state',\n        userSettings: 'keyrier-json.user.settings.v1',\n    },\n    layout: {\n        keys: {\n            lateralMenuKey: 'LateralMenu',\n            sourceEditorKey: 'SourceEditor',\n            queryEditorKey: 'QueryEditor',\n            outputKey: 'Output',\n        },\n    },\n} as const\n","export const arrayElementName = 'arrayElement'\n","import { isDebugMode } from 'core/misc/debug'\nimport { getAppVersion } from 'core/misc/utils'\n\nexport const logError = (error: string | Error, payload?: any) => {\n    console.error('Keyrier', error)\n    if (typeof payload !== 'undefined') {\n        console.error(payload)\n    }\n}\n\nexport const logWarning = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.warn('Keyrier', message)\n    } else console.warn('Keyrier', message, payload)\n}\n\nexport const logDebug = (message: string, payload?: any) => {\n    if (typeof payload === 'undefined') {\n        console.debug('Keyrier', message)\n    } else console.debug('Keyrier', message, payload)\n}\n\nexport const logPerf = (name: string, duration?: number, customProperties?: any) => {\n    if (isDebugMode()) {\n        const appVersion = getAppVersion()\n        const payload = { name, duration, appVersion, ...customProperties, location: window.location.href }\n        logEvents.enqueue(payload)\n    }\n}\n\nclass Queue<T = any> {\n    // initialise the queue and offset\n    private queue: T[] = []\n    private offset = 0\n\n    // Returns the length of the queue.\n    public getLength() {\n        return this.queue.length - this.offset\n    }\n\n    // Returns true if the queue is empty, and false otherwise.\n    public isEmpty() {\n        return this.queue.length === 0\n    }\n\n    /* Enqueues the specified item. The parameter is:\n     *\n     * item - the item to enqueue\n     */\n    public enqueue(item: T) {\n        this.queue.push(item)\n    }\n\n    /* Dequeues an item and returns it. If the queue is empty, the value\n     * 'undefined' is returned.\n     */\n    public dequeue() {\n        // if the queue is empty, return immediately\n        if (this.queue.length === 0) {\n            return undefined\n        }\n\n        // store the item at the front of the queue\n        const item = this.queue[this.offset]\n\n        // increment the offset and remove the free space if necessary\n        if (++this.offset * 2 >= this.queue.length) {\n            this.queue = this.queue.slice(this.offset)\n            this.offset = 0\n        }\n\n        // return the dequeued item\n        return item\n    }\n\n    /* Returns the item at the front of the queue (without dequeuing it). If the\n     * queue is empty then undefined is returned.\n     */\n    public peek() {\n        return this.queue.length > 0 ? this.queue[this.offset] : undefined\n    }\n}\n\nexport const logEvents = new Queue()\n;(window as any).__PERF_EVENT_LOGS = logEvents\n","import { version } from '../../../package.json'\n\nexport const getAppVersion = () => version\n","import { sqlQuery as sqlEvaluation } from '@keyrier/core'\n\nimport { QueryMode } from '../state/State'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (!sourceString || !queryString) {\n        return null\n    }\n\n    if (sourceString.trim() === '') {\n        return null\n    }\n\n    if (queryString.trim() === '') {\n        return null\n    }\n\n    const evaluation = evaluate(sourceString, queryString, mode)\n    if (evaluation instanceof Error) {\n        return evaluation\n    }\n    return { obj: evaluation, text: JSON.stringify(evaluation) }\n}\n\nconst evaluate = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (mode === 'Javascript') {\n        return jsEvaluation(sourceString, queryString)\n    } else if (mode === 'SQL') {\n        return sqlEvaluation(sourceString, queryString)\n    }\n    return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string): null | undefined | unknown | Error => {\n    try {\n        const code = `\n      \n        const data = eval(${sourceString})\n        ${queryString}\n      `\n        // eslint-disable-next-line\n        return eval(code) // DANGEROUS\n    } catch (error) {\n        return error\n    }\n}\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./core.cjs.production.min.js')\n} else {\n  module.exports = require('./core.cjs.development.js')\n}\n","export const operators = {\n    modulo: '%',\n    or: 'or',\n    and: 'and',\n    equal: '=',\n    is: 'is',\n    notEqual: '!=',\n    isNot: 'is not',\n    greaterThan: '>',\n    greaterOrEqualThan: '>=',\n    lessThan: '<',\n    lessOrEqualthan: '<=',\n    in: 'in',\n    like: 'like',\n    notLike: 'not like',\n} as const\n","import { createToken, Lexer } from 'chevrotain'\n\nimport { operators } from './operators'\n\nconst stringTokenCharacterRegexString = 'a-zA-Z0-9%\\\\s-&(){}\\\\[\\\\]$\\\\*!\\\\\\\\@/,;:=ë#+-<>?^_'\nconst stringTokenRegex = new RegExp(`(\"[${stringTokenCharacterRegexString}']*\")|('[${stringTokenCharacterRegexString}\"]*')`)\n\nexport const Identifier = createToken({ name: 'Identifier', pattern: /[a-zA-Z_]+[\\w./]*/ })\nexport const WhiteSpace = createToken({ name: 'WhiteSpace', pattern: /\\s+/, group: Lexer.SKIPPED })\nexport const Comment = createToken({ name: 'Comment', pattern: /--.*/, group: Lexer.SKIPPED })\nexport const Select = createToken({ name: 'Select', pattern: /SELECT/i, longer_alt: Identifier })\nexport const From = createToken({ name: 'From', pattern: /FROM/i, longer_alt: Identifier })\nexport const Where = createToken({ name: 'Where', pattern: /WHERE/i, longer_alt: Identifier })\nexport const Comma = createToken({ name: 'Comma', pattern: /,/ })\nexport const Like = createToken({ name: 'Like', pattern: /like/i, longer_alt: Identifier, label: operators.like })\nexport const Limit = createToken({ name: 'Limit', pattern: /limit/i, longer_alt: Identifier })\nexport const Null = createToken({ name: 'Null', pattern: /NULL/i, longer_alt: Identifier })\nexport const In = createToken({ name: 'In', pattern: /in/i, longer_alt: Identifier, label: operators.in })\nexport const On = createToken({ name: 'On', pattern: /on/i, longer_alt: Identifier })\nexport const IsNot = createToken({\n    name: 'IsNot',\n    pattern: /is\\s+not/i,\n    longer_alt: Identifier,\n    label: operators.isNot,\n})\nexport const Is = createToken({ name: 'Is', pattern: /is/i, longer_alt: Identifier, label: operators.is })\nexport const NotLike = createToken({ name: 'NotLike', pattern: /NOT\\s+LIKE/i, label: operators.notLike })\nexport const OrderBy = createToken({ name: 'OrderBy', pattern: /ORDER\\s+BY+/i })\nexport const InnerJoin = createToken({ name: 'InnerJoin', pattern: /INNER\\s+JOIN/i })\nexport const OrderByDirection = createToken({\n    name: 'OrderByDirection',\n    pattern: /(ASC|DESC)/i,\n    longer_alt: Identifier,\n})\nexport const As = createToken({ name: 'As', pattern: /AS/i, longer_alt: Identifier })\nexport const OrAnd = createToken({ name: 'OrAnd', pattern: /(AND|OR)/i, longer_alt: Identifier })\nexport const Star = createToken({ name: 'Star', pattern: /\\*/ })\nexport const Integer = createToken({ name: 'Integer', pattern: /0|[1-9]\\d*/ })\nexport const StringToken = createToken({ name: 'StringToken', pattern: stringTokenRegex })\nexport const GreaterOrEqualThan = createToken({\n    name: 'GreaterOrEqualThan',\n    pattern: />=/,\n    label: operators.greaterOrEqualThan,\n})\nexport const GreaterThan = createToken({ name: 'GreaterThan', pattern: />/, label: operators.greaterThan })\nexport const LessOrEqualThan = createToken({ name: 'LessOrEqualThan', pattern: /<=/, label: operators.lessOrEqualthan })\nexport const LessThan = createToken({ name: 'LessThan', pattern: /</, label: operators.lessThan })\nexport const Equal = createToken({ name: 'Equal', pattern: /=/, label: operators.equal })\nexport const NotEqual = createToken({ name: 'NotEqual', pattern: /(!=|<>)/, label: operators.notEqual })\nexport const OpenParenthesis = createToken({ name: 'OpenParenthesis', pattern: /\\(/ })\nexport const CloseParenthesis = createToken({ name: 'CloseParenthesis', pattern: /\\)/ })\n\nexport const tokenVocabulary = {\n    Comment,\n    WhiteSpace,\n    Select,\n    From,\n    Where,\n    Comma,\n    Like,\n    Limit,\n    Null,\n    InnerJoin,\n    In,\n    On,\n    IsNot,\n    Is,\n    NotLike,\n    OrderBy,\n    OrderByDirection,\n    As,\n    OrAnd,\n\n    Identifier,\n\n    Star,\n    Integer,\n    StringToken,\n\n    Equal,\n    NotEqual,\n    GreaterOrEqualThan,\n    GreaterThan,\n    LessOrEqualThan,\n    LessThan,\n\n    OpenParenthesis,\n    CloseParenthesis,\n} as const\n\nexport type Token = keyof typeof tokenVocabulary\n\nconst SelectLexer = new Lexer(Object.values(tokenVocabulary))\n\nexport const lex = (inputText: string) => {\n    const lexingResult = SelectLexer.tokenize(inputText)\n\n    if (lexingResult.errors.length > 0) {\n        throw Error(JSON.stringify(lexingResult.errors))\n    }\n\n    return lexingResult\n}\n","import { CstNode, CstParser, ICstVisitor, IToken } from 'chevrotain'\nimport { ValuesType } from 'utility-types'\n\nimport { Integer, lex, Token, tokenVocabulary } from './lexer'\nimport { labels, SelectParser } from './parser'\nimport { Field, FieldType, From, Operand, Order, ordering, SQLTree, Value } from './SqlTree'\n\nconst parserInstance = new SelectParser()\nconst BaseSQLVisitor: new (arg?: any) => ICstVisitor<number, any> = parserInstance.getBaseCstVisitorConstructor()\ntype NodeKeys = Exclude<keyof SelectParser, keyof CstParser> | ValuesType<typeof labels>\n\ntype TokenKeys = Token | ValuesType<typeof labels>\ntype NodeCtx = Record<NodeKeys, CstNode[]>\ntype TokenCtx = Record<TokenKeys, IToken[]>\ntype Ctx = NodeCtx & TokenCtx\n\nexport class SQLToAstVisitor extends BaseSQLVisitor {\n    constructor() {\n        super()\n        this.validateVisitor()\n    }\n\n    public selectStatement(ctx: NodeCtx) {\n        const fields = ctx.selectClause && this.visit(ctx.selectClause)\n        const source = ctx.fromClause && this.visit(ctx.fromClause)\n        const where = ctx.whereClause && this.visit(ctx.whereClause)\n        const order = ctx.orderByClause && this.visit(ctx.orderByClause)\n        const limit = ctx.limitClause && this.visit(ctx.limitClause)\n        const joins = ctx.joinClause && this.visit(ctx.joinClause)\n        const selectStatement = {\n            fields,\n            source,\n            where,\n            order,\n            limit,\n            joins,\n        } as SQLTree\n\n        return {\n            type: 'selectStatement',\n            value: selectStatement,\n        } as const\n    }\n\n    public selectClause(ctx: NodeCtx) {\n        return this.visit(ctx.projection)\n    }\n\n    public value(ctx: TokenCtx) {\n        let value = ''\n        if (ctx.value?.length) {\n            value = ctx.value[0].image\n        }\n        let type: FieldType = 'fieldIdentifier'\n        if (ctx.value && ctx.value[0].tokenType === tokenVocabulary.StringToken) {\n            value = convertStringTokenToJsString(value)\n            type = 'fieldString'\n        }\n\n        let name = ctx.name && ctx.name[0] ? ctx.name[0].image : value\n\n        if (ctx.name && ctx.name[0].tokenType === tokenVocabulary.StringToken) {\n            name = convertStringTokenToJsString(name)\n        }\n\n        return {\n            name,\n            value,\n            type,\n        }\n    }\n    public columnClause(ctx: Ctx) {\n        if (ctx.function && Array.isArray(ctx.function) && Array.isArray(ctx.value)) {\n            const func = ctx.function[0].image\n            const parameters = ctx.value.map((x) => this.visit(x))\n            const name = ctx.name && ctx.name[0] ? ctx.name[0].image : `${func}(${parameters.map((x) => x.name).join(',')})`\n            return buildField(\n                name,\n                func,\n                'fieldFunction',\n                parameters.map((x) => buildField(x.name, x.value, x.type)),\n            )\n        } else {\n            const { name, value, type } = this.visit(ctx.value)\n            return buildField(name, value, type)\n        }\n    }\n\n    public projection(ctx: Ctx): Field[] {\n        return ctx.columnClause.map((x) => this.visit(x))\n    }\n\n    public fromClause(ctx: Ctx, index = 0): From {\n        let tableName: string = ctx.table[index].image\n        if (ctx.table[index].tokenType === tokenVocabulary.StringToken) {\n            tableName = convertStringTokenToJsString(tableName)\n        }\n        const alias = (ctx.alias && ctx.alias[index].image) ?? tableName\n        return {\n            type: 'From',\n            name: {\n                type: 'PathValue',\n                value: tableName,\n                values: splitPropertyPath(tableName).pathArray,\n            },\n            alias: {\n                type: 'PathValue',\n                value: alias,\n                values: splitPropertyPath(alias).pathArray,\n            },\n        }\n    }\n\n    public whereClause(ctx: Ctx) {\n        const conditions = this.visit(ctx.expressionClause)\n\n        return {\n            conditions,\n        } as const\n    }\n\n    public joinClause(ctx: Ctx) {\n        if (!ctx.table) {\n            return null\n        }\n\n        const joins = new Array<any>()\n        ctx.table.forEach((_table, index) => {\n            const from = this.fromClause(ctx, index)\n            const conditions = this.visit(ctx.expressionClause[index])\n            joins.push({\n                from,\n                conditions,\n            })\n        })\n        return joins\n    }\n\n    public limitClause(ctx: Ctx) {\n        const limit = parseInt(ctx.Integer[0].image)\n        return {\n            value: {\n                value: limit,\n            },\n        }\n    }\n    public orderByClause(ctx: Ctx): Order {\n        const { propertyName } = splitPropertyPath(ctx.Identifier[0].image)\n\n        const direction = ctx.OrderByDirection ? (ctx.OrderByDirection[0].image as 'asc' | 'desc') : 'asc'\n\n        const order: ordering = {\n            value: {\n                type: 'StringValue',\n                value: propertyName,\n            },\n            direction,\n        }\n\n        return {\n            orderings: [order],\n        }\n    }\n\n    public expressionClause(ctx: Ctx, i = 0): any {\n        if (ctx.subExpression?.length - i === 1) {\n            return this.visit(ctx.subExpression[i])\n        }\n        const left = this.visit(ctx.subExpression[i])\n\n        const operation = ctx.OrAnd[i].image\n        const right: Operand = this.expressionClause(ctx, i + 1)\n\n        return {\n            type: 'expression',\n            left,\n            right,\n            operation,\n        }\n    }\n\n    public subExpression(ctx: Ctx) {\n        const left = this.visit(ctx.left)\n        const operation = this.visit(ctx.relationalOperator)\n        const right = this.visit(ctx.right)\n        return {\n            type: 'expression',\n            left: {\n                type: left.type,\n                value: left.value,\n                values: splitPropertyPath(left.value).pathArray,\n                field: left.field,\n            },\n            operation,\n            right: {\n                type: right.type,\n                value: right.value,\n                values: splitPropertyPath(right.value).pathArray,\n                field: right.field,\n            },\n        }\n    }\n\n    public atomicExpression(context: TokenCtx): Operand {\n        const entries = Object.entries(context)\n        for (const [key, entryValue] of entries) {\n            if (key === 'in') {\n                const array: Value[] = entryValue.map((value) => {\n                    if (value.tokenType === Integer) {\n                        const type = 'NumberValue'\n                        const intValue = parseInt(value.image)\n                        return { type, value: intValue, values: [intValue] }\n                    }\n                    const type = 'StringValue'\n                    const stringValue = convertStringTokenToJsString(value.image)\n                    return { type, value: stringValue, values: [stringValue] }\n                })\n                return { type: 'array', value: array }\n            }\n            if (key === 'Integer') {\n                return { type: 'integer', value: parseInt(entryValue[0].image) }\n            }\n            if (key === 'Null') {\n                return { type: 'null', value: null }\n            }\n            if (key === 'Identifier') {\n                const field = buildField(entryValue[0].image, entryValue[0].image, 'fieldIdentifier')\n                return {\n                    type: 'opIdentifier',\n                    value: entryValue[0].image,\n                    field,\n                }\n            }\n            if (key === 'StringToken') {\n                return { type: 'string', value: convertStringTokenToJsString(entryValue[0].image) }\n            }\n        }\n        throw new Error()\n    }\n\n    public relationalOperator(ctx: TokenCtx) {\n        const values = Object.values(ctx)\n        const firstItemValue = values[0] && values[0][0]\n        if (firstItemValue) {\n            const {\n                tokenType: { LABEL },\n            } = firstItemValue\n            return LABEL\n        }\n        throw new Error()\n    }\n}\n\nconst toAstVisitorInstance = new SQLToAstVisitor()\n\nconst toAst = (inputText: string) => {\n    const lexResult = lex(inputText)\n\n    parserInstance.input = lexResult.tokens\n    const cst: CstNode[] | CstNode = parserInstance.selectStatement()\n\n    if (parserInstance.errors.length > 0) {\n        throw Error(JSON.stringify(parserInstance.errors))\n    }\n    const ast = toAstVisitorInstance.visit(cst)\n    return (ast.value as unknown) as SQLTree\n}\n\nconst splitPropertyPath = (stringPath: string | number) => {\n    const pathArray = String(stringPath).split('.')\n\n    return { propertyName: pathArray[pathArray.length - 1], pathArray }\n}\n\nconst convertStringTokenToJsString = (str: string) => str.substring(1, str.length - 1)\n\nconst buildField = (name: string, value: string, type: FieldType, parameters?: Field[]): Field => {\n    const { propertyName: namePropertyName } = splitPropertyPath(name)\n    const { pathArray: fieldPathArray, propertyName: fieldPropertyName } = splitPropertyPath(value)\n    if (type === 'fieldFunction') {\n        return {\n            type,\n            name: {\n                type: 'StringValue',\n                value: namePropertyName,\n            },\n            field: {\n                type: 'PathValue',\n                value: fieldPropertyName,\n                values: fieldPathArray,\n            },\n            function: {\n                name: value,\n                parameters: parameters ?? [],\n            },\n        }\n    }\n\n    return {\n        type,\n        name: {\n            type: 'StringValue',\n            value: namePropertyName,\n        },\n        field: {\n            type: 'PathValue',\n            value: fieldPropertyName,\n            values: fieldPathArray,\n        },\n    }\n}\n\nexport { toAst }\n","import { CstNode, CstParser, IRuleConfig } from 'chevrotain'\n\nimport { SQLToAstVisitor } from './actions-visitor'\nimport * as lexer from './lexer'\n\nexport const labels = {\n    value: 'value',\n    function: 'function',\n    table: 'table',\n    name: 'name',\n    alias: 'alias',\n    left: 'left',\n    right: 'right',\n    in: 'in',\n    functionParameter: 'functionParameter',\n} as const\n\nexport class CustomCstParser<T = SQLToAstVisitor> extends CstParser {\n    protected rule(name: Exclude<keyof T, number | symbol>, implementation: (...implArgs: any[]) => any, config?: IRuleConfig<CstNode>) {\n        return super.RULE(name, implementation, config)\n    }\n\n    RULE(name: Exclude<keyof T, number | symbol>, implementation: (...implArgs: any[]) => any, config?: IRuleConfig<CstNode>) {\n        return super.RULE(name, implementation, config)\n    }\n}\n\nclass SelectParser extends CustomCstParser {\n    public readonly selectStatement = this.RULE('selectStatement', () => {\n        this.SUBRULE(this.selectClause)\n        this.SUBRULE(this.fromClause)\n\n        this.OPTION(() => {\n            this.SUBRULE(this.joinClause)\n        })\n\n        this.OPTION2(() => {\n            this.SUBRULE(this.whereClause)\n        })\n\n        this.OPTION3(() => {\n            this.SUBRULE(this.orderByClause)\n        })\n        this.OPTION4(() => {\n            this.SUBRULE(this.limitClause)\n        })\n    })\n\n    public readonly selectClause = this.rule('selectClause', () => {\n        this.CONSUME(lexer.Select)\n        this.SUBRULE(this.projection)\n    })\n\n    public readonly projection = this.rule('projection', () => {\n        this.OR([\n            {\n                ALT: () =>\n                    this.AT_LEAST_ONE_SEP({\n                        SEP: lexer.Comma,\n                        DEF: () => {\n                            this.SUBRULE(this.columnClause)\n                        },\n                    }),\n            },\n        ])\n    })\n\n    public readonly value = this.rule('value', () => {\n        this.OR1([\n            { ALT: () => this.CONSUME(lexer.Star, { LABEL: labels.value }) },\n            {\n                ALT: () => this.CONSUME(lexer.StringToken, { LABEL: labels.value }),\n            },\n            {\n                ALT: () => this.CONSUME(lexer.Identifier, { LABEL: labels.value }),\n            },\n        ])\n        this.OPTION(() => {\n            this.CONSUME(lexer.As)\n            this.OR2([\n                {\n                    ALT: () => this.CONSUME1(lexer.StringToken, { LABEL: labels.name }),\n                },\n                {\n                    ALT: () => this.CONSUME1(lexer.Identifier, { LABEL: labels.name }),\n                },\n            ])\n        })\n    })\n\n    public readonly columnClause = this.rule('columnClause', () => {\n        this.OR([\n            {\n                ALT: () => {\n                    this.CONSUME2(lexer.Identifier, { LABEL: labels.function })\n                    this.CONSUME(lexer.OpenParenthesis)\n                    this.MANY_SEP({\n                        SEP: lexer.Comma,\n                        DEF: () => {\n                            this.SUBRULE2(this.value)\n                        },\n                    })\n                    this.CONSUME(lexer.CloseParenthesis)\n                    this.OPTION1(() => {\n                        this.CONSUME1(lexer.As)\n                        this.OR3([\n                            {\n                                ALT: () => this.CONSUME2(lexer.StringToken, { LABEL: labels.name }),\n                            },\n                            {\n                                ALT: () => this.CONSUME4(lexer.Identifier, { LABEL: labels.name }),\n                            },\n                        ])\n                    })\n                },\n            },\n            {\n                ALT: () => {\n                    this.SUBRULE(this.value)\n                },\n            },\n        ])\n    })\n\n    public readonly fromClause = this.rule('fromClause', () => {\n        this.CONSUME(lexer.From)\n        this.OR([\n            {\n                ALT: () => this.CONSUME(lexer.Identifier, { LABEL: labels.table }),\n            },\n            {\n                ALT: () => this.CONSUME(lexer.StringToken, { LABEL: labels.table }),\n            },\n        ])\n        this.OPTION(() => this.CONSUME2(lexer.Identifier, { LABEL: labels.alias }))\n    })\n\n    public readonly whereClause = this.rule('whereClause', () => {\n        this.CONSUME(lexer.Where)\n        this.SUBRULE(this.expressionClause)\n    })\n\n    public readonly orderByClause = this.rule('orderByClause', () => {\n        this.CONSUME(lexer.OrderBy)\n        this.CONSUME(lexer.Identifier)\n        this.OPTION({\n            DEF: () => this.CONSUME(lexer.OrderByDirection),\n        })\n    })\n\n    public readonly limitClause = this.rule('limitClause', () => {\n        this.CONSUME(lexer.Limit)\n        this.CONSUME(lexer.Integer)\n    })\n\n    public readonly joinClause = this.rule('joinClause', () => {\n        this.MANY(() => {\n            this.CONSUME(lexer.InnerJoin)\n            this.OR([\n                {\n                    ALT: () => this.CONSUME(lexer.Identifier, { LABEL: labels.table }),\n                },\n                {\n                    ALT: () => this.CONSUME(lexer.StringToken, { LABEL: labels.table }),\n                },\n            ])\n            this.OPTION(() => this.CONSUME2(lexer.Identifier, { LABEL: labels.alias }))\n            this.CONSUME(lexer.On)\n            this.SUBRULE(this.expressionClause)\n        })\n    })\n\n    public readonly expressionClause = this.rule('expressionClause', () => {\n        this.MANY_SEP({\n            SEP: lexer.OrAnd,\n            DEF: () => this.SUBRULE(this.subExpression),\n        })\n    })\n\n    public readonly subExpression = this.rule('subExpression', () => {\n        this.SUBRULE(this.atomicExpression, { LABEL: labels.left })\n        this.OR([\n            {\n                ALT: () => {\n                    this.SUBRULE(this.relationalOperator)\n                    this.CONSUME2(lexer.OpenParenthesis)\n                    this.SUBRULE3(this.selectStatement, { LABEL: labels.right })\n                    this.CONSUME3(lexer.CloseParenthesis)\n                },\n            },\n            {\n                ALT: () => {\n                    this.SUBRULE1(this.relationalOperator)\n                    this.SUBRULE2(this.atomicExpression, { LABEL: labels.right })\n                },\n            },\n        ])\n    })\n\n    public readonly atomicExpression = this.rule('atomicExpression', () => {\n        this.OR([\n            { ALT: () => this.CONSUME(lexer.Integer) },\n            { ALT: () => this.CONSUME(lexer.Null) },\n            { ALT: () => this.CONSUME(lexer.Identifier) },\n            { ALT: () => this.CONSUME(lexer.StringToken) },\n            {\n                ALT: () => {\n                    this.CONSUME(lexer.OpenParenthesis)\n                    this.MANY_SEP({\n                        SEP: lexer.Comma,\n                        DEF: () => {\n                            this.OR1([\n                                {\n                                    ALT: () => this.CONSUME1(lexer.Integer, { LABEL: labels.in }),\n                                },\n                                {\n                                    ALT: () => this.CONSUME1(lexer.StringToken, { LABEL: labels.in }),\n                                },\n                            ])\n                        },\n                    })\n                    this.CONSUME(lexer.CloseParenthesis)\n                },\n            },\n        ])\n    })\n\n    public readonly relationalOperator = this.rule('relationalOperator', () => {\n        this.OR([\n            { ALT: () => this.CONSUME(lexer.GreaterOrEqualThan) },\n            { ALT: () => this.CONSUME(lexer.GreaterThan) },\n            { ALT: () => this.CONSUME(lexer.LessOrEqualThan) },\n            { ALT: () => this.CONSUME(lexer.LessThan) },\n            { ALT: () => this.CONSUME(lexer.Equal) },\n            { ALT: () => this.CONSUME(lexer.NotEqual) },\n            { ALT: () => this.CONSUME(lexer.Like) },\n            { ALT: () => this.CONSUME(lexer.NotLike) },\n            { ALT: () => this.CONSUME(lexer.In) },\n            { ALT: () => this.CONSUME(lexer.IsNot) },\n            { ALT: () => this.CONSUME(lexer.Is) },\n        ])\n    })\n\n    constructor(config?: any) {\n        super(lexer.tokenVocabulary, config)\n        this.performSelfAnalysis()\n    }\n}\nconst parserInstance = new SelectParser()\n\nconst parse = (inputText: string) => {\n    const lexResult = lexer.lex(inputText)\n\n    parserInstance.input = lexResult.tokens\n\n    const cst = parserInstance.selectStatement()\n\n    if (parserInstance.errors.length > 0) {\n        throw Error(parserInstance.errors[0].message)\n    }\n    return cst\n}\n\nexport { SelectParser, parse }\n","export const jsonParseSafe = (str: string | null) => {\n    if (typeof str !== 'string' || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n\nexport const get = (obj: any, path: (string | number)[], defaultValue: any = undefined) => {\n    const travel = (regexp: any) =>\n        String.prototype.split\n            .call(path, regexp)\n            .filter(Boolean)\n            .reduce((res, key) => (res !== null && res !== undefined ? res[key] : res), obj)\n    const result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/)\n    return result === undefined || result === obj ? defaultValue : result\n}\n","import { orderBy } from 'lodash'\n\nimport { toAst } from './actions-visitor'\nimport { operators } from './operators'\nimport { Conditions, Field, From, Func, Operand, Operation, SQLTree, Where } from './SqlTree'\nimport * as utils from './utils'\n\nexport const computePath = (path: (string | number)[] | undefined, allowedSourceNames: string[]) => {\n    if (!path) {\n        return { path: [] }\n    }\n    if (allowedSourceNames.some((x) => x === String(path[0])?.toLowerCase())) {\n        return { tableName: path[0], path: [...path].slice(1) }\n    }\n\n    return { path }\n}\n\n/**\n *\n * @param json JSON source.\n * @param query SQL query\n */\nexport const sqlQuery = (json: string, query: string) => {\n    return sqlQueryWithMultipleSources({ data: json, json }, query)\n}\n\n/**\n * Function\n * @return {object | object[]}\n */\nexport const sqlQueryWithMultipleSources = (source: Record<string, string>, query: string) => {\n    try {\n        const sqlTree = toAst(query)\n\n        if (\n            !Object.keys(source).some(\n                (x) =>\n                    x.toLowerCase() === String(sqlTree.source.alias.values[0]).toLowerCase() ||\n                    x.toLowerCase() === String(sqlTree.source.name.value),\n            )\n        ) {\n            return new SyntaxError(String(sqlTree.source.name.values[0]))\n        }\n\n        const sourceDataObjects: Record<string, unknown> = {}\n        Object.keys(source).forEach((key) => {\n            sourceDataObjects[key] = utils.jsonParseSafe(source[key])\n        })\n\n        return executeQuery(sqlTree, sourceDataObjects)\n    } catch (e) {\n        return e as Error\n    }\n}\n\nconst getSourceData = (sqlTree: SQLTree, sourceDataObject: Record<string, unknown>): unknown | unknown[] => {\n    if (sourceDataObject[sqlTree.source.name.value]) {\n        return sourceDataObject[sqlTree.source.name.value]\n    }\n\n    const fromPath = [...sqlTree.source.name.values]\n    fromPath.shift()\n\n    return utils.get(sourceDataObject[sqlTree.source.name.values[0]], fromPath)\n}\n\nexport type Row = {\n    projected: unknown\n    real: unknown\n    dataContext: Record<string, unknown>\n}\ntype Jointure = {\n    source: any\n    conditions: Conditions\n    from: From\n}\n\nexport const executeQuery = (sqlTree: SQLTree, sourceDataObject: Record<string, unknown>): unknown => {\n    const data = getSourceData(sqlTree, sourceDataObject)\n\n    if (!Array.isArray(data)) {\n        return mapper(data, sqlTree.fields, { [sqlTree.source.alias.value]: data }, sourceDataObject)\n    }\n\n    const jointures = new Array<Jointure>()\n    sqlTree.joins?.forEach((join) => {\n        jointures.push({\n            from: join.from,\n            conditions: join.conditions,\n            source: sourceDataObject[join.from.name.value],\n        })\n    })\n    const rows: Row[] = data.map((x: unknown) => ({\n        real: x,\n        projected: x,\n        dataContext: {\n            [sqlTree.source.name.value]: x,\n            [sqlTree.source.alias.value]: x,\n        },\n    }))\n\n    const ordered = orderBy(\n        rows,\n        sqlTree.order?.orderings.map((x) => `real.${x.value.value}`),\n        sqlTree.order?.orderings.map((x) => x.direction),\n    )\n\n    const results = new Array<unknown>()\n    ordered.forEach((row) => {\n        if (sqlTree.limit && sqlTree.limit.value.value <= results.length) {\n            return\n        }\n        const shouldBeIncludeInResults = rowShouldBeincludedInResult(jointures, row, sourceDataObject, sqlTree.where)\n\n        if (shouldBeIncludeInResults) {\n            const mapped = mapper(row.real, sqlTree.fields, row.dataContext, sourceDataObject)\n            row.projected = mapped\n            results.push(mapped)\n        }\n    })\n\n    return results\n}\n\nconst compareOperands = (\n    operation: Operation,\n    left: Operand,\n    right: Operand,\n    values: Record<string, unknown>,\n    sourceDataObject: Record<string, unknown>,\n): boolean => {\n    const leftValue: any = getValue(left, values, sourceDataObject)\n    const rightValue: any = getValue(right, values, sourceDataObject)\n    switch (operation) {\n        case 'or':\n            return (\n                (left.type === 'expression' && compareOperands(left.operation, left.left, left.right, values, sourceDataObject)) ||\n                (right.type === 'expression' && compareOperands(right.operation, right.left, right.right, values, sourceDataObject))\n            )\n        case 'and':\n            return (\n                left.type === 'expression' &&\n                compareOperands(left.operation, left.left, left.right, values, sourceDataObject) &&\n                right.type === 'expression' &&\n                compareOperands(right.operation, right.left, right.right, values, sourceDataObject)\n            )\n    }\n    switch (operation) {\n        case '=':\n        case 'is':\n            return leftValue === rightValue\n        case '!=':\n        case 'is not':\n            return leftValue !== rightValue\n        case 'like': {\n            const leftStr = String(leftValue)\n            const rightStr = String(rightValue)\n            if (rightStr.startsWith(operators.modulo) && rightStr.endsWith(operators.modulo)) {\n                if (leftStr.includes(rightStr.substring(1, rightStr.length - 1))) {\n                    return true\n                }\n            } else if (rightStr.startsWith(operators.modulo)) {\n                if (leftStr.endsWith(rightStr.substring(rightStr.indexOf(operators.modulo) + 1))) {\n                    return true\n                }\n            } else if (rightStr.endsWith(operators.modulo)) {\n                if (leftStr.startsWith(rightStr.substring(0, rightStr.indexOf(operators.modulo)))) {\n                    return true\n                }\n            }\n            return false\n        }\n        case 'not like': {\n            const leftStr = String(leftValue)\n            const rightStr = String(rightValue)\n            if (rightStr.startsWith(operators.modulo) && rightStr.endsWith(operators.modulo)) {\n                if (leftStr.includes(rightStr.substring(1, rightStr.length - 1))) {\n                    return false\n                }\n            } else if (rightStr.startsWith(operators.modulo)) {\n                if (leftStr.endsWith(rightStr.substring(rightStr.indexOf(operators.modulo) + 1))) {\n                    return false\n                }\n            } else if (rightStr.endsWith(operators.modulo)) {\n                if (leftStr.startsWith(rightStr.substring(0, rightStr.indexOf(operators.modulo)))) {\n                    return false\n                }\n            }\n            return true\n        }\n        case '>':\n            return !!rightValue && !!leftValue && leftValue > rightValue\n        case '>=':\n            return !!rightValue && !!leftValue && leftValue >= rightValue\n        case '<':\n            return !!rightValue && !!leftValue && leftValue < rightValue\n        case '<=':\n            return !!rightValue && !!leftValue && leftValue <= rightValue\n        case 'in':\n            return rightValue.filter((x: Record<string, unknown>) => x.value === leftValue).length > 0\n    }\n    return false\n}\n\nconst mapObject = (fields: Field[], sources: Record<string, unknown>, sourceDataObject: Record<string, unknown>) => {\n    const mappedObject: Record<string | number, any> = {}\n    fields.forEach((field) => {\n        const value = getValue(field, sources, sourceDataObject)\n        if (field.type === 'fieldFunction') {\n            mappedObject[field.name.value] = applyFunction(field.function, sources, sourceDataObject)\n        } else {\n            mappedObject[field.name.value] = value\n        }\n    })\n    return mappedObject\n}\n\nconst functions: Record<string, ((value: unknown[]) => string | number) | undefined> = {\n    lower: (parameters) => String(parameters[0]).toLowerCase(),\n    upper: (parameters) => String(parameters[0]).toUpperCase(),\n    trim: (parameters) => String(parameters[0]).trim(),\n    trimleft: (parameters) => String(parameters[0]).trimLeft(),\n    trimright: (parameters) => String(parameters[0]).trimRight(),\n    reverse: (parameters) => String(parameters[0]).split('').reverse().join(''),\n    length: (parameters) => String(parameters[0]).length,\n    len: (parameters) => String(parameters[0]).length,\n    concat: (parameters) => parameters.join(''),\n}\nconst applyFunction = (funcVal: Func, sources: Record<string, unknown>, sourceDataObject: Record<string, unknown>) => {\n    const parameters = funcVal.parameters.map((x) => getValue(x, sources, sourceDataObject))\n    const func = funcVal.name.toLowerCase()\n    const toApply = functions[func]\n    if (toApply) {\n        return toApply(parameters)\n    }\n    throw new Error(`Unsupported function: ${func}. Supported built-in functions are: ${Object.keys(functions).join(', ')}`)\n}\n\nconst getValue = (operand: Operand | Field, values: Record<string, unknown>, sourceDataObject: Record<string, unknown>): unknown => {\n    if (operand.type === 'fieldString') {\n        const value = getIdentifierValue(values, operand)\n        if (value !== undefined) {\n            return value\n        }\n        return operand.field.value\n    }\n    if (\n        operand.type === 'integer' ||\n        operand.type === 'string' ||\n        operand.type === 'array' ||\n        operand.type === 'null' ||\n        operand.type === 'expression'\n    ) {\n        return operand.value\n    }\n    if (operand.type === 'opIdentifier') {\n        const { field } = operand\n        return getIdentifierValue(values, field)\n    }\n    if (operand.type === 'selectStatement') {\n        const array: any = executeQuery(operand.value, sourceDataObject)\n        return array.map((x: any) => ({ value: x[operand.value.fields[0].field.value] }))\n    }\n\n    return getIdentifierValue(values, operand)\n}\n\nconst mapper = (v: unknown, fields: Field[], sources: Record<string, unknown>, sourceDataObject: Record<string, unknown>) => {\n    if (fields.some((x) => x.field.value === '*')) {\n        return v\n    }\n\n    return mapObject(fields, sources, sourceDataObject)\n}\n\nfunction rowShouldBeincludedInResult(\n    jointures: Jointure[],\n    row: Row,\n    sourceDataObject: Record<string, any>,\n    where: Where | undefined | null,\n) {\n    for (const { source, conditions, from } of jointures) {\n        let match = false\n        for (const joinRow of source) {\n            const joinRowData = {\n                [from.name.value]: joinRow,\n                [from.alias.value]: joinRow,\n            }\n            row.dataContext = { ...row.dataContext, ...joinRowData }\n            const comparison = compareOperands(conditions.operation, conditions.left, conditions.right, row.dataContext, sourceDataObject)\n            if (comparison) {\n                match = true\n            }\n        }\n        if (!match) {\n            return false\n        }\n    }\n\n    if (!where || !where.conditions) {\n        return true\n    }\n    const leftValue = where.conditions.left\n    const rightValue = where.conditions.right\n    const operation = where.conditions.operation\n\n    const comparison = compareOperands(operation, leftValue, rightValue, row.dataContext, sourceDataObject)\n\n    return comparison\n}\n\nfunction getIdentifierValue(values: Record<string, unknown>, field: Field): unknown {\n    const availableTables = Object.keys(values)\n    const { path, tableName } = computePath(field?.field.values, availableTables)\n\n    if (tableName && !availableTables.some((x) => x === tableName)) {\n        throw Error(`Unknown identifier: ${tableName}`)\n    }\n    if (!tableName && availableTables.length > 1) {\n        throw Error(`Ambiguous identifier: ${field.field.value}`)\n    }\n\n    const value = tableName ? values[tableName] : Object.values(values)[0]\n    return utils.get(value, path)\n}\n","import * as React from 'react'\nimport { FC, ReactElement } from 'react'\nimport { useMeasure } from 'react-use'\nimport { CardHeader } from 'reactstrap'\n\nimport styles from './GrabbleHeader.module.scss'\n\ntype Props = {\n    title: string\n    children: ReactElement\n}\n\nexport const GrabbleHeader: FC<Props> = ({ title, children }) => {\n    const [parentref, { height: parentHeight }] = useMeasure<HTMLDivElement>()\n    const [headerRef, { height: headerHeight }] = useMeasure<HTMLDivElement>()\n    const height = parentHeight - headerHeight * 2 - 2\n\n    return (\n        <div ref={parentref} className={`${styles.draggable} h-100 d-flex flex-column`}>\n            <div className=\"px-2\">\n                <CardHeader className=\"border-0 pr-0\" style={{ background: 'transparent' }}>\n                    <div ref={headerRef}>\n                        <u className=\"font-weight-bold text-large h5\">{title}</u>\n                        <span className={`float-right ${styles.grabber}`}>\n                            <i className=\"material-icons\">drag_indicator</i>\n                        </span>\n                    </div>\n                </CardHeader>\n                <div\n                    style={{\n                        height: `${height}px`,\n                        overflowY: 'auto',\n                        overflowX: 'hidden',\n                    }}\n                    className=\"px-2\"\n                >\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { logError } from '../core/logging/logger'\n\nexport const themeDeps = new Map<GeneralTheme, () => Promise<unknown>>([\n    ['materia', () => import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css')],\n    ['darkly', () => import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css')],\n    ['sandstone', () => import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css')],\n    ['cosmo', () => import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css')],\n    ['cyborg', () => import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css')],\n    ['flatly', () => import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css')],\n    ['journal', () => import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css')],\n    ['litera', () => import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css')],\n    ['lumen', () => import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css')],\n    ['lux', () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css')],\n    ['minty', () => import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css')],\n    ['pulse', () => import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css')],\n    ['simplex', () => import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css')],\n    ['slate', () => import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css')],\n    ['solar', () => import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css')],\n    ['spacelab', () => import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css')],\n    ['superhero', () => import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css')],\n    ['united', () => import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css')],\n    ['yeti', () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css')],\n] as const)\n\nexport const importThemeStyleCustom = (theme: GeneralTheme | null): unknown => {\n    if (theme) {\n        const themeLoader = themeDeps.get(theme)\n        if (themeLoader) {\n            return themeLoader()\n        }\n    }\n\n    logError(`${theme}: theme is not defined`)\n\n    return themeDeps.values().next().value()\n}\n\nexport const availableGeneralThemes = [\n    'materia',\n    'darkly',\n    'sandstone',\n    'cosmo',\n    'cyborg',\n    'flatly',\n    'journal',\n    'litera',\n    'lumen',\n    'lux',\n    'minty',\n    'pulse',\n    'simplex',\n    'slate',\n    'solar',\n    'spacelab',\n    'superhero',\n    'united',\n    'yeti',\n] as const\nexport type GeneralTheme = typeof availableGeneralThemes[number]\n\nexport const availableEditorThemes = ['github', 'monokai', 'tomorrow', 'solarized_dark', 'terminal'] as const\nexport type EditorTheme = typeof availableEditorThemes[number]\n","import Actions from 'actions/actions'\nimport { withPerformance } from 'core/logging/performance'\nimport { useToggleState } from 'hooks/hooks'\nimport * as React from 'react'\nimport { FC, memo, useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Collapse,\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    NavItem,\n    NavLink,\n} from 'reactstrap'\nimport { RootState } from 'state/State'\nimport { getEditorTheme, getTheme } from 'store/selectors'\nimport { availableEditorThemes, availableGeneralThemes, EditorTheme, GeneralTheme } from 'themes/themes'\n\nimport { version } from '../../package.json'\nimport { withErrorBoundary } from './common/ErrorBoundary'\n\ninterface Props {\n    setGeneralTheme: typeof Actions.switchTheme\n    setEditorTheme: typeof Actions.switchEditorTheme\n    currentTheme: GeneralTheme | null\n    currentEditorTheme: EditorTheme\n}\n\nconst Header: FC<Props> = ({ setGeneralTheme, currentTheme, setEditorTheme, currentEditorTheme }) => {\n    const [isOpen, switchIsOpen] = useToggleState()\n    const [dropDownIsOpen, toggleDropdown] = useToggleState()\n\n    return (\n        <>\n            <Navbar color=\"dark\" dark={true} expand=\"md\">\n                <NavbarBrand href=\"/\">Keyrier JSON</NavbarBrand>\n                <NavbarToggler role=\"presentation\" onClick={switchIsOpen} />\n                <Collapse isOpen={isOpen} navbar={true}>\n                    <Nav className=\"ml-auto\" navbar={true}>\n                        <NavItem>\n                            <Dropdown isOpen={dropDownIsOpen} toggle={toggleDropdown}>\n                                <DropdownToggle nav={true} caret={true}>\n                                    Theme\n                                </DropdownToggle>\n                                <DropdownMenu right={true}>\n                                    <DropdownItem header={true}>Choose editor theme</DropdownItem>\n                                    {availableEditorThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setEditorTheme}\n                                            key={index}\n                                            active={currentEditorTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={false}\n                                        />\n                                    ))}\n                                    <DropdownItem header={true}>Choose general theme</DropdownItem>\n\n                                    {availableGeneralThemes.map((theme, index) => (\n                                        <ThemeDropDownItem\n                                            setTheme={setGeneralTheme}\n                                            key={index}\n                                            active={currentTheme === theme}\n                                            theme={theme}\n                                            reloadOnChange={true}\n                                        />\n                                    ))}\n                                </DropdownMenu>\n                            </Dropdown>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json/releases/latest\">v{version}</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/magoo-magoo/keyrier-json\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </>\n    )\n}\n\ntype ThemeDropDownItemProps<T extends GeneralTheme | EditorTheme> = {\n    theme: T\n    active: boolean\n    setTheme: (v: T) => void\n    reloadOnChange: boolean\n}\n\nconst ThemeDropDownItem = <T extends GeneralTheme | EditorTheme>(props: ThemeDropDownItemProps<T>) => {\n    const { theme, active, setTheme, reloadOnChange } = props\n    const onClick = useCallback(() => {\n        setTheme(theme)\n        if (reloadOnChange) {\n            setTimeout(() => window.location.reload())\n        }\n    }, [theme, setTheme, reloadOnChange])\n    return (\n        <DropdownItem active={active} onClick={onClick}>\n            {theme}\n        </DropdownItem>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    currentTheme: getTheme(state),\n    currentEditorTheme: getEditorTheme(state),\n})\n\nexport default connect(mapStateToProps, {\n    setGeneralTheme: Actions.switchTheme,\n    setEditorTheme: Actions.switchEditorTheme,\n})(memo(withErrorBoundary(withPerformance(Header, 'Header'))))\n","import { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport * as React from 'react'\nimport { ChangeEvent, FC, memo } from 'react'\nimport { Button } from 'reactstrap'\n\ninterface Props {\n    header: [string, string]\n    id: number\n    onChange: (h: [string, string]) => void\n    onRemove: (h: [string, string]) => void\n}\n\nexport const RenderHeaderInput: FC<Props> = memo(\n    withErrorBoundary(({ header, onRemove, onChange, id }) => {\n        const [key, value] = header\n\n        const onKeyChange = (e: ChangeEvent<HTMLInputElement>) => onChange([e.target.value, value])\n        const onValueChange = (e: ChangeEvent<HTMLInputElement>) => onChange([key, e.target.value])\n        const onRemoveCallback = () => onRemove(header)\n\n        return (\n            <div className=\"row align-items-center\">\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={key}\n                        id={`headerName${id}`}\n                        type=\"text\"\n                        name={`headerName${id}`}\n                        placeholder=\"enter an name\"\n                        onChange={onKeyChange}\n                    />\n                </div>\n                <div className=\"col-sm-5\">\n                    <input\n                        className=\"form-control-lg form-control\"\n                        value={value}\n                        type=\"text\"\n                        name={`headerValue${id}`}\n                        id={`headerValue${id}`}\n                        placeholder=\"enter an value\"\n                        onChange={onValueChange}\n                    />\n                </div>\n                <div className=\"col-sm-2\">\n                    <Button outline={true} color=\"danger\" onClick={onRemoveCallback}>\n                        remove\n                    </Button>\n                </div>\n            </div>\n        )\n    }),\n)\n","import Actions from 'actions/actions'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport * as React from 'react'\nimport { FC, memo, useCallback, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Alert, Button, Form, FormGroup } from 'reactstrap'\n\nimport { customToString } from '../../core/converters/string'\nimport { logError } from '../../core/logging/logger'\nimport { useChangeEventState, useToggleState } from '../../hooks/hooks'\nimport { RenderHeaderInput } from './RequestHeader'\n\ninterface Props {\n    onFinish: () => void\n    setSource: typeof Actions.updateSource\n}\n\nconst HttpRequestSource: FC<Props> = ({ onFinish, setSource }) => {\n    const [method, setMethod] = useChangeEventState('GET')\n    const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n    const [body, setBody] = useChangeEventState('')\n    const [headers, setHeaders] = useState([['Accept', 'application/json'] as [string, string]])\n    const [error, setError] = useState(null as TypeError | null)\n    const [hasBody, setHasBody] = useToggleState()\n\n    const submit = useCallback(async () => {\n        const requestInit: RequestInit = {\n            method,\n            headers,\n            body: hasBody ? body : null,\n        }\n        const request = new Request(url, requestInit)\n        setError(null)\n\n        let json: string\n        try {\n            const result = await fetch(request)\n            json = await result.json()\n        } catch (e) {\n            logError('HttpRequestSource.submit', e)\n            setError(e)\n            return\n        }\n        setSource(customToString(json))\n        onFinish()\n    }, [method, url, body, headers, hasBody, setSource, onFinish])\n\n    return (\n        <div id=\"HttpRequestSource\">\n            <FormGroup>\n                <label htmlFor=\"requestMethod\">Method</label>\n                <select\n                    className=\"form-control-lg form-control\"\n                    defaultValue={method}\n                    name=\"requestMethod\"\n                    id=\"requestMethod\"\n                    onBlur={setMethod}\n                >\n                    <option>GET</option>\n                    <option>POST</option>\n                    <option>PUT</option>\n                    <option>OPTIONS</option>\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <label htmlFor=\"requestUrl\">Request URL</label>\n                <input\n                    defaultValue={url}\n                    className=\"form-control-lg form-control\"\n                    type=\"url\"\n                    name=\"requestUrl\"\n                    id=\"requestUrl\"\n                    placeholder=\"enter an URL\"\n                    onChange={setUrl}\n                />\n            </FormGroup>\n            <div className=\"position-relative form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n                </label>\n            </div>\n            <Form inline={true} hidden={!hasBody}>\n                <FormGroup>\n                    <label htmlFor=\"body\">Body</label>\n                    <input id=\"body\" className=\"form-control-lg form-control\" type=\"textarea\" value={body} onChange={setBody} />{' '}\n                </FormGroup>\n            </Form>\n            <label htmlFor=\"headers\">Request headers</label>{' '}\n            <Button outline={true} color=\"primary\" onClick={() => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']])}>\n                Add header\n            </Button>\n            <br />\n            <br />\n            <HeaderList headers={headers} onChange={setHeaders} />\n            <br />\n            <Button block={true} color=\"primary\" onClick={submit}>\n                Submit\n            </Button>\n            {error && (\n                <Alert color=\"danger\">\n                    Error: {error.message ? error.message : ''}\n                    {error.stack ? error.stack : ''}\n                </Alert>\n            )}\n        </div>\n    )\n}\n\ntype HeaderListProps = {\n    headers: Array<[string, string]>\n    onChange: (headers: Array<[string, string]>) => void\n}\n\nconst HeaderList: FC<HeaderListProps> = ({ headers, onChange }) => {\n    const onRemove = useCallback((header: [string, string]) => onChange(headers.filter((h) => h !== header)), [headers, onChange])\n    const onChangeCallback = useCallback(\n        (header: [string, string]) => {\n            const index = headers.indexOf(header)\n            headers[index] = { ...header }\n            onChange([...headers])\n        },\n        [headers, onChange],\n    )\n    return (\n        <>\n            {headers.map((header, index) => (\n                <RenderHeaderInput header={header} key={index} id={index} onChange={onChangeCallback} onRemove={onRemove} />\n            ))}\n        </>\n    )\n}\n\nexport default connect(null, { setSource: Actions.updateSource })(withErrorBoundary(memo(HttpRequestSource)))\n","import Actions from 'actions/actions'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport { logDebug } from 'core/logging/logger'\nimport { withPerformance } from 'core/logging/performance'\nimport { useToggleState } from 'hooks/hooks'\nimport * as React from 'react'\nimport { ChangeEvent, FC, memo, useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    Button,\n    ButtonDropdown,\n    ButtonGroup,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n} from 'reactstrap'\nimport { ActionCreators } from 'redux-undo'\nimport { QueryMode, RootState } from 'state/State'\nimport { getCanRedo, getCanUndo, getQueryMode, getSourceAutoFormat } from 'store/selectors'\n\nimport HttpRequestSource from './source/RequestSource'\n\ninterface Props {\n    onFileContentReady: typeof Actions.updateSource\n    changeAutoFormat: typeof Actions.updateAutoFormatSource\n    onReset: typeof Actions.resetEditor\n    onClear: typeof Actions.clearEditor\n    setQueryMode: typeof Actions.updateQueryMode\n    mode: QueryMode\n    onUndo: typeof Actions.undo\n    onRedo: typeof Actions.redo\n    canRedo: boolean\n    canUndo: boolean\n    autoFormat: boolean\n    resetHistory: typeof ActionCreators.clearHistory\n}\n\nconst LateralMenu: FC<Props> = ({\n    onReset,\n    onFileContentReady,\n    onClear,\n    autoFormat,\n    changeAutoFormat,\n    onRedo,\n    onUndo,\n    canRedo,\n    canUndo,\n    setQueryMode,\n    mode,\n    resetHistory,\n}) => {\n    const [dropdownIsOpen, toggleDropdown] = useToggleState()\n    const [modalIsOpen, toggleModal] = useToggleState()\n    const handleFileChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            logDebug('onFileChange')\n            toggleDropdown()\n            if (e.target.files && e.target?.files?.length > 0) {\n                const fileReader = new FileReader()\n                logDebug('e.target.files', e.target.files[0].name)\n                fileReader.onload = () => {\n                    if (fileReader.result) {\n                        onFileContentReady(fileReader.result.toString())\n                    }\n                }\n                fileReader.readAsText(e.target.files[0])\n            }\n        },\n        [toggleDropdown, onFileContentReady],\n    )\n\n    const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n    return (\n        <>\n            <ButtonGroup className=\"d-flex\" vertical={true}>\n                <ButtonGroup vertical={false}>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onUndo}\n                        disabled={!canUndo}\n                    >\n                        <i className=\"material-icons mr-1 md-18\">undo</i>\n                        <span>Undo</span>\n                    </Button>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onRedo}\n                        disabled={!canRedo}\n                    >\n                        Redo\n                        <i className=\"material-icons mr-1 md-18\">redo</i>\n                    </Button>\n                </ButtonGroup>\n                <br />\n                <br />\n                <Label className=\"d-flex justify-content-center align-content-between\" check={true} onClick={handleAutoFormatChange}>\n                    <i className=\"material-icons mr-1\">{autoFormat ? 'check_box' : 'check_box_outline_blank'}</i>\n                    Auto format\n                </Label>\n                <br />\n                <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n                    <DropdownToggle\n                        className=\"d-flex justify-content-center align-content-between\"\n                        size={'lg'}\n                        id=\"import-menu-button\"\n                        color=\"primary\"\n                    >\n                        <i className=\"material-icons mr-1 md-18\">unarchive</i>\n                        Import\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem toggle={false}>\n                            <span id=\"import-file\">\n                                Browse JSON file...\n                                <input type=\"file\" name=\"file\" id=\"sourceFile\" style={{ display: 'none' }} onChange={handleFileChange} />\n                            </span>\n                        </DropdownItem>\n                        <DropdownItem id=\"http-request\" onClick={toggleModal}>\n                            <span>HTTP request</span>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n                <br />\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"secondary\"\n                    size={'lg'}\n                    onClick={() => {\n                        onReset()\n                        resetHistory()\n                    }}\n                >\n                    <div>\n                        <i className=\"material-icons md-18 mr-1\">autorenew</i>\n                    </div>\n                    <div>Reset</div>\n                </Button>\n                <br />\n\n                {mode === 'Javascript' ? (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('SQL')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to SQL-like</div>\n                    </Button>\n                ) : (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('Javascript')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to JS</div>\n                    </Button>\n                )}\n\n                <br />\n                <Button className=\"d-flex justify-content-center align-content-between\" color=\"danger\" size={'lg'} onClick={onClear}>\n                    <div>\n                        <i className=\"material-icons md-18  mr-1\">clear</i>\n                    </div>\n                    <div>Clear</div>\n                </Button>\n            </ButtonGroup>\n            <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n                <ModalBody>\n                    <HttpRequestSource onFinish={toggleModal} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    autoFormat: getSourceAutoFormat(state),\n    canUndo: getCanUndo(state),\n    canRedo: getCanRedo(state),\n    mode: getQueryMode(state),\n})\n\nexport default connect(mapStateToProps, {\n    onFileContentReady: Actions.updateSource,\n    onReset: Actions.resetEditor,\n    onClear: Actions.clearEditor,\n    onUndo: Actions.undo,\n    onRedo: Actions.redo,\n    resetHistory: ActionCreators.clearHistory,\n    changeAutoFormat: Actions.updateAutoFormatSource,\n    setQueryMode: Actions.updateQueryMode,\n})(memo(withErrorBoundary(withPerformance(LateralMenu, 'LateralMenu'))))\n","import 'react-grid-layout/css/styles.css'\n\nimport Actions from 'actions/actions'\nimport { configuration } from 'config'\nimport { withPerformance } from 'core/logging/performance'\nimport * as React from 'react'\nimport { FC, lazy, Suspense, useEffect } from 'react'\nimport { Responsive, WidthProvider } from 'react-grid-layout'\nimport { connect } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport { QueryMode } from 'state/State'\nimport { getLayouts, getQueryMode } from 'store/selectors'\n\nimport appStyles from './App.module.scss'\nimport { GrabbleHeader } from './common/GrabbleHeader'\nimport grabbleStyles from './common/GrabbleHeader.module.scss'\nimport Header from './Header'\nimport LateralMenu from './LateralMenu'\n\nconst ResponsiveGridLayout = WidthProvider(Responsive)\nconst SourceEditor = lazy(() => import(/* webpackChunkName: \"SourceEditor\" */ 'components/source/SourceEditor'))\nconst Output = lazy(() => import(/* webpackChunkName: \"Output\" */ 'components/output/Output'))\nconst QueryEditor = lazy(() => import(/* webpackChunkName: \"QueryEditor\" */ 'components/query/QueryEditor'))\n\ntype Props = {\n    mode: QueryMode\n    layouts: ReactGridLayout.Layouts\n    updateGridLayouts: typeof Actions.updateLayouts\n    execQuery: typeof Actions.execQuery\n}\nconst App: FC<Props> = ({ mode, layouts, updateGridLayouts, execQuery }) => {\n    useEffect(() => {\n        execQuery()\n    }, [execQuery])\n    const onLayoutChange = (_: ReactGridLayout.Layout[], newLayouts: ReactGridLayout.Layouts) => updateGridLayouts(newLayouts)\n\n    return (\n        <>\n            <Header />\n            <div className=\"container-fluid mb-5\">\n                <h1 className=\"my-5\">Paste your JSON and Query it.</h1>\n                <ResponsiveGridLayout\n                    autoSize={true}\n                    className=\"layout\"\n                    isResizable={true}\n                    layouts={layouts}\n                    draggableHandle={`.${grabbleStyles.grabber}`}\n                    breakpoints={{ xs: 0, lg: 1024 }}\n                    cols={{ lg: 24, xs: 6 }}\n                    margin={[5, 5]}\n                    containerPadding={[5, 5]}\n                    rowHeight={25}\n                    onLayoutChange={onLayoutChange}\n                    compactType={null}\n                    maxRows={75}\n                >\n                    <div key={configuration.layout.keys.lateralMenuKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"Options\">\n                            <LateralMenu />\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.sourceEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"1. Paste your JSON:\">\n                            <Suspense fallback={'loading...'}>\n                                <SourceEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.queryEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title={`2. Type your ${mode} query:`}>\n                            <Suspense fallback={'loading...'}>\n                                <QueryEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.outputKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"3. View your results:\">\n                            <Suspense fallback={'loading...'}>\n                                <Output />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                </ResponsiveGridLayout>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default connect((state) => ({ mode: getQueryMode(state), layouts: getLayouts(state) }), {\n    updateGridLayouts: Actions.updateLayouts,\n    execQuery: Actions.execQuery,\n})(withPerformance(App, 'App'))\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.toString())\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(`This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ`)\n                })\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === 'installed') {\n                            if (navigator.serviceWorker.controller) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log('New content is available; please refresh.')\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log('Content is cached for offline use.')\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (response.status === 404 || response.headers.get('content-type')?.indexOf('javascript') === -1) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister()\n        })\n    }\n}\n","export const jsonBeautify = (str: string | undefined) => {\n    if (typeof str !== 'string') {\n        return ''\n    }\n\n    const parsed = jsonParseSafe(str)\n    if (typeof parsed === 'string') {\n        return parsed\n    }\n\n    if (parsed === null) {\n        return ''\n    }\n\n    return JSON.stringify(parsed, null, 2)\n}\n\nexport const jsonParseSafe = (str: string | null) => {\n    if (typeof str !== 'string' || str.trim() === '') {\n        return null\n    }\n\n    const safeStr = str\n        .replace(/\\\\n/g, '\\\\n')\n        .replace(/\\\\'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\\\\\"')\n        .replace(/\\\\&/g, '\\\\&')\n        .replace(/\\\\r/g, '\\\\r')\n        .replace(/\\\\t/g, '\\\\t')\n        .replace(/\\\\b/g, '\\\\b')\n        .replace(/\\\\f/g, '\\\\f')\n\n    try {\n        return JSON.parse(safeStr)\n    } catch (error) {\n        return str\n    }\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport undoable from 'redux-undo'\n\nimport actions, { Action } from '../actions/actions'\nimport { configuration } from '../config'\nimport { codeEvaluation } from '../core/code'\nimport { jsonBeautify } from '../core/converters/json'\nimport { containsIgnoreCase } from '../core/converters/string'\nimport { arrayElementName } from '../models/array'\nimport initialStateJson from '../state/default-state.json'\nimport * as State from '../state/State'\n\nexport const appReducer = createReducer<State.AppState>(State.getDefaultAppState(), (builder) =>\n    builder\n        .addCase(actions.clearEditor, () => State.emptyState)\n        .addMatcher<Action>(\n            (action): action is Exclude<Action, ReturnType<typeof actions.clearEditor>> => {\n                return action.type !== 'CLEAR_EDITOR' && Object.values(actions).some((x) => x.type === action.type)\n            },\n            (draft, action) => {\n                if (draft.query) {\n                    draft.query = query(draft.query, action)\n                }\n                if (draft.source) {\n                    draft.source = source(draft.source, action)\n                }\n\n                switch (action.type) {\n                    case 'UPDATE_QUERY':\n                    case 'UPDATE_SOURCE_TEXT':\n                    case 'RESET_EDITOR':\n                    case 'UPDATE_QUERY_MODE':\n                    case 'EXECUTE_QUERY':\n                        draft.output = computeOutput(\n                            draft.output,\n                            draft.source?.text ? draft.source.text : '',\n                            draft.query?.text ? draft.query.text : '',\n                            action,\n                            draft.query?.mode ? draft.query.mode : 'SQL',\n                        )\n                        return\n                    case 'TOGGLE_OUTPUT_TABLE_MODAL':\n                        if (draft.output?.table) {\n                            draft.output.table.isModalOpen = !draft.output.table?.isModalOpen\n                        }\n                        return\n\n                    case 'UPDATE_OUTPUT_TAB_SELECTION':\n                        if (draft.output) {\n                            draft.output.selectedTab = action.payload\n                        }\n                        return\n                    case 'UPDATE_OUTPUT_SEARCH_TERM':\n                        if (draft.output) {\n                            draft.output = filter(draft.output, action.payload)\n                            draft.output.searchTerm = action.payload\n                            draft.output.selectedTab = 'RawJson'\n                        }\n                        return\n                }\n            },\n        )\n        .addMatcher(\n            (_action): _action is Action => true,\n            (draft, action) => {\n                if (draft.output) {\n                    draft.output.table = table(draft.output?.table, action)\n                }\n            },\n        ),\n)\n\nexport const source = createReducer<State.SourceState>({}, (builder) =>\n    builder\n        .addCase(actions.updateSource, (state, action) => {\n            state.text = state?.autoFormat ? jsonBeautify(action.payload.trim()) : action.payload\n        })\n        .addCase(actions.updateAutoFormatSource, (state, action) => {\n            state.text = action.payload ? jsonBeautify(state?.text?.trim()) : state?.text ?? ''\n            state.autoFormat = action.payload\n        }),\n)\n\nexport const userSettings = createReducer<State.UserSettingsState>(State.getDefaultUserSettingsState(), (builder) =>\n    builder\n        .addCase(actions.resetEditor, () => State.getDefaultUserSettingsState())\n        .addCase(actions.switchTheme, (state, action) => {\n            state.globalTheme = action.payload\n        })\n        .addCase(actions.switchEditorTheme, (state, action) => {\n            state.editorTheme = action.payload\n        })\n        .addCase(actions.updateLayouts, (state, action) => {\n            state.layouts = action.payload\n        }),\n)\nexport const query = createReducer<State.QueryState>({}, (builder) =>\n    builder\n        .addCase(actions.updateQuery, (state, action) => {\n            state.text = action.payload\n        })\n        .addCase(actions.updateQueryMode, (state, action) => {\n            state.mode = action.payload\n            state.text =\n                action.payload === 'SQL'\n                    ? initialStateJson.query.text\n                    : '// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// \\n\\n      data\\n    '\n        }),\n)\n\nexport const computeOutput = (\n    previousState: State.OupoutState | undefined,\n    sourceString: string,\n    queryString: string,\n    action: Action,\n    mode: State.QueryMode,\n) => {\n    const evaluation = codeEvaluation(sourceString, queryString, mode)\n\n    if (evaluation instanceof Error) {\n        return {\n            selectedTab: 'RawJson' as const,\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            errorMessage: evaluation.message,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        }\n    }\n\n    const { text, obj } = evaluation ?? { text: null, obj: null }\n    let displayedColumns = new Array<string>()\n    if (Array.isArray(obj)) {\n        const keyMap: { [key: string]: string } = {}\n        obj.forEach((d) => {\n            if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n                const keysToAdd = d ? (typeof d === 'object' ? Object.keys(d) : [arrayElementName]) : []\n                keysToAdd.forEach((key) => (keyMap[key] = key))\n            }\n        })\n        displayedColumns = Object.keys(keyMap)\n            .filter((key) => key && typeof key === 'string' && key.trim() !== '')\n            .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n    }\n    const isModalOpen =\n        previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n            ? previousState && !previousState.table.isModalOpen\n            : previousState && previousState.table\n            ? previousState.table.isModalOpen\n            : false\n\n    let selectedTab: State.tabType = Array.isArray(obj) ? 'Table' : 'RawJson'\n\n    if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n        selectedTab = action.payload\n    }\n    return {\n        selectedTab,\n        obj: obj,\n        objSize: text ? text.length : 0,\n        searchTerm: '',\n        match: false,\n        table: {\n            isArray: Array.isArray(obj),\n            isModalOpen,\n            displayedColumns,\n            columns: displayedColumns,\n            groupBy: previousState?.table?.groupBy ?? [],\n        },\n    }\n}\n\nconst table = createReducer<State.OupoutTableState>(State.getDefaultAppState().output.table as State.OupoutTableState, (builder) =>\n    builder\n        .addCase(actions.updateTableColumns, (state, action) => {\n            state.displayedColumns = action.payload\n\n            if (!state.groupBy) {\n                return\n            }\n            for (let i = 0; i < state.groupBy.length; i++) {\n                const element = state.groupBy[i]\n                if (!action.payload.includes(element)) {\n                    state.groupBy.splice(i, 1)\n                }\n            }\n        })\n        .addCase(actions.updateTableGroupBy, (state, action) => {\n            state.groupBy = action.payload\n                .filter((gb) => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1)\n                .filter((gb) => gb !== 'Group by...')\n        }),\n)\n\nexport const containsTerm = (src: any, searchTerm: string) => {\n    if (typeof src !== 'string' && typeof src !== 'object') {\n        return { match: false, filteredObj: src }\n    }\n\n    if (typeof src === 'string') {\n        if (containsIgnoreCase(src, searchTerm)) {\n            return { match: true, filteredObj: src }\n        }\n        return { match: false, filteredObj: src }\n    }\n    const obj: { [key: string]: unknown } = Array.isArray(src) ? [...src] : { ...src }\n\n    const keys = Array.isArray(obj)\n        ? Array.from({ length: obj.length }, (_, k) => k)\n        : Object.getOwnPropertyNames(obj).filter((propertyName) => propertyName)\n\n    let result = false\n\n    for (const propertyName of keys) {\n        const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n        if (propertyNameContains) {\n            result = true\n            continue\n        }\n        const child = obj[propertyName]\n        const { match, filteredObj } = containsTerm(child, searchTerm)\n        if (propertyNameContains || match) {\n            result = true\n            obj[propertyName] = filteredObj\n        } else {\n            if (Array.isArray(obj) && typeof propertyName === 'number') {\n                obj.splice(propertyName, 1)\n            } else {\n                delete obj[propertyName]\n            }\n        }\n    }\n    if (!result) {\n        if (!Array.isArray(obj)) {\n            keys.forEach((propertyName: string | number) => delete obj[propertyName])\n        } else {\n            obj.length = 0\n        }\n    }\n    return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: State.OupoutState, searchTerm: string) => {\n    if (!searchTerm || searchTerm.trim() === '' || !state) {\n        return { ...state, match: false }\n    }\n    const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n    if (match) {\n        return { ...state, obj: filteredObj, match }\n    }\n\n    return state\n}\n\nexport const resetApp = (state: State.AppState = State.getDefaultAppState(), action: Action) => {\n    if (action.type === 'RESET_EDITOR') {\n        return appReducer(State.getDefaultAppState(), action)\n    }\n    return appReducer(state, action)\n}\n\nconst rootReducers = combineReducers({\n    app: undoable(resetApp, {\n        undoType: 'APP_UNDO',\n        redoType: 'APP_REDO',\n        limit: configuration.limitUndo,\n    }),\n    userSettings,\n})\nexport default rootReducers\n","import { configuration } from 'config'\nimport { logError } from 'core/logging/logger'\nimport localForage from 'localforage'\nimport { merge } from 'lodash-es'\nimport { toast } from 'react-toastify'\nimport { StateWithHistory } from 'redux-undo'\nimport { AppState, getDefaultAppState, getDefaultUserSettingsState, UserSettingsState } from 'state/State'\n\nconst persistAppState = (appstate: StateWithHistory<AppState>): void => {\n    void persist(configuration.storageKey.appState, appstate)\n}\n\nconst persistUserSettings = (userSettings: UserSettingsState): void => {\n    void persist(configuration.storageKey.userSettings, userSettings)\n}\n\nconst getUserSettings = (): Promise<UserSettingsState> => loadUserSettings(configuration.storageKey.userSettings)\nconst getAppState = (): Promise<StateWithHistory<AppState>> => loadAppState(configuration.storageKey.appState)\n\nconst persist = async (key: string, value: StateWithHistory<AppState> | UserSettingsState | undefined) => {\n    try {\n        await localForage.setItem(key, value)\n    } catch (error) {\n        toast.warn(`Error while saving ${key} to storage. ${error}`)\n    }\n}\n\nconst getDefault = (key: string) => {\n    switch (key) {\n        case configuration.storageKey.appState:\n            return getDefaultAppState()\n        case configuration.storageKey.userSettings:\n            return getDefaultUserSettingsState()\n        default:\n            throw new Error(`no defaul value for ${key}`)\n    }\n}\n\nconst loadAppState = async (key: string): Promise<StateWithHistory<AppState>> => {\n    const present = merge({}, getDefault(key))\n    try {\n        const savedState = await localForage.getItem<StateWithHistory<AppState>>(key)\n        return merge({ present }, savedState ?? {})\n    } catch (error) {\n        logError(error)\n    }\n\n    return { future: [], past: [], present: {} }\n}\nconst loadUserSettings = async (key: string) => {\n    const state = getDefault(key)\n    try {\n        const savedState = await localForage.getItem<UserSettingsState>(key)\n        return merge(state, savedState ?? {})\n    } catch (error) {\n        logError(error)\n    }\n\n    return {}\n}\n\nconst persistence = {\n    getAppState,\n    getUserSettings,\n    persistAppState,\n    persistUserSettings,\n}\n\nexport default persistence\n","import { configureStore as conf, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport Actions from 'actions/actions'\nimport { createLogger } from 'redux-logger'\n\nimport rootReducers from '../reducers/reducers'\nimport persistence from './persistence'\n\nexport const configureStore = async () => {\n    const appState = await persistence.getAppState()\n    const userSettingsState = await persistence.getUserSettings()\n    const preloadedState = {\n        app: {\n            past: appState.past ?? [],\n            present: appState.present,\n            future: appState.future ?? [],\n        },\n        userSettings: userSettingsState,\n    }\n\n    const logger = createLogger({\n        predicate: () => process.env.NODE_ENV !== 'test',\n        duration: true,\n    })\n    const middleware = [\n        ...getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [Actions.clearEditor.type],\n            },\n        }),\n        logger,\n    ]\n\n    const store = conf({\n        reducer: rootReducers,\n        devTools: process.env.NODE_ENV !== 'production',\n        preloadedState,\n        middleware,\n    })\n\n    store.subscribe(() => {\n        persistence.persistAppState(store.getState().app)\n        persistence.persistUserSettings(store.getState().userSettings)\n    })\n\n    return store\n}\n","import 'react-toastify/dist/ReactToastify.min.css'\nimport './index.scss'\n\nimport * as React from 'react'\nimport { Provider } from 'react-redux'\n\nimport App from './components/App'\nimport { logDebug, logError } from './core/logging/logger'\nimport { unregister } from './registerServiceWorker'\nimport { getTheme } from './store/selectors'\nimport { configureStore } from './store/store'\nimport { importThemeStyleCustom } from './themes/themes'\n\nconst bootstrap = async () => {\n    const store = await configureStore()\n    const promises = await Promise.all([\n        import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n        importThemeStyleCustom(getTheme(store.getState())),\n    ])\n\n    const ReactDOM = promises[0]\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root') as HTMLElement,\n    )\n    unregister()\n}\n\nbootstrap()\n    .then(() => logDebug('loaded'))\n    .catch((e) => logError('boostrap error', e))\n","import { configuration } from 'config'\nimport { StateWithHistory } from 'redux-undo'\nimport { EditorTheme, GeneralTheme } from 'themes/themes'\nimport { DeepReadonly, DeepRequired } from 'utility-types'\n\nimport initialStateJson from './default-state.json'\n\nexport type itemType = any\n\nexport type AppState = {\n    source?: SourceState\n    query?: QueryState\n    output?: OupoutState\n    error?: Error\n}\nexport type QueryState = {\n    text?: string\n    mode?: QueryMode\n}\nexport type SourceState = {\n    text?: string\n    autoFormat?: boolean\n}\nexport type OupoutState = {\n    searchTerm?: string\n    match?: boolean\n    selectedTab?: tabType\n    obj?: unknown | null\n    objSize?: number\n    errorMessage?: string\n    table?: OupoutTableState\n}\nexport type OupoutTableState = {\n    isArray?: boolean\n    isModalOpen?: boolean\n    displayedColumns?: string[]\n    columns?: string[]\n    groupBy?: string[]\n}\nexport type UserSettingsState = DeepReadonly<{\n    globalTheme?: GeneralTheme\n    editorTheme?: EditorTheme\n    debugMode?: boolean\n    layouts?: ReactGridLayout.Layouts\n}>\n\nexport type tabType = 'RawJson' | 'Table'\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type RootState = DeepReadonly<{\n    app?: StateWithHistory<AppState>\n    userSettings?: UserSettingsState\n}>\n\nexport const getDefaultAppState = () => (initialStateJson as unknown) as DeepRequired<AppState>\nexport const defaultAppState = initialStateJson as AppState\nexport const getDefaultUserSettingsState = () =>\n    ({\n        globalTheme: 'pulse',\n        editorTheme: 'github',\n        debugMode: false,\n        layouts: {\n            xs: [\n                { i: configuration.layout.keys.lateralMenuKey, x: 0, y: 0, w: 6, h: 16, minW: 6, minH: 12 },\n                { i: configuration.layout.keys.sourceEditorKey, x: 0, y: 17, w: 6, h: 6, minW: 6, minH: 6 },\n                { i: configuration.layout.keys.queryEditorKey, x: 0, y: 24, w: 6, h: 6, minW: 6, minH: 6 },\n                { i: configuration.layout.keys.outputKey, x: 0, y: 31, w: 6, h: 35, minW: 6, minH: 12 },\n            ],\n            lg: [\n                { i: configuration.layout.keys.lateralMenuKey, x: 18, y: 0, w: 3, h: 20, minW: 3, minH: 20 },\n                { i: configuration.layout.keys.sourceEditorKey, x: 3, y: 0, w: 7, h: 15, minW: 6, minH: 10 },\n                { i: configuration.layout.keys.queryEditorKey, x: 10, y: 0, w: 7, h: 15, minW: 6, minH: 10 },\n                { i: configuration.layout.keys.outputKey, x: 3, y: 15, w: 14, h: 34, minW: 12, minH: 15 },\n            ],\n        },\n    } as const)\n\nexport const emptyState = {\n    source: { text: '', autoFormat: true },\n    query: { text: '', mode: 'SQL' as const },\n    output: {\n        match: false,\n        obj: {},\n        objSize: 2,\n        searchTerm: '',\n        selectedTab: 'RawJson' as const,\n        table: {\n            isArray: false,\n            columns: [],\n            displayedColumns: [],\n            isModalOpen: false,\n            groupBy: [],\n        },\n    },\n}\n","import { getDefaultUserSettingsState, RootState } from 'state/State'\n\nconst copyArrayOrEmpty = <T = unknown>(array: readonly T[] | null | undefined) => {\n    if (!array) {\n        return [] as T[]\n    }\n\n    return [...array] as T[]\n}\n\nexport const getOutputErrorMessage = (state: RootState) => state?.app?.present?.output?.errorMessage ?? ''\nexport const getOutputIsArray = (state: RootState) => !!state?.app?.present?.output?.table?.isArray\nexport const getOutputActiveTab = (state: RootState) => state?.app?.present?.output?.selectedTab ?? ('RawJson' as const)\nexport const getOutputObject = (state: RootState) => state?.app?.present?.output?.obj ?? {}\nexport const getOutputObjectSize = (state: RootState) => state?.app?.present?.output?.objSize ?? 0\nexport const getOutputSearchTerm = (state: RootState) => state?.app?.present?.output?.searchTerm\nexport const getOutputSearchMatch = (state: RootState) => !!state?.app?.present?.output?.match\nexport const getisOutputTableModalOpen = (state: RootState) => !!state?.app?.present?.output?.table?.isModalOpen\n\nexport const getTheme = (state: RootState) => state?.userSettings?.globalTheme ?? getDefaultUserSettingsState().globalTheme\nexport const getEditorTheme = (state: RootState) => state?.userSettings?.editorTheme ?? getDefaultUserSettingsState().editorTheme\nexport const getLayouts = (state: RootState) =>\n    (state?.userSettings?.layouts ?? getDefaultUserSettingsState().layouts) as ReactGridLayout.Layouts\n\nexport const getdisplayedColumns = (state: RootState) => copyArrayOrEmpty(state?.app?.present?.output?.table?.displayedColumns)\nexport const getOutputarray = (state: RootState) =>\n    Array.isArray(state?.app?.present?.output?.obj) ? copyArrayOrEmpty(state?.app?.present?.output?.obj) : []\nexport const getColumns = (state: RootState) => copyArrayOrEmpty(state?.app?.present?.output?.table?.columns)\nexport const getGroupBy = (state: RootState) => copyArrayOrEmpty(state?.app?.present?.output?.table?.groupBy)\n\nexport const getQueryText = (state: RootState) => state?.app?.present?.query?.text ?? ''\nexport const getQueryMode = (state: RootState) => state?.app?.present?.query?.mode ?? ('SQL' as const)\nexport const getSourceText = (state: RootState) => state?.app?.present?.source?.text ?? ''\nexport const getSourceAutoFormat = (state: RootState) => !!state?.app?.present?.source?.autoFormat\nexport const getCanRedo = (state: RootState) => state?.app?.future?.length !== 0\nexport const getCanUndo = (state: RootState) => (state?.app?.past?.length ?? 0) > 1\nexport const getDebugMode = (state: RootState) => !!state?.userSettings?.debugMode\n","import { ChangeEvent, useCallback, useState } from 'react'\n\nexport const useToggleState = (initial = false): readonly [boolean, () => void] => {\n    const [value, setValue] = useState(initial)\n    return [value, () => setValue(!value)]\n}\n\ntype HtmlElementHookable = HTMLSelectElement | HTMLInputElement\n\nexport const useChangeEventState = (initialValue: string): readonly [string, (e: ChangeEvent<HtmlElementHookable>) => void] => {\n    const [value, setValue] = useState(initialValue)\n\n    const eventHandler = useCallback(\n        (event: ChangeEvent<HtmlElementHookable>) => {\n            if (event && event.target) {\n                setValue(event.target.value)\n            }\n        },\n        [setValue],\n    )\n\n    return [value, eventHandler]\n}\n","import { logError } from 'core/logging/logger'\nimport * as React from 'react'\nimport { Component, ComponentType } from 'react'\nimport { toast } from 'react-toastify'\n\nconst MISSING_ERROR = 'Error was swallowed during propagation.'\n\ntype State = {\n    error?: Error\n}\n\nclass ErrorBoundary extends Component<unknown, State> {\n    public readonly state: State = {\n        error: undefined,\n    }\n\n    public componentDidCatch(error: Error | null, info: unknown) {\n        this.setState({ error: error || new Error(MISSING_ERROR) }, () => this.notify(info))\n    }\n\n    public render() {\n        const { children } = this.props\n        const { error } = this.state\n\n        if (error) {\n            return <>An error occured</>\n        }\n\n        return children\n    }\n\n    private notify(info: unknown) {\n        logError('An error occured', this.state.error)\n        logError('error info:', info)\n        toast.error(JSON.stringify(info), { position: 'bottom-right', hideProgressBar: true, autoClose: false })\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const withErrorBoundary = <T extends {}>(Wrapped: ComponentType<T>) => {\n    const WithErrorBoundary = (props: T) => (\n        <ErrorBoundary>\n            <Wrapped {...props} />\n        </ErrorBoundary>\n    )\n    return WithErrorBoundary\n}\n","import { isDebugMode } from 'core/misc/debug'\nimport Perfume from 'perfume.js'\nimport { IAnalyticsTrackerOptions } from 'perfume.js/dist/types/types'\nimport * as React from 'react'\nimport { ProfilerOnRenderCallback } from 'react'\n\nimport { logError, logEvents, logPerf } from './logger'\n\nconst analyticsTracker = (opt: IAnalyticsTrackerOptions) => {\n    logPerf(opt.metricName, opt.duration, opt.data)\n}\n\nconst options = {\n    // Metrics\n    firstContentfulPaint: true,\n    firstPaint: true,\n    firstInputDelay: true,\n    dataConsumption: true,\n    largestContentfulPaint: true,\n    navigationTiming: true,\n    // Analytics\n    analyticsTracker,\n    browserTracker: true,\n    // Logging\n    logPrefix: 'Perfume.js:',\n    logging: false,\n    // maxMeasureTime: 18000,\n    // maxDataConsumption: 18000,\n    warning: true,\n    debugging: false,\n}\n\nconst perfume = isDebugMode() ? new Perfume(options) : null\nexport const perfStart = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.start(name)\n}\n\nexport const perfEnd = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.end(name)\n}\n\nexport const perfEndPaint = (name: string) => {\n    if (!perfume) {\n        return\n    }\n    perfume.endPaint(name)\n}\n\nexport const logPerfPeriodically = async () => {\n    const payload = []\n    for (let i = 0; i < 50; i++) {\n        if (logEvents.isEmpty()) {\n            break\n        }\n        const entry = logEvents.dequeue()\n\n        payload.push(entry)\n    }\n\n    if (payload.length === 0) {\n        return\n    }\n    const logUrl = 'https://us-central1-keyrier-json.cloudfunctions.net/perflogs'\n\n    try {\n        await fetch(logUrl, { method: 'POST', body: JSON.stringify(payload) })\n    } catch (error) {\n        logError('error sending perf logs', error)\n    }\n}\n\nexport function withPerformance<P>(Component: React.ComponentType<P>, name: string): React.FC<P> {\n    const WithPerf = ({ ...props }) => {\n        const onRender: ProfilerOnRenderCallback = (id, phase, actualDuration, baseDuration, startTime, commitTime, interactions) => {\n            logPerf(name, actualDuration, {\n                type: 'component-render',\n                id,\n                phase,\n                actualDuration,\n                baseDuration,\n                startTime,\n                commitTime,\n                interactions,\n            })\n        }\n\n        return (\n            <React.Profiler id={`perf-${name}`} onRender={onRender}>\n                <Component {...(props as P)} />\n            </React.Profiler>\n        )\n    }\n    return WithPerf\n}\n","export const customToString = (obj: unknown): string => {\n    if (Array.isArray(obj)) {\n        return obj.map((e) => customToString(e)).join(',')\n    }\n    if (typeof obj === 'object') {\n        return JSON.stringify(obj)\n    }\n    if (obj !== null && obj !== undefined) {\n        return (obj as any).toString()\n    }\n\n    return ''\n}\n\nexport const takeFirst = (str: string | null | undefined, n: number) => {\n    if (typeof str !== 'string') {\n        return null\n    }\n    if (str.length <= n) {\n        return str\n    }\n    return `${str.substring(0, n)}...`\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n    if (!str || !part) {\n        return false\n    }\n    if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n        return true\n    }\n\n    return false\n}\n\nconst UNITS = ['B', 'kB', 'MB', 'GB']\n\nexport const prettyPrintBytes = (value: number) => {\n    if (!Number.isFinite(value)) {\n        throw new TypeError(`Expected a finite number, got ${typeof value}: ${value}`)\n    }\n\n    const isNegative = value < 0\n    const prefix = isNegative ? '-' : ''\n    if (isNegative) {\n        value = -value\n    }\n    if (value < 1) {\n        const numberStr = value.toString()\n        return prefix + numberStr + ' B'\n    }\n    const exponent = Math.min(Math.floor(Math.log10(value) / 3), UNITS.length - 1)\n    value = Number((value / Math.pow(1024, exponent)).toPrecision(3))\n    const numberString = value.toString()\n    const unit = UNITS[exponent]\n    return prefix + numberString + ' ' + unit\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draggable\":\"GrabbleHeader_draggable__3DRIT\",\"grabber\":\"GrabbleHeader_grabber__12Y6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridborder\":\"App_gridborder__3A34e\"};","export const isDebugMode = () => window.__DEBUG__\n\ndeclare global {\n    interface Window {\n        __DEBUG__: boolean\n    }\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { QueryMode, tabType } from 'state/State'\nimport { EditorTheme, GeneralTheme } from 'themes/themes'\n\nconst Actions = {\n    resetEditor: createAction('RESET_EDITOR'),\n    clearEditor: createAction('CLEAR_EDITOR'),\n    execQuery: createAction('EXECUTE_QUERY'),\n    updateSource: createAction<string, 'UPDATE_SOURCE_TEXT'>('UPDATE_SOURCE_TEXT'),\n    updateAutoFormatSource: createAction<boolean, 'UPDATE_AUTOFORMAT_SOURCE'>('UPDATE_AUTOFORMAT_SOURCE'),\n    updateQueryMode: createAction<QueryMode, 'UPDATE_QUERY_MODE'>('UPDATE_QUERY_MODE'),\n    updateQuery: createAction<string, 'UPDATE_QUERY'>('UPDATE_QUERY'),\n    updateOutputTabSelection: createAction<tabType, 'UPDATE_OUTPUT_TAB_SELECTION'>('UPDATE_OUTPUT_TAB_SELECTION'),\n    toggleOutputTableModal: createAction('TOGGLE_OUTPUT_TABLE_MODAL'),\n    updateTableColumns: createAction<string[], 'UPDATE_TABLE_COLUMNS'>('UPDATE_TABLE_COLUMNS'),\n    updateTableGroupBy: createAction<string[], 'UPDATE_TABLE_GROUP_BY'>('UPDATE_TABLE_GROUP_BY'),\n    updateSearchTerm: createAction<string, 'UPDATE_OUTPUT_SEARCH_TERM'>('UPDATE_OUTPUT_SEARCH_TERM'),\n    undo: createAction('APP_UNDO'),\n    redo: createAction('APP_REDO'),\n    switchTheme: createAction<GeneralTheme, '@USER_SETTINGS/SWITCH_GLOBAL_THEME'>('@USER_SETTINGS/SWITCH_GLOBAL_THEME'),\n    switchEditorTheme: createAction<EditorTheme, '@USER_SETTINGS/SWITCH_EDITOR_THEME'>('@USER_SETTINGS/SWITCH_EDITOR_THEME'),\n    updateLayouts: createAction<ReactGridLayout.Layouts, '@USER_SETTINGS/UPDATE_LAYOUTS'>('@USER_SETTINGS/UPDATE_LAYOUTS'),\n}\n\nexport type Action = ReturnType<typeof Actions[keyof typeof Actions]>\n\nexport default Actions\n"],"sourceRoot":""}