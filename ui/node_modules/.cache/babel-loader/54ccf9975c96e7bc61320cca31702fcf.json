{"ast":null,"code":"var _jsxFileName = \"/home/magoo/projects/keyrier-json/ui/src/components/LateralMenu.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { updateSource, resetEditor, clearEditor, updateAutoFormatSource, undo, redo, updateQueryMode } from 'actions/actions';\nimport HttpRequestSource from './source/RequestSource';\nimport { logDebug } from 'core/logging/logger';\nimport { useToggleState } from 'hooks/hooks';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Modal, ModalHeader, ModalBody, ModalFooter, Button, ButtonGroup, Label } from 'reactstrap';\nimport { memo, useCallback } from 'react';\nimport { withErrorBoundary } from 'components/common/ErrorBoundary';\nimport { getSourceAutoFormat, getCanUndo, getCanRedo, getQueryMode } from 'store/selectors';\nimport { withPerformance } from 'core/logging/performance';\n\nconst LateralMenu = ({\n  onReset,\n  onFileContentReady,\n  onClear,\n  autoFormat,\n  changeAutoFormat,\n  onRedo,\n  onUndo,\n  canRedo,\n  canUndo,\n  setQueryMode,\n  mode\n}) => {\n  const [dropdownIsOpen, toggleDropdown] = useToggleState();\n  const [modalIsOpen, toggleModal] = useToggleState();\n  const handleFileChange = useCallback(e => {\n    var _e$target, _e$target$files;\n\n    logDebug('onFileChange');\n    toggleDropdown();\n\n    if (e.target.files && ((_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$files = _e$target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files.length) > 0) {\n      const fileReader = new FileReader();\n      logDebug('e.target.files', e.target.files[0].name);\n\n      fileReader.onload = () => {\n        if (fileReader.result) {\n          onFileContentReady(fileReader.result.toString());\n        }\n      };\n\n      fileReader.readAsText(e.target.files[0]);\n    }\n  }, [toggleDropdown, onFileContentReady]);\n  const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    className: \"d-flex\",\n    vertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    vertical: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"d-flex justify-content-center align-content-between\",\n    color: \"secondary\",\n    size: 'sm',\n    onClick: onUndo,\n    disabled: !canUndo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons mr-1 md-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"undo\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Undo\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"d-flex justify-content-center align-content-between\",\n    color: \"secondary\",\n    size: 'sm',\n    onClick: onRedo,\n    disabled: !canRedo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Redo\", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons mr-1 md-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, \"redo\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    className: \"d-flex justify-content-center align-content-between\",\n    check: true,\n    onClick: handleAutoFormatChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, autoFormat ? 'check_box' : 'check_box_outline_blank'), \"Auto format\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonDropdown, {\n    isOpen: dropdownIsOpen,\n    toggle: toggleDropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    className: \"d-flex justify-content-center align-content-between\",\n    size: 'lg',\n    id: \"import-menu-button\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons mr-1 md-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, \"unarchive\"), \"Import\"), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    toggle: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"import-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, \"Browse JSON file...\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"sourceFile\",\n    style: {\n      display: 'none'\n    },\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(DropdownItem, {\n    id: \"http-request\",\n    onClick: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, \"HTTP request\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"d-flex justify-content-center align-content-between\",\n    color: \"secondary\",\n    size: 'lg',\n    onClick: onReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons md-18 mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, \"autorenew\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }), mode === 'Javascript' ? /*#__PURE__*/React.createElement(Button, {\n    className: \"d-flex justify-content-center align-content-between\",\n    color: \"secondary\",\n    size: 'lg',\n    onClick: () => setQueryMode('SQL'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons md-18  mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, \"settings\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, \"Switch to SQL-like\")) : /*#__PURE__*/React.createElement(Button, {\n    className: \"d-flex justify-content-center align-content-between\",\n    color: \"secondary\",\n    size: 'lg',\n    onClick: () => setQueryMode('Javascript'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons md-18  mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, \"settings\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, \"Switch to JS\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"d-flex justify-content-center align-content-between\",\n    color: \"danger\",\n    size: 'lg',\n    onClick: onClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons md-18  mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, \"clear\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"Clear\"))), /*#__PURE__*/React.createElement(Modal, {\n    id: \"requestModal\",\n    role: \"dialog\",\n    size: \"lg\",\n    isOpen: modalIsOpen,\n    toggle: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"Import JSON from an HTTP request\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(HttpRequestSource, {\n    onFinish: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, \"Cancel\"))));\n};\n\nconst mapStateToProps = state => ({\n  autoFormat: getSourceAutoFormat(state),\n  canUndo: getCanUndo(state),\n  canRedo: getCanRedo(state),\n  mode: getQueryMode(state)\n});\n\nexport default connect(mapStateToProps, {\n  onFileContentReady: updateSource,\n  onReset: resetEditor,\n  onClear: clearEditor,\n  onUndo: undo,\n  onRedo: redo,\n  changeAutoFormat: updateAutoFormatSource,\n  setQueryMode: updateQueryMode\n})(memo(withErrorBoundary(withPerformance(LateralMenu, 'LateralMenu'))));","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/ui/src/components/LateralMenu.tsx"],"names":["React","connect","updateSource","resetEditor","clearEditor","updateAutoFormatSource","undo","redo","updateQueryMode","HttpRequestSource","logDebug","useToggleState","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Modal","ModalHeader","ModalBody","ModalFooter","Button","ButtonGroup","Label","memo","useCallback","withErrorBoundary","getSourceAutoFormat","getCanUndo","getCanRedo","getQueryMode","withPerformance","LateralMenu","onReset","onFileContentReady","onClear","autoFormat","changeAutoFormat","onRedo","onUndo","canRedo","canUndo","setQueryMode","mode","dropdownIsOpen","toggleDropdown","modalIsOpen","toggleModal","handleFileChange","e","target","files","length","fileReader","FileReader","name","onload","result","toString","readAsText","handleAutoFormatChange","display","mapStateToProps","state"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    updateSource,\n    resetEditor,\n    clearEditor,\n    updateAutoFormatSource,\n    undo,\n    redo,\n    updateQueryMode,\n} from 'actions/actions'\nimport HttpRequestSource from './source/RequestSource'\nimport { logDebug } from 'core/logging/logger'\nimport { useToggleState } from 'hooks/hooks'\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    ButtonGroup,\n    Label,\n} from 'reactstrap'\nimport { memo, useCallback, FC, ChangeEvent } from 'react'\nimport { withErrorBoundary } from 'components/common/ErrorBoundary'\nimport { getSourceAutoFormat, getCanUndo, getCanRedo, getQueryMode } from 'store/selectors'\nimport { RootState, QueryMode } from 'state/State'\nimport { withPerformance } from 'core/logging/performance'\n\ninterface Props {\n    onFileContentReady: typeof updateSource\n    changeAutoFormat: typeof updateAutoFormatSource\n    onReset: typeof resetEditor\n    onClear: typeof clearEditor\n    setQueryMode: typeof updateQueryMode\n    mode: QueryMode\n    onUndo: typeof undo\n    onRedo: typeof redo\n    canRedo: boolean\n    canUndo: boolean\n    autoFormat: boolean\n}\n\nconst LateralMenu: FC<Props> = ({\n    onReset,\n    onFileContentReady,\n    onClear,\n    autoFormat,\n    changeAutoFormat,\n    onRedo,\n    onUndo,\n    canRedo,\n    canUndo,\n    setQueryMode,\n    mode,\n}) => {\n    const [dropdownIsOpen, toggleDropdown] = useToggleState()\n    const [modalIsOpen, toggleModal] = useToggleState()\n    const handleFileChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            logDebug('onFileChange')\n            toggleDropdown()\n            if (e.target.files && e.target?.files?.length > 0) {\n                const fileReader = new FileReader()\n                logDebug('e.target.files', e.target.files[0].name)\n                fileReader.onload = () => {\n                    if (fileReader.result) {\n                        onFileContentReady(fileReader.result.toString())\n                    }\n                }\n                fileReader.readAsText(e.target.files[0])\n            }\n        },\n        [toggleDropdown, onFileContentReady]\n    )\n\n    const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n    return (\n        <>\n            <ButtonGroup className=\"d-flex\" vertical={true}>\n                <ButtonGroup vertical={false}>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onUndo}\n                        disabled={!canUndo}\n                    >\n                        <i className=\"material-icons mr-1 md-18\">undo</i>\n                        <span>Undo</span>\n                    </Button>\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'sm'}\n                        onClick={onRedo}\n                        disabled={!canRedo}\n                    >\n                        Redo\n                        <i className=\"material-icons mr-1 md-18\">redo</i>\n                    </Button>\n                </ButtonGroup>\n                <br />\n                <br />\n                <Label\n                    className=\"d-flex justify-content-center align-content-between\"\n                    check={true}\n                    onClick={handleAutoFormatChange}\n                >\n                    <i className=\"material-icons mr-1\">{autoFormat ? 'check_box' : 'check_box_outline_blank'}</i>\n                    Auto format\n                </Label>\n                <br />\n                <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n                    <DropdownToggle\n                        className=\"d-flex justify-content-center align-content-between\"\n                        size={'lg'}\n                        id=\"import-menu-button\"\n                        color=\"primary\"\n                    >\n                        <i className=\"material-icons mr-1 md-18\">unarchive</i>\n                        Import\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem toggle={false}>\n                            <label id=\"import-file\">\n                                Browse JSON file...\n                                <input\n                                    type=\"file\"\n                                    name=\"file\"\n                                    id=\"sourceFile\"\n                                    style={{ display: 'none' }}\n                                    onChange={handleFileChange}\n                                />\n                            </label>\n                        </DropdownItem>\n                        <DropdownItem id=\"http-request\" onClick={toggleModal}>\n                            <label>HTTP request</label>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n                <br />\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"secondary\"\n                    size={'lg'}\n                    onClick={onReset}\n                >\n                    <div>\n                        <i className=\"material-icons md-18 mr-1\">autorenew</i>\n                    </div>\n                    <div>Reset</div>\n                </Button>\n                <br />\n\n                {mode === 'Javascript' ? (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('SQL')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to SQL-like</div>\n                    </Button>\n                ) : (\n                    <Button\n                        className=\"d-flex justify-content-center align-content-between\"\n                        color=\"secondary\"\n                        size={'lg'}\n                        onClick={() => setQueryMode('Javascript')}\n                    >\n                        <div>\n                            <i className=\"material-icons md-18  mr-1\">settings</i>\n                        </div>\n                        <div>Switch to JS</div>\n                    </Button>\n                )}\n\n                <br />\n                <Button\n                    className=\"d-flex justify-content-center align-content-between\"\n                    color=\"danger\"\n                    size={'lg'}\n                    onClick={onClear}\n                >\n                    <div>\n                        <i className=\"material-icons md-18  mr-1\">clear</i>\n                    </div>\n                    <div>Clear</div>\n                </Button>\n            </ButtonGroup>\n            <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n                <ModalBody>\n                    <HttpRequestSource onFinish={toggleModal} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"secondary\" onClick={toggleModal}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    autoFormat: getSourceAutoFormat(state),\n    canUndo: getCanUndo(state),\n    canRedo: getCanRedo(state),\n    mode: getQueryMode(state),\n})\n\nexport default connect(mapStateToProps, {\n    onFileContentReady: updateSource,\n    onReset: resetEditor,\n    onClear: clearEditor,\n    onUndo: undo,\n    onRedo: redo,\n    changeAutoFormat: updateAutoFormatSource,\n    setQueryMode: updateQueryMode,\n})(memo(withErrorBoundary(withPerformance(LateralMenu, 'LateralMenu'))))\n"]},"metadata":{},"sourceType":"module"}