{"ast":null,"code":"var counter = 0;\nvar buckets = {};\n\nvar setHarmonicInterval = function (fn, ms) {\n  var _a;\n\n  var id = counter++;\n\n  if (buckets[ms]) {\n    buckets[ms].listeners[id] = fn;\n  } else {\n    var timer = setInterval(function () {\n      var listeners = buckets[ms].listeners;\n      var didThrow = false;\n      var lastError;\n\n      for (var _i = 0, _a = Object.values(listeners); _i < _a.length; _i++) {\n        var listener = _a[_i];\n\n        try {\n          listener();\n        } catch (error) {\n          didThrow = true;\n          lastError = error;\n        }\n      }\n\n      if (didThrow) throw lastError;\n    }, ms);\n    buckets[ms] = {\n      ms: ms,\n      timer: timer,\n      listeners: (_a = {}, _a[id] = fn, _a)\n    };\n  }\n\n  return {\n    bucket: buckets[ms],\n    id: id\n  };\n};\n\nvar clearHarmonicInterval = function (_a) {\n  var bucket = _a.bucket,\n      id = _a.id;\n  delete bucket.listeners[id];\n  var hasListeners = false;\n\n  for (var listener in bucket.listeners) {\n    hasListeners = true;\n    break;\n  }\n\n  if (!hasListeners) {\n    clearInterval(bucket.timer);\n    delete buckets[bucket.ms];\n  }\n};\n\nexport { clearHarmonicInterval, setHarmonicInterval };","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/set-harmonic-interval/lib/index.esm.js"],"names":["counter","buckets","setHarmonicInterval","fn","ms","_a","id","listeners","timer","setInterval","didThrow","lastError","_i","Object","values","length","listener","error","bucket","clearHarmonicInterval","hasListeners","clearInterval"],"mappings":"AAAA,IAAIA,OAAO,GAAG,CAAd;AACA,IAAIC,OAAO,GAAG,EAAd;;AACA,IAAIC,mBAAmB,GAAG,UAAUC,EAAV,EAAcC,EAAd,EAAkB;AACxC,MAAIC,EAAJ;;AACA,MAAIC,EAAE,GAAGN,OAAO,EAAhB;;AACA,MAAIC,OAAO,CAACG,EAAD,CAAX,EAAiB;AACbH,IAAAA,OAAO,CAACG,EAAD,CAAP,CAAYG,SAAZ,CAAsBD,EAAtB,IAA4BH,EAA5B;AACH,GAFD,MAGK;AACD,QAAIK,KAAK,GAAGC,WAAW,CAAC,YAAY;AAChC,UAAIF,SAAS,GAAGN,OAAO,CAACG,EAAD,CAAP,CAAYG,SAA5B;AACA,UAAIG,QAAQ,GAAG,KAAf;AACA,UAAIC,SAAJ;;AACA,WAAK,IAAIC,EAAE,GAAG,CAAT,EAAYP,EAAE,GAAGQ,MAAM,CAACC,MAAP,CAAcP,SAAd,CAAtB,EAAgDK,EAAE,GAAGP,EAAE,CAACU,MAAxD,EAAgEH,EAAE,EAAlE,EAAsE;AAClE,YAAII,QAAQ,GAAGX,EAAE,CAACO,EAAD,CAAjB;;AACA,YAAI;AACAI,UAAAA,QAAQ;AACX,SAFD,CAGA,OAAOC,KAAP,EAAc;AACVP,UAAAA,QAAQ,GAAG,IAAX;AACAC,UAAAA,SAAS,GAAGM,KAAZ;AACH;AACJ;;AACD,UAAIP,QAAJ,EACI,MAAMC,SAAN;AACP,KAhBsB,EAgBpBP,EAhBoB,CAAvB;AAiBAH,IAAAA,OAAO,CAACG,EAAD,CAAP,GAAc;AACVA,MAAAA,EAAE,EAAEA,EADM;AAEVI,MAAAA,KAAK,EAAEA,KAFG;AAGVD,MAAAA,SAAS,GAAGF,EAAE,GAAG,EAAL,EACRA,EAAE,CAACC,EAAD,CAAF,GAASH,EADD,EAERE,EAFK;AAHC,KAAd;AAOH;;AACD,SAAO;AACHa,IAAAA,MAAM,EAAEjB,OAAO,CAACG,EAAD,CADZ;AAEHE,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CApCD;;AAqCA,IAAIa,qBAAqB,GAAG,UAAUd,EAAV,EAAc;AACtC,MAAIa,MAAM,GAAGb,EAAE,CAACa,MAAhB;AAAA,MAAwBZ,EAAE,GAAGD,EAAE,CAACC,EAAhC;AACA,SAAOY,MAAM,CAACX,SAAP,CAAiBD,EAAjB,CAAP;AACA,MAAIc,YAAY,GAAG,KAAnB;;AACA,OAAK,IAAIJ,QAAT,IAAqBE,MAAM,CAACX,SAA5B,EAAuC;AACnCa,IAAAA,YAAY,GAAG,IAAf;AACA;AACH;;AACD,MAAI,CAACA,YAAL,EAAmB;AACfC,IAAAA,aAAa,CAACH,MAAM,CAACV,KAAR,CAAb;AACA,WAAOP,OAAO,CAACiB,MAAM,CAACd,EAAR,CAAd;AACH;AACJ,CAZD;;AAcA,SAASe,qBAAT,EAAgCjB,mBAAhC","sourcesContent":["var counter = 0;\r\nvar buckets = {};\r\nvar setHarmonicInterval = function (fn, ms) {\r\n    var _a;\r\n    var id = counter++;\r\n    if (buckets[ms]) {\r\n        buckets[ms].listeners[id] = fn;\r\n    }\r\n    else {\r\n        var timer = setInterval(function () {\r\n            var listeners = buckets[ms].listeners;\r\n            var didThrow = false;\r\n            var lastError;\r\n            for (var _i = 0, _a = Object.values(listeners); _i < _a.length; _i++) {\r\n                var listener = _a[_i];\r\n                try {\r\n                    listener();\r\n                }\r\n                catch (error) {\r\n                    didThrow = true;\r\n                    lastError = error;\r\n                }\r\n            }\r\n            if (didThrow)\r\n                throw lastError;\r\n        }, ms);\r\n        buckets[ms] = {\r\n            ms: ms,\r\n            timer: timer,\r\n            listeners: (_a = {},\r\n                _a[id] = fn,\r\n                _a),\r\n        };\r\n    }\r\n    return {\r\n        bucket: buckets[ms],\r\n        id: id,\r\n    };\r\n};\r\nvar clearHarmonicInterval = function (_a) {\r\n    var bucket = _a.bucket, id = _a.id;\r\n    delete bucket.listeners[id];\r\n    var hasListeners = false;\r\n    for (var listener in bucket.listeners) {\r\n        hasListeners = true;\r\n        break;\r\n    }\r\n    if (!hasListeners) {\r\n        clearInterval(bucket.timer);\r\n        delete buckets[bucket.ms];\r\n    }\r\n};\n\nexport { clearHarmonicInterval, setHarmonicInterval };\n"]},"metadata":{},"sourceType":"module"}