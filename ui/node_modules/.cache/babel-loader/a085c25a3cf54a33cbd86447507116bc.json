{"ast":null,"code":"ace.define(\"ace/snippets/tcl\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippetText = \"# #!/usr/bin/env tclsh\\n\\\nsnippet #!\\n\\\n\t#!/usr/bin/env tclsh\\n\\\n\t\\n\\\n# Process\\n\\\nsnippet pro\\n\\\n\tproc ${1:function_name} {${2:args}} {\\n\\\n\t\t${3:#body ...}\\n\\\n\t}\\n\\\n#xif\\n\\\nsnippet xif\\n\\\n\t${1:expr}? ${2:true} : ${3:false}\\n\\\n# Conditional\\n\\\nsnippet if\\n\\\n\tif {${1}} {\\n\\\n\t\t${2:# body...}\\n\\\n\t}\\n\\\n# Conditional if..else\\n\\\nsnippet ife\\n\\\n\tif {${1}} {\\n\\\n\t\t${2:# body...}\\n\\\n\t} else {\\n\\\n\t\t${3:# else...}\\n\\\n\t}\\n\\\n# Conditional if..elsif..else\\n\\\nsnippet ifee\\n\\\n\tif {${1}} {\\n\\\n\t\t${2:# body...}\\n\\\n\t} elseif {${3}} {\\n\\\n\t\t${4:# elsif...}\\n\\\n\t} else {\\n\\\n\t\t${5:# else...}\\n\\\n\t}\\n\\\n# If catch then\\n\\\nsnippet ifc\\n\\\n\tif { [catch {${1:#do something...}} ${2:err}] } {\\n\\\n\t\t${3:# handle failure...}\\n\\\n\t}\\n\\\n# Catch\\n\\\nsnippet catch\\n\\\n\tcatch {${1}} ${2:err} ${3:options}\\n\\\n# While Loop\\n\\\nsnippet wh\\n\\\n\twhile {${1}} {\\n\\\n\t\t${2:# body...}\\n\\\n\t}\\n\\\n# For Loop\\n\\\nsnippet for\\n\\\n\tfor {set ${2:var} 0} {$$2 < ${1:count}} {${3:incr} $2} {\\n\\\n\t\t${4:# body...}\\n\\\n\t}\\n\\\n# Foreach Loop\\n\\\nsnippet fore\\n\\\n\tforeach ${1:x} {${2:#list}} {\\n\\\n\t\t${3:# body...}\\n\\\n\t}\\n\\\n# after ms script...\\n\\\nsnippet af\\n\\\n\tafter ${1:ms} ${2:#do something}\\n\\\n# after cancel id\\n\\\nsnippet afc\\n\\\n\tafter cancel ${1:id or script}\\n\\\n# after idle\\n\\\nsnippet afi\\n\\\n\tafter idle ${1:script}\\n\\\n# after info id\\n\\\nsnippet afin\\n\\\n\tafter info ${1:id}\\n\\\n# Expr\\n\\\nsnippet exp\\n\\\n\texpr {${1:#expression here}}\\n\\\n# Switch\\n\\\nsnippet sw\\n\\\n\tswitch ${1:var} {\\n\\\n\t\t${3:pattern 1} {\\n\\\n\t\t\t${4:#do something}\\n\\\n\t\t}\\n\\\n\t\tdefault {\\n\\\n\t\t\t${2:#do something}\\n\\\n\t\t}\\n\\\n\t}\\n\\\n# Case\\n\\\nsnippet ca\\n\\\n\t${1:pattern} {\\n\\\n\t\t${2:#do something}\\n\\\n\t}${3}\\n\\\n# Namespace eval\\n\\\nsnippet ns\\n\\\n\tnamespace eval ${1:path} {${2:#script...}}\\n\\\n# Namespace current\\n\\\nsnippet nsc\\n\\\n\tnamespace current\\n\\\n\";\n  exports.scope = \"tcl\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/tcl\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/snippets/tcl.js"],"names":["ace","define","require","exports","module","snippetText","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,kBAAX,EAA8B,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAA9B,EAA8D,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AACjG;;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;AA6FAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,KAAhB;AAEC,CAlGD;;AAkGmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,kBAAD,CAAZ,EAAkC,UAASK,CAAT,EAAY;AAC1C,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/tcl\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\nexports.snippetText = \"# #!/usr/bin/env tclsh\\n\\\nsnippet #!\\n\\\n\t#!/usr/bin/env tclsh\\n\\\n\t\\n\\\n# Process\\n\\\nsnippet pro\\n\\\n\tproc ${1:function_name} {${2:args}} {\\n\\\n\t\t${3:#body ...}\\n\\\n\t}\\n\\\n#xif\\n\\\nsnippet xif\\n\\\n\t${1:expr}? ${2:true} : ${3:false}\\n\\\n# Conditional\\n\\\nsnippet if\\n\\\n\tif {${1}} {\\n\\\n\t\t${2:# body...}\\n\\\n\t}\\n\\\n# Conditional if..else\\n\\\nsnippet ife\\n\\\n\tif {${1}} {\\n\\\n\t\t${2:# body...}\\n\\\n\t} else {\\n\\\n\t\t${3:# else...}\\n\\\n\t}\\n\\\n# Conditional if..elsif..else\\n\\\nsnippet ifee\\n\\\n\tif {${1}} {\\n\\\n\t\t${2:# body...}\\n\\\n\t} elseif {${3}} {\\n\\\n\t\t${4:# elsif...}\\n\\\n\t} else {\\n\\\n\t\t${5:# else...}\\n\\\n\t}\\n\\\n# If catch then\\n\\\nsnippet ifc\\n\\\n\tif { [catch {${1:#do something...}} ${2:err}] } {\\n\\\n\t\t${3:# handle failure...}\\n\\\n\t}\\n\\\n# Catch\\n\\\nsnippet catch\\n\\\n\tcatch {${1}} ${2:err} ${3:options}\\n\\\n# While Loop\\n\\\nsnippet wh\\n\\\n\twhile {${1}} {\\n\\\n\t\t${2:# body...}\\n\\\n\t}\\n\\\n# For Loop\\n\\\nsnippet for\\n\\\n\tfor {set ${2:var} 0} {$$2 < ${1:count}} {${3:incr} $2} {\\n\\\n\t\t${4:# body...}\\n\\\n\t}\\n\\\n# Foreach Loop\\n\\\nsnippet fore\\n\\\n\tforeach ${1:x} {${2:#list}} {\\n\\\n\t\t${3:# body...}\\n\\\n\t}\\n\\\n# after ms script...\\n\\\nsnippet af\\n\\\n\tafter ${1:ms} ${2:#do something}\\n\\\n# after cancel id\\n\\\nsnippet afc\\n\\\n\tafter cancel ${1:id or script}\\n\\\n# after idle\\n\\\nsnippet afi\\n\\\n\tafter idle ${1:script}\\n\\\n# after info id\\n\\\nsnippet afin\\n\\\n\tafter info ${1:id}\\n\\\n# Expr\\n\\\nsnippet exp\\n\\\n\texpr {${1:#expression here}}\\n\\\n# Switch\\n\\\nsnippet sw\\n\\\n\tswitch ${1:var} {\\n\\\n\t\t${3:pattern 1} {\\n\\\n\t\t\t${4:#do something}\\n\\\n\t\t}\\n\\\n\t\tdefault {\\n\\\n\t\t\t${2:#do something}\\n\\\n\t\t}\\n\\\n\t}\\n\\\n# Case\\n\\\nsnippet ca\\n\\\n\t${1:pattern} {\\n\\\n\t\t${2:#do something}\\n\\\n\t}${3}\\n\\\n# Namespace eval\\n\\\nsnippet ns\\n\\\n\tnamespace eval ${1:path} {${2:#script...}}\\n\\\n# Namespace current\\n\\\nsnippet nsc\\n\\\n\tnamespace current\\n\\\n\";\nexports.scope = \"tcl\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/tcl\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}