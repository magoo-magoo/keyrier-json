{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseActions = parseActions;\nexports.isHistory = isHistory;\nexports.includeAction = includeAction;\nexports.excludeAction = excludeAction;\nexports.combineFilters = combineFilters;\nexports.groupByActionTypes = groupByActionTypes;\nexports.newHistory = newHistory; // parseActions helper: takes a string (or array)\n//                      and makes it an array if it isn't yet\n\nfunction parseActions(rawActions) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (Array.isArray(rawActions)) {\n    return rawActions;\n  } else if (typeof rawActions === 'string') {\n    return [rawActions];\n  }\n\n  return defaultValue;\n} // isHistory helper: check for a valid history object\n\n\nfunction isHistory(history) {\n  return typeof history.present !== 'undefined' && typeof history.future !== 'undefined' && typeof history.past !== 'undefined' && Array.isArray(history.future) && Array.isArray(history.past);\n} // includeAction helper: whitelist actions to be added to the history\n\n\nfunction includeAction(rawActions) {\n  var actions = parseActions(rawActions);\n  return function (action) {\n    return actions.indexOf(action.type) >= 0;\n  };\n} // excludeAction helper: blacklist actions from being added to the history\n\n\nfunction excludeAction(rawActions) {\n  var actions = parseActions(rawActions);\n  return function (action) {\n    return actions.indexOf(action.type) < 0;\n  };\n} // combineFilters helper: combine multiple filters to one\n\n\nfunction combineFilters() {\n  for (var _len = arguments.length, filters = new Array(_len), _key = 0; _key < _len; _key++) {\n    filters[_key] = arguments[_key];\n  }\n\n  return filters.reduce(function (prev, curr) {\n    return function (action, currentState, previousHistory) {\n      return prev(action, currentState, previousHistory) && curr(action, currentState, previousHistory);\n    };\n  }, function () {\n    return true;\n  });\n}\n\nfunction groupByActionTypes(rawActions) {\n  var actions = parseActions(rawActions);\n  return function (action) {\n    return actions.indexOf(action.type) >= 0 ? action.type : null;\n  };\n}\n\nfunction newHistory(past, present, future) {\n  var group = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return {\n    past: past,\n    present: present,\n    future: future,\n    group: group,\n    _latestUnfiltered: present,\n    index: past.length,\n    limit: past.length + future.length + 1\n  };\n}","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/redux-undo/lib/helpers.js"],"names":["Object","defineProperty","exports","value","parseActions","isHistory","includeAction","excludeAction","combineFilters","groupByActionTypes","newHistory","rawActions","defaultValue","arguments","length","undefined","Array","isArray","history","present","future","past","actions","action","indexOf","type","_len","filters","_key","reduce","prev","curr","currentState","previousHistory","group","_latestUnfiltered","index","limit"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseActions = parseActions;\nexports.isHistory = isHistory;\nexports.includeAction = includeAction;\nexports.excludeAction = excludeAction;\nexports.combineFilters = combineFilters;\nexports.groupByActionTypes = groupByActionTypes;\nexports.newHistory = newHistory;\n\n// parseActions helper: takes a string (or array)\n//                      and makes it an array if it isn't yet\nfunction parseActions(rawActions) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (Array.isArray(rawActions)) {\n    return rawActions;\n  } else if (typeof rawActions === 'string') {\n    return [rawActions];\n  }\n\n  return defaultValue;\n} // isHistory helper: check for a valid history object\n\n\nfunction isHistory(history) {\n  return typeof history.present !== 'undefined' && typeof history.future !== 'undefined' && typeof history.past !== 'undefined' && Array.isArray(history.future) && Array.isArray(history.past);\n} // includeAction helper: whitelist actions to be added to the history\n\n\nfunction includeAction(rawActions) {\n  var actions = parseActions(rawActions);\n  return function (action) {\n    return actions.indexOf(action.type) >= 0;\n  };\n} // excludeAction helper: blacklist actions from being added to the history\n\n\nfunction excludeAction(rawActions) {\n  var actions = parseActions(rawActions);\n  return function (action) {\n    return actions.indexOf(action.type) < 0;\n  };\n} // combineFilters helper: combine multiple filters to one\n\n\nfunction combineFilters() {\n  for (var _len = arguments.length, filters = new Array(_len), _key = 0; _key < _len; _key++) {\n    filters[_key] = arguments[_key];\n  }\n\n  return filters.reduce(function (prev, curr) {\n    return function (action, currentState, previousHistory) {\n      return prev(action, currentState, previousHistory) && curr(action, currentState, previousHistory);\n    };\n  }, function () {\n    return true;\n  });\n}\n\nfunction groupByActionTypes(rawActions) {\n  var actions = parseActions(rawActions);\n  return function (action) {\n    return actions.indexOf(action.type) >= 0 ? action.type : null;\n  };\n}\n\nfunction newHistory(past, present, future) {\n  var group = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return {\n    past: past,\n    present: present,\n    future: future,\n    group: group,\n    _latestUnfiltered: present,\n    index: past.length,\n    limit: past.length + future.length + 1\n  };\n}"]},"metadata":{},"sourceType":"script"}