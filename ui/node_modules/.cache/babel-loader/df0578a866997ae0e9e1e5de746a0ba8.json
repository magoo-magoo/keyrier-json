{"ast":null,"code":"ace.define(\"ace/mode/assembly_x86_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var AssemblyX86HighlightRules = function () {\n    this.$rules = {\n      start: [{\n        token: 'keyword.control.assembly',\n        regex: '\\\\b(?:aaa|aad|aam|aas|adc|add|addpd|addps|addsd|addss|addsubpd|addsubps|aesdec|aesdeclast|aesenc|aesenclast|aesimc|aeskeygenassist|and|andpd|andps|andnpd|andnps|arpl|blendpd|blendps|blendvpd|blendvps|bound|bsf|bsr|bswap|bt|btc|btr|bts|cbw|cwde|cdqe|clc|cld|cflush|clts|cmc|cmov(?:n?e|ge?|ae?|le?|be?|n?o|n?z)|cmp|cmppd|cmpps|cmps|cnpsb|cmpsw|cmpsd|cmpsq|cmpss|cmpxchg|cmpxchg8b|cmpxchg16b|comisd|comiss|cpuid|crc32|cvtdq2pd|cvtdq2ps|cvtpd2dq|cvtpd2pi|cvtpd2ps|cvtpi2pd|cvtpi2ps|cvtps2dq|cvtps2pd|cvtps2pi|cvtsd2si|cvtsd2ss|cvts2sd|cvtsi2ss|cvtss2sd|cvtss2si|cvttpd2dq|cvtpd2pi|cvttps2dq|cvttps2pi|cvttps2dq|cvttps2pi|cvttsd2si|cvttss2si|cwd|cdq|cqo|daa|das|dec|div|divpd|divps|divsd|divss|dppd|dpps|emms|enter|extractps|f2xm1|fabs|fadd|faddp|fiadd|fbld|fbstp|fchs|fclex|fnclex|fcmov(?:n?e|ge?|ae?|le?|be?|n?o|n?z)|fcom|fcmop|fcompp|fcomi|fcomip|fucomi|fucomip|fcos|fdecstp|fdiv|fdivp|fidiv|fdivr|fdivrp|fidivr|ffree|ficom|ficomp|fild|fincstp|finit|fnint|fist|fistp|fisttp|fld|fld1|fldl2t|fldl2e|fldpi|fldlg2|fldln2|fldz|fldcw|fldenv|fmul|fmulp|fimul|fnop|fpatan|fprem|fprem1|fptan|frndint|frstor|fsave|fnsave|fscale|fsin|fsincos|fsqrt|fst|fstp|fstcw|fnstcw|fstenv|fnstenv|fsts|fnstsw|fsub|fsubp|fisub|fsubr|fsubrp|fisubr|ftst|fucom|fucomp|fucompp|fxam|fxch|fxrstor|fxsave|fxtract|fyl2x|fyl2xp1|haddpd|haddps|husbpd|hsubps|idiv|imul|in|inc|ins|insb|insw|insd|insertps|int|into|invd|invplg|invpcid|iret|iretd|iretq|lahf|lar|lddqu|ldmxcsr|lds|les|lfs|lgs|lss|lea|leave|lfence|lgdt|lidt|llgdt|lmsw|lock|lods|lodsb|lodsw|lodsd|lodsq|lsl|ltr|maskmovdqu|maskmovq|maxpd|maxps|maxsd|maxss|mfence|minpd|minps|minsd|minss|monitor|mov|movapd|movaps|movbe|movd|movq|movddup|movdqa|movdqu|movq2q|movhlps|movhpd|movhps|movlhps|movlpd|movlps|movmskpd|movmskps|movntdqa|movntdq|movnti|movntpd|movntps|movntq|movq|movq2dq|movs|movsb|movsw|movsd|movsq|movsd|movshdup|movsldup|movss|movsx|movsxd|movupd|movups|movzx|mpsadbw|mul|mulpd|mulps|mulsd|mulss|mwait|neg|not|or|orpd|orps|out|outs|outsb|outsw|outsd|pabsb|pabsw|pabsd|packsswb|packssdw|packusdw|packuswbpaddb|paddw|paddd|paddq|paddsb|paddsw|paddusb|paddusw|palignr|pand|pandn|pause|pavgb|pavgw|pblendvb|pblendw|pclmulqdq|pcmpeqb|pcmpeqw|pcmpeqd|pcmpeqq|pcmpestri|pcmpestrm|pcmptb|pcmptgw|pcmpgtd|pcmpgtq|pcmpistri|pcmpisrm|pextrb|pextrd|pextrq|pextrw|phaddw|phaddd|phaddsw|phinposuw|phsubw|phsubd|phsubsw|pinsrb|pinsrd|pinsrq|pinsrw|pmaddubsw|pmadddwd|pmaxsb|pmaxsd|pmaxsw|pmaxsw|pmaxub|pmaxud|pmaxuw|pminsb|pminsd|pminsw|pminub|pminud|pminuw|pmovmskb|pmovsx|pmovzx|pmuldq|pmulhrsw|pmulhuw|pmulhw|pmulld|pmullw|pmuludw|pop|popa|popad|popcnt|popf|popfd|popfq|por|prefetch|psadbw|pshufb|pshufd|pshufhw|pshuflw|pshufw|psignb|psignw|psignd|pslldq|psllw|pslld|psllq|psraw|psrad|psrldq|psrlw|psrld|psrlq|psubb|psubw|psubd|psubq|psubsb|psubsw|psubusb|psubusw|test|ptest|punpckhbw|punpckhwd|punpckhdq|punpckhddq|punpcklbw|punpcklwd|punpckldq|punpckldqd|push|pusha|pushad|pushf|pushfd|pxor|prcl|rcr|rol|ror|rcpps|rcpss|rdfsbase|rdgsbase|rdmsr|rdpmc|rdrand|rdtsc|rdtscp|rep|repe|repz|repne|repnz|roundpd|roundps|roundsd|roundss|rsm|rsqrps|rsqrtss|sahf|sal|sar|shl|shr|sbb|scas|scasb|scasw|scasd|set(?:n?e|ge?|ae?|le?|be?|n?o|n?z)|sfence|sgdt|shld|shrd|shufpd|shufps|sidt|sldt|smsw|sqrtpd|sqrtps|sqrtsd|sqrtss|stc|std|stmxcsr|stos|stosb|stosw|stosd|stosq|str|sub|subpd|subps|subsd|subss|swapgs|syscall|sysenter|sysexit|sysret|teset|ucomisd|ucomiss|ud2|unpckhpd|unpckhps|unpcklpd|unpcklps|vbroadcast|vcvtph2ps|vcvtp2sph|verr|verw|vextractf128|vinsertf128|vmaskmov|vpermilpd|vpermilps|vperm2f128|vtestpd|vtestps|vzeroall|vzeroupper|wait|fwait|wbinvd|wrfsbase|wrgsbase|wrmsr|xadd|xchg|xgetbv|xlat|xlatb|xor|xorpd|xorps|xrstor|xsave|xsaveopt|xsetbv|lzcnt|extrq|insertq|movntsd|movntss|vfmaddpd|vfmaddps|vfmaddsd|vfmaddss|vfmaddsubbpd|vfmaddsubps|vfmsubaddpd|vfmsubaddps|vfmsubpd|vfmsubps|vfmsubsd|vfnmaddpd|vfnmaddps|vfnmaddsd|vfnmaddss|vfnmsubpd|vfnmusbps|vfnmusbsd|vfnmusbss|cvt|xor|cli|sti|hlt|nop|lock|wait|enter|leave|ret|loop(?:n?e|n?z)?|call|j(?:mp|n?e|ge?|ae?|le?|be?|n?o|n?z))\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'variable.parameter.register.assembly',\n        regex: '\\\\b(?:CS|DS|ES|FS|GS|SS|RAX|EAX|RBX|EBX|RCX|ECX|RDX|EDX|RCX|RIP|EIP|IP|RSP|ESP|SP|RSI|ESI|SI|RDI|EDI|DI|RFLAGS|EFLAGS|FLAGS|R8-15|(?:Y|X)MM(?:[0-9]|10|11|12|13|14|15)|(?:A|B|C|D)(?:X|H|L)|CR(?:[0-4]|DR(?:[0-7]|TR6|TR7|EFER)))\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'constant.character.decimal.assembly',\n        regex: '\\\\b[0-9]+\\\\b'\n      }, {\n        token: 'constant.character.hexadecimal.assembly',\n        regex: '\\\\b0x[A-F0-9]+\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'constant.character.hexadecimal.assembly',\n        regex: '\\\\b[A-F0-9]+h\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'string.assembly',\n        regex: /'([^\\\\']|\\\\.)*'/\n      }, {\n        token: 'string.assembly',\n        regex: /\"([^\\\\\"]|\\\\.)*\"/\n      }, {\n        token: 'support.function.directive.assembly',\n        regex: '^\\\\[',\n        push: [{\n          token: 'support.function.directive.assembly',\n          regex: '\\\\]$',\n          next: 'pop'\n        }, {\n          defaultToken: 'support.function.directive.assembly'\n        }]\n      }, {\n        token: ['support.function.directive.assembly', 'support.function.directive.assembly', 'entity.name.function.assembly'],\n        regex: '(^struc)( )([_a-zA-Z][_a-zA-Z0-9]*)'\n      }, {\n        token: 'support.function.directive.assembly',\n        regex: '^endstruc\\\\b'\n      }, {\n        token: ['support.function.directive.assembly', 'entity.name.function.assembly', 'support.function.directive.assembly', 'constant.character.assembly'],\n        regex: '^(%macro )([_a-zA-Z][_a-zA-Z0-9]*)( )([0-9]+)'\n      }, {\n        token: 'support.function.directive.assembly',\n        regex: '^%endmacro'\n      }, {\n        token: ['text', 'support.function.directive.assembly', 'text', 'entity.name.function.assembly'],\n        regex: '(\\\\s*)(%define|%xdefine|%idefine|%undef|%assign|%defstr|%strcat|%strlen|%substr|%00|%0|%rotate|%rep|%endrep|%include|\\\\$\\\\$|\\\\$|%unmacro|%if|%elif|%else|%endif|%(?:el)?ifdef|%(?:el)?ifmacro|%(?:el)?ifctx|%(?:el)?ifidn|%(?:el)?ifidni|%(?:el)?ifid|%(?:el)?ifnum|%(?:el)?ifstr|%(?:el)?iftoken|%(?:el)?ifempty|%(?:el)?ifenv|%pathsearch|%depend|%use|%push|%pop|%repl|%arg|%stacksize|%local|%error|%warning|%fatal|%line|%!|%comment|%endcomment|__NASM_VERSION_ID__|__NASM_VER__|__FILE__|__LINE__|__BITS__|__OUTPUT_FORMAT__|__DATE__|__TIME__|__DATE_NUM__|_TIME__NUM__|__UTC_DATE__|__UTC_TIME__|__UTC_DATE_NUM__|__UTC_TIME_NUM__|__POSIX_TIME__|__PASS__|ISTRUC|AT|IEND|BITS 16|BITS 32|BITS 64|USE16|USE32|__SECT__|ABSOLUTE|EXTERN|GLOBAL|COMMON|CPU|FLOAT)\\\\b( ?)((?:[_a-zA-Z][_a-zA-Z0-9]*)?)',\n        caseInsensitive: true\n      }, {\n        token: 'support.function.directive.assembly',\n        regex: '\\\\b(?:d[bwdqtoy]|res[bwdqto]|equ|times|align|alignb|sectalign|section|ptr|byte|word|dword|qword|incbin)\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^\\\\s*%%[\\\\w.]+?:$'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^\\\\s*%\\\\$[\\\\w.]+?:$'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^[\\\\w.]+?:'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^[\\\\w.]+?\\\\b'\n      }, {\n        token: 'comment.assembly',\n        regex: ';.*$'\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  AssemblyX86HighlightRules.metaData = {\n    fileTypes: ['asm'],\n    name: 'Assembly x86',\n    scopeName: 'source.assembly'\n  };\n  oop.inherits(AssemblyX86HighlightRules, TextHighlightRules);\n  exports.AssemblyX86HighlightRules = AssemblyX86HighlightRules;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/assembly_x86\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/assembly_x86_highlight_rules\", \"ace/mode/folding/coffee\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var AssemblyX86HighlightRules = require(\"./assembly_x86_highlight_rules\").AssemblyX86HighlightRules;\n\n  var FoldMode = require(\"./folding/coffee\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = AssemblyX86HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\";\"];\n    this.$id = \"ace/mode/assembly_x86\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/assembly_x86\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-assembly_x86.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","AssemblyX86HighlightRules","$rules","start","token","regex","caseInsensitive","push","next","defaultToken","normalizeRules","metaData","fileTypes","name","scopeName","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/assembly_x86_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar AssemblyX86HighlightRules = function() {\n\n    this.$rules = { start: \n       [ { token: 'keyword.control.assembly',\n           regex: '\\\\b(?:aaa|aad|aam|aas|adc|add|addpd|addps|addsd|addss|addsubpd|addsubps|aesdec|aesdeclast|aesenc|aesenclast|aesimc|aeskeygenassist|and|andpd|andps|andnpd|andnps|arpl|blendpd|blendps|blendvpd|blendvps|bound|bsf|bsr|bswap|bt|btc|btr|bts|cbw|cwde|cdqe|clc|cld|cflush|clts|cmc|cmov(?:n?e|ge?|ae?|le?|be?|n?o|n?z)|cmp|cmppd|cmpps|cmps|cnpsb|cmpsw|cmpsd|cmpsq|cmpss|cmpxchg|cmpxchg8b|cmpxchg16b|comisd|comiss|cpuid|crc32|cvtdq2pd|cvtdq2ps|cvtpd2dq|cvtpd2pi|cvtpd2ps|cvtpi2pd|cvtpi2ps|cvtps2dq|cvtps2pd|cvtps2pi|cvtsd2si|cvtsd2ss|cvts2sd|cvtsi2ss|cvtss2sd|cvtss2si|cvttpd2dq|cvtpd2pi|cvttps2dq|cvttps2pi|cvttps2dq|cvttps2pi|cvttsd2si|cvttss2si|cwd|cdq|cqo|daa|das|dec|div|divpd|divps|divsd|divss|dppd|dpps|emms|enter|extractps|f2xm1|fabs|fadd|faddp|fiadd|fbld|fbstp|fchs|fclex|fnclex|fcmov(?:n?e|ge?|ae?|le?|be?|n?o|n?z)|fcom|fcmop|fcompp|fcomi|fcomip|fucomi|fucomip|fcos|fdecstp|fdiv|fdivp|fidiv|fdivr|fdivrp|fidivr|ffree|ficom|ficomp|fild|fincstp|finit|fnint|fist|fistp|fisttp|fld|fld1|fldl2t|fldl2e|fldpi|fldlg2|fldln2|fldz|fldcw|fldenv|fmul|fmulp|fimul|fnop|fpatan|fprem|fprem1|fptan|frndint|frstor|fsave|fnsave|fscale|fsin|fsincos|fsqrt|fst|fstp|fstcw|fnstcw|fstenv|fnstenv|fsts|fnstsw|fsub|fsubp|fisub|fsubr|fsubrp|fisubr|ftst|fucom|fucomp|fucompp|fxam|fxch|fxrstor|fxsave|fxtract|fyl2x|fyl2xp1|haddpd|haddps|husbpd|hsubps|idiv|imul|in|inc|ins|insb|insw|insd|insertps|int|into|invd|invplg|invpcid|iret|iretd|iretq|lahf|lar|lddqu|ldmxcsr|lds|les|lfs|lgs|lss|lea|leave|lfence|lgdt|lidt|llgdt|lmsw|lock|lods|lodsb|lodsw|lodsd|lodsq|lsl|ltr|maskmovdqu|maskmovq|maxpd|maxps|maxsd|maxss|mfence|minpd|minps|minsd|minss|monitor|mov|movapd|movaps|movbe|movd|movq|movddup|movdqa|movdqu|movq2q|movhlps|movhpd|movhps|movlhps|movlpd|movlps|movmskpd|movmskps|movntdqa|movntdq|movnti|movntpd|movntps|movntq|movq|movq2dq|movs|movsb|movsw|movsd|movsq|movsd|movshdup|movsldup|movss|movsx|movsxd|movupd|movups|movzx|mpsadbw|mul|mulpd|mulps|mulsd|mulss|mwait|neg|not|or|orpd|orps|out|outs|outsb|outsw|outsd|pabsb|pabsw|pabsd|packsswb|packssdw|packusdw|packuswbpaddb|paddw|paddd|paddq|paddsb|paddsw|paddusb|paddusw|palignr|pand|pandn|pause|pavgb|pavgw|pblendvb|pblendw|pclmulqdq|pcmpeqb|pcmpeqw|pcmpeqd|pcmpeqq|pcmpestri|pcmpestrm|pcmptb|pcmptgw|pcmpgtd|pcmpgtq|pcmpistri|pcmpisrm|pextrb|pextrd|pextrq|pextrw|phaddw|phaddd|phaddsw|phinposuw|phsubw|phsubd|phsubsw|pinsrb|pinsrd|pinsrq|pinsrw|pmaddubsw|pmadddwd|pmaxsb|pmaxsd|pmaxsw|pmaxsw|pmaxub|pmaxud|pmaxuw|pminsb|pminsd|pminsw|pminub|pminud|pminuw|pmovmskb|pmovsx|pmovzx|pmuldq|pmulhrsw|pmulhuw|pmulhw|pmulld|pmullw|pmuludw|pop|popa|popad|popcnt|popf|popfd|popfq|por|prefetch|psadbw|pshufb|pshufd|pshufhw|pshuflw|pshufw|psignb|psignw|psignd|pslldq|psllw|pslld|psllq|psraw|psrad|psrldq|psrlw|psrld|psrlq|psubb|psubw|psubd|psubq|psubsb|psubsw|psubusb|psubusw|test|ptest|punpckhbw|punpckhwd|punpckhdq|punpckhddq|punpcklbw|punpcklwd|punpckldq|punpckldqd|push|pusha|pushad|pushf|pushfd|pxor|prcl|rcr|rol|ror|rcpps|rcpss|rdfsbase|rdgsbase|rdmsr|rdpmc|rdrand|rdtsc|rdtscp|rep|repe|repz|repne|repnz|roundpd|roundps|roundsd|roundss|rsm|rsqrps|rsqrtss|sahf|sal|sar|shl|shr|sbb|scas|scasb|scasw|scasd|set(?:n?e|ge?|ae?|le?|be?|n?o|n?z)|sfence|sgdt|shld|shrd|shufpd|shufps|sidt|sldt|smsw|sqrtpd|sqrtps|sqrtsd|sqrtss|stc|std|stmxcsr|stos|stosb|stosw|stosd|stosq|str|sub|subpd|subps|subsd|subss|swapgs|syscall|sysenter|sysexit|sysret|teset|ucomisd|ucomiss|ud2|unpckhpd|unpckhps|unpcklpd|unpcklps|vbroadcast|vcvtph2ps|vcvtp2sph|verr|verw|vextractf128|vinsertf128|vmaskmov|vpermilpd|vpermilps|vperm2f128|vtestpd|vtestps|vzeroall|vzeroupper|wait|fwait|wbinvd|wrfsbase|wrgsbase|wrmsr|xadd|xchg|xgetbv|xlat|xlatb|xor|xorpd|xorps|xrstor|xsave|xsaveopt|xsetbv|lzcnt|extrq|insertq|movntsd|movntss|vfmaddpd|vfmaddps|vfmaddsd|vfmaddss|vfmaddsubbpd|vfmaddsubps|vfmsubaddpd|vfmsubaddps|vfmsubpd|vfmsubps|vfmsubsd|vfnmaddpd|vfnmaddps|vfnmaddsd|vfnmaddss|vfnmsubpd|vfnmusbps|vfnmusbsd|vfnmusbss|cvt|xor|cli|sti|hlt|nop|lock|wait|enter|leave|ret|loop(?:n?e|n?z)?|call|j(?:mp|n?e|ge?|ae?|le?|be?|n?o|n?z))\\\\b',\n           caseInsensitive: true },\n         { token: 'variable.parameter.register.assembly',\n           regex: '\\\\b(?:CS|DS|ES|FS|GS|SS|RAX|EAX|RBX|EBX|RCX|ECX|RDX|EDX|RCX|RIP|EIP|IP|RSP|ESP|SP|RSI|ESI|SI|RDI|EDI|DI|RFLAGS|EFLAGS|FLAGS|R8-15|(?:Y|X)MM(?:[0-9]|10|11|12|13|14|15)|(?:A|B|C|D)(?:X|H|L)|CR(?:[0-4]|DR(?:[0-7]|TR6|TR7|EFER)))\\\\b',\n           caseInsensitive: true },\n         { token: 'constant.character.decimal.assembly',\n           regex: '\\\\b[0-9]+\\\\b' },\n         { token: 'constant.character.hexadecimal.assembly',\n           regex: '\\\\b0x[A-F0-9]+\\\\b',\n           caseInsensitive: true },\n         { token: 'constant.character.hexadecimal.assembly',\n           regex: '\\\\b[A-F0-9]+h\\\\b',\n           caseInsensitive: true },\n         { token: 'string.assembly', regex: /'([^\\\\']|\\\\.)*'/ },\n         { token: 'string.assembly', regex: /\"([^\\\\\"]|\\\\.)*\"/ },\n         { token: 'support.function.directive.assembly',\n           regex: '^\\\\[',\n           push: \n            [ { token: 'support.function.directive.assembly',\n                regex: '\\\\]$',\n                next: 'pop' },\n              { defaultToken: 'support.function.directive.assembly' } ] },\n         { token: \n            [ 'support.function.directive.assembly',\n              'support.function.directive.assembly',\n              'entity.name.function.assembly' ],\n           regex: '(^struc)( )([_a-zA-Z][_a-zA-Z0-9]*)' },\n         { token: 'support.function.directive.assembly',\n           regex: '^endstruc\\\\b' },\n        { token: \n            [ 'support.function.directive.assembly',\n              'entity.name.function.assembly',\n              'support.function.directive.assembly',\n              'constant.character.assembly' ],\n           regex: '^(%macro )([_a-zA-Z][_a-zA-Z0-9]*)( )([0-9]+)' },\n         { token: 'support.function.directive.assembly',\n           regex: '^%endmacro' },\n         { token: \n            [ 'text',\n              'support.function.directive.assembly',\n              'text',\n              'entity.name.function.assembly' ],\n           regex: '(\\\\s*)(%define|%xdefine|%idefine|%undef|%assign|%defstr|%strcat|%strlen|%substr|%00|%0|%rotate|%rep|%endrep|%include|\\\\$\\\\$|\\\\$|%unmacro|%if|%elif|%else|%endif|%(?:el)?ifdef|%(?:el)?ifmacro|%(?:el)?ifctx|%(?:el)?ifidn|%(?:el)?ifidni|%(?:el)?ifid|%(?:el)?ifnum|%(?:el)?ifstr|%(?:el)?iftoken|%(?:el)?ifempty|%(?:el)?ifenv|%pathsearch|%depend|%use|%push|%pop|%repl|%arg|%stacksize|%local|%error|%warning|%fatal|%line|%!|%comment|%endcomment|__NASM_VERSION_ID__|__NASM_VER__|__FILE__|__LINE__|__BITS__|__OUTPUT_FORMAT__|__DATE__|__TIME__|__DATE_NUM__|_TIME__NUM__|__UTC_DATE__|__UTC_TIME__|__UTC_DATE_NUM__|__UTC_TIME_NUM__|__POSIX_TIME__|__PASS__|ISTRUC|AT|IEND|BITS 16|BITS 32|BITS 64|USE16|USE32|__SECT__|ABSOLUTE|EXTERN|GLOBAL|COMMON|CPU|FLOAT)\\\\b( ?)((?:[_a-zA-Z][_a-zA-Z0-9]*)?)',\n           caseInsensitive: true },\n          { token: 'support.function.directive.assembly',\n           regex: '\\\\b(?:d[bwdqtoy]|res[bwdqto]|equ|times|align|alignb|sectalign|section|ptr|byte|word|dword|qword|incbin)\\\\b',\n           caseInsensitive: true },\n         { token: 'entity.name.function.assembly', regex: '^\\\\s*%%[\\\\w.]+?:$' },\n         { token: 'entity.name.function.assembly', regex: '^\\\\s*%\\\\$[\\\\w.]+?:$' },\n         { token: 'entity.name.function.assembly', regex: '^[\\\\w.]+?:' },\n         { token: 'entity.name.function.assembly', regex: '^[\\\\w.]+?\\\\b' },\n         { token: 'comment.assembly', regex: ';.*$' } ] \n    };\n    \n    this.normalizeRules();\n};\n\nAssemblyX86HighlightRules.metaData = { fileTypes: [ 'asm' ],\n      name: 'Assembly x86',\n      scopeName: 'source.assembly' };\n\n\noop.inherits(AssemblyX86HighlightRules, TextHighlightRules);\n\nexports.AssemblyX86HighlightRules = AssemblyX86HighlightRules;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/assembly_x86\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/assembly_x86_highlight_rules\",\"ace/mode/folding/coffee\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar AssemblyX86HighlightRules = require(\"./assembly_x86_highlight_rules\").AssemblyX86HighlightRules;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = AssemblyX86HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = [\";\"];\n    this.$id = \"ace/mode/assembly_x86\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/assembly_x86\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}