{"ast":null,"code":"ace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/livescript\", [\"require\", \"exports\", \"module\", \"ace/tokenizer\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/cstyle\", \"ace/mode/text\"], function (require, exports, module) {\n  var identifier, LiveScriptMode, keywordend, stringfill;\n  identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\n\n  exports.Mode = LiveScriptMode = function (superclass) {\n    var indenter,\n        prototype = extend$((import$(LiveScriptMode, superclass).displayName = 'LiveScriptMode', LiveScriptMode), superclass).prototype,\n        constructor = LiveScriptMode;\n\n    function LiveScriptMode() {\n      var that;\n      this.$tokenizer = new (require('../tokenizer').Tokenizer)(LiveScriptMode.Rules);\n\n      if (that = require('../mode/matching_brace_outdent')) {\n        this.$outdent = new that.MatchingBraceOutdent();\n      }\n\n      this.$id = \"ace/mode/livescript\";\n      this.$behaviour = new (require(\"./behaviour/cstyle\").CstyleBehaviour)();\n    }\n\n    indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\n\n    prototype.getNextLineIndent = function (state, line, tab) {\n      var indent, tokens;\n      indent = this.$getIndent(line);\n      tokens = this.$tokenizer.getLineTokens(line, state).tokens;\n\n      if (!(tokens.length && tokens[tokens.length - 1].type === 'comment')) {\n        if (state === 'start' && indenter.test(line)) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    prototype.lineCommentStart = \"#\";\n    prototype.blockComment = {\n      start: \"###\",\n      end: \"###\"\n    };\n\n    prototype.checkOutdent = function (state, line, input) {\n      var ref$;\n      return (ref$ = this.$outdent) != null ? ref$.checkOutdent(line, input) : void 8;\n    };\n\n    prototype.autoOutdent = function (state, doc, row) {\n      var ref$;\n      return (ref$ = this.$outdent) != null ? ref$.autoOutdent(doc, row) : void 8;\n    };\n\n    return LiveScriptMode;\n  }(require('../mode/text').Mode);\n\n  keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\n  stringfill = {\n    defaultToken: 'string'\n  };\n  LiveScriptMode.Rules = {\n    start: [{\n      token: 'keyword',\n      regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\n    }, {\n      token: 'constant.language',\n      regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n    }, {\n      token: 'invalid.illegal',\n      regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\n    }, {\n      token: 'language.support.class',\n      regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\n    }, {\n      token: 'language.support.function',\n      regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\n    }, {\n      token: 'variable.language',\n      regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n    }, {\n      token: 'identifier',\n      regex: identifier + '\\\\s*:(?![:=])'\n    }, {\n      token: 'variable',\n      regex: identifier\n    }, {\n      token: 'keyword.operator',\n      regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\n    }, {\n      token: 'keyword.variable',\n      regex: '(?:@+|::|\\\\.\\\\.)',\n      next: 'key'\n    }, {\n      token: 'keyword.operator',\n      regex: '\\\\.\\\\s*',\n      next: 'key'\n    }, {\n      token: 'string',\n      regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\n    }, {\n      token: 'string.doc',\n      regex: '\\'\\'\\'',\n      next: 'qdoc'\n    }, {\n      token: 'string.doc',\n      regex: '\"\"\"',\n      next: 'qqdoc'\n    }, {\n      token: 'string',\n      regex: '\\'',\n      next: 'qstring'\n    }, {\n      token: 'string',\n      regex: '\"',\n      next: 'qqstring'\n    }, {\n      token: 'string',\n      regex: '`',\n      next: 'js'\n    }, {\n      token: 'string',\n      regex: '<\\\\[',\n      next: 'words'\n    }, {\n      token: 'string.regex',\n      regex: '//',\n      next: 'heregex'\n    }, {\n      token: 'comment.doc',\n      regex: '/\\\\*',\n      next: 'comment'\n    }, {\n      token: 'comment',\n      regex: '#.*'\n    }, {\n      token: 'string.regex',\n      regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\n      next: 'key'\n    }, {\n      token: 'constant.numeric',\n      regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n    }, {\n      token: 'lparen',\n      regex: '[({[]'\n    }, {\n      token: 'rparen',\n      regex: '[)}\\\\]]',\n      next: 'key'\n    }, {\n      token: 'keyword.operator',\n      regex: '[\\\\^!|&%+\\\\-]+'\n    }, {\n      token: 'text',\n      regex: '\\\\s+'\n    }],\n    heregex: [{\n      token: 'string.regex',\n      regex: '.*?//[gimy$?]{0,4}',\n      next: 'start'\n    }, {\n      token: 'string.regex',\n      regex: '\\\\s*#{'\n    }, {\n      token: 'comment.regex',\n      regex: '\\\\s+(?:#.*)?'\n    }, {\n      defaultToken: 'string.regex'\n    }],\n    key: [{\n      token: 'keyword.operator',\n      regex: '[.?@!]+'\n    }, {\n      token: 'identifier',\n      regex: identifier,\n      next: 'start'\n    }, {\n      token: 'text',\n      regex: '',\n      next: 'start'\n    }],\n    comment: [{\n      token: 'comment.doc',\n      regex: '.*?\\\\*/',\n      next: 'start'\n    }, {\n      defaultToken: 'comment.doc'\n    }],\n    qdoc: [{\n      token: 'string',\n      regex: \".*?'''\",\n      next: 'key'\n    }, stringfill],\n    qqdoc: [{\n      token: 'string',\n      regex: '.*?\"\"\"',\n      next: 'key'\n    }, stringfill],\n    qstring: [{\n      token: 'string',\n      regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\n      next: 'key'\n    }, stringfill],\n    qqstring: [{\n      token: 'string',\n      regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\n      next: 'key'\n    }, stringfill],\n    js: [{\n      token: 'string',\n      regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\n      next: 'key'\n    }, stringfill],\n    words: [{\n      token: 'string',\n      regex: '.*?\\\\]>',\n      next: 'key'\n    }, stringfill]\n  };\n\n  function extend$(sub, sup) {\n    function fun() {}\n\n    fun.prototype = (sub.superclass = sup).prototype;\n    (sub.prototype = new fun()).constructor = sub;\n    if (typeof sup.extended == 'function') sup.extended(sub);\n    return sub;\n  }\n\n  function import$(obj, src) {\n    var own = {}.hasOwnProperty;\n\n    for (var key in src) if (own.call(src, key)) obj[key] = src[key];\n\n    return obj;\n  }\n});\n\n(function () {\n  ace.require([\"ace/mode/livescript\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-livescript.js"],"names":["ace","define","require","exports","module","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","identifier","LiveScriptMode","keywordend","stringfill","Mode","superclass","indenter","extend$","import$","displayName","constructor","that","$tokenizer","Tokenizer","Rules","$outdent","$id","$behaviour","CstyleBehaviour","RegExp","getNextLineIndent","state","tab","tokens","getLineTokens","type","lineCommentStart","blockComment","start","end","ref$","defaultToken","token","regex","next","heregex","key","comment","qdoc","qqdoc","qstring","qqstring","js","words","sub","sup","fun","extended","obj","src","own","hasOwnProperty","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/livescript\",[\"require\",\"exports\",\"module\",\"ace/tokenizer\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/text\"], function(require, exports, module){\n  var identifier, LiveScriptMode, keywordend, stringfill;\n  identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\n  exports.Mode = LiveScriptMode = (function(superclass){\n    var indenter, prototype = extend$((import$(LiveScriptMode, superclass).displayName = 'LiveScriptMode', LiveScriptMode), superclass).prototype, constructor = LiveScriptMode;\n    function LiveScriptMode(){\n      var that;\n      this.$tokenizer = new (require('../tokenizer')).Tokenizer(LiveScriptMode.Rules);\n      if (that = require('../mode/matching_brace_outdent')) {\n        this.$outdent = new that.MatchingBraceOutdent;\n      }\n      this.$id = \"ace/mode/livescript\";\n      this.$behaviour = new (require(\"./behaviour/cstyle\").CstyleBehaviour)();\n    }\n    indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\n    prototype.getNextLineIndent = function(state, line, tab){\n      var indent, tokens;\n      indent = this.$getIndent(line);\n      tokens = this.$tokenizer.getLineTokens(line, state).tokens;\n      if (!(tokens.length && tokens[tokens.length - 1].type === 'comment')) {\n        if (state === 'start' && indenter.test(line)) {\n          indent += tab;\n        }\n      }\n      return indent;\n    };\n    prototype.lineCommentStart = \"#\";\n    prototype.blockComment = {start: \"###\", end: \"###\"};\n    prototype.checkOutdent = function(state, line, input){\n      var ref$;\n      return (ref$ = this.$outdent) != null ? ref$.checkOutdent(line, input) : void 8;\n    };\n    prototype.autoOutdent = function(state, doc, row){\n      var ref$;\n      return (ref$ = this.$outdent) != null ? ref$.autoOutdent(doc, row) : void 8;\n    };\n    return LiveScriptMode;\n  }(require('../mode/text').Mode));\n  keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\n  stringfill = {\n    defaultToken: 'string'\n  };\n  LiveScriptMode.Rules = {\n    start: [\n      {\n        token: 'keyword',\n        regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\n      }, {\n        token: 'constant.language',\n        regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n      }, {\n        token: 'invalid.illegal',\n        regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\n      }, {\n        token: 'language.support.class',\n        regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\n      }, {\n        token: 'language.support.function',\n        regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\n      }, {\n        token: 'variable.language',\n        regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n      }, {\n        token: 'identifier',\n        regex: identifier + '\\\\s*:(?![:=])'\n      }, {\n        token: 'variable',\n        regex: identifier\n      }, {\n        token: 'keyword.operator',\n        regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\n      }, {\n        token: 'keyword.variable',\n        regex: '(?:@+|::|\\\\.\\\\.)',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '\\\\.\\\\s*',\n        next: 'key'\n      }, {\n        token: 'string',\n        regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\n      }, {\n        token: 'string.doc',\n        regex: '\\'\\'\\'',\n        next: 'qdoc'\n      }, {\n        token: 'string.doc',\n        regex: '\"\"\"',\n        next: 'qqdoc'\n      }, {\n        token: 'string',\n        regex: '\\'',\n        next: 'qstring'\n      }, {\n        token: 'string',\n        regex: '\"',\n        next: 'qqstring'\n      }, {\n        token: 'string',\n        regex: '`',\n        next: 'js'\n      }, {\n        token: 'string',\n        regex: '<\\\\[',\n        next: 'words'\n      }, {\n        token: 'string.regex',\n        regex: '//',\n        next: 'heregex'\n      }, {\n        token: 'comment.doc',\n        regex: '/\\\\*',\n        next: 'comment'\n      }, {\n        token: 'comment',\n        regex: '#.*'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\n        next: 'key'\n      }, {\n        token: 'constant.numeric',\n        regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n      }, {\n        token: 'lparen',\n        regex: '[({[]'\n      }, {\n        token: 'rparen',\n        regex: '[)}\\\\]]',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '[\\\\^!|&%+\\\\-]+'\n      }, {\n        token: 'text',\n        regex: '\\\\s+'\n      }\n    ],\n    heregex: [\n      {\n        token: 'string.regex',\n        regex: '.*?//[gimy$?]{0,4}',\n        next: 'start'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\s*#{'\n      }, {\n        token: 'comment.regex',\n        regex: '\\\\s+(?:#.*)?'\n      }, {\n        defaultToken: 'string.regex'\n      }\n    ],\n    key: [\n      {\n        token: 'keyword.operator',\n        regex: '[.?@!]+'\n      }, {\n        token: 'identifier',\n        regex: identifier,\n        next: 'start'\n      }, {\n        token: 'text',\n        regex: '',\n        next: 'start'\n      }\n    ],\n    comment: [\n      {\n        token: 'comment.doc',\n        regex: '.*?\\\\*/',\n        next: 'start'\n      }, {\n        defaultToken: 'comment.doc'\n      }\n    ],\n    qdoc: [\n      {\n        token: 'string',\n        regex: \".*?'''\",\n        next: 'key'\n      }, stringfill\n    ],\n    qqdoc: [\n      {\n        token: 'string',\n        regex: '.*?\"\"\"',\n        next: 'key'\n      }, stringfill\n    ],\n    qstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\n        next: 'key'\n      }, stringfill\n    ],\n    qqstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\n        next: 'key'\n      }, stringfill\n    ],\n    js: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\n        next: 'key'\n      }, stringfill\n    ],\n    words: [\n      {\n        token: 'string',\n        regex: '.*?\\\\]>',\n        next: 'key'\n      }, stringfill\n    ]\n  };\nfunction extend$(sub, sup){\n  function fun(){} fun.prototype = (sub.superclass = sup).prototype;\n  (sub.prototype = new fun).constructor = sub;\n  if (typeof sup.extended == 'function') sup.extended(sub);\n  return sub;\n}\nfunction import$(obj, src){\n  var own = {}.hasOwnProperty;\n  for (var key in src) if (own.call(src, key)) obj[key] = src[key];\n  return obj;\n}\n});                (function() {\n                    ace.require([\"ace/mode/livescript\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}