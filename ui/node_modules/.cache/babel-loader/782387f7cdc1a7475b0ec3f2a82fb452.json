{"ast":null,"code":"ace.define(\"ace/mode/ocaml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var OcamlHighlightRules = function () {\n    var keywords = \"and|as|assert|begin|class|constraint|do|done|downto|else|end|\" + \"exception|external|for|fun|function|functor|if|in|include|\" + \"inherit|initializer|lazy|let|match|method|module|mutable|new|\" + \"object|of|open|or|private|rec|sig|struct|then|to|try|type|val|\" + \"virtual|when|while|with\";\n    var builtinConstants = \"true|false\";\n    var builtinFunctions = \"abs|abs_big_int|abs_float|abs_num|abstract_tag|accept|access|acos|add|\" + \"add_available_units|add_big_int|add_buffer|add_channel|add_char|\" + \"add_initializer|add_int_big_int|add_interfaces|add_num|add_string|\" + \"add_substitute|add_substring|alarm|allocated_bytes|allow_only|\" + \"allow_unsafe_modules|always|append|appname_get|appname_set|\" + \"approx_num_exp|approx_num_fix|arg|argv|arith_status|array|\" + \"array1_of_genarray|array2_of_genarray|array3_of_genarray|asin|asr|\" + \"assoc|assq|at_exit|atan|atan2|auto_synchronize|background|basename|\" + \"beginning_of_input|big_int_of_int|big_int_of_num|big_int_of_string|bind|\" + \"bind_class|bind_tag|bits|bits_of_float|black|blit|blit_image|blue|bool|\" + \"bool_of_string|bounded_full_split|bounded_split|bounded_split_delim|\" + \"bprintf|break|broadcast|bscanf|button_down|c_layout|capitalize|cardinal|\" + \"cardinal|catch|catch_break|ceil|ceiling_num|channel|char|char_of_int|\" + \"chdir|check|check_suffix|chmod|choose|chop_extension|chop_suffix|chown|\" + \"chown|chr|chroot|classify_float|clear|clear_available_units|\" + \"clear_close_on_exec|clear_graph|clear_nonblock|clear_parser|\" + \"close|close|closeTk|close_box|close_graph|close_in|close_in_noerr|\" + \"close_out|close_out_noerr|close_process|close_process|\" + \"close_process_full|close_process_in|close_process_out|close_subwindow|\" + \"close_tag|close_tbox|closedir|closedir|closure_tag|code|combine|\" + \"combine|combine|command|compact|compare|compare_big_int|compare_num|\" + \"complex32|complex64|concat|conj|connect|contains|contains_from|contents|\" + \"copy|cos|cosh|count|count|counters|create|create_alarm|create_image|\" + \"create_matrix|create_matrix|create_matrix|create_object|\" + \"create_object_and_run_initializers|create_object_opt|create_process|\" + \"create_process|create_process_env|create_process_env|create_table|\" + \"current|current_dir_name|current_point|current_x|current_y|curveto|\" + \"custom_tag|cyan|data_size|decr|decr_num|default_available_units|delay|\" + \"delete_alarm|descr_of_in_channel|descr_of_out_channel|destroy|diff|dim|\" + \"dim1|dim2|dim3|dims|dirname|display_mode|div|div_big_int|div_num|\" + \"double_array_tag|double_tag|draw_arc|draw_char|draw_circle|draw_ellipse|\" + \"draw_image|draw_poly|draw_poly_line|draw_rect|draw_segments|draw_string|\" + \"dummy_pos|dummy_table|dump_image|dup|dup2|elements|empty|end_of_input|\" + \"environment|eprintf|epsilon_float|eq_big_int|eq_num|equal|err_formatter|\" + \"error_message|escaped|establish_server|executable_name|execv|execve|execvp|\" + \"execvpe|exists|exists2|exit|exp|failwith|fast_sort|fchmod|fchown|field|\" + \"file|file_exists|fill|fill_arc|fill_circle|fill_ellipse|fill_poly|fill_rect|\" + \"filter|final_tag|finalise|find|find_all|first_chars|firstkey|flatten|\" + \"float|float32|float64|float_of_big_int|float_of_bits|float_of_int|\" + \"float_of_num|float_of_string|floor|floor_num|flush|flush_all|flush_input|\" + \"flush_str_formatter|fold|fold_left|fold_left2|fold_right|fold_right2|\" + \"for_all|for_all2|force|force_newline|force_val|foreground|fork|\" + \"format_of_string|formatter_of_buffer|formatter_of_out_channel|\" + \"fortran_layout|forward_tag|fprintf|frexp|from|from_channel|from_file|\" + \"from_file_bin|from_function|from_string|fscanf|fst|fstat|ftruncate|\" + \"full_init|full_major|full_split|gcd_big_int|ge_big_int|ge_num|\" + \"genarray_of_array1|genarray_of_array2|genarray_of_array3|get|\" + \"get_all_formatter_output_functions|get_approx_printing|get_copy|\" + \"get_ellipsis_text|get_error_when_null_denominator|get_floating_precision|\" + \"get_formatter_output_functions|get_formatter_tag_functions|get_image|\" + \"get_margin|get_mark_tags|get_max_boxes|get_max_indent|get_method|\" + \"get_method_label|get_normalize_ratio|get_normalize_ratio_when_printing|\" + \"get_print_tags|get_state|get_variable|getcwd|getegid|getegid|getenv|\" + \"getenv|getenv|geteuid|geteuid|getgid|getgid|getgrgid|getgrgid|getgrnam|\" + \"getgrnam|getgroups|gethostbyaddr|gethostbyname|gethostname|getitimer|\" + \"getlogin|getpeername|getpid|getppid|getprotobyname|getprotobynumber|\" + \"getpwnam|getpwuid|getservbyname|getservbyport|getsockname|getsockopt|\" + \"getsockopt_float|getsockopt_int|getsockopt_optint|gettimeofday|getuid|\" + \"global_replace|global_substitute|gmtime|green|grid|group_beginning|\" + \"group_end|gt_big_int|gt_num|guard|handle_unix_error|hash|hash_param|\" + \"hd|header_size|i|id|ignore|in_channel_length|in_channel_of_descr|incr|\" + \"incr_num|index|index_from|inet_addr_any|inet_addr_of_string|infinity|\" + \"infix_tag|init|init_class|input|input_binary_int|input_byte|input_char|\" + \"input_line|input_value|int|int16_signed|int16_unsigned|int32|int64|\" + \"int8_signed|int8_unsigned|int_of_big_int|int_of_char|int_of_float|\" + \"int_of_num|int_of_string|integer_num|inter|interactive|inv|invalid_arg|\" + \"is_block|is_empty|is_implicit|is_int|is_int_big_int|is_integer_num|\" + \"is_relative|iter|iter2|iteri|join|junk|key_pressed|kill|kind|kprintf|\" + \"kscanf|land|last_chars|layout|lazy_from_fun|lazy_from_val|lazy_is_val|\" + \"lazy_tag|ldexp|le_big_int|le_num|length|lexeme|lexeme_char|lexeme_end|\" + \"lexeme_end_p|lexeme_start|lexeme_start_p|lineto|link|list|listen|lnot|\" + \"loadfile|loadfile_private|localtime|lock|lockf|log|log10|logand|lognot|\" + \"logor|logxor|lor|lower_window|lowercase|lseek|lsl|lsr|lstat|lt_big_int|\" + \"lt_num|lxor|magenta|magic|mainLoop|major|major_slice|make|make_formatter|\" + \"make_image|make_lexer|make_matrix|make_self_init|map|map2|map_file|mapi|\" + \"marshal|match_beginning|match_end|matched_group|matched_string|max|\" + \"max_array_length|max_big_int|max_elt|max_float|max_int|max_num|\" + \"max_string_length|mem|mem_assoc|mem_assq|memq|merge|min|min_big_int|\" + \"min_elt|min_float|min_int|min_num|minor|minus_big_int|minus_num|\" + \"minus_one|mkdir|mkfifo|mktime|mod|mod_big_int|mod_float|mod_num|modf|\" + \"mouse_pos|moveto|mul|mult_big_int|mult_int_big_int|mult_num|nan|narrow|\" + \"nat_of_num|nativeint|neg|neg_infinity|new_block|new_channel|new_method|\" + \"new_variable|next|nextkey|nice|nice|no_scan_tag|norm|norm2|not|npeek|\" + \"nth|nth_dim|num_digits_big_int|num_dims|num_of_big_int|num_of_int|\" + \"num_of_nat|num_of_ratio|num_of_string|O|obj|object_tag|ocaml_version|\" + \"of_array|of_channel|of_float|of_int|of_int32|of_list|of_nativeint|\" + \"of_string|one|openTk|open_box|open_connection|open_graph|open_hbox|\" + \"open_hovbox|open_hvbox|open_in|open_in_bin|open_in_gen|open_out|\" + \"open_out_bin|open_out_gen|open_process|open_process_full|open_process_in|\" + \"open_process_out|open_subwindow|open_tag|open_tbox|open_temp_file|\" + \"open_vbox|opendbm|opendir|openfile|or|os_type|out_channel_length|\" + \"out_channel_of_descr|output|output_binary_int|output_buffer|output_byte|\" + \"output_char|output_string|output_value|over_max_boxes|pack|params|\" + \"parent_dir_name|parse|parse_argv|partition|pause|peek|pipe|pixels|\" + \"place|plot|plots|point_color|polar|poll|pop|pos_in|pos_out|pow|\" + \"power_big_int_positive_big_int|power_big_int_positive_int|\" + \"power_int_positive_big_int|power_int_positive_int|power_num|\" + \"pp_close_box|pp_close_tag|pp_close_tbox|pp_force_newline|\" + \"pp_get_all_formatter_output_functions|pp_get_ellipsis_text|\" + \"pp_get_formatter_output_functions|pp_get_formatter_tag_functions|\" + \"pp_get_margin|pp_get_mark_tags|pp_get_max_boxes|pp_get_max_indent|\" + \"pp_get_print_tags|pp_open_box|pp_open_hbox|pp_open_hovbox|pp_open_hvbox|\" + \"pp_open_tag|pp_open_tbox|pp_open_vbox|pp_over_max_boxes|pp_print_as|\" + \"pp_print_bool|pp_print_break|pp_print_char|pp_print_cut|pp_print_float|\" + \"pp_print_flush|pp_print_if_newline|pp_print_int|pp_print_newline|\" + \"pp_print_space|pp_print_string|pp_print_tab|pp_print_tbreak|\" + \"pp_set_all_formatter_output_functions|pp_set_ellipsis_text|\" + \"pp_set_formatter_out_channel|pp_set_formatter_output_functions|\" + \"pp_set_formatter_tag_functions|pp_set_margin|pp_set_mark_tags|\" + \"pp_set_max_boxes|pp_set_max_indent|pp_set_print_tags|pp_set_tab|\" + \"pp_set_tags|pred|pred_big_int|pred_num|prerr_char|prerr_endline|\" + \"prerr_float|prerr_int|prerr_newline|prerr_string|print|print_as|\" + \"print_bool|print_break|print_char|print_cut|print_endline|print_float|\" + \"print_flush|print_if_newline|print_int|print_newline|print_space|\" + \"print_stat|print_string|print_tab|print_tbreak|printf|prohibit|\" + \"public_method_label|push|putenv|quo_num|quomod_big_int|quote|raise|\" + \"raise_window|ratio_of_num|rcontains_from|read|read_float|read_int|\" + \"read_key|read_line|readdir|readdir|readlink|really_input|receive|recv|\" + \"recvfrom|red|ref|regexp|regexp_case_fold|regexp_string|\" + \"regexp_string_case_fold|register|register_exception|rem|remember_mode|\" + \"remove|remove_assoc|remove_assq|rename|replace|replace_first|\" + \"replace_matched|repr|reset|reshape|reshape_1|reshape_2|reshape_3|rev|\" + \"rev_append|rev_map|rev_map2|rewinddir|rgb|rhs_end|rhs_end_pos|rhs_start|\" + \"rhs_start_pos|rindex|rindex_from|rlineto|rmdir|rmoveto|round_num|\" + \"run_initializers|run_initializers_opt|scanf|search_backward|\" + \"search_forward|seek_in|seek_out|select|self|self_init|send|sendto|set|\" + \"set_all_formatter_output_functions|set_approx_printing|\" + \"set_binary_mode_in|set_binary_mode_out|set_close_on_exec|\" + \"set_close_on_exec|set_color|set_ellipsis_text|\" + \"set_error_when_null_denominator|set_field|set_floating_precision|\" + \"set_font|set_formatter_out_channel|set_formatter_output_functions|\" + \"set_formatter_tag_functions|set_line_width|set_margin|set_mark_tags|\" + \"set_max_boxes|set_max_indent|set_method|set_nonblock|set_nonblock|\" + \"set_normalize_ratio|set_normalize_ratio_when_printing|set_print_tags|\" + \"set_signal|set_state|set_tab|set_tag|set_tags|set_text_size|\" + \"set_window_title|setgid|setgid|setitimer|setitimer|setsid|setsid|\" + \"setsockopt|setsockopt|setsockopt_float|setsockopt_float|setsockopt_int|\" + \"setsockopt_int|setsockopt_optint|setsockopt_optint|setuid|setuid|\" + \"shift_left|shift_left|shift_left|shift_right|shift_right|shift_right|\" + \"shift_right_logical|shift_right_logical|shift_right_logical|show_buckets|\" + \"shutdown|shutdown|shutdown_connection|shutdown_connection|sigabrt|\" + \"sigalrm|sigchld|sigcont|sigfpe|sighup|sigill|sigint|sigkill|sign_big_int|\" + \"sign_num|signal|signal|sigpending|sigpending|sigpipe|sigprocmask|\" + \"sigprocmask|sigprof|sigquit|sigsegv|sigstop|sigsuspend|sigsuspend|\" + \"sigterm|sigtstp|sigttin|sigttou|sigusr1|sigusr2|sigvtalrm|sin|singleton|\" + \"sinh|size|size|size_x|size_y|sleep|sleep|sleep|slice_left|slice_left|\" + \"slice_left_1|slice_left_2|slice_right|slice_right|slice_right_1|\" + \"slice_right_2|snd|socket|socket|socket|socketpair|socketpair|sort|sound|\" + \"split|split_delim|sprintf|sprintf|sqrt|sqrt|sqrt_big_int|square_big_int|\" + \"square_num|sscanf|stable_sort|stable_sort|stable_sort|stable_sort|stable_sort|\" + \"stable_sort|stat|stat|stat|stat|stat|stats|stats|std_formatter|stdbuf|\" + \"stderr|stderr|stderr|stdib|stdin|stdin|stdin|stdout|stdout|stdout|\" + \"str_formatter|string|string_after|string_before|string_match|\" + \"string_of_big_int|string_of_bool|string_of_float|string_of_format|\" + \"string_of_inet_addr|string_of_inet_addr|string_of_int|string_of_num|\" + \"string_partial_match|string_tag|sub|sub|sub_big_int|sub_left|sub_num|\" + \"sub_right|subset|subset|substitute_first|substring|succ|succ|\" + \"succ|succ|succ_big_int|succ_num|symbol_end|symbol_end_pos|symbol_start|\" + \"symbol_start_pos|symlink|symlink|sync|synchronize|system|system|system|\" + \"tag|take|tan|tanh|tcdrain|tcdrain|tcflow|tcflow|tcflush|tcflush|\" + \"tcgetattr|tcgetattr|tcsendbreak|tcsendbreak|tcsetattr|tcsetattr|\" + \"temp_file|text_size|time|time|time|timed_read|timed_write|times|times|\" + \"tl|tl|tl|to_buffer|to_channel|to_float|to_hex|to_int|to_int32|to_list|\" + \"to_list|to_list|to_nativeint|to_string|to_string|to_string|to_string|\" + \"to_string|top|top|total_size|transfer|transp|truncate|truncate|truncate|\" + \"truncate|truncate|truncate|try_lock|umask|umask|uncapitalize|uncapitalize|\" + \"uncapitalize|union|union|unit_big_int|unlink|unlink|unlock|unmarshal|\" + \"unsafe_blit|unsafe_fill|unsafe_get|unsafe_get|unsafe_set|unsafe_set|\" + \"update|uppercase|uppercase|uppercase|uppercase|usage|utimes|utimes|wait|\" + \"wait|wait|wait|wait_next_event|wait_pid|wait_read|wait_signal|\" + \"wait_timed_read|wait_timed_write|wait_write|waitpid|white|\" + \"widen|window_id|word_size|wrap|wrap_abort|write|yellow|yield|zero|zero_big_int|\" + \"Arg|Arith_status|Array|Array1|Array2|Array3|ArrayLabels|Big_int|Bigarray|\" + \"Buffer|Callback|CamlinternalOO|Char|Complex|Condition|Dbm|Digest|Dynlink|\" + \"Event|Filename|Format|Gc|Genarray|Genlex|Graphics|GraphicsX11|Hashtbl|\" + \"Int32|Int64|LargeFile|Lazy|Lexing|List|ListLabels|Make|Map|Marshal|\" + \"MoreLabels|Mutex|Nativeint|Num|Obj|Oo|Parsing|Pervasives|Printexc|\" + \"Printf|Queue|Random|Scanf|Scanning|Set|Sort|Stack|State|StdLabels|Str|\" + \"Stream|String|StringLabels|Sys|Thread|ThreadUnix|Tk|Unix|UnixLabels|Weak\";\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"this\",\n      \"keyword\": keywords,\n      \"constant.language\": builtinConstants,\n      \"support.function\": builtinFunctions\n    }, \"identifier\");\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: '\\\\(\\\\*.*?\\\\*\\\\)\\\\s*?$'\n      }, {\n        token: \"comment\",\n        regex: '\\\\(\\\\*.*',\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single char\n        regex: \"'.'\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\"',\n        next: \"qstring\"\n      }, {\n        token: \"constant.numeric\",\n        // imaginary\n        regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+\\\\.|\\\\-\\\\.|\\\\*\\\\.|\\\\/\\\\.|#|;;|\\\\+|\\\\-|\\\\*|\\\\*\\\\*\\\\/|\\\\/\\\\/|%|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|<-|=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\)\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"qstring\": [{\n        token: \"string\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }]\n    };\n  };\n\n  oop.inherits(OcamlHighlightRules, TextHighlightRules);\n  exports.OcamlHighlightRules = OcamlHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/ocaml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/ocaml_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var OcamlHighlightRules = require(\"./ocaml_highlight_rules\").OcamlHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var Range = require(\"../range\").Range;\n\n  var Mode = function () {\n    this.HighlightRules = OcamlHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n    this.$outdent = new MatchingBraceOutdent();\n  };\n\n  oop.inherits(Mode, TextMode);\n  var indenter = /(?:[({[=:]|[-=]>|\\b(?:else|try|with))\\s*$/;\n  (function () {\n    this.toggleCommentLines = function (state, doc, startRow, endRow) {\n      var i, line;\n      var outdent = true;\n      var re = /^\\s*\\(\\*(.*)\\*\\)/;\n\n      for (i = startRow; i <= endRow; i++) {\n        if (!re.test(doc.getLine(i))) {\n          outdent = false;\n          break;\n        }\n      }\n\n      var range = new Range(0, 0, 0, 0);\n\n      for (i = startRow; i <= endRow; i++) {\n        line = doc.getLine(i);\n        range.start.row = i;\n        range.end.row = i;\n        range.end.column = line.length;\n        doc.replace(range, outdent ? line.match(re)[1] : \"(*\" + line + \"*)\");\n      }\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n      if (!(tokens.length && tokens[tokens.length - 1].type === 'comment') && state === 'start' && indenter.test(line)) indent += tab;\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/ocaml\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/ocaml\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-ocaml.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","OcamlHighlightRules","keywords","builtinConstants","builtinFunctions","keywordMapper","createKeywordMapper","decimalInteger","octInteger","hexInteger","binInteger","integer","exponent","fraction","intPart","pointFloat","exponentFloat","floatNumber","$rules","token","regex","next","defaultToken","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","$outdent","indenter","toggleCommentLines","state","startRow","endRow","i","outdent","re","range","start","end","getNextLineIndent","tab","tokens","getTokenizer","getLineTokens","type","$id","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/ocaml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar OcamlHighlightRules = function() {\n\n    var keywords = (\n        \"and|as|assert|begin|class|constraint|do|done|downto|else|end|\"  +\n        \"exception|external|for|fun|function|functor|if|in|include|\"     +\n        \"inherit|initializer|lazy|let|match|method|module|mutable|new|\"  +\n        \"object|of|open|or|private|rec|sig|struct|then|to|try|type|val|\" +\n        \"virtual|when|while|with\"\n    );\n\n    var builtinConstants = (\"true|false\");\n\n    var builtinFunctions = (\n        \"abs|abs_big_int|abs_float|abs_num|abstract_tag|accept|access|acos|add|\" +\n        \"add_available_units|add_big_int|add_buffer|add_channel|add_char|\" +\n        \"add_initializer|add_int_big_int|add_interfaces|add_num|add_string|\" +\n        \"add_substitute|add_substring|alarm|allocated_bytes|allow_only|\" +\n        \"allow_unsafe_modules|always|append|appname_get|appname_set|\" +\n        \"approx_num_exp|approx_num_fix|arg|argv|arith_status|array|\" +\n        \"array1_of_genarray|array2_of_genarray|array3_of_genarray|asin|asr|\" +\n        \"assoc|assq|at_exit|atan|atan2|auto_synchronize|background|basename|\" +\n        \"beginning_of_input|big_int_of_int|big_int_of_num|big_int_of_string|bind|\" +\n        \"bind_class|bind_tag|bits|bits_of_float|black|blit|blit_image|blue|bool|\" +\n        \"bool_of_string|bounded_full_split|bounded_split|bounded_split_delim|\" +\n        \"bprintf|break|broadcast|bscanf|button_down|c_layout|capitalize|cardinal|\" +\n        \"cardinal|catch|catch_break|ceil|ceiling_num|channel|char|char_of_int|\" +\n        \"chdir|check|check_suffix|chmod|choose|chop_extension|chop_suffix|chown|\" +\n        \"chown|chr|chroot|classify_float|clear|clear_available_units|\" +\n        \"clear_close_on_exec|clear_graph|clear_nonblock|clear_parser|\" +\n        \"close|close|closeTk|close_box|close_graph|close_in|close_in_noerr|\" +\n        \"close_out|close_out_noerr|close_process|close_process|\" +\n        \"close_process_full|close_process_in|close_process_out|close_subwindow|\" +\n        \"close_tag|close_tbox|closedir|closedir|closure_tag|code|combine|\" +\n        \"combine|combine|command|compact|compare|compare_big_int|compare_num|\" +\n        \"complex32|complex64|concat|conj|connect|contains|contains_from|contents|\" +\n        \"copy|cos|cosh|count|count|counters|create|create_alarm|create_image|\" +\n        \"create_matrix|create_matrix|create_matrix|create_object|\" +\n        \"create_object_and_run_initializers|create_object_opt|create_process|\" +\n        \"create_process|create_process_env|create_process_env|create_table|\" +\n        \"current|current_dir_name|current_point|current_x|current_y|curveto|\" +\n        \"custom_tag|cyan|data_size|decr|decr_num|default_available_units|delay|\" +\n        \"delete_alarm|descr_of_in_channel|descr_of_out_channel|destroy|diff|dim|\" +\n        \"dim1|dim2|dim3|dims|dirname|display_mode|div|div_big_int|div_num|\" +\n        \"double_array_tag|double_tag|draw_arc|draw_char|draw_circle|draw_ellipse|\" +\n        \"draw_image|draw_poly|draw_poly_line|draw_rect|draw_segments|draw_string|\" +\n        \"dummy_pos|dummy_table|dump_image|dup|dup2|elements|empty|end_of_input|\" +\n        \"environment|eprintf|epsilon_float|eq_big_int|eq_num|equal|err_formatter|\" +\n        \"error_message|escaped|establish_server|executable_name|execv|execve|execvp|\" +\n        \"execvpe|exists|exists2|exit|exp|failwith|fast_sort|fchmod|fchown|field|\" +\n        \"file|file_exists|fill|fill_arc|fill_circle|fill_ellipse|fill_poly|fill_rect|\" +\n        \"filter|final_tag|finalise|find|find_all|first_chars|firstkey|flatten|\" +\n        \"float|float32|float64|float_of_big_int|float_of_bits|float_of_int|\" +\n        \"float_of_num|float_of_string|floor|floor_num|flush|flush_all|flush_input|\" +\n        \"flush_str_formatter|fold|fold_left|fold_left2|fold_right|fold_right2|\" +\n        \"for_all|for_all2|force|force_newline|force_val|foreground|fork|\" +\n        \"format_of_string|formatter_of_buffer|formatter_of_out_channel|\" +\n        \"fortran_layout|forward_tag|fprintf|frexp|from|from_channel|from_file|\" +\n        \"from_file_bin|from_function|from_string|fscanf|fst|fstat|ftruncate|\" +\n        \"full_init|full_major|full_split|gcd_big_int|ge_big_int|ge_num|\" +\n        \"genarray_of_array1|genarray_of_array2|genarray_of_array3|get|\" +\n        \"get_all_formatter_output_functions|get_approx_printing|get_copy|\" +\n        \"get_ellipsis_text|get_error_when_null_denominator|get_floating_precision|\" +\n        \"get_formatter_output_functions|get_formatter_tag_functions|get_image|\" +\n        \"get_margin|get_mark_tags|get_max_boxes|get_max_indent|get_method|\" +\n        \"get_method_label|get_normalize_ratio|get_normalize_ratio_when_printing|\" +\n        \"get_print_tags|get_state|get_variable|getcwd|getegid|getegid|getenv|\" +\n        \"getenv|getenv|geteuid|geteuid|getgid|getgid|getgrgid|getgrgid|getgrnam|\" +\n        \"getgrnam|getgroups|gethostbyaddr|gethostbyname|gethostname|getitimer|\" +\n        \"getlogin|getpeername|getpid|getppid|getprotobyname|getprotobynumber|\" +\n        \"getpwnam|getpwuid|getservbyname|getservbyport|getsockname|getsockopt|\" +\n        \"getsockopt_float|getsockopt_int|getsockopt_optint|gettimeofday|getuid|\" +\n        \"global_replace|global_substitute|gmtime|green|grid|group_beginning|\" +\n        \"group_end|gt_big_int|gt_num|guard|handle_unix_error|hash|hash_param|\" +\n        \"hd|header_size|i|id|ignore|in_channel_length|in_channel_of_descr|incr|\" +\n        \"incr_num|index|index_from|inet_addr_any|inet_addr_of_string|infinity|\" +\n        \"infix_tag|init|init_class|input|input_binary_int|input_byte|input_char|\" +\n        \"input_line|input_value|int|int16_signed|int16_unsigned|int32|int64|\" +\n        \"int8_signed|int8_unsigned|int_of_big_int|int_of_char|int_of_float|\" +\n        \"int_of_num|int_of_string|integer_num|inter|interactive|inv|invalid_arg|\" +\n        \"is_block|is_empty|is_implicit|is_int|is_int_big_int|is_integer_num|\" +\n        \"is_relative|iter|iter2|iteri|join|junk|key_pressed|kill|kind|kprintf|\" +\n        \"kscanf|land|last_chars|layout|lazy_from_fun|lazy_from_val|lazy_is_val|\" +\n        \"lazy_tag|ldexp|le_big_int|le_num|length|lexeme|lexeme_char|lexeme_end|\" +\n        \"lexeme_end_p|lexeme_start|lexeme_start_p|lineto|link|list|listen|lnot|\" +\n        \"loadfile|loadfile_private|localtime|lock|lockf|log|log10|logand|lognot|\" +\n        \"logor|logxor|lor|lower_window|lowercase|lseek|lsl|lsr|lstat|lt_big_int|\" +\n        \"lt_num|lxor|magenta|magic|mainLoop|major|major_slice|make|make_formatter|\" +\n        \"make_image|make_lexer|make_matrix|make_self_init|map|map2|map_file|mapi|\" +\n        \"marshal|match_beginning|match_end|matched_group|matched_string|max|\" +\n        \"max_array_length|max_big_int|max_elt|max_float|max_int|max_num|\" +\n        \"max_string_length|mem|mem_assoc|mem_assq|memq|merge|min|min_big_int|\" +\n        \"min_elt|min_float|min_int|min_num|minor|minus_big_int|minus_num|\" +\n        \"minus_one|mkdir|mkfifo|mktime|mod|mod_big_int|mod_float|mod_num|modf|\" +\n        \"mouse_pos|moveto|mul|mult_big_int|mult_int_big_int|mult_num|nan|narrow|\" +\n        \"nat_of_num|nativeint|neg|neg_infinity|new_block|new_channel|new_method|\" +\n        \"new_variable|next|nextkey|nice|nice|no_scan_tag|norm|norm2|not|npeek|\" +\n        \"nth|nth_dim|num_digits_big_int|num_dims|num_of_big_int|num_of_int|\" +\n        \"num_of_nat|num_of_ratio|num_of_string|O|obj|object_tag|ocaml_version|\" +\n        \"of_array|of_channel|of_float|of_int|of_int32|of_list|of_nativeint|\" +\n        \"of_string|one|openTk|open_box|open_connection|open_graph|open_hbox|\" +\n        \"open_hovbox|open_hvbox|open_in|open_in_bin|open_in_gen|open_out|\" +\n        \"open_out_bin|open_out_gen|open_process|open_process_full|open_process_in|\" +\n        \"open_process_out|open_subwindow|open_tag|open_tbox|open_temp_file|\" +\n        \"open_vbox|opendbm|opendir|openfile|or|os_type|out_channel_length|\" +\n        \"out_channel_of_descr|output|output_binary_int|output_buffer|output_byte|\" +\n        \"output_char|output_string|output_value|over_max_boxes|pack|params|\" +\n        \"parent_dir_name|parse|parse_argv|partition|pause|peek|pipe|pixels|\" +\n        \"place|plot|plots|point_color|polar|poll|pop|pos_in|pos_out|pow|\" +\n        \"power_big_int_positive_big_int|power_big_int_positive_int|\" +\n        \"power_int_positive_big_int|power_int_positive_int|power_num|\" +\n        \"pp_close_box|pp_close_tag|pp_close_tbox|pp_force_newline|\" +\n        \"pp_get_all_formatter_output_functions|pp_get_ellipsis_text|\" +\n        \"pp_get_formatter_output_functions|pp_get_formatter_tag_functions|\" +\n        \"pp_get_margin|pp_get_mark_tags|pp_get_max_boxes|pp_get_max_indent|\" +\n        \"pp_get_print_tags|pp_open_box|pp_open_hbox|pp_open_hovbox|pp_open_hvbox|\" +\n        \"pp_open_tag|pp_open_tbox|pp_open_vbox|pp_over_max_boxes|pp_print_as|\" +\n        \"pp_print_bool|pp_print_break|pp_print_char|pp_print_cut|pp_print_float|\" +\n        \"pp_print_flush|pp_print_if_newline|pp_print_int|pp_print_newline|\" +\n        \"pp_print_space|pp_print_string|pp_print_tab|pp_print_tbreak|\" +\n        \"pp_set_all_formatter_output_functions|pp_set_ellipsis_text|\" +\n        \"pp_set_formatter_out_channel|pp_set_formatter_output_functions|\" +\n        \"pp_set_formatter_tag_functions|pp_set_margin|pp_set_mark_tags|\" +\n        \"pp_set_max_boxes|pp_set_max_indent|pp_set_print_tags|pp_set_tab|\" +\n        \"pp_set_tags|pred|pred_big_int|pred_num|prerr_char|prerr_endline|\" +\n        \"prerr_float|prerr_int|prerr_newline|prerr_string|print|print_as|\" +\n        \"print_bool|print_break|print_char|print_cut|print_endline|print_float|\" +\n        \"print_flush|print_if_newline|print_int|print_newline|print_space|\" +\n        \"print_stat|print_string|print_tab|print_tbreak|printf|prohibit|\" +\n        \"public_method_label|push|putenv|quo_num|quomod_big_int|quote|raise|\" +\n        \"raise_window|ratio_of_num|rcontains_from|read|read_float|read_int|\" +\n        \"read_key|read_line|readdir|readdir|readlink|really_input|receive|recv|\" +\n        \"recvfrom|red|ref|regexp|regexp_case_fold|regexp_string|\" +\n        \"regexp_string_case_fold|register|register_exception|rem|remember_mode|\" +\n        \"remove|remove_assoc|remove_assq|rename|replace|replace_first|\" +\n        \"replace_matched|repr|reset|reshape|reshape_1|reshape_2|reshape_3|rev|\" +\n        \"rev_append|rev_map|rev_map2|rewinddir|rgb|rhs_end|rhs_end_pos|rhs_start|\" +\n        \"rhs_start_pos|rindex|rindex_from|rlineto|rmdir|rmoveto|round_num|\" +\n        \"run_initializers|run_initializers_opt|scanf|search_backward|\" +\n        \"search_forward|seek_in|seek_out|select|self|self_init|send|sendto|set|\" +\n        \"set_all_formatter_output_functions|set_approx_printing|\" +\n        \"set_binary_mode_in|set_binary_mode_out|set_close_on_exec|\" +\n        \"set_close_on_exec|set_color|set_ellipsis_text|\" +\n        \"set_error_when_null_denominator|set_field|set_floating_precision|\" +\n        \"set_font|set_formatter_out_channel|set_formatter_output_functions|\" +\n        \"set_formatter_tag_functions|set_line_width|set_margin|set_mark_tags|\" +\n        \"set_max_boxes|set_max_indent|set_method|set_nonblock|set_nonblock|\" +\n        \"set_normalize_ratio|set_normalize_ratio_when_printing|set_print_tags|\" +\n        \"set_signal|set_state|set_tab|set_tag|set_tags|set_text_size|\" +\n        \"set_window_title|setgid|setgid|setitimer|setitimer|setsid|setsid|\" +\n        \"setsockopt|setsockopt|setsockopt_float|setsockopt_float|setsockopt_int|\" +\n        \"setsockopt_int|setsockopt_optint|setsockopt_optint|setuid|setuid|\" +\n        \"shift_left|shift_left|shift_left|shift_right|shift_right|shift_right|\" +\n        \"shift_right_logical|shift_right_logical|shift_right_logical|show_buckets|\" +\n        \"shutdown|shutdown|shutdown_connection|shutdown_connection|sigabrt|\" +\n        \"sigalrm|sigchld|sigcont|sigfpe|sighup|sigill|sigint|sigkill|sign_big_int|\" +\n        \"sign_num|signal|signal|sigpending|sigpending|sigpipe|sigprocmask|\" +\n        \"sigprocmask|sigprof|sigquit|sigsegv|sigstop|sigsuspend|sigsuspend|\" +\n        \"sigterm|sigtstp|sigttin|sigttou|sigusr1|sigusr2|sigvtalrm|sin|singleton|\" +\n        \"sinh|size|size|size_x|size_y|sleep|sleep|sleep|slice_left|slice_left|\" +\n        \"slice_left_1|slice_left_2|slice_right|slice_right|slice_right_1|\" +\n        \"slice_right_2|snd|socket|socket|socket|socketpair|socketpair|sort|sound|\" +\n        \"split|split_delim|sprintf|sprintf|sqrt|sqrt|sqrt_big_int|square_big_int|\" +\n        \"square_num|sscanf|stable_sort|stable_sort|stable_sort|stable_sort|stable_sort|\" +\n        \"stable_sort|stat|stat|stat|stat|stat|stats|stats|std_formatter|stdbuf|\" +\n        \"stderr|stderr|stderr|stdib|stdin|stdin|stdin|stdout|stdout|stdout|\" +\n        \"str_formatter|string|string_after|string_before|string_match|\" +\n        \"string_of_big_int|string_of_bool|string_of_float|string_of_format|\" +\n        \"string_of_inet_addr|string_of_inet_addr|string_of_int|string_of_num|\" +\n        \"string_partial_match|string_tag|sub|sub|sub_big_int|sub_left|sub_num|\" +\n        \"sub_right|subset|subset|substitute_first|substring|succ|succ|\" +\n        \"succ|succ|succ_big_int|succ_num|symbol_end|symbol_end_pos|symbol_start|\" +\n        \"symbol_start_pos|symlink|symlink|sync|synchronize|system|system|system|\" +\n        \"tag|take|tan|tanh|tcdrain|tcdrain|tcflow|tcflow|tcflush|tcflush|\" +\n        \"tcgetattr|tcgetattr|tcsendbreak|tcsendbreak|tcsetattr|tcsetattr|\" +\n        \"temp_file|text_size|time|time|time|timed_read|timed_write|times|times|\" +\n        \"tl|tl|tl|to_buffer|to_channel|to_float|to_hex|to_int|to_int32|to_list|\" +\n        \"to_list|to_list|to_nativeint|to_string|to_string|to_string|to_string|\" +\n        \"to_string|top|top|total_size|transfer|transp|truncate|truncate|truncate|\" +\n        \"truncate|truncate|truncate|try_lock|umask|umask|uncapitalize|uncapitalize|\" +\n        \"uncapitalize|union|union|unit_big_int|unlink|unlink|unlock|unmarshal|\" +\n        \"unsafe_blit|unsafe_fill|unsafe_get|unsafe_get|unsafe_set|unsafe_set|\" +\n        \"update|uppercase|uppercase|uppercase|uppercase|usage|utimes|utimes|wait|\" +\n        \"wait|wait|wait|wait_next_event|wait_pid|wait_read|wait_signal|\" +\n        \"wait_timed_read|wait_timed_write|wait_write|waitpid|white|\" +\n        \"widen|window_id|word_size|wrap|wrap_abort|write|yellow|yield|zero|zero_big_int|\" +\n\n        \"Arg|Arith_status|Array|Array1|Array2|Array3|ArrayLabels|Big_int|Bigarray|\" +\n        \"Buffer|Callback|CamlinternalOO|Char|Complex|Condition|Dbm|Digest|Dynlink|\" +\n        \"Event|Filename|Format|Gc|Genarray|Genlex|Graphics|GraphicsX11|Hashtbl|\" +\n        \"Int32|Int64|LargeFile|Lazy|Lexing|List|ListLabels|Make|Map|Marshal|\" +\n        \"MoreLabels|Mutex|Nativeint|Num|Obj|Oo|Parsing|Pervasives|Printexc|\" +\n        \"Printf|Queue|Random|Scanf|Scanning|Set|Sort|Stack|State|StdLabels|Str|\" +\n        \"Stream|String|StringLabels|Sys|Thread|ThreadUnix|Tk|Unix|UnixLabels|Weak\"\n    );\n\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"this\",\n        \"keyword\": keywords,\n        \"constant.language\": builtinConstants,\n        \"support.function\": builtinFunctions\n    }, \"identifier\");\n\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" +  intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : '\\\\(\\\\*.*?\\\\*\\\\)\\\\s*?$'\n            },\n            {\n                token : \"comment\",\n                regex : '\\\\(\\\\*.*',\n                next : \"comment\"\n            },\n            {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            },\n            {\n                token : \"string\", // single char\n                regex : \"'.'\"\n            },\n            {\n                token : \"string\", // \" string\n                regex : '\"',\n                next  : \"qstring\"\n            },\n            {\n                token : \"constant.numeric\", // imaginary\n                regex : \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n            },\n            {\n                token : \"constant.numeric\", // float\n                regex : floatNumber\n            },\n            {\n                token : \"constant.numeric\", // integer\n                regex : integer + \"\\\\b\"\n            },\n            {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            },\n            {\n                token : \"keyword.operator\",\n                regex : \"\\\\+\\\\.|\\\\-\\\\.|\\\\*\\\\.|\\\\/\\\\.|#|;;|\\\\+|\\\\-|\\\\*|\\\\*\\\\*\\\\/|\\\\/\\\\/|%|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|<-|=\"\n            },\n            {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            },\n            {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            },\n            {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\)\",\n                next : \"start\"\n            },\n            {\n                defaultToken : \"comment\"\n            }\n        ],\n\n        \"qstring\" : [\n            {\n                token : \"string\",\n                regex : '\"',\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ]\n    };\n};\n\noop.inherits(OcamlHighlightRules, TextHighlightRules);\n\nexports.OcamlHighlightRules = OcamlHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/ocaml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/ocaml_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar OcamlHighlightRules = require(\"./ocaml_highlight_rules\").OcamlHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = require(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = OcamlHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n    \n    this.$outdent   = new MatchingBraceOutdent();\n};\noop.inherits(Mode, TextMode);\n\nvar indenter = /(?:[({[=:]|[-=]>|\\b(?:else|try|with))\\s*$/;\n\n(function() {\n\n    this.toggleCommentLines = function(state, doc, startRow, endRow) {\n        var i, line;\n        var outdent = true;\n        var re = /^\\s*\\(\\*(.*)\\*\\)/;\n\n        for (i=startRow; i<= endRow; i++) {\n            if (!re.test(doc.getLine(i))) {\n                outdent = false;\n                break;\n            }\n        }\n\n        var range = new Range(0, 0, 0, 0);\n        for (i=startRow; i<= endRow; i++) {\n            line = doc.getLine(i);\n            range.start.row  = i;\n            range.end.row    = i;\n            range.end.column = line.length;\n\n            doc.replace(range, outdent ? line.match(re)[1] : \"(*\" + line + \"*)\");\n        }\n    };\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n\n        if (!(tokens.length && tokens[tokens.length - 1].type === 'comment') &&\n            state === 'start' && indenter.test(line))\n            indent += tab;\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/ocaml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/ocaml\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}