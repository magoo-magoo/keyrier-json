{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { assign, forEach, isRegExp, map, pick } from \"../../../utils/utils\";\nimport { tokenLabel } from \"../../../scan/tokens_public\";\n\nvar AbstractProduction =\n/** @class */\nfunction () {\n  function AbstractProduction(definition) {\n    this.definition = definition;\n  }\n\n  AbstractProduction.prototype.accept = function (visitor) {\n    visitor.visit(this);\n    forEach(this.definition, function (prod) {\n      prod.accept(visitor);\n    });\n  };\n\n  return AbstractProduction;\n}();\n\nexport { AbstractProduction };\n\nvar NonTerminal =\n/** @class */\nfunction (_super) {\n  __extends(NonTerminal, _super);\n\n  function NonTerminal(options) {\n    var _this = _super.call(this, []) || this;\n\n    _this.idx = 1;\n    assign(_this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n    return _this;\n  }\n\n  Object.defineProperty(NonTerminal.prototype, \"definition\", {\n    get: function () {\n      if (this.referencedRule !== undefined) {\n        return this.referencedRule.definition;\n      }\n\n      return [];\n    },\n    set: function (definition) {// immutable\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  NonTerminal.prototype.accept = function (visitor) {\n    visitor.visit(this); // don't visit children of a reference, we will get cyclic infinite loops if we do so\n  };\n\n  return NonTerminal;\n}(AbstractProduction);\n\nexport { NonTerminal };\n\nvar Rule =\n/** @class */\nfunction (_super) {\n  __extends(Rule, _super);\n\n  function Rule(options) {\n    var _this = _super.call(this, options.definition) || this;\n\n    _this.orgText = \"\";\n    assign(_this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n    return _this;\n  }\n\n  return Rule;\n}(AbstractProduction);\n\nexport { Rule };\n\nvar Alternative =\n/** @class */\nfunction (_super) {\n  __extends(Alternative, _super);\n\n  function Alternative(options) {\n    var _this = _super.call(this, options.definition) || this;\n\n    _this.ignoreAmbiguities = false;\n    assign(_this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n    return _this;\n  }\n\n  return Alternative;\n}(AbstractProduction);\n\nexport { Alternative };\n\nvar Option =\n/** @class */\nfunction (_super) {\n  __extends(Option, _super);\n\n  function Option(options) {\n    var _this = _super.call(this, options.definition) || this;\n\n    _this.idx = 1;\n    assign(_this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n    return _this;\n  }\n\n  return Option;\n}(AbstractProduction);\n\nexport { Option };\n\nvar RepetitionMandatory =\n/** @class */\nfunction (_super) {\n  __extends(RepetitionMandatory, _super);\n\n  function RepetitionMandatory(options) {\n    var _this = _super.call(this, options.definition) || this;\n\n    _this.idx = 1;\n    assign(_this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n    return _this;\n  }\n\n  return RepetitionMandatory;\n}(AbstractProduction);\n\nexport { RepetitionMandatory };\n\nvar RepetitionMandatoryWithSeparator =\n/** @class */\nfunction (_super) {\n  __extends(RepetitionMandatoryWithSeparator, _super);\n\n  function RepetitionMandatoryWithSeparator(options) {\n    var _this = _super.call(this, options.definition) || this;\n\n    _this.idx = 1;\n    assign(_this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n    return _this;\n  }\n\n  return RepetitionMandatoryWithSeparator;\n}(AbstractProduction);\n\nexport { RepetitionMandatoryWithSeparator };\n\nvar Repetition =\n/** @class */\nfunction (_super) {\n  __extends(Repetition, _super);\n\n  function Repetition(options) {\n    var _this = _super.call(this, options.definition) || this;\n\n    _this.idx = 1;\n    assign(_this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n    return _this;\n  }\n\n  return Repetition;\n}(AbstractProduction);\n\nexport { Repetition };\n\nvar RepetitionWithSeparator =\n/** @class */\nfunction (_super) {\n  __extends(RepetitionWithSeparator, _super);\n\n  function RepetitionWithSeparator(options) {\n    var _this = _super.call(this, options.definition) || this;\n\n    _this.idx = 1;\n    assign(_this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n    return _this;\n  }\n\n  return RepetitionWithSeparator;\n}(AbstractProduction);\n\nexport { RepetitionWithSeparator };\n\nvar Alternation =\n/** @class */\nfunction (_super) {\n  __extends(Alternation, _super);\n\n  function Alternation(options) {\n    var _this = _super.call(this, options.definition) || this;\n\n    _this.idx = 1;\n    _this.ignoreAmbiguities = false;\n    _this.hasPredicates = false;\n    assign(_this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n    return _this;\n  }\n\n  return Alternation;\n}(AbstractProduction);\n\nexport { Alternation };\n\nvar Terminal =\n/** @class */\nfunction () {\n  function Terminal(options) {\n    this.idx = 1;\n    assign(this, pick(options, function (v) {\n      return v !== undefined;\n    }));\n  }\n\n  Terminal.prototype.accept = function (visitor) {\n    visitor.visit(this);\n  };\n\n  return Terminal;\n}();\n\nexport { Terminal };\nexport function serializeGrammar(topRules) {\n  return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n  function convertDefinition(definition) {\n    return map(definition, serializeProduction);\n  }\n  /* istanbul ignore else */\n\n\n  if (node instanceof NonTerminal) {\n    return {\n      type: \"NonTerminal\",\n      name: node.nonTerminalName,\n      idx: node.idx\n    };\n  } else if (node instanceof Alternative) {\n    return {\n      type: \"Alternative\",\n      definition: convertDefinition(node.definition)\n    };\n  } else if (node instanceof Option) {\n    return {\n      type: \"Option\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    };\n  } else if (node instanceof RepetitionMandatory) {\n    return {\n      type: \"RepetitionMandatory\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    };\n  } else if (node instanceof RepetitionMandatoryWithSeparator) {\n    return {\n      type: \"RepetitionMandatoryWithSeparator\",\n      idx: node.idx,\n      separator: serializeProduction(new Terminal({\n        terminalType: node.separator\n      })),\n      definition: convertDefinition(node.definition)\n    };\n  } else if (node instanceof RepetitionWithSeparator) {\n    return {\n      type: \"RepetitionWithSeparator\",\n      idx: node.idx,\n      separator: serializeProduction(new Terminal({\n        terminalType: node.separator\n      })),\n      definition: convertDefinition(node.definition)\n    };\n  } else if (node instanceof Repetition) {\n    return {\n      type: \"Repetition\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    };\n  } else if (node instanceof Alternation) {\n    return {\n      type: \"Alternation\",\n      idx: node.idx,\n      definition: convertDefinition(node.definition)\n    };\n  } else if (node instanceof Terminal) {\n    var serializedTerminal = {\n      type: \"Terminal\",\n      name: node.terminalType.name,\n      label: tokenLabel(node.terminalType),\n      idx: node.idx\n    };\n    var pattern = node.terminalType.PATTERN;\n\n    if (node.terminalType.PATTERN) {\n      serializedTerminal.pattern = isRegExp(pattern) ? pattern.source : pattern;\n    }\n\n    return serializedTerminal;\n  } else if (node instanceof Rule) {\n    return {\n      type: \"Rule\",\n      name: node.name,\n      orgText: node.orgText,\n      definition: convertDefinition(node.definition)\n    };\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}","map":{"version":3,"sources":["../../../../../src/parse/grammar/gast/gast_public.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAT,EAAiB,OAAjB,EAA0B,QAA1B,EAAoC,GAApC,EAAyC,IAAzC,QAAqD,sBAArD;AACA,SAAS,UAAT,QAA2B,6BAA3B;;AASA,IAAA,kBAAA;AAAA;AAAA,YAAA;AACE,WAAA,kBAAA,CAAmB,UAAnB,EAA4C;AAAzB,SAAA,UAAA,GAAA,UAAA;AAA6B;;AAEhD,EAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,OAAP,EAA4B;AAC1B,IAAA,OAAO,CAAC,KAAR,CAAc,IAAd;AACA,IAAA,OAAO,CAAC,KAAK,UAAN,EAAkB,UAAC,IAAD,EAAK;AAC5B,MAAA,IAAI,CAAC,MAAL,CAAY,OAAZ;AACD,KAFM,CAAP;AAGD,GALD;;AAMF,SAAA,kBAAA;AAAC,CATD,EAAA;;;;AAWA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAM/B,WAAA,WAAA,CAAY,OAAZ,EAIC;AAJD,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,EAAN,KAAS,IALX;;AAFO,IAAA,KAAA,CAAA,GAAA,GAAc,CAAd;AAQL,IAAA,MAAM,CACJ,KADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;;AAID;;AAED,EAAA,MAAA,CAAA,cAAA,CAAI,WAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;SAId,YAAA;AACE,UAAI,KAAK,cAAL,KAAwB,SAA5B,EAAuC;AACrC,eAAO,KAAK,cAAL,CAAoB,UAA3B;AACD;;AACD,aAAO,EAAP;AACD,KATa;SAAd,UAAe,UAAf,EAAwC,CACtC;AACD,KAFa;oBAAA;;AAAA,GAAd;;AAWA,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,OAAP,EAA4B;AAC1B,IAAA,OAAO,CAAC,KAAR,CAAc,IAAd,EAD0B,CAE1B;AACD,GAHD;;AAIF,SAAA,WAAA;AAAC,CAjCD,CAAiC,kBAAjC,CAAA;;;;AAmCA,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0B,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAIxB,WAAA,IAAA,CAAY,OAAZ,EAIC;AAJD,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,UAAd,KAAyB,IAL3B;;AAFO,IAAA,KAAA,CAAA,OAAA,GAAkB,EAAlB;AAQL,IAAA,MAAM,CACJ,KADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;;AAID;;AACH,SAAA,IAAA;AAAC,CAfD,CAA0B,kBAA1B,CAAA;;;;AAiBA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAG/B,WAAA,WAAA,CAAY,OAAZ,EAGC;AAHD,QAAA,KAAA,GAIE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,UAAd,KAAyB,IAJ3B;;AAFO,IAAA,KAAA,CAAA,iBAAA,GAA6B,KAA7B;AAOL,IAAA,MAAM,CACJ,KADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;;AAID;;AACH,SAAA,WAAA;AAAC,CAbD,CAAiC,kBAAjC,CAAA;;;;AAeA,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AAK1B,WAAA,MAAA,CAAY,OAAZ,EAIC;AAJD,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,UAAd,KAAyB,IAL3B;;AAHO,IAAA,KAAA,CAAA,GAAA,GAAc,CAAd;AASL,IAAA,MAAM,CACJ,KADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;;AAID;;AACH,SAAA,MAAA;AAAC,CAhBD,CAA4B,kBAA5B,CAAA;;;;AAkBA,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;;AAKvC,WAAA,mBAAA,CAAY,OAAZ,EAIC;AAJD,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,UAAd,KAAyB,IAL3B;;AAHO,IAAA,KAAA,CAAA,GAAA,GAAc,CAAd;AASL,IAAA,MAAM,CACJ,KADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;;AAID;;AACH,SAAA,mBAAA;AAAC,CAhBD,CAAyC,kBAAzC,CAAA;;;;AAkBA,IAAA,gCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsD,EAAA,SAAA,CAAA,gCAAA,EAAA,MAAA,CAAA;;AAKpD,WAAA,gCAAA,CAAY,OAAZ,EAIC;AAJD,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,UAAd,KAAyB,IAL3B;;AAFO,IAAA,KAAA,CAAA,GAAA,GAAc,CAAd;AAQL,IAAA,MAAM,CACJ,KADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;;AAID;;AACH,SAAA,gCAAA;AAAC,CAhBD,CAAsD,kBAAtD,CAAA;;;;AAkBA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAM9B,WAAA,UAAA,CAAY,OAAZ,EAIC;AAJD,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,UAAd,KAAyB,IAL3B;;AAHO,IAAA,KAAA,CAAA,GAAA,GAAc,CAAd;AASL,IAAA,MAAM,CACJ,KADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;;AAID;;AACH,SAAA,UAAA;AAAC,CAjBD,CAAgC,kBAAhC,CAAA;;;;AAmBA,IAAA,uBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA;;AAK3C,WAAA,uBAAA,CAAY,OAAZ,EAIC;AAJD,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,UAAd,KAAyB,IAL3B;;AAFO,IAAA,KAAA,CAAA,GAAA,GAAc,CAAd;AAQL,IAAA,MAAM,CACJ,KADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;;AAID;;AACH,SAAA,uBAAA;AAAC,CAhBD,CAA6C,kBAA7C,CAAA;;;;AAkBA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAQ/B,WAAA,WAAA,CAAY,OAAZ,EAMC;AAND,QAAA,KAAA,GAOE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,UAAd,KAAyB,IAP3B;;AANO,IAAA,KAAA,CAAA,GAAA,GAAc,CAAd;AACA,IAAA,KAAA,CAAA,iBAAA,GAA6B,KAA7B;AAEA,IAAA,KAAA,CAAA,aAAA,GAAyB,KAAzB;AAWL,IAAA,MAAM,CACJ,KADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;;AAID;;AACH,SAAA,WAAA;AAAC,CArBD,CAAiC,kBAAjC,CAAA;;;;AAuBA,IAAA,QAAA;AAAA;AAAA,YAAA;AAIE,WAAA,QAAA,CAAY,OAAZ,EAA8D;AAFvD,SAAA,GAAA,GAAc,CAAd;AAGL,IAAA,MAAM,CACJ,IADI,EAEJ,IAAI,CAAC,OAAD,EAAU,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,KAAD,SAAA;AAAe,KAAhC,CAFA,CAAN;AAID;;AAED,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,OAAP,EAA4B;AAC1B,IAAA,OAAO,CAAC,KAAR,CAAc,IAAd;AACD,GAFD;;AAGF,SAAA,QAAA;AAAC,CAdD,EAAA;;;AA2DA,OAAM,SAAU,gBAAV,CAA2B,QAA3B,EAA2C;AAC/C,SAAO,GAAG,CAAC,QAAD,EAAW,mBAAX,CAAV;AACD;AAED,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAA+C;AACnD,WAAS,iBAAT,CAA2B,UAA3B,EAAoD;AAClD,WAAO,GAAG,CAAC,UAAD,EAAa,mBAAb,CAAV;AACD;AACD;;;AACA,MAAI,IAAI,YAAY,WAApB,EAAiC;AAC/B,WAA+B;AAC7B,MAAA,IAAI,EAAE,aADuB;AAE7B,MAAA,IAAI,EAAE,IAAI,CAAC,eAFkB;AAG7B,MAAA,GAAG,EAAE,IAAI,CAAC;AAHmB,KAA/B;AAKD,GAND,MAMO,IAAI,IAAI,YAAY,WAApB,EAAiC;AACtC,WAAyB;AACvB,MAAA,IAAI,EAAE,aADiB;AAEvB,MAAA,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,UAAN;AAFN,KAAzB;AAID,GALM,MAKA,IAAI,IAAI,YAAY,MAApB,EAA4B;AACjC,WAAyB;AACvB,MAAA,IAAI,EAAE,QADiB;AAEvB,MAAA,GAAG,EAAE,IAAI,CAAC,GAFa;AAGvB,MAAA,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,UAAN;AAHN,KAAzB;AAKD,GANM,MAMA,IAAI,IAAI,YAAY,mBAApB,EAAyC;AAC9C,WAAyB;AACvB,MAAA,IAAI,EAAE,qBADiB;AAEvB,MAAA,GAAG,EAAE,IAAI,CAAC,GAFa;AAGvB,MAAA,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,UAAN;AAHN,KAAzB;AAKD,GANM,MAMA,IAAI,IAAI,YAAY,gCAApB,EAAsD;AAC3D,WAAyC;AACvC,MAAA,IAAI,EAAE,kCADiC;AAEvC,MAAA,GAAG,EAAE,IAAI,CAAC,GAF6B;AAGvC,MAAA,SAAS,EACP,mBAAmB,CAAC,IAAI,QAAJ,CAAa;AAAE,QAAA,YAAY,EAAE,IAAI,CAAC;AAArB,OAAb,CAAD,CAJkB;AAMvC,MAAA,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,UAAN;AANU,KAAzC;AAQD,GATM,MASA,IAAI,IAAI,YAAY,uBAApB,EAA6C;AAClD,WAAyC;AACvC,MAAA,IAAI,EAAE,yBADiC;AAEvC,MAAA,GAAG,EAAE,IAAI,CAAC,GAF6B;AAGvC,MAAA,SAAS,EACP,mBAAmB,CAAC,IAAI,QAAJ,CAAa;AAAE,QAAA,YAAY,EAAE,IAAI,CAAC;AAArB,OAAb,CAAD,CAJkB;AAMvC,MAAA,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,UAAN;AANU,KAAzC;AAQD,GATM,MASA,IAAI,IAAI,YAAY,UAApB,EAAgC;AACrC,WAAyB;AACvB,MAAA,IAAI,EAAE,YADiB;AAEvB,MAAA,GAAG,EAAE,IAAI,CAAC,GAFa;AAGvB,MAAA,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,UAAN;AAHN,KAAzB;AAKD,GANM,MAMA,IAAI,IAAI,YAAY,WAApB,EAAiC;AACtC,WAAyB;AACvB,MAAA,IAAI,EAAE,aADiB;AAEvB,MAAA,GAAG,EAAE,IAAI,CAAC,GAFa;AAGvB,MAAA,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,UAAN;AAHN,KAAzB;AAKD,GANM,MAMA,IAAI,IAAI,YAAY,QAApB,EAA8B;AACnC,QAAI,kBAAkB,GAAwB;AAC5C,MAAA,IAAI,EAAE,UADsC;AAE5C,MAAA,IAAI,EAAE,IAAI,CAAC,YAAL,CAAkB,IAFoB;AAG5C,MAAA,KAAK,EAAE,UAAU,CAAC,IAAI,CAAC,YAAN,CAH2B;AAI5C,MAAA,GAAG,EAAE,IAAI,CAAC;AAJkC,KAA9C;AAOA,QAAI,OAAO,GAAG,IAAI,CAAC,YAAL,CAAkB,OAAhC;;AACA,QAAI,IAAI,CAAC,YAAL,CAAkB,OAAtB,EAA+B;AAC7B,MAAA,kBAAkB,CAAC,OAAnB,GAA6B,QAAQ,CAAC,OAAD,CAAR,GACnB,OAAQ,CAAC,MADU,GAEzB,OAFJ;AAGD;;AAED,WAAO,kBAAP;AACD,GAhBM,MAgBA,IAAI,IAAI,YAAY,IAApB,EAA0B;AAC/B,WAA4B;AAC1B,MAAA,IAAI,EAAE,MADoB;AAE1B,MAAA,IAAI,EAAE,IAAI,CAAC,IAFe;AAG1B,MAAA,OAAO,EAAE,IAAI,CAAC,OAHY;AAI1B,MAAA,UAAU,EAAE,iBAAiB,CAAC,IAAI,CAAC,UAAN;AAJH,KAA5B;AAMD,GAPM,MAOA;AACL,UAAM,KAAK,CAAC,sBAAD,CAAX;AACD;AACF","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assign, forEach, isRegExp, map, pick } from \"../../../utils/utils\";\nimport { tokenLabel } from \"../../../scan/tokens_public\";\nvar AbstractProduction = /** @class */ (function () {\n    function AbstractProduction(definition) {\n        this.definition = definition;\n    }\n    AbstractProduction.prototype.accept = function (visitor) {\n        visitor.visit(this);\n        forEach(this.definition, function (prod) {\n            prod.accept(visitor);\n        });\n    };\n    return AbstractProduction;\n}());\nexport { AbstractProduction };\nvar NonTerminal = /** @class */ (function (_super) {\n    __extends(NonTerminal, _super);\n    function NonTerminal(options) {\n        var _this = _super.call(this, []) || this;\n        _this.idx = 1;\n        assign(_this, pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    Object.defineProperty(NonTerminal.prototype, \"definition\", {\n        get: function () {\n            if (this.referencedRule !== undefined) {\n                return this.referencedRule.definition;\n            }\n            return [];\n        },\n        set: function (definition) {\n            // immutable\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NonTerminal.prototype.accept = function (visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    };\n    return NonTerminal;\n}(AbstractProduction));\nexport { NonTerminal };\nvar Rule = /** @class */ (function (_super) {\n    __extends(Rule, _super);\n    function Rule(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.orgText = \"\";\n        assign(_this, pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Rule;\n}(AbstractProduction));\nexport { Rule };\nvar Alternative = /** @class */ (function (_super) {\n    __extends(Alternative, _super);\n    function Alternative(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.ignoreAmbiguities = false;\n        assign(_this, pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Alternative;\n}(AbstractProduction));\nexport { Alternative };\nvar Option = /** @class */ (function (_super) {\n    __extends(Option, _super);\n    function Option(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        assign(_this, pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Option;\n}(AbstractProduction));\nexport { Option };\nvar RepetitionMandatory = /** @class */ (function (_super) {\n    __extends(RepetitionMandatory, _super);\n    function RepetitionMandatory(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        assign(_this, pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionMandatory;\n}(AbstractProduction));\nexport { RepetitionMandatory };\nvar RepetitionMandatoryWithSeparator = /** @class */ (function (_super) {\n    __extends(RepetitionMandatoryWithSeparator, _super);\n    function RepetitionMandatoryWithSeparator(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        assign(_this, pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionMandatoryWithSeparator;\n}(AbstractProduction));\nexport { RepetitionMandatoryWithSeparator };\nvar Repetition = /** @class */ (function (_super) {\n    __extends(Repetition, _super);\n    function Repetition(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        assign(_this, pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Repetition;\n}(AbstractProduction));\nexport { Repetition };\nvar RepetitionWithSeparator = /** @class */ (function (_super) {\n    __extends(RepetitionWithSeparator, _super);\n    function RepetitionWithSeparator(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        assign(_this, pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionWithSeparator;\n}(AbstractProduction));\nexport { RepetitionWithSeparator };\nvar Alternation = /** @class */ (function (_super) {\n    __extends(Alternation, _super);\n    function Alternation(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        _this.ignoreAmbiguities = false;\n        _this.hasPredicates = false;\n        assign(_this, pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Alternation;\n}(AbstractProduction));\nexport { Alternation };\nvar Terminal = /** @class */ (function () {\n    function Terminal(options) {\n        this.idx = 1;\n        assign(this, pick(options, function (v) { return v !== undefined; }));\n    }\n    Terminal.prototype.accept = function (visitor) {\n        visitor.visit(this);\n    };\n    return Terminal;\n}());\nexport { Terminal };\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        return {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx\n        };\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Terminal) {\n        var serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx\n        };\n        var pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=gast_public.js.map"]},"metadata":{},"sourceType":"module"}