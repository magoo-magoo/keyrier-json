{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/perl_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PerlHighlightRules = function () {\n    var keywords = \"base|constant|continue|else|elsif|for|foreach|format|goto|if|last|local|my|next|\" + \"no|package|parent|redo|require|scalar|sub|unless|until|while|use|vars\";\n    var buildinConstants = \"ARGV|ENV|INC|SIG\";\n    var builtinFunctions = \"getprotobynumber|getprotobyname|getservbyname|gethostbyaddr|\" + \"gethostbyname|getservbyport|getnetbyaddr|getnetbyname|getsockname|\" + \"getpeername|setpriority|getprotoent|setprotoent|getpriority|\" + \"endprotoent|getservent|setservent|endservent|sethostent|socketpair|\" + \"getsockopt|gethostent|endhostent|setsockopt|setnetent|quotemeta|\" + \"localtime|prototype|getnetent|endnetent|rewinddir|wantarray|getpwuid|\" + \"closedir|getlogin|readlink|endgrent|getgrgid|getgrnam|shmwrite|\" + \"shutdown|readline|endpwent|setgrent|readpipe|formline|truncate|\" + \"dbmclose|syswrite|setpwent|getpwnam|getgrent|getpwent|ucfirst|sysread|\" + \"setpgrp|shmread|sysseek|sysopen|telldir|defined|opendir|connect|\" + \"lcfirst|getppid|binmode|syscall|sprintf|getpgrp|readdir|seekdir|\" + \"waitpid|reverse|unshift|symlink|dbmopen|semget|msgrcv|rename|listen|\" + \"chroot|msgsnd|shmctl|accept|unpack|exists|fileno|shmget|system|\" + \"unlink|printf|gmtime|msgctl|semctl|values|rindex|substr|splice|\" + \"length|msgget|select|socket|return|caller|delete|alarm|ioctl|index|\" + \"undef|lstat|times|srand|chown|fcntl|close|write|umask|rmdir|study|\" + \"sleep|chomp|untie|print|utime|mkdir|atan2|split|crypt|flock|chmod|\" + \"BEGIN|bless|chdir|semop|shift|reset|link|stat|chop|grep|fork|dump|\" + \"join|open|tell|pipe|exit|glob|warn|each|bind|sort|pack|eval|push|\" + \"keys|getc|kill|seek|sqrt|send|wait|rand|tied|read|time|exec|recv|\" + \"eof|chr|int|ord|exp|pos|pop|sin|log|abs|oct|hex|tie|cos|vec|END|ref|\" + \"map|die|uc|lc|do\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"constant.language\": buildinConstants,\n      \"support.function\": builtinFunctions\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc\",\n        regex: \"^=(?:begin|item)\\\\b\",\n        next: \"block_comment\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[\"].*\\\\\\\\$',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: \"['].*\\\\\\\\$\",\n        next: \"qstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0x[0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"%#|\\\\$#|\\\\.\\\\.\\\\.|\\\\|\\\\|=|>>=|<<=|<=>|&&=|=>|!~|\\\\^=|&=|\\\\|=|\\\\.=|x=|%=|\\\\/=|\\\\*=|\\\\-=|\\\\+=|=~|\\\\*\\\\*|\\\\-\\\\-|\\\\.\\\\.|\\\\|\\\\||&&|\\\\+\\\\+|\\\\->|!=|==|>=|<=|>>|<<|,|=|\\\\?\\\\:|\\\\^|\\\\||x|%|\\\\/|\\\\*|<|&|\\\\\\\\|~|!|>|\\\\.|\\\\-|\\\\+|\\\\-C|\\\\-b|\\\\-S|\\\\-u|\\\\-t|\\\\-p|\\\\-l|\\\\-d|\\\\-f|\\\\-g|\\\\-s|\\\\-z|\\\\-k|\\\\-e|\\\\-O|\\\\-T|\\\\-B|\\\\-M|\\\\-A|\\\\-X|\\\\-W|\\\\-c|\\\\-R|\\\\-o|\\\\-x|\\\\-w|\\\\-r|\\\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\"\n      }, {\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"qqstring\": [{\n        token: \"string\",\n        regex: '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }],\n      \"qstring\": [{\n        token: \"string\",\n        regex: \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }],\n      \"block_comment\": [{\n        token: \"comment.doc\",\n        regex: \"^=cut\\\\b\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.doc\"\n      }]\n    };\n  };\n\n  oop.inherits(PerlHighlightRules, TextHighlightRules);\n  exports.PerlHighlightRules = PerlHighlightRules;\n});\nace.define(\"ace/mode/python_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PythonHighlightRules = function () {\n    var keywords = \"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" + \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" + \"raise|return|try|while|with|yield|async|await|nonlocal\";\n    var builtinConstants = \"True|False|None|NotImplemented|Ellipsis|__debug__\";\n    var builtinFunctions = \"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" + \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" + \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" + \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" + \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" + \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" + \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" + \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" + \"ascii|breakpoint|bytes\";\n    var keywordMapper = this.createKeywordMapper({\n      \"invalid.deprecated\": \"debugger\",\n      \"support.function\": builtinFunctions,\n      \"variable.language\": \"self|cls\",\n      \"constant.language\": builtinConstants,\n      \"keyword\": keywords\n    }, \"identifier\");\n    var strPre = \"[uU]?\";\n    var strRawPre = \"[rR]\";\n    var strFormatPre = \"[fF]\";\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string start\n        regex: strPre + '\"{3}',\n        next: \"qqstring3\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: strPre + '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        // multi line ''' string start\n        regex: strPre + \"'{3}\",\n        next: \"qstring3\"\n      }, {\n        token: \"string\",\n        // ' string\n        regex: strPre + \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"{3}',\n        next: \"rawqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"(?=.)',\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'{3}\",\n        next: \"rawqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'(?=.)\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"{3}',\n        next: \"fqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"(?=.)',\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'{3}\",\n        next: \"fqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'(?=.)\",\n        next: \"fqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"{3}',\n        next: \"rfqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"(?=.)',\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'{3}\",\n        next: \"rfqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'(?=.)\",\n        next: \"rfqstring\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n      }, {\n        token: \"punctuation\",\n        regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        include: \"constants\"\n      }],\n      \"qqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring3\": [{\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring3\": [{\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring3\": [{\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring3\": [{\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring\": [{\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstringParRules\": [{\n        //TODO: nested {}\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)]\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"string\",\n        regex: \"'(.)*'\"\n      }, {\n        token: \"string\",\n        regex: '\"(.)*\"'\n      }, {\n        token: \"function.support\",\n        regex: \"(!s|!r|!a)\"\n      }, {\n        include: \"constants\"\n      }, {\n        token: 'paren.rparen',\n        regex: \"}\",\n        next: 'pop'\n      }, {\n        token: 'paren.lparen',\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }],\n      \"constants\": [{\n        token: \"constant.numeric\",\n        // imaginary\n        regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // long integer\n        regex: integer + \"[lL]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: [\"punctuation\", \"function.support\"],\n        // method\n        regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(PythonHighlightRules, TextHighlightRules);\n  exports.PythonHighlightRules = PythonHighlightRules;\n});\nace.define(\"ace/mode/json_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JsonHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"variable\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n      }, {\n        token: \"string\",\n        // single line\n        regex: '\"',\n        next: \"string\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: \"text\",\n        // single quoted strings are not allowed\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"comment\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\/\\\\/.*$\"\n      }, {\n        token: \"comment.start\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"string\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"comment\": [{\n        token: \"comment.end\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n  };\n\n  oop.inherits(JsonHighlightRules, TextHighlightRules);\n  exports.JsonHighlightRules = JsonHighlightRules;\n});\nace.define(\"ace/mode/javascript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n\n  var JavaScriptHighlightRules = function (options) {\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|\" + // Constructors\n      \"Namespace|QName|XML|XMLList|\" + // E4X\n      \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" + \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" + \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" + // Errors\n      \"SyntaxError|TypeError|URIError|\" + \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n      \"isNaN|parseFloat|parseInt|\" + \"JSON|Math|\" + // Other\n      \"this|arguments|prototype|window|document\",\n      // Pseudo\n      \"keyword\": \"const|yield|import|get|set|async|await|\" + \"break|case|catch|continue|default|delete|do|else|finally|for|function|\" + \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" + \"__parent__|__count__|escape|unescape|with|__proto__|\" + \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static\",\n      \"storage.type\": \"const|let|var|function\",\n      \"constant.language\": \"null|Infinity|NaN|undefined\",\n      \"support.function\": \"alert\",\n      \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n    \"u[0-9a-fA-F]{4}|\" + // unicode\n    \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n    \"[0-2][0-7]{0,2}|\" + // oct\n    \"3[0-7][0-7]?|\" + // oct\n    \"[4-7][0-7]?|\" + //oct\n    \".)\";\n    this.$rules = {\n      \"no_regex\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"no_regex\"), {\n        token: \"string\",\n        regex: \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"support.function\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(prototype)(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(function)(\\\\s+)(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"punctuation.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"text\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"keyword\",\n        regex: \"from(?=\\\\s*('|\\\"))\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n        next: \"start\"\n      }, {\n        token: [\"support.constant\"],\n        regex: /that\\b/\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n        regex: /(console)(\\.)(warn|info|log|error|time|trace|timeEnd|assert)\\b/\n      }, {\n        token: keywordMapper,\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/,\n        next: \"property\"\n      }, {\n        token: \"storage.type\",\n        regex: /=>/,\n        next: \"start\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n        next: \"start\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[?:,;.]/,\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/,\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }, {\n        token: \"comment\",\n        regex: /^#!.*$/\n      }],\n      property: [{\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)(function)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/\n      }, {\n        token: \"support.function\",\n        regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n      }, {\n        token: \"support.function.dom\",\n        regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n      }, {\n        token: \"support.constant\",\n        regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n      }, {\n        token: \"identifier\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"no_regex\"\n      }],\n      \"start\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"start\"), {\n        token: \"string.regexp\",\n        regex: \"\\\\/\",\n        next: \"regex\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|^$\",\n        next: \"start\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"regex\": [{\n        token: \"regexp.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"/[sxngimy]*\",\n        next: \"no_regex\"\n      }, {\n        token: \"invalid\",\n        regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n      }, {\n        token: \"constant.language.delimiter\",\n        regex: /\\|/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\[\\^?/,\n        next: \"regex_character_class\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp\"\n      }],\n      \"regex_character_class\": [{\n        token: \"regexp.charclass.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"]\",\n        next: \"regex\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"-\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp.charachterclass\"\n      }],\n      \"function_arguments\": [{\n        token: \"variable.parameter\",\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"[, ]+\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"$\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n\n    if (!options || !options.noES6) {\n      this.$rules.no_regex.unshift({\n        regex: \"[{}]\",\n        onMatch: function (val, state, stack) {\n          this.next = val == \"{\" ? this.nextState : \"\";\n\n          if (val == \"{\" && stack.length) {\n            stack.unshift(\"start\", state);\n          } else if (val == \"}\" && stack.length) {\n            stack.shift();\n            this.next = stack.shift();\n            if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1) return \"paren.quasi.end\";\n          }\n\n          return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n        },\n        nextState: \"start\"\n      }, {\n        token: \"string.quasi.start\",\n        regex: /`/,\n        push: [{\n          token: \"constant.language.escape\",\n          regex: escapedRe\n        }, {\n          token: \"paren.quasi.start\",\n          regex: /\\${/,\n          push: \"start\"\n        }, {\n          token: \"string.quasi.end\",\n          regex: /`/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quasi\"\n        }]\n      });\n      if (!options || options.jsx != false) JSX.call(this);\n    }\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n  };\n\n  oop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n\n  function JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n      onMatch: function (val, state, stack) {\n        var offset = val.charAt(1) == \"/\" ? 2 : 1;\n\n        if (offset == 1) {\n          if (state != this.nextState) stack.unshift(this.next, this.nextState, 0);else stack.unshift(this.next);\n          stack[2]++;\n        } else if (offset == 2) {\n          if (state == this.nextState) {\n            stack[1]--;\n\n            if (!stack[1] || stack[1] < 0) {\n              stack.shift();\n              stack.shift();\n            }\n          }\n        }\n\n        return [{\n          type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n          value: val.slice(0, offset)\n        }, {\n          type: \"meta.tag.tag-name.xml\",\n          value: val.substr(offset)\n        }];\n      },\n      regex: \"</?\" + tagRegex + \"\",\n      next: \"jsxAttributes\",\n      nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n      regex: \"{\",\n      token: \"paren.quasi.start\",\n      push: \"start\"\n    };\n    this.$rules.jsx = [jsxJsRule, jsxTag, {\n      include: \"reference\"\n    }, {\n      defaultToken: \"string\"\n    }];\n    this.$rules.jsxAttributes = [{\n      token: \"meta.tag.punctuation.tag-close.xml\",\n      regex: \"/?>\",\n      onMatch: function (value, currentState, stack) {\n        if (currentState == stack[0]) stack.shift();\n\n        if (value.length == 2) {\n          if (stack[0] == this.nextState) stack[1]--;\n\n          if (!stack[1] || stack[1] < 0) {\n            stack.splice(0, 2);\n          }\n        }\n\n        this.next = stack[0] || \"start\";\n        return [{\n          type: this.token,\n          value: value\n        }];\n      },\n      nextState: \"jsx\"\n    }, jsxJsRule, comments(\"jsxAttributes\"), {\n      token: \"entity.other.attribute-name.xml\",\n      regex: tagRegex\n    }, {\n      token: \"keyword.operator.attribute-equals.xml\",\n      regex: \"=\"\n    }, {\n      token: \"text.tag-whitespace.xml\",\n      regex: \"\\\\s+\"\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: \"'\",\n      stateName: \"jsx_attr_q\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: '\"',\n      stateName: \"jsx_attr_qq\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, jsxTag];\n    this.$rules.reference = [{\n      token: \"constant.language.escape.reference.xml\",\n      regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n  }\n\n  function comments(next) {\n    return [{\n      token: \"comment\",\n      // multi line comment\n      regex: /\\/\\*/,\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"\\\\*\\\\/\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }, {\n      token: \"comment\",\n      regex: \"\\\\/\\\\/\",\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"$|^\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }];\n  }\n\n  exports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\nace.define(\"ace/mode/pgsql_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\", \"ace/mode/perl_highlight_rules\", \"ace/mode/python_highlight_rules\", \"ace/mode/json_highlight_rules\", \"ace/mode/javascript_highlight_rules\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n\n  var lang = require(\"../lib/lang\");\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var PerlHighlightRules = require(\"./perl_highlight_rules\").PerlHighlightRules;\n\n  var PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\n\n  var JsonHighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\n\n  var JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\n  var PgsqlHighlightRules = function () {\n    var keywords = \"abort|absolute|abstime|access|aclitem|action|add|admin|after|aggregate|all|also|alter|always|\" + \"analyse|analyze|and|any|anyarray|anyelement|anyenum|anynonarray|anyrange|array|as|asc|\" + \"assertion|assignment|asymmetric|at|attribute|authorization|backward|before|begin|between|\" + \"bigint|binary|bit|bool|boolean|both|box|bpchar|by|bytea|cache|called|cascade|cascaded|case|cast|\" + \"catalog|chain|char|character|characteristics|check|checkpoint|cid|cidr|circle|class|close|\" + \"cluster|coalesce|collate|collation|column|comment|comments|commit|committed|concurrently|\" + \"configuration|connection|constraint|constraints|content|continue|conversion|copy|cost|\" + \"create|cross|cstring|csv|current|current_catalog|current_date|current_role|\" + \"current_schema|current_time|current_timestamp|current_user|cursor|cycle|data|database|\" + \"date|daterange|day|deallocate|dec|decimal|declare|default|defaults|deferrable|deferred|\" + \"definer|delete|delimiter|delimiters|desc|dictionary|disable|discard|distinct|do|document|\" + \"domain|double|drop|each|else|enable|encoding|encrypted|end|enum|escape|event|event_trigger|\" + \"except|exclude|excluding|exclusive|execute|exists|explain|extension|external|extract|false|\" + \"family|fdw_handler|fetch|first|float|float4|float8|following|for|force|foreign|forward|\" + \"freeze|from|full|function|functions|global|grant|granted|greatest|group|gtsvector|handler|\" + \"having|header|hold|hour|identity|if|ilike|immediate|immutable|implicit|in|including|\" + \"increment|index|indexes|inet|inherit|inherits|initially|inline|inner|inout|input|\" + \"insensitive|insert|instead|int|int2|int2vector|int4|int4range|int8|int8range|integer|\" + \"internal|intersect|interval|into|invoker|is|isnull|isolation|join|json|key|label|language|\" + \"language_handler|large|last|lateral|lc_collate|lc_ctype|leading|leakproof|least|left|level|\" + \"like|limit|line|listen|load|local|localtime|localtimestamp|location|lock|lseg|macaddr|\" + \"mapping|match|materialized|maxvalue|minute|minvalue|mode|money|month|move|name|names|\" + \"national|natural|nchar|next|no|none|not|nothing|notify|notnull|nowait|null|nullif|nulls|\" + \"numeric|numrange|object|of|off|offset|oid|oids|oidvector|on|only|opaque|operator|option|\" + \"options|or|order|out|outer|over|overlaps|overlay|owned|owner|parser|partial|partition|passing|\" + \"password|path|pg_attribute|pg_auth_members|pg_authid|pg_class|pg_database|pg_node_tree|\" + \"pg_proc|pg_type|placing|plans|point|polygon|position|preceding|precision|prepare|prepared|\" + \"preserve|primary|prior|privileges|procedural|procedure|program|quote|range|read|real|\" + \"reassign|recheck|record|recursive|ref|refcursor|references|refresh|regclass|regconfig|\" + \"regdictionary|regoper|regoperator|regproc|regprocedure|regtype|reindex|relative|release|\" + \"reltime|rename|repeatable|replace|replica|reset|restart|restrict|returning|returns|revoke|\" + \"right|role|rollback|row|rows|rule|savepoint|schema|scroll|search|second|security|select|\" + \"sequence|sequences|serializable|server|session|session_user|set|setof|share|show|similar|\" + \"simple|smallint|smgr|snapshot|some|stable|standalone|start|statement|statistics|stdin|\" + \"stdout|storage|strict|strip|substring|symmetric|sysid|system|table|tables|tablespace|temp|\" + \"template|temporary|text|then|tid|time|timestamp|timestamptz|timetz|tinterval|to|trailing|\" + \"transaction|treat|trigger|trim|true|truncate|trusted|tsquery|tsrange|tstzrange|tsvector|\" + \"txid_snapshot|type|types|unbounded|uncommitted|unencrypted|union|unique|unknown|unlisten|\" + \"unlogged|until|update|user|using|uuid|vacuum|valid|validate|validator|value|values|varbit|\" + \"varchar|variadic|varying|verbose|version|view|void|volatile|when|where|whitespace|window|\" + \"with|without|work|wrapper|write|xid|xml|xmlattributes|xmlconcat|xmlelement|xmlexists|\" + \"xmlforest|xmlparse|xmlpi|xmlroot|xmlserialize|year|yes|zone\";\n    var builtinFunctions = \"RI_FKey_cascade_del|RI_FKey_cascade_upd|RI_FKey_check_ins|RI_FKey_check_upd|\" + \"RI_FKey_noaction_del|RI_FKey_noaction_upd|RI_FKey_restrict_del|RI_FKey_restrict_upd|\" + \"RI_FKey_setdefault_del|RI_FKey_setdefault_upd|RI_FKey_setnull_del|\" + \"RI_FKey_setnull_upd|abbrev|abs|abstime|abstimeeq|abstimege|abstimegt|abstimein|abstimele|\" + \"abstimelt|abstimene|abstimeout|abstimerecv|abstimesend|aclcontains|acldefault|\" + \"aclexplode|aclinsert|aclitemeq|aclitemin|aclitemout|aclremove|acos|age|any_in|any_out|\" + \"anyarray_in|anyarray_out|anyarray_recv|anyarray_send|anyelement_in|anyelement_out|\" + \"anyenum_in|anyenum_out|anynonarray_in|anynonarray_out|anyrange_in|anyrange_out|\" + \"anytextcat|area|areajoinsel|areasel|array_agg|array_agg_finalfn|array_agg_transfn|\" + \"array_append|array_cat|array_dims|array_eq|array_fill|array_ge|array_gt|array_in|\" + \"array_larger|array_le|array_length|array_lower|array_lt|array_ndims|array_ne|array_out|\" + \"array_prepend|array_recv|array_remove|array_replace|array_send|array_smaller|\" + \"array_to_json|array_to_string|array_typanalyze|array_upper|arraycontained|\" + \"arraycontains|arraycontjoinsel|arraycontsel|arrayoverlap|ascii|ascii_to_mic|\" + \"ascii_to_utf8|asin|atan|atan2|avg|big5_to_euc_tw|big5_to_mic|big5_to_utf8|bit_and|bit_in|\" + \"bit_length|bit_or|bit_out|bit_recv|bit_send|bitand|bitcat|bitcmp|biteq|bitge|bitgt|bitle|\" + \"bitlt|bitne|bitnot|bitor|bitshiftleft|bitshiftright|bittypmodin|bittypmodout|bitxor|bool|\" + \"bool_and|bool_or|booland_statefunc|booleq|boolge|boolgt|boolin|boolle|boollt|boolne|\" + \"boolor_statefunc|boolout|boolrecv|boolsend|box|box_above|box_above_eq|box_add|box_below|\" + \"box_below_eq|box_center|box_contain|box_contain_pt|box_contained|box_distance|box_div|\" + \"box_eq|box_ge|box_gt|box_in|box_intersect|box_le|box_left|box_lt|box_mul|box_out|\" + \"box_overabove|box_overbelow|box_overlap|box_overleft|box_overright|box_recv|box_right|\" + \"box_same|box_send|box_sub|bpchar_larger|bpchar_pattern_ge|bpchar_pattern_gt|\" + \"bpchar_pattern_le|bpchar_pattern_lt|bpchar_smaller|bpcharcmp|bpchareq|bpcharge|\" + \"bpchargt|bpchariclike|bpcharicnlike|bpcharicregexeq|bpcharicregexne|bpcharin|bpcharle|\" + \"bpcharlike|bpcharlt|bpcharne|bpcharnlike|bpcharout|bpcharrecv|bpcharregexeq|\" + \"bpcharregexne|bpcharsend|bpchartypmodin|bpchartypmodout|broadcast|btabstimecmp|\" + \"btarraycmp|btbeginscan|btboolcmp|btbpchar_pattern_cmp|btbuild|btbuildempty|\" + \"btbulkdelete|btcanreturn|btcharcmp|btcostestimate|btendscan|btfloat48cmp|btfloat4cmp|\" + \"btfloat4sortsupport|btfloat84cmp|btfloat8cmp|btfloat8sortsupport|btgetbitmap|\" + \"btgettuple|btinsert|btint24cmp|btint28cmp|btint2cmp|btint2sortsupport|btint42cmp|\" + \"btint48cmp|btint4cmp|btint4sortsupport|btint82cmp|btint84cmp|btint8cmp|\" + \"btint8sortsupport|btmarkpos|btnamecmp|btnamesortsupport|btoidcmp|btoidsortsupport|\" + \"btoidvectorcmp|btoptions|btrecordcmp|btreltimecmp|btrescan|btrestrpos|btrim|\" + \"bttext_pattern_cmp|bttextcmp|bttidcmp|bttintervalcmp|btvacuumcleanup|\" + \"bytea_string_agg_finalfn|bytea_string_agg_transfn|byteacat|byteacmp|byteaeq|byteage|\" + \"byteagt|byteain|byteale|bytealike|bytealt|byteane|byteanlike|byteaout|bytearecv|byteasend|\" + \"cash_cmp|cash_div_cash|cash_div_flt4|cash_div_flt8|cash_div_int2|cash_div_int4|cash_eq|\" + \"cash_ge|cash_gt|cash_in|cash_le|cash_lt|cash_mi|cash_mul_flt4|cash_mul_flt8|\" + \"cash_mul_int2|cash_mul_int4|cash_ne|cash_out|cash_pl|cash_recv|cash_send|cash_words|\" + \"cashlarger|cashsmaller|cbrt|ceil|ceiling|center|char|char_length|character_length|chareq|\" + \"charge|chargt|charin|charle|charlt|charne|charout|charrecv|charsend|chr|cideq|cidin|cidout|\" + \"cidr|cidr_in|cidr_out|cidr_recv|cidr_send|cidrecv|cidsend|circle|circle_above|\" + \"circle_add_pt|circle_below|circle_center|circle_contain|circle_contain_pt|\" + \"circle_contained|circle_distance|circle_div_pt|circle_eq|circle_ge|circle_gt|circle_in|\" + \"circle_le|circle_left|circle_lt|circle_mul_pt|circle_ne|circle_out|circle_overabove|\" + \"circle_overbelow|circle_overlap|circle_overleft|circle_overright|circle_recv|\" + \"circle_right|circle_same|circle_send|circle_sub_pt|clock_timestamp|close_lb|close_ls|\" + \"close_lseg|close_pb|close_pl|close_ps|close_sb|close_sl|col_description|concat|concat_ws|\" + \"contjoinsel|contsel|convert|convert_from|convert_to|corr|cos|cot|count|covar_pop|\" + \"covar_samp|cstring_in|cstring_out|cstring_recv|cstring_send|cume_dist|current_database|\" + \"current_query|current_schema|current_schemas|current_setting|current_user|currtid|\" + \"currtid2|currval|cursor_to_xml|cursor_to_xmlschema|database_to_xml|\" + \"database_to_xml_and_xmlschema|database_to_xmlschema|date|date_cmp|date_cmp_timestamp|\" + \"date_cmp_timestamptz|date_eq|date_eq_timestamp|date_eq_timestamptz|date_ge|\" + \"date_ge_timestamp|date_ge_timestamptz|date_gt|date_gt_timestamp|date_gt_timestamptz|\" + \"date_in|date_larger|date_le|date_le_timestamp|date_le_timestamptz|date_lt|\" + \"date_lt_timestamp|date_lt_timestamptz|date_mi|date_mi_interval|date_mii|date_ne|\" + \"date_ne_timestamp|date_ne_timestamptz|date_out|date_part|date_pl_interval|date_pli|\" + \"date_recv|date_send|date_smaller|date_sortsupport|date_trunc|daterange|\" + \"daterange_canonical|daterange_subdiff|datetime_pl|datetimetz_pl|dcbrt|decode|degrees|\" + \"dense_rank|dexp|diagonal|diameter|dispell_init|dispell_lexize|dist_cpoly|dist_lb|dist_pb|\" + \"dist_pc|dist_pl|dist_ppath|dist_ps|dist_sb|dist_sl|div|dlog1|dlog10|domain_in|domain_recv|\" + \"dpow|dround|dsimple_init|dsimple_lexize|dsnowball_init|dsnowball_lexize|dsqrt|\" + \"dsynonym_init|dsynonym_lexize|dtrunc|elem_contained_by_range|encode|enum_cmp|enum_eq|\" + \"enum_first|enum_ge|enum_gt|enum_in|enum_larger|enum_last|enum_le|enum_lt|enum_ne|enum_out|\" + \"enum_range|enum_recv|enum_send|enum_smaller|eqjoinsel|eqsel|euc_cn_to_mic|\" + \"euc_cn_to_utf8|euc_jis_2004_to_shift_jis_2004|euc_jis_2004_to_utf8|euc_jp_to_mic|\" + \"euc_jp_to_sjis|euc_jp_to_utf8|euc_kr_to_mic|euc_kr_to_utf8|euc_tw_to_big5|\" + \"euc_tw_to_mic|euc_tw_to_utf8|event_trigger_in|event_trigger_out|every|exp|factorial|\" + \"family|fdw_handler_in|fdw_handler_out|first_value|float4|float48div|float48eq|float48ge|\" + \"float48gt|float48le|float48lt|float48mi|float48mul|float48ne|float48pl|float4_accum|\" + \"float4abs|float4div|float4eq|float4ge|float4gt|float4in|float4larger|float4le|float4lt|\" + \"float4mi|float4mul|float4ne|float4out|float4pl|float4recv|float4send|float4smaller|\" + \"float4um|float4up|float8|float84div|float84eq|float84ge|float84gt|float84le|float84lt|\" + \"float84mi|float84mul|float84ne|float84pl|float8_accum|float8_avg|float8_corr|\" + \"float8_covar_pop|float8_covar_samp|float8_regr_accum|float8_regr_avgx|\" + \"float8_regr_avgy|float8_regr_intercept|float8_regr_r2|float8_regr_slope|\" + \"float8_regr_sxx|float8_regr_sxy|float8_regr_syy|float8_stddev_pop|float8_stddev_samp|\" + \"float8_var_pop|float8_var_samp|float8abs|float8div|float8eq|float8ge|float8gt|float8in|\" + \"float8larger|float8le|float8lt|float8mi|float8mul|float8ne|float8out|float8pl|float8recv|\" + \"float8send|float8smaller|float8um|float8up|floor|flt4_mul_cash|flt8_mul_cash|\" + \"fmgr_c_validator|fmgr_internal_validator|fmgr_sql_validator|format|format_type|\" + \"gb18030_to_utf8|gbk_to_utf8|generate_series|generate_subscripts|get_bit|get_byte|\" + \"get_current_ts_config|getdatabaseencoding|getpgusername|gin_cmp_prefix|\" + \"gin_cmp_tslexeme|gin_extract_tsquery|gin_extract_tsvector|gin_tsquery_consistent|\" + \"ginarrayconsistent|ginarrayextract|ginbeginscan|ginbuild|ginbuildempty|ginbulkdelete|\" + \"gincostestimate|ginendscan|gingetbitmap|gininsert|ginmarkpos|ginoptions|\" + \"ginqueryarrayextract|ginrescan|ginrestrpos|ginvacuumcleanup|gist_box_compress|\" + \"gist_box_consistent|gist_box_decompress|gist_box_penalty|gist_box_picksplit|\" + \"gist_box_same|gist_box_union|gist_circle_compress|gist_circle_consistent|\" + \"gist_point_compress|gist_point_consistent|gist_point_distance|gist_poly_compress|\" + \"gist_poly_consistent|gistbeginscan|gistbuild|gistbuildempty|gistbulkdelete|\" + \"gistcostestimate|gistendscan|gistgetbitmap|gistgettuple|gistinsert|gistmarkpos|\" + \"gistoptions|gistrescan|gistrestrpos|gistvacuumcleanup|gtsquery_compress|\" + \"gtsquery_consistent|gtsquery_decompress|gtsquery_penalty|gtsquery_picksplit|\" + \"gtsquery_same|gtsquery_union|gtsvector_compress|gtsvector_consistent|\" + \"gtsvector_decompress|gtsvector_penalty|gtsvector_picksplit|gtsvector_same|\" + \"gtsvector_union|gtsvectorin|gtsvectorout|has_any_column_privilege|\" + \"has_column_privilege|has_database_privilege|has_foreign_data_wrapper_privilege|\" + \"has_function_privilege|has_language_privilege|has_schema_privilege|\" + \"has_sequence_privilege|has_server_privilege|has_table_privilege|\" + \"has_tablespace_privilege|has_type_privilege|hash_aclitem|hash_array|hash_numeric|\" + \"hash_range|hashbeginscan|hashbpchar|hashbuild|hashbuildempty|hashbulkdelete|hashchar|\" + \"hashcostestimate|hashendscan|hashenum|hashfloat4|hashfloat8|hashgetbitmap|hashgettuple|\" + \"hashinet|hashinsert|hashint2|hashint2vector|hashint4|hashint8|hashmacaddr|hashmarkpos|\" + \"hashname|hashoid|hashoidvector|hashoptions|hashrescan|hashrestrpos|hashtext|\" + \"hashvacuumcleanup|hashvarlena|height|host|hostmask|iclikejoinsel|iclikesel|\" + \"icnlikejoinsel|icnlikesel|icregexeqjoinsel|icregexeqsel|icregexnejoinsel|icregexnesel|\" + \"inet_client_addr|inet_client_port|inet_in|inet_out|inet_recv|inet_send|\" + \"inet_server_addr|inet_server_port|inetand|inetmi|inetmi_int8|inetnot|inetor|inetpl|\" + \"initcap|int2|int24div|int24eq|int24ge|int24gt|int24le|int24lt|int24mi|int24mul|int24ne|\" + \"int24pl|int28div|int28eq|int28ge|int28gt|int28le|int28lt|int28mi|int28mul|int28ne|int28pl|\" + \"int2_accum|int2_avg_accum|int2_mul_cash|int2_sum|int2abs|int2and|int2div|int2eq|int2ge|\" + \"int2gt|int2in|int2larger|int2le|int2lt|int2mi|int2mod|int2mul|int2ne|int2not|int2or|int2out|\" + \"int2pl|int2recv|int2send|int2shl|int2shr|int2smaller|int2um|int2up|int2vectoreq|\" + \"int2vectorin|int2vectorout|int2vectorrecv|int2vectorsend|int2xor|int4|int42div|int42eq|\" + \"int42ge|int42gt|int42le|int42lt|int42mi|int42mul|int42ne|int42pl|int48div|int48eq|int48ge|\" + \"int48gt|int48le|int48lt|int48mi|int48mul|int48ne|int48pl|int4_accum|int4_avg_accum|\" + \"int4_mul_cash|int4_sum|int4abs|int4and|int4div|int4eq|int4ge|int4gt|int4in|int4inc|\" + \"int4larger|int4le|int4lt|int4mi|int4mod|int4mul|int4ne|int4not|int4or|int4out|int4pl|\" + \"int4range|int4range_canonical|int4range_subdiff|int4recv|int4send|int4shl|int4shr|\" + \"int4smaller|int4um|int4up|int4xor|int8|int82div|int82eq|int82ge|int82gt|int82le|int82lt|\" + \"int82mi|int82mul|int82ne|int82pl|int84div|int84eq|int84ge|int84gt|int84le|int84lt|int84mi|\" + \"int84mul|int84ne|int84pl|int8_accum|int8_avg|int8_avg_accum|int8_sum|int8abs|int8and|\" + \"int8div|int8eq|int8ge|int8gt|int8in|int8inc|int8inc_any|int8inc_float8_float8|int8larger|\" + \"int8le|int8lt|int8mi|int8mod|int8mul|int8ne|int8not|int8or|int8out|int8pl|int8pl_inet|\" + \"int8range|int8range_canonical|int8range_subdiff|int8recv|int8send|int8shl|int8shr|\" + \"int8smaller|int8um|int8up|int8xor|integer_pl_date|inter_lb|inter_sb|inter_sl|internal_in|\" + \"internal_out|interval_accum|interval_avg|interval_cmp|interval_div|interval_eq|\" + \"interval_ge|interval_gt|interval_hash|interval_in|interval_larger|interval_le|\" + \"interval_lt|interval_mi|interval_mul|interval_ne|interval_out|interval_pl|\" + \"interval_pl_date|interval_pl_time|interval_pl_timestamp|interval_pl_timestamptz|\" + \"interval_pl_timetz|interval_recv|interval_send|interval_smaller|interval_transform|\" + \"interval_um|intervaltypmodin|intervaltypmodout|intinterval|isclosed|isempty|isfinite|\" + \"ishorizontal|iso8859_1_to_utf8|iso8859_to_utf8|iso_to_koi8r|iso_to_mic|iso_to_win1251|\" + \"iso_to_win866|isopen|isparallel|isperp|isvertical|johab_to_utf8|json_agg|\" + \"json_agg_finalfn|json_agg_transfn|json_array_element|json_array_element_text|\" + \"json_array_elements|json_array_length|json_each|json_each_text|json_extract_path|\" + \"json_extract_path_op|json_extract_path_text|json_extract_path_text_op|json_in|\" + \"json_object_field|json_object_field_text|json_object_keys|json_out|\" + \"json_populate_record|json_populate_recordset|json_recv|json_send|justify_days|\" + \"justify_hours|justify_interval|koi8r_to_iso|koi8r_to_mic|koi8r_to_utf8|\" + \"koi8r_to_win1251|koi8r_to_win866|koi8u_to_utf8|lag|language_handler_in|\" + \"language_handler_out|last_value|lastval|latin1_to_mic|latin2_to_mic|latin2_to_win1250|\" + \"latin3_to_mic|latin4_to_mic|lead|left|length|like|like_escape|likejoinsel|likesel|line|\" + \"line_distance|line_eq|line_horizontal|line_in|line_interpt|line_intersect|line_out|\" + \"line_parallel|line_perp|line_recv|line_send|line_vertical|ln|lo_close|lo_creat|lo_create|\" + \"lo_export|lo_import|lo_lseek|lo_lseek64|lo_open|lo_tell|lo_tell64|lo_truncate|\" + \"lo_truncate64|lo_unlink|log|loread|lower|lower_inc|lower_inf|lowrite|lpad|lseg|lseg_center|\" + \"lseg_distance|lseg_eq|lseg_ge|lseg_gt|lseg_horizontal|lseg_in|lseg_interpt|\" + \"lseg_intersect|lseg_le|lseg_length|lseg_lt|lseg_ne|lseg_out|lseg_parallel|lseg_perp|\" + \"lseg_recv|lseg_send|lseg_vertical|ltrim|macaddr_and|macaddr_cmp|macaddr_eq|macaddr_ge|\" + \"macaddr_gt|macaddr_in|macaddr_le|macaddr_lt|macaddr_ne|macaddr_not|macaddr_or|\" + \"macaddr_out|macaddr_recv|macaddr_send|makeaclitem|masklen|max|md5|mic_to_ascii|\" + \"mic_to_big5|mic_to_euc_cn|mic_to_euc_jp|mic_to_euc_kr|mic_to_euc_tw|mic_to_iso|\" + \"mic_to_koi8r|mic_to_latin1|mic_to_latin2|mic_to_latin3|mic_to_latin4|mic_to_sjis|\" + \"mic_to_win1250|mic_to_win1251|mic_to_win866|min|mktinterval|mod|money|mul_d_interval|\" + \"name|nameeq|namege|namegt|nameiclike|nameicnlike|nameicregexeq|nameicregexne|namein|\" + \"namele|namelike|namelt|namene|namenlike|nameout|namerecv|nameregexeq|nameregexne|namesend|\" + \"neqjoinsel|neqsel|netmask|network|network_cmp|network_eq|network_ge|network_gt|\" + \"network_le|network_lt|network_ne|network_sub|network_subeq|network_sup|network_supeq|\" + \"nextval|nlikejoinsel|nlikesel|notlike|now|npoints|nth_value|ntile|numeric_abs|\" + \"numeric_accum|numeric_add|numeric_avg|numeric_avg_accum|numeric_cmp|numeric_div|\" + \"numeric_div_trunc|numeric_eq|numeric_exp|numeric_fac|numeric_ge|numeric_gt|numeric_in|\" + \"numeric_inc|numeric_larger|numeric_le|numeric_ln|numeric_log|numeric_lt|numeric_mod|\" + \"numeric_mul|numeric_ne|numeric_out|numeric_power|numeric_recv|numeric_send|\" + \"numeric_smaller|numeric_sqrt|numeric_stddev_pop|numeric_stddev_samp|numeric_sub|\" + \"numeric_transform|numeric_uminus|numeric_uplus|numeric_var_pop|numeric_var_samp|\" + \"numerictypmodin|numerictypmodout|numnode|numrange|numrange_subdiff|obj_description|\" + \"octet_length|oid|oideq|oidge|oidgt|oidin|oidlarger|oidle|oidlt|oidne|oidout|oidrecv|oidsend|\" + \"oidsmaller|oidvectoreq|oidvectorge|oidvectorgt|oidvectorin|oidvectorle|oidvectorlt|\" + \"oidvectorne|oidvectorout|oidvectorrecv|oidvectorsend|oidvectortypes|on_pb|on_pl|\" + \"on_ppath|on_ps|on_sb|on_sl|opaque_in|opaque_out|overlaps|overlay|path|path_add|path_add_pt|\" + \"path_center|path_contain_pt|path_distance|path_div_pt|path_in|path_inter|path_length|\" + \"path_mul_pt|path_n_eq|path_n_ge|path_n_gt|path_n_le|path_n_lt|path_npoints|path_out|\" + \"path_recv|path_send|path_sub_pt|pclose|percent_rank|pg_advisory_lock|\" + \"pg_advisory_lock_shared|pg_advisory_unlock|pg_advisory_unlock_all|\" + \"pg_advisory_unlock_shared|pg_advisory_xact_lock|pg_advisory_xact_lock_shared|\" + \"pg_available_extension_versions|pg_available_extensions|pg_backend_pid|\" + \"pg_backup_start_time|pg_cancel_backend|pg_char_to_encoding|pg_client_encoding|\" + \"pg_collation_for|pg_collation_is_visible|pg_column_is_updatable|pg_column_size|\" + \"pg_conf_load_time|pg_conversion_is_visible|pg_create_restore_point|\" + \"pg_current_xlog_insert_location|pg_current_xlog_location|pg_cursor|pg_database_size|\" + \"pg_describe_object|pg_encoding_max_length|pg_encoding_to_char|\" + \"pg_event_trigger_dropped_objects|pg_export_snapshot|pg_extension_config_dump|\" + \"pg_extension_update_paths|pg_function_is_visible|pg_get_constraintdef|pg_get_expr|\" + \"pg_get_function_arguments|pg_get_function_identity_arguments|\" + \"pg_get_function_result|pg_get_functiondef|pg_get_indexdef|pg_get_keywords|\" + \"pg_get_multixact_members|pg_get_ruledef|pg_get_serial_sequence|pg_get_triggerdef|\" + \"pg_get_userbyid|pg_get_viewdef|pg_has_role|pg_identify_object|pg_indexes_size|\" + \"pg_is_in_backup|pg_is_in_recovery|pg_is_other_temp_schema|pg_is_xlog_replay_paused|\" + \"pg_last_xact_replay_timestamp|pg_last_xlog_receive_location|\" + \"pg_last_xlog_replay_location|pg_listening_channels|pg_lock_status|pg_ls_dir|\" + \"pg_my_temp_schema|pg_node_tree_in|pg_node_tree_out|pg_node_tree_recv|\" + \"pg_node_tree_send|pg_notify|pg_opclass_is_visible|pg_operator_is_visible|\" + \"pg_opfamily_is_visible|pg_options_to_table|pg_postmaster_start_time|\" + \"pg_prepared_statement|pg_prepared_xact|pg_read_binary_file|pg_read_file|\" + \"pg_relation_filenode|pg_relation_filepath|pg_relation_is_updatable|pg_relation_size|\" + \"pg_reload_conf|pg_rotate_logfile|pg_sequence_parameters|pg_show_all_settings|\" + \"pg_size_pretty|pg_sleep|pg_start_backup|pg_stat_clear_snapshot|pg_stat_file|\" + \"pg_stat_get_activity|pg_stat_get_analyze_count|pg_stat_get_autoanalyze_count|\" + \"pg_stat_get_autovacuum_count|pg_stat_get_backend_activity|\" + \"pg_stat_get_backend_activity_start|pg_stat_get_backend_client_addr|\" + \"pg_stat_get_backend_client_port|pg_stat_get_backend_dbid|pg_stat_get_backend_idset|\" + \"pg_stat_get_backend_pid|pg_stat_get_backend_start|pg_stat_get_backend_userid|\" + \"pg_stat_get_backend_waiting|pg_stat_get_backend_xact_start|\" + \"pg_stat_get_bgwriter_buf_written_checkpoints|\" + \"pg_stat_get_bgwriter_buf_written_clean|pg_stat_get_bgwriter_maxwritten_clean|\" + \"pg_stat_get_bgwriter_requested_checkpoints|pg_stat_get_bgwriter_stat_reset_time|\" + \"pg_stat_get_bgwriter_timed_checkpoints|pg_stat_get_blocks_fetched|\" + \"pg_stat_get_blocks_hit|pg_stat_get_buf_alloc|pg_stat_get_buf_fsync_backend|\" + \"pg_stat_get_buf_written_backend|pg_stat_get_checkpoint_sync_time|\" + \"pg_stat_get_checkpoint_write_time|pg_stat_get_db_blk_read_time|\" + \"pg_stat_get_db_blk_write_time|pg_stat_get_db_blocks_fetched|\" + \"pg_stat_get_db_blocks_hit|pg_stat_get_db_conflict_all|\" + \"pg_stat_get_db_conflict_bufferpin|pg_stat_get_db_conflict_lock|\" + \"pg_stat_get_db_conflict_snapshot|pg_stat_get_db_conflict_startup_deadlock|\" + \"pg_stat_get_db_conflict_tablespace|pg_stat_get_db_deadlocks|\" + \"pg_stat_get_db_numbackends|pg_stat_get_db_stat_reset_time|\" + \"pg_stat_get_db_temp_bytes|pg_stat_get_db_temp_files|pg_stat_get_db_tuples_deleted|\" + \"pg_stat_get_db_tuples_fetched|pg_stat_get_db_tuples_inserted|\" + \"pg_stat_get_db_tuples_returned|pg_stat_get_db_tuples_updated|\" + \"pg_stat_get_db_xact_commit|pg_stat_get_db_xact_rollback|pg_stat_get_dead_tuples|\" + \"pg_stat_get_function_calls|pg_stat_get_function_self_time|\" + \"pg_stat_get_function_total_time|pg_stat_get_last_analyze_time|\" + \"pg_stat_get_last_autoanalyze_time|pg_stat_get_last_autovacuum_time|\" + \"pg_stat_get_last_vacuum_time|pg_stat_get_live_tuples|pg_stat_get_numscans|\" + \"pg_stat_get_tuples_deleted|pg_stat_get_tuples_fetched|\" + \"pg_stat_get_tuples_hot_updated|pg_stat_get_tuples_inserted|\" + \"pg_stat_get_tuples_returned|pg_stat_get_tuples_updated|pg_stat_get_vacuum_count|\" + \"pg_stat_get_wal_senders|pg_stat_get_xact_blocks_fetched|\" + \"pg_stat_get_xact_blocks_hit|pg_stat_get_xact_function_calls|\" + \"pg_stat_get_xact_function_self_time|pg_stat_get_xact_function_total_time|\" + \"pg_stat_get_xact_numscans|pg_stat_get_xact_tuples_deleted|\" + \"pg_stat_get_xact_tuples_fetched|pg_stat_get_xact_tuples_hot_updated|\" + \"pg_stat_get_xact_tuples_inserted|pg_stat_get_xact_tuples_returned|\" + \"pg_stat_get_xact_tuples_updated|pg_stat_reset|pg_stat_reset_shared|\" + \"pg_stat_reset_single_function_counters|pg_stat_reset_single_table_counters|\" + \"pg_stop_backup|pg_switch_xlog|pg_table_is_visible|pg_table_size|\" + \"pg_tablespace_databases|pg_tablespace_location|pg_tablespace_size|\" + \"pg_terminate_backend|pg_timezone_abbrevs|pg_timezone_names|pg_total_relation_size|\" + \"pg_trigger_depth|pg_try_advisory_lock|pg_try_advisory_lock_shared|\" + \"pg_try_advisory_xact_lock|pg_try_advisory_xact_lock_shared|pg_ts_config_is_visible|\" + \"pg_ts_dict_is_visible|pg_ts_parser_is_visible|pg_ts_template_is_visible|\" + \"pg_type_is_visible|pg_typeof|pg_xlog_location_diff|pg_xlog_replay_pause|\" + \"pg_xlog_replay_resume|pg_xlogfile_name|pg_xlogfile_name_offset|pi|plainto_tsquery|\" + \"plpgsql_call_handler|plpgsql_inline_handler|plpgsql_validator|point|point_above|\" + \"point_add|point_below|point_distance|point_div|point_eq|point_horiz|point_in|point_left|\" + \"point_mul|point_ne|point_out|point_recv|point_right|point_send|point_sub|point_vert|\" + \"poly_above|poly_below|poly_center|poly_contain|poly_contain_pt|poly_contained|\" + \"poly_distance|poly_in|poly_left|poly_npoints|poly_out|poly_overabove|poly_overbelow|\" + \"poly_overlap|poly_overleft|poly_overright|poly_recv|poly_right|poly_same|poly_send|\" + \"polygon|popen|position|positionjoinsel|positionsel|postgresql_fdw_validator|pow|power|\" + \"prsd_end|prsd_headline|prsd_lextype|prsd_nexttoken|prsd_start|pt_contained_circle|\" + \"pt_contained_poly|query_to_xml|query_to_xml_and_xmlschema|query_to_xmlschema|\" + \"querytree|quote_ident|quote_literal|quote_nullable|radians|radius|random|range_adjacent|\" + \"range_after|range_before|range_cmp|range_contained_by|range_contains|\" + \"range_contains_elem|range_eq|range_ge|range_gist_compress|range_gist_consistent|\" + \"range_gist_decompress|range_gist_penalty|range_gist_picksplit|range_gist_same|\" + \"range_gist_union|range_gt|range_in|range_intersect|range_le|range_lt|range_minus|\" + \"range_ne|range_out|range_overlaps|range_overleft|range_overright|range_recv|range_send|\" + \"range_typanalyze|range_union|rangesel|rank|record_eq|record_ge|record_gt|record_in|\" + \"record_le|record_lt|record_ne|record_out|record_recv|record_send|regclass|regclassin|\" + \"regclassout|regclassrecv|regclasssend|regconfigin|regconfigout|regconfigrecv|\" + \"regconfigsend|regdictionaryin|regdictionaryout|regdictionaryrecv|regdictionarysend|\" + \"regexeqjoinsel|regexeqsel|regexnejoinsel|regexnesel|regexp_matches|regexp_replace|\" + \"regexp_split_to_array|regexp_split_to_table|regoperatorin|regoperatorout|\" + \"regoperatorrecv|regoperatorsend|regoperin|regoperout|regoperrecv|regopersend|\" + \"regprocedurein|regprocedureout|regprocedurerecv|regproceduresend|regprocin|regprocout|\" + \"regprocrecv|regprocsend|regr_avgx|regr_avgy|regr_count|regr_intercept|regr_r2|\" + \"regr_slope|regr_sxx|regr_sxy|regr_syy|regtypein|regtypeout|regtyperecv|regtypesend|\" + \"reltime|reltimeeq|reltimege|reltimegt|reltimein|reltimele|reltimelt|reltimene|reltimeout|\" + \"reltimerecv|reltimesend|repeat|replace|reverse|right|round|row_number|row_to_json|rpad|\" + \"rtrim|scalargtjoinsel|scalargtsel|scalarltjoinsel|scalarltsel|schema_to_xml|\" + \"schema_to_xml_and_xmlschema|schema_to_xmlschema|session_user|set_bit|set_byte|\" + \"set_config|set_masklen|setseed|setval|setweight|shell_in|shell_out|\" + \"shift_jis_2004_to_euc_jis_2004|shift_jis_2004_to_utf8|shobj_description|sign|\" + \"similar_escape|sin|sjis_to_euc_jp|sjis_to_mic|sjis_to_utf8|slope|smgreq|smgrin|smgrne|\" + \"smgrout|spg_kd_choose|spg_kd_config|spg_kd_inner_consistent|spg_kd_picksplit|\" + \"spg_quad_choose|spg_quad_config|spg_quad_inner_consistent|spg_quad_leaf_consistent|\" + \"spg_quad_picksplit|spg_range_quad_choose|spg_range_quad_config|\" + \"spg_range_quad_inner_consistent|spg_range_quad_leaf_consistent|\" + \"spg_range_quad_picksplit|spg_text_choose|spg_text_config|spg_text_inner_consistent|\" + \"spg_text_leaf_consistent|spg_text_picksplit|spgbeginscan|spgbuild|spgbuildempty|\" + \"spgbulkdelete|spgcanreturn|spgcostestimate|spgendscan|spggetbitmap|spggettuple|\" + \"spginsert|spgmarkpos|spgoptions|spgrescan|spgrestrpos|spgvacuumcleanup|split_part|sqrt|\" + \"statement_timestamp|stddev|stddev_pop|stddev_samp|string_agg|string_agg_finalfn|\" + \"string_agg_transfn|string_to_array|strip|strpos|substr|substring|sum|\" + \"suppress_redundant_updates_trigger|table_to_xml|table_to_xml_and_xmlschema|\" + \"table_to_xmlschema|tan|text|text_ge|text_gt|text_larger|text_le|text_lt|text_pattern_ge|\" + \"text_pattern_gt|text_pattern_le|text_pattern_lt|text_smaller|textanycat|textcat|texteq|\" + \"texticlike|texticnlike|texticregexeq|texticregexne|textin|textlen|textlike|textne|\" + \"textnlike|textout|textrecv|textregexeq|textregexne|textsend|thesaurus_init|\" + \"thesaurus_lexize|tideq|tidge|tidgt|tidin|tidlarger|tidle|tidlt|tidne|tidout|tidrecv|tidsend|\" + \"tidsmaller|time_cmp|time_eq|time_ge|time_gt|time_hash|time_in|time_larger|time_le|time_lt|\" + \"time_mi_interval|time_mi_time|time_ne|time_out|time_pl_interval|time_recv|time_send|\" + \"time_smaller|time_transform|timedate_pl|timemi|timenow|timeofday|timepl|timestamp_cmp|\" + \"timestamp_cmp_date|timestamp_cmp_timestamptz|timestamp_eq|timestamp_eq_date|\" + \"timestamp_eq_timestamptz|timestamp_ge|timestamp_ge_date|timestamp_ge_timestamptz|\" + \"timestamp_gt|timestamp_gt_date|timestamp_gt_timestamptz|timestamp_hash|timestamp_in|\" + \"timestamp_larger|timestamp_le|timestamp_le_date|timestamp_le_timestamptz|\" + \"timestamp_lt|timestamp_lt_date|timestamp_lt_timestamptz|timestamp_mi|\" + \"timestamp_mi_interval|timestamp_ne|timestamp_ne_date|timestamp_ne_timestamptz|\" + \"timestamp_out|timestamp_pl_interval|timestamp_recv|timestamp_send|timestamp_smaller|\" + \"timestamp_sortsupport|timestamp_transform|timestamptypmodin|timestamptypmodout|\" + \"timestamptz_cmp|timestamptz_cmp_date|timestamptz_cmp_timestamp|timestamptz_eq|\" + \"timestamptz_eq_date|timestamptz_eq_timestamp|timestamptz_ge|timestamptz_ge_date|\" + \"timestamptz_ge_timestamp|timestamptz_gt|timestamptz_gt_date|\" + \"timestamptz_gt_timestamp|timestamptz_in|timestamptz_larger|timestamptz_le|\" + \"timestamptz_le_date|timestamptz_le_timestamp|timestamptz_lt|timestamptz_lt_date|\" + \"timestamptz_lt_timestamp|timestamptz_mi|timestamptz_mi_interval|timestamptz_ne|\" + \"timestamptz_ne_date|timestamptz_ne_timestamp|timestamptz_out|\" + \"timestamptz_pl_interval|timestamptz_recv|timestamptz_send|timestamptz_smaller|\" + \"timestamptztypmodin|timestamptztypmodout|timetypmodin|timetypmodout|timetz_cmp|\" + \"timetz_eq|timetz_ge|timetz_gt|timetz_hash|timetz_in|timetz_larger|timetz_le|timetz_lt|\" + \"timetz_mi_interval|timetz_ne|timetz_out|timetz_pl_interval|timetz_recv|timetz_send|\" + \"timetz_smaller|timetzdate_pl|timetztypmodin|timetztypmodout|timezone|tinterval|\" + \"tintervalct|tintervalend|tintervaleq|tintervalge|tintervalgt|tintervalin|tintervalle|\" + \"tintervalleneq|tintervallenge|tintervallengt|tintervallenle|tintervallenlt|\" + \"tintervallenne|tintervallt|tintervalne|tintervalout|tintervalov|tintervalrecv|\" + \"tintervalrel|tintervalsame|tintervalsend|tintervalstart|to_ascii|to_char|to_date|to_hex|\" + \"to_json|to_number|to_timestamp|to_tsquery|to_tsvector|transaction_timestamp|translate|\" + \"trigger_in|trigger_out|trunc|ts_debug|ts_headline|ts_lexize|ts_match_qv|ts_match_tq|\" + \"ts_match_tt|ts_match_vq|ts_parse|ts_rank|ts_rank_cd|ts_rewrite|ts_stat|ts_token_type|\" + \"ts_typanalyze|tsmatchjoinsel|tsmatchsel|tsq_mcontained|tsq_mcontains|tsquery_and|\" + \"tsquery_cmp|tsquery_eq|tsquery_ge|tsquery_gt|tsquery_le|tsquery_lt|tsquery_ne|\" + \"tsquery_not|tsquery_or|tsqueryin|tsqueryout|tsqueryrecv|tsquerysend|tsrange|\" + \"tsrange_subdiff|tstzrange|tstzrange_subdiff|tsvector_cmp|tsvector_concat|tsvector_eq|\" + \"tsvector_ge|tsvector_gt|tsvector_le|tsvector_lt|tsvector_ne|tsvector_update_trigger|\" + \"tsvector_update_trigger_column|tsvectorin|tsvectorout|tsvectorrecv|tsvectorsend|\" + \"txid_current|txid_current_snapshot|txid_snapshot_in|txid_snapshot_out|\" + \"txid_snapshot_recv|txid_snapshot_send|txid_snapshot_xip|txid_snapshot_xmax|\" + \"txid_snapshot_xmin|txid_visible_in_snapshot|uhc_to_utf8|unique_key_recheck|unknownin|\" + \"unknownout|unknownrecv|unknownsend|unnest|upper|upper_inc|upper_inf|utf8_to_ascii|\" + \"utf8_to_big5|utf8_to_euc_cn|utf8_to_euc_jis_2004|utf8_to_euc_jp|utf8_to_euc_kr|\" + \"utf8_to_euc_tw|utf8_to_gb18030|utf8_to_gbk|utf8_to_iso8859|utf8_to_iso8859_1|\" + \"utf8_to_johab|utf8_to_koi8r|utf8_to_koi8u|utf8_to_shift_jis_2004|utf8_to_sjis|\" + \"utf8_to_uhc|utf8_to_win|uuid_cmp|uuid_eq|uuid_ge|uuid_gt|uuid_hash|uuid_in|uuid_le|\" + \"uuid_lt|uuid_ne|uuid_out|uuid_recv|uuid_send|var_pop|var_samp|varbit_in|varbit_out|\" + \"varbit_recv|varbit_send|varbit_transform|varbitcmp|varbiteq|varbitge|varbitgt|varbitle|\" + \"varbitlt|varbitne|varbittypmodin|varbittypmodout|varchar_transform|varcharin|\" + \"varcharout|varcharrecv|varcharsend|varchartypmodin|varchartypmodout|variance|version|\" + \"void_in|void_out|void_recv|void_send|width|width_bucket|win1250_to_latin2|\" + \"win1250_to_mic|win1251_to_iso|win1251_to_koi8r|win1251_to_mic|win1251_to_win866|\" + \"win866_to_iso|win866_to_koi8r|win866_to_mic|win866_to_win1251|win_to_utf8|xideq|\" + \"xideqint4|xidin|xidout|xidrecv|xidsend|xml|xml_in|xml_is_well_formed|\" + \"xml_is_well_formed_content|xml_is_well_formed_document|xml_out|xml_recv|xml_send|\" + \"xmlagg|xmlcomment|xmlconcat2|xmlexists|xmlvalidate|xpath|xpath_exists\";\n    var keywordMapper = this.createKeywordMapper({\n      \"support.function\": builtinFunctions,\n      \"keyword\": keywords\n    }, \"identifier\", true);\n    var sqlRules = [{\n      token: \"string\",\n      // single line string -- assume dollar strings if multi-line for now\n      regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n    }, {\n      token: \"variable.language\",\n      // pg identifier\n      regex: '\".*?\"'\n    }, {\n      token: \"constant.numeric\",\n      // float\n      regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n    }, {\n      token: keywordMapper,\n      regex: \"[a-zA-Z_][a-zA-Z0-9_$]*\\\\b\" // TODO - Unicode in identifiers\n\n    }, {\n      token: \"keyword.operator\",\n      regex: \"!|!!|!~|!~\\\\*|!~~|!~~\\\\*|#|##|#<|#<=|#<>|#=|#>|#>=|%|\\\\&|\\\\&\\\\&|\\\\&<|\\\\&<\\\\||\\\\&>|\\\\*|\\\\+|\" + \"\\\\-|/|<|<#>|<\\\\->|<<|<<=|<<\\\\||<=|<>|<\\\\?>|<@|<\\\\^|=|>|>=|>>|>>=|>\\\\^|\\\\?#|\\\\?\\\\-|\\\\?\\\\-\\\\||\" + \"\\\\?\\\\||\\\\?\\\\|\\\\||@|@\\\\-@|@>|@@|@@@|\\\\^|\\\\||\\\\|\\\\&>|\\\\|/|\\\\|>>|\\\\|\\\\||\\\\|\\\\|/|~|~\\\\*|~<=~|~<~|\" + \"~=|~>=~|~>~|~~|~~\\\\*\"\n    }, {\n      token: \"paren.lparen\",\n      regex: \"[\\\\(]\"\n    }, {\n      token: \"paren.rparen\",\n      regex: \"[\\\\)]\"\n    }, {\n      token: \"text\",\n      regex: \"\\\\s+\"\n    }];\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi-line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"keyword.statementBegin\",\n        regex: \"[a-zA-Z]+\",\n        // Could enumerate starting keywords but this allows things to work when new statements are added.\n        next: \"statement\"\n      }, {\n        token: \"support.buildin\",\n        // psql directive\n        regex: \"^\\\\\\\\[\\\\S]+.*$\"\n      }],\n      \"statement\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"comment\",\n        // multi-line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"commentStatement\"\n      }, {\n        token: \"statementEnd\",\n        regex: \";\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$perl\\\\$\",\n        next: \"perl-start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$python\\\\$\",\n        next: \"python-start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$json\\\\$\",\n        next: \"json-start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$(js|javascript)\\\\$\",\n        next: \"javascript-start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$[\\\\w_0-9]*\\\\$$\",\n        // dollar quote at the end of a line\n        next: \"dollarSql\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$[\\\\w_0-9]*\\\\$\",\n        next: \"dollarStatementString\"\n      }].concat(sqlRules),\n      \"dollarSql\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"comment\",\n        // multi-line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"commentDollarSql\"\n      }, {\n        token: \"string\",\n        // end quoting with dollar at the start of a line\n        regex: \"^\\\\$[\\\\w_0-9]*\\\\$\",\n        next: \"statement\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$[\\\\w_0-9]*\\\\$\",\n        next: \"dollarSqlString\"\n      }].concat(sqlRules),\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"commentStatement\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"statement\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"commentDollarSql\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"dollarSql\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"dollarStatementString\": [{\n        token: \"string\",\n        // closing dollarstring\n        regex: \".*?\\\\$[\\\\w_0-9]*\\\\$\",\n        next: \"statement\"\n      }, {\n        token: \"string\",\n        // dollarstring spanning whole line\n        regex: \".+\"\n      }],\n      \"dollarSqlString\": [{\n        token: \"string\",\n        // closing dollarstring\n        regex: \".*?\\\\$[\\\\w_0-9]*\\\\$\",\n        next: \"dollarSql\"\n      }, {\n        token: \"string\",\n        // dollarstring spanning whole line\n        regex: \".+\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.embedRules(PerlHighlightRules, \"perl-\", [{\n      token: \"string\",\n      regex: \"\\\\$perl\\\\$\",\n      next: \"statement\"\n    }]);\n    this.embedRules(PythonHighlightRules, \"python-\", [{\n      token: \"string\",\n      regex: \"\\\\$python\\\\$\",\n      next: \"statement\"\n    }]);\n    this.embedRules(JsonHighlightRules, \"json-\", [{\n      token: \"string\",\n      regex: \"\\\\$json\\\\$\",\n      next: \"statement\"\n    }]);\n    this.embedRules(JavaScriptHighlightRules, \"javascript-\", [{\n      token: \"string\",\n      regex: \"\\\\$(js|javascript)\\\\$\",\n      next: \"statement\"\n    }]);\n  };\n\n  oop.inherits(PgsqlHighlightRules, TextHighlightRules);\n  exports.PgsqlHighlightRules = PgsqlHighlightRules;\n});\nace.define(\"ace/mode/pgsql\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/pgsql_highlight_rules\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"../mode/text\").Mode;\n\n  var PgsqlHighlightRules = require(\"./pgsql_highlight_rules\").PgsqlHighlightRules;\n\n  var Mode = function () {\n    this.HighlightRules = PgsqlHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      if (state == \"start\" || state == \"keyword.statementEnd\") {\n        return \"\";\n      } else {\n        return this.$getIndent(line); // Keep whatever indent the previous line has\n      }\n    };\n\n    this.$id = \"ace/mode/pgsql\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/pgsql\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-pgsql.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","PerlHighlightRules","keywords","buildinConstants","builtinFunctions","keywordMapper","createKeywordMapper","PythonHighlightRules","builtinConstants","strPre","strRawPre","strFormatPre","strRawFormatPre","decimalInteger","octInteger","hexInteger","binInteger","integer","exponent","fraction","intPart","pointFloat","exponentFloat","floatNumber","stringEscape","include","push","normalizeRules","JsonHighlightRules","identifierRe","JavaScriptHighlightRules","options","kwBeforeRe","escapedRe","comments","property","consumeLineEnd","noES6","no_regex","unshift","onMatch","val","state","stack","nextState","length","shift","indexOf","jsx","JSX","call","embedRules","tagRegex","replace","jsxTag","offset","charAt","type","value","slice","substr","jsxJsRule","jsxAttributes","currentState","splice","stateName","reference","lang","PgsqlHighlightRules","sqlRules","concat","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","end","getNextLineIndent","line","tab","$getIndent","$id","prototype","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/perl_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PerlHighlightRules = function() {\n\n    var keywords = (\n        \"base|constant|continue|else|elsif|for|foreach|format|goto|if|last|local|my|next|\" +\n         \"no|package|parent|redo|require|scalar|sub|unless|until|while|use|vars\"\n    );\n\n    var buildinConstants = (\"ARGV|ENV|INC|SIG\");\n\n    var builtinFunctions = (\n        \"getprotobynumber|getprotobyname|getservbyname|gethostbyaddr|\" +\n         \"gethostbyname|getservbyport|getnetbyaddr|getnetbyname|getsockname|\" +\n         \"getpeername|setpriority|getprotoent|setprotoent|getpriority|\" +\n         \"endprotoent|getservent|setservent|endservent|sethostent|socketpair|\" +\n         \"getsockopt|gethostent|endhostent|setsockopt|setnetent|quotemeta|\" +\n         \"localtime|prototype|getnetent|endnetent|rewinddir|wantarray|getpwuid|\" +\n         \"closedir|getlogin|readlink|endgrent|getgrgid|getgrnam|shmwrite|\" +\n         \"shutdown|readline|endpwent|setgrent|readpipe|formline|truncate|\" +\n         \"dbmclose|syswrite|setpwent|getpwnam|getgrent|getpwent|ucfirst|sysread|\" +\n         \"setpgrp|shmread|sysseek|sysopen|telldir|defined|opendir|connect|\" +\n         \"lcfirst|getppid|binmode|syscall|sprintf|getpgrp|readdir|seekdir|\" +\n         \"waitpid|reverse|unshift|symlink|dbmopen|semget|msgrcv|rename|listen|\" +\n         \"chroot|msgsnd|shmctl|accept|unpack|exists|fileno|shmget|system|\" +\n         \"unlink|printf|gmtime|msgctl|semctl|values|rindex|substr|splice|\" +\n         \"length|msgget|select|socket|return|caller|delete|alarm|ioctl|index|\" +\n         \"undef|lstat|times|srand|chown|fcntl|close|write|umask|rmdir|study|\" +\n         \"sleep|chomp|untie|print|utime|mkdir|atan2|split|crypt|flock|chmod|\" +\n         \"BEGIN|bless|chdir|semop|shift|reset|link|stat|chop|grep|fork|dump|\" +\n         \"join|open|tell|pipe|exit|glob|warn|each|bind|sort|pack|eval|push|\" +\n         \"keys|getc|kill|seek|sqrt|send|wait|rand|tied|read|time|exec|recv|\" +\n         \"eof|chr|int|ord|exp|pos|pop|sin|log|abs|oct|hex|tie|cos|vec|END|ref|\" +\n         \"map|die|uc|lc|do\"\n    );\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"constant.language\": buildinConstants,\n        \"support.function\": builtinFunctions\n    }, \"identifier\");\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment.doc\",\n                regex : \"^=(?:begin|item)\\\\b\",\n                next : \"block_comment\"\n            }, {\n                token : \"string.regexp\",\n                regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // multi line string start\n                regex : '[\"].*\\\\\\\\$',\n                next : \"qqstring\"\n            }, {\n                token : \"string\", // single line\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"string\", // multi line string start\n                regex : \"['].*\\\\\\\\$\",\n                next : \"qstring\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0x[0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"%#|\\\\$#|\\\\.\\\\.\\\\.|\\\\|\\\\|=|>>=|<<=|<=>|&&=|=>|!~|\\\\^=|&=|\\\\|=|\\\\.=|x=|%=|\\\\/=|\\\\*=|\\\\-=|\\\\+=|=~|\\\\*\\\\*|\\\\-\\\\-|\\\\.\\\\.|\\\\|\\\\||&&|\\\\+\\\\+|\\\\->|!=|==|>=|<=|>>|<<|,|=|\\\\?\\\\:|\\\\^|\\\\||x|%|\\\\/|\\\\*|<|&|\\\\\\\\|~|!|>|\\\\.|\\\\-|\\\\+|\\\\-C|\\\\-b|\\\\-S|\\\\-u|\\\\-t|\\\\-p|\\\\-l|\\\\-d|\\\\-f|\\\\-g|\\\\-s|\\\\-z|\\\\-k|\\\\-e|\\\\-O|\\\\-T|\\\\-B|\\\\-M|\\\\-A|\\\\-X|\\\\-W|\\\\-c|\\\\-R|\\\\-o|\\\\-x|\\\\-w|\\\\-r|\\\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\"\n            }, {\n                token : \"comment\",\n                regex : \"#.*$\"\n            }, {\n                token : \"lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"string\",\n                regex : '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"string\",\n                regex : \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ],\n        \"block_comment\": [\n            {\n                token: \"comment.doc\", \n                regex: \"^=cut\\\\b\",\n                next: \"start\"\n            },\n            {\n                defaultToken: \"comment.doc\"\n            }\n        ]\n    };\n};\n\noop.inherits(PerlHighlightRules, TextHighlightRules);\n\nexports.PerlHighlightRules = PerlHighlightRules;\n});\n\nace.define(\"ace/mode/python_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PythonHighlightRules = function() {\n\n    var keywords = (\n        \"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" +\n        \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" +\n        \"raise|return|try|while|with|yield|async|await|nonlocal\"\n    );\n\n    var builtinConstants = (\n        \"True|False|None|NotImplemented|Ellipsis|__debug__\"\n    );\n\n    var builtinFunctions = (\n        \"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" +\n        \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" +\n        \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" +\n        \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" +\n        \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" +\n        \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" +\n        \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" +\n        \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" +\n        \"ascii|breakpoint|bytes\"\n    );\n    var keywordMapper = this.createKeywordMapper({\n        \"invalid.deprecated\": \"debugger\",\n        \"support.function\": builtinFunctions,\n        \"variable.language\": \"self|cls\",\n        \"constant.language\": builtinConstants,\n        \"keyword\": keywords\n    }, \"identifier\");\n\n    var strPre = \"[uU]?\";\n    var strRawPre = \"[rR]\";\n    var strFormatPre = \"[fF]\";\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment\",\n            regex : \"#.*$\"\n        }, {\n            token : \"string\",           // multi line \"\"\" string start\n            regex : strPre + '\"{3}',\n            next : \"qqstring3\"\n        }, {\n            token : \"string\",           // \" string\n            regex : strPre + '\"(?=.)',\n            next : \"qqstring\"\n        }, {\n            token : \"string\",           // multi line ''' string start\n            regex : strPre + \"'{3}\",\n            next : \"qstring3\"\n        }, {\n            token : \"string\",           // ' string\n            regex : strPre + \"'(?=.)\",\n            next : \"qstring\"\n        }, {\n            token: \"string\",\n            regex: strRawPre + '\"{3}',\n            next: \"rawqqstring3\"\n        }, {\n            token: \"string\", \n            regex: strRawPre + '\"(?=.)',\n            next: \"rawqqstring\"\n        }, {\n            token: \"string\",\n            regex: strRawPre + \"'{3}\",\n            next: \"rawqstring3\"\n        }, {\n            token: \"string\",\n            regex: strRawPre + \"'(?=.)\",\n            next: \"rawqstring\"\n        }, {\n            token: \"string\",\n            regex: strFormatPre + '\"{3}',\n            next: \"fqqstring3\"\n        }, {\n            token: \"string\",\n            regex: strFormatPre + '\"(?=.)',\n            next: \"fqqstring\"\n        }, {\n            token: \"string\",\n            regex: strFormatPre + \"'{3}\",\n            next: \"fqstring3\"\n        }, {\n            token: \"string\",\n            regex: strFormatPre + \"'(?=.)\",\n            next: \"fqstring\"\n        },{\n            token: \"string\",\n            regex: strRawFormatPre + '\"{3}',\n            next: \"rfqqstring3\"\n        }, {\n            token: \"string\",\n            regex: strRawFormatPre + '\"(?=.)',\n            next: \"rfqqstring\"\n        }, {\n            token: \"string\",\n            regex: strRawFormatPre + \"'{3}\",\n            next: \"rfqstring3\"\n        }, {\n            token: \"string\",\n            regex: strRawFormatPre + \"'(?=.)\",\n            next: \"rfqstring\"\n        }, {\n            token: \"keyword.operator\",\n            regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n        }, {\n            token: \"punctuation\",\n            regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"[\\\\[\\\\(\\\\{]\"\n        }, {\n            token: \"paren.rparen\",\n            regex: \"[\\\\]\\\\)\\\\}]\"\n        }, {\n            token: \"text\",\n            regex: \"\\\\s+\"\n        }, {\n            include: \"constants\"\n        }],\n        \"qqstring3\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\", // multi line \"\"\" string end\n            regex: '\"{3}',\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"qstring3\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",  // multi line ''' string end\n            regex: \"'{3}\",\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"qqstring\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"qqstring\"\n        }, {\n            token: \"string\",\n            regex: '\"|$',\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"qstring\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"qstring\"\n        }, {\n            token: \"string\",\n            regex: \"'|$\",\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rawqqstring3\": [{\n            token: \"string\", // multi line \"\"\" string end\n            regex: '\"{3}',\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rawqstring3\": [{\n            token: \"string\",  // multi line ''' string end\n            regex: \"'{3}\",\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rawqqstring\": [{\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"rawqqstring\"\n        }, {\n            token: \"string\",\n            regex: '\"|$',\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rawqstring\": [{\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"rawqstring\"\n        }, {\n            token: \"string\",\n            regex: \"'|$\",\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqqstring3\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\", // multi line \"\"\" string end\n            regex: '\"{3}',\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqstring3\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",  // multi line ''' string end\n            regex: \"'{3}\",\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqqstring\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"fqqstring\"\n        }, {\n            token: \"string\",\n            regex: '\"|$',\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqstring\": [{\n            token: \"constant.language.escape\",\n            regex: stringEscape\n        }, {\n            token: \"string\",\n            regex: \"'|$\",\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rfqqstring3\": [{\n            token: \"string\", // multi line \"\"\" string end\n            regex: '\"{3}',\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rfqstring3\": [{\n            token: \"string\",  // multi line ''' string end\n            regex: \"'{3}\",\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rfqqstring\": [{\n            token: \"string\",\n            regex: \"\\\\\\\\$\",\n            next: \"rfqqstring\"\n        }, {\n            token: \"string\",\n            regex: '\"|$',\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"rfqstring\": [{\n            token: \"string\",\n            regex: \"'|$\",\n            next: \"start\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"fqstringParRules\": [{//TODO: nested {}\n            token: \"paren.lparen\",\n            regex: \"[\\\\[\\\\(]\"\n        }, {\n            token: \"paren.rparen\",\n            regex: \"[\\\\]\\\\)]\"\n        }, {\n            token: \"string\",\n            regex: \"\\\\s+\"\n        }, {\n            token: \"string\",\n            regex: \"'(.)*'\"\n        }, {\n            token: \"string\",\n            regex: '\"(.)*\"'\n        }, {\n            token: \"function.support\",\n            regex: \"(!s|!r|!a)\"\n        }, {\n            include: \"constants\"\n        },{\n            token: 'paren.rparen',\n            regex: \"}\",\n            next: 'pop'\n        },{\n            token: 'paren.lparen',\n            regex: \"{\",\n            push: \"fqstringParRules\"\n        }],\n        \"constants\": [{\n            token: \"constant.numeric\", // imaginary\n            regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n        }, {\n            token: \"constant.numeric\", // float\n            regex: floatNumber\n        }, {\n            token: \"constant.numeric\", // long integer\n            regex: integer + \"[lL]\\\\b\"\n        }, {\n            token: \"constant.numeric\", // integer\n            regex: integer + \"\\\\b\"\n        }, {\n            token: [\"punctuation\", \"function.support\"],// method\n            regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\n        }, {\n            token: keywordMapper,\n            regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }]\n    };\n    this.normalizeRules();\n};\n\noop.inherits(PythonHighlightRules, TextHighlightRules);\n\nexports.PythonHighlightRules = PythonHighlightRules;\n});\n\nace.define(\"ace/mode/json_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JsonHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"variable\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n            }, {\n                token : \"string\", // single line\n                regex : '\"',\n                next  : \"string\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : \"text\", // single quoted strings are not allowed\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"comment\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\/.*$\"\n            }, {\n                token : \"comment.start\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\*\",\n                next  : \"comment\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"string\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"start\"\n            }, {\n                defaultToken : \"string\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment.end\", // comments are not allowed, but who cares?\n                regex : \"\\\\*\\\\/\",\n                next  : \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ]\n    };\n    \n};\n\noop.inherits(JsonHighlightRules, TextHighlightRules);\n\nexports.JsonHighlightRules = JsonHighlightRules;\n});\n\nace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n\nvar JavaScriptHighlightRules = function(options) {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\":\n            \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|\"  + // Constructors\n            \"Namespace|QName|XML|XMLList|\"                                             + // E4X\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\"   +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\"                    +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\"   + // Errors\n            \"SyntaxError|TypeError|URIError|\"                                          +\n            \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n            \"isNaN|parseFloat|parseInt|\"                                               +\n            \"JSON|Math|\"                                                               + // Other\n            \"this|arguments|prototype|window|document\"                                 , // Pseudo\n        \"keyword\":\n            \"const|yield|import|get|set|async|await|\" +\n            \"break|case|catch|continue|default|delete|do|else|finally|for|function|\" +\n            \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" +\n            \"__parent__|__count__|escape|unescape|with|__proto__|\" +\n            \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static\",\n        \"storage.type\":\n            \"const|let|var|function\",\n        \"constant.language\":\n            \"null|Infinity|NaN|undefined\",\n        \"support.function\":\n            \"alert\",\n        \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-7][0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n\n    this.$rules = {\n        \"no_regex\" : [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"no_regex\"),\n            {\n                token : \"string\",\n                regex : \"'(?=.)\",\n                next  : \"qstring\"\n            }, {\n                token : \"string\",\n                regex : '\"(?=.)',\n                next  : \"qqstring\"\n            }, {\n                token : \"constant.numeric\", // hexadecimal, octal and binary\n                regex : /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token : \"constant.numeric\", // decimal integers and floats\n                regex : /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"support.function\",\n                    \"punctuation.operator\", \"entity.name.function\", \"text\",\"keyword.operator\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(prototype)(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\",\n                    \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(function)(\\\\s+)(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"entity.name.function\", \"text\", \"punctuation.operator\",\n                    \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"text\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : \"keyword\",\n                regex : \"from(?=\\\\s*('|\\\"))\"\n            }, {\n                token : \"keyword\",\n                regex : \"(?:\" + kwBeforeRe + \")\\\\b\",\n                next : \"start\"\n            }, {\n                token : [\"support.constant\"],\n                regex : /that\\b/\n            }, {\n                token : [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n                regex : /(console)(\\.)(warn|info|log|error|time|trace|timeEnd|assert)\\b/\n            }, {\n                token : keywordMapper,\n                regex : identifierRe\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/,\n                next  : \"property\"\n            }, {\n                token : \"storage.type\",\n                regex : /=>/,\n                next  : \"start\"\n            }, {\n                token : \"keyword.operator\",\n                regex : /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n                next  : \"start\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[?:,;.]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[({]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.rparen\",\n                regex : /[\\])}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }\n        ],\n        property: [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/\n            }, {\n                token : \"support.function\",\n                regex : /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n            }, {\n                token : \"support.function.dom\",\n                regex : /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n            }, {\n                token :  \"support.constant\",\n                regex : /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n            }, {\n                token : \"identifier\",\n                regex : identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"no_regex\"\n            }\n        ],\n        \"start\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"start\"),\n            {\n                token: \"string.regexp\",\n                regex: \"\\\\/\",\n                next: \"regex\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+|^$\",\n                next : \"start\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"regex\": [\n            {\n                token: \"regexp.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"/[sxngimy]*\",\n                next: \"no_regex\"\n            }, {\n                token : \"invalid\",\n                regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n            }, {\n                token : \"constant.language.escape\",\n                regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n            }, {\n                token : \"constant.language.delimiter\",\n                regex: /\\|/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\[\\^?/,\n                next: \"regex_character_class\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp\"\n            }\n        ],\n        \"regex_character_class\": [\n            {\n                token: \"regexp.charclass.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"]\",\n                next: \"regex\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"-\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp.charachterclass\"\n            }\n        ],\n        \"function_arguments\": [\n            {\n                token: \"variable.parameter\",\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"[, ]+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                consumeLineEnd  : true\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                consumeLineEnd  : true\n            }, {\n                token : \"string\",\n                regex : \"'|$\",\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n\n\n    if (!options || !options.noES6) {\n        this.$rules.no_regex.unshift({\n            regex: \"[{}]\", onMatch: function(val, state, stack) {\n                this.next = val == \"{\" ? this.nextState : \"\";\n                if (val == \"{\" && stack.length) {\n                    stack.unshift(\"start\", state);\n                }\n                else if (val == \"}\" && stack.length) {\n                    stack.shift();\n                    this.next = stack.shift();\n                    if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1)\n                        return \"paren.quasi.end\";\n                }\n                return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n            },\n            nextState: \"start\"\n        }, {\n            token : \"string.quasi.start\",\n            regex : /`/,\n            push  : [{\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"paren.quasi.start\",\n                regex : /\\${/,\n                push  : \"start\"\n            }, {\n                token : \"string.quasi.end\",\n                regex : /`/,\n                next  : \"pop\"\n            }, {\n                defaultToken: \"string.quasi\"\n            }]\n        });\n\n        if (!options || options.jsx != false)\n            JSX.call(this);\n    }\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"no_regex\") ]);\n\n    this.normalizeRules();\n};\n\noop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n\nfunction JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n        onMatch : function(val, state, stack) {\n            var offset = val.charAt(1) == \"/\" ? 2 : 1;\n            if (offset == 1) {\n                if (state != this.nextState)\n                    stack.unshift(this.next, this.nextState, 0);\n                else\n                    stack.unshift(this.next);\n                stack[2]++;\n            } else if (offset == 2) {\n                if (state == this.nextState) {\n                    stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.shift();\n                        stack.shift();\n                    }\n                }\n            }\n            return [{\n                type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n                value: val.slice(0, offset)\n            }, {\n                type: \"meta.tag.tag-name.xml\",\n                value: val.substr(offset)\n            }];\n        },\n        regex : \"</?\" + tagRegex + \"\",\n        next: \"jsxAttributes\",\n        nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n        regex: \"{\",\n        token: \"paren.quasi.start\",\n        push: \"start\"\n    };\n    this.$rules.jsx = [\n        jsxJsRule,\n        jsxTag,\n        {include : \"reference\"},\n        {defaultToken: \"string\"}\n    ];\n    this.$rules.jsxAttributes = [{\n        token : \"meta.tag.punctuation.tag-close.xml\",\n        regex : \"/?>\",\n        onMatch : function(value, currentState, stack) {\n            if (currentState == stack[0])\n                stack.shift();\n            if (value.length == 2) {\n                if (stack[0] == this.nextState)\n                    stack[1]--;\n                if (!stack[1] || stack[1] < 0) {\n                    stack.splice(0, 2);\n                }\n            }\n            this.next = stack[0] || \"start\";\n            return [{type: this.token, value: value}];\n        },\n        nextState: \"jsx\"\n    },\n    jsxJsRule,\n    comments(\"jsxAttributes\"),\n    {\n        token : \"entity.other.attribute-name.xml\",\n        regex : tagRegex\n    }, {\n        token : \"keyword.operator.attribute-equals.xml\",\n        regex : \"=\"\n    }, {\n        token : \"text.tag-whitespace.xml\",\n        regex : \"\\\\s+\"\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : \"'\",\n        stateName : \"jsx_attr_q\",\n        push : [\n            {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : '\"',\n        stateName : \"jsx_attr_qq\",\n        push : [\n            {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    },\n    jsxTag\n    ];\n    this.$rules.reference = [{\n        token : \"constant.language.escape.reference.xml\",\n        regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n}\n\nfunction comments(next) {\n    return [\n        {\n            token : \"comment\", // multi line comment\n            regex : /\\/\\*/,\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                {token : \"comment\", regex : \"\\\\*\\\\/\", next : next || \"pop\"},\n                {defaultToken : \"comment\", caseInsensitive: true}\n            ]\n        }, {\n            token : \"comment\",\n            regex : \"\\\\/\\\\/\",\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                {token : \"comment\", regex : \"$|^\", next : next || \"pop\"},\n                {defaultToken : \"comment\", caseInsensitive: true}\n            ]\n        }\n    ];\n}\nexports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\n\nace.define(\"ace/mode/pgsql_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\",\"ace/mode/perl_highlight_rules\",\"ace/mode/python_highlight_rules\",\"ace/mode/json_highlight_rules\",\"ace/mode/javascript_highlight_rules\"], function(require, exports, module) {\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar PerlHighlightRules = require(\"./perl_highlight_rules\").PerlHighlightRules;\nvar PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\nvar JsonHighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\nvar PgsqlHighlightRules = function() {\n    var keywords = (\n        \"abort|absolute|abstime|access|aclitem|action|add|admin|after|aggregate|all|also|alter|always|\" +\n        \"analyse|analyze|and|any|anyarray|anyelement|anyenum|anynonarray|anyrange|array|as|asc|\" +\n        \"assertion|assignment|asymmetric|at|attribute|authorization|backward|before|begin|between|\" +\n        \"bigint|binary|bit|bool|boolean|both|box|bpchar|by|bytea|cache|called|cascade|cascaded|case|cast|\" +\n        \"catalog|chain|char|character|characteristics|check|checkpoint|cid|cidr|circle|class|close|\" +\n        \"cluster|coalesce|collate|collation|column|comment|comments|commit|committed|concurrently|\" +\n        \"configuration|connection|constraint|constraints|content|continue|conversion|copy|cost|\" +\n        \"create|cross|cstring|csv|current|current_catalog|current_date|current_role|\" +\n        \"current_schema|current_time|current_timestamp|current_user|cursor|cycle|data|database|\" +\n        \"date|daterange|day|deallocate|dec|decimal|declare|default|defaults|deferrable|deferred|\" +\n        \"definer|delete|delimiter|delimiters|desc|dictionary|disable|discard|distinct|do|document|\" +\n        \"domain|double|drop|each|else|enable|encoding|encrypted|end|enum|escape|event|event_trigger|\" +\n        \"except|exclude|excluding|exclusive|execute|exists|explain|extension|external|extract|false|\" +\n        \"family|fdw_handler|fetch|first|float|float4|float8|following|for|force|foreign|forward|\" +\n        \"freeze|from|full|function|functions|global|grant|granted|greatest|group|gtsvector|handler|\" +\n        \"having|header|hold|hour|identity|if|ilike|immediate|immutable|implicit|in|including|\" +\n        \"increment|index|indexes|inet|inherit|inherits|initially|inline|inner|inout|input|\" +\n        \"insensitive|insert|instead|int|int2|int2vector|int4|int4range|int8|int8range|integer|\" +\n        \"internal|intersect|interval|into|invoker|is|isnull|isolation|join|json|key|label|language|\" +\n        \"language_handler|large|last|lateral|lc_collate|lc_ctype|leading|leakproof|least|left|level|\" +\n        \"like|limit|line|listen|load|local|localtime|localtimestamp|location|lock|lseg|macaddr|\" +\n        \"mapping|match|materialized|maxvalue|minute|minvalue|mode|money|month|move|name|names|\" +\n        \"national|natural|nchar|next|no|none|not|nothing|notify|notnull|nowait|null|nullif|nulls|\" +\n        \"numeric|numrange|object|of|off|offset|oid|oids|oidvector|on|only|opaque|operator|option|\" +\n        \"options|or|order|out|outer|over|overlaps|overlay|owned|owner|parser|partial|partition|passing|\" +\n        \"password|path|pg_attribute|pg_auth_members|pg_authid|pg_class|pg_database|pg_node_tree|\" +\n        \"pg_proc|pg_type|placing|plans|point|polygon|position|preceding|precision|prepare|prepared|\" +\n        \"preserve|primary|prior|privileges|procedural|procedure|program|quote|range|read|real|\" +\n        \"reassign|recheck|record|recursive|ref|refcursor|references|refresh|regclass|regconfig|\" +\n        \"regdictionary|regoper|regoperator|regproc|regprocedure|regtype|reindex|relative|release|\" +\n        \"reltime|rename|repeatable|replace|replica|reset|restart|restrict|returning|returns|revoke|\" +\n        \"right|role|rollback|row|rows|rule|savepoint|schema|scroll|search|second|security|select|\" +\n        \"sequence|sequences|serializable|server|session|session_user|set|setof|share|show|similar|\" +\n        \"simple|smallint|smgr|snapshot|some|stable|standalone|start|statement|statistics|stdin|\" +\n        \"stdout|storage|strict|strip|substring|symmetric|sysid|system|table|tables|tablespace|temp|\" +\n        \"template|temporary|text|then|tid|time|timestamp|timestamptz|timetz|tinterval|to|trailing|\" +\n        \"transaction|treat|trigger|trim|true|truncate|trusted|tsquery|tsrange|tstzrange|tsvector|\" +\n        \"txid_snapshot|type|types|unbounded|uncommitted|unencrypted|union|unique|unknown|unlisten|\" +\n        \"unlogged|until|update|user|using|uuid|vacuum|valid|validate|validator|value|values|varbit|\" +\n        \"varchar|variadic|varying|verbose|version|view|void|volatile|when|where|whitespace|window|\" +\n        \"with|without|work|wrapper|write|xid|xml|xmlattributes|xmlconcat|xmlelement|xmlexists|\" +\n        \"xmlforest|xmlparse|xmlpi|xmlroot|xmlserialize|year|yes|zone\"\n    );\n\n\n    var builtinFunctions = (\n        \"RI_FKey_cascade_del|RI_FKey_cascade_upd|RI_FKey_check_ins|RI_FKey_check_upd|\" +\n        \"RI_FKey_noaction_del|RI_FKey_noaction_upd|RI_FKey_restrict_del|RI_FKey_restrict_upd|\" +\n        \"RI_FKey_setdefault_del|RI_FKey_setdefault_upd|RI_FKey_setnull_del|\" +\n        \"RI_FKey_setnull_upd|abbrev|abs|abstime|abstimeeq|abstimege|abstimegt|abstimein|abstimele|\" +\n        \"abstimelt|abstimene|abstimeout|abstimerecv|abstimesend|aclcontains|acldefault|\" +\n        \"aclexplode|aclinsert|aclitemeq|aclitemin|aclitemout|aclremove|acos|age|any_in|any_out|\" +\n        \"anyarray_in|anyarray_out|anyarray_recv|anyarray_send|anyelement_in|anyelement_out|\" +\n        \"anyenum_in|anyenum_out|anynonarray_in|anynonarray_out|anyrange_in|anyrange_out|\" +\n        \"anytextcat|area|areajoinsel|areasel|array_agg|array_agg_finalfn|array_agg_transfn|\" +\n        \"array_append|array_cat|array_dims|array_eq|array_fill|array_ge|array_gt|array_in|\" +\n        \"array_larger|array_le|array_length|array_lower|array_lt|array_ndims|array_ne|array_out|\" +\n        \"array_prepend|array_recv|array_remove|array_replace|array_send|array_smaller|\" +\n        \"array_to_json|array_to_string|array_typanalyze|array_upper|arraycontained|\" +\n        \"arraycontains|arraycontjoinsel|arraycontsel|arrayoverlap|ascii|ascii_to_mic|\" +\n        \"ascii_to_utf8|asin|atan|atan2|avg|big5_to_euc_tw|big5_to_mic|big5_to_utf8|bit_and|bit_in|\" +\n        \"bit_length|bit_or|bit_out|bit_recv|bit_send|bitand|bitcat|bitcmp|biteq|bitge|bitgt|bitle|\" +\n        \"bitlt|bitne|bitnot|bitor|bitshiftleft|bitshiftright|bittypmodin|bittypmodout|bitxor|bool|\" +\n        \"bool_and|bool_or|booland_statefunc|booleq|boolge|boolgt|boolin|boolle|boollt|boolne|\" +\n        \"boolor_statefunc|boolout|boolrecv|boolsend|box|box_above|box_above_eq|box_add|box_below|\" +\n        \"box_below_eq|box_center|box_contain|box_contain_pt|box_contained|box_distance|box_div|\" +\n        \"box_eq|box_ge|box_gt|box_in|box_intersect|box_le|box_left|box_lt|box_mul|box_out|\" +\n        \"box_overabove|box_overbelow|box_overlap|box_overleft|box_overright|box_recv|box_right|\" +\n        \"box_same|box_send|box_sub|bpchar_larger|bpchar_pattern_ge|bpchar_pattern_gt|\" +\n        \"bpchar_pattern_le|bpchar_pattern_lt|bpchar_smaller|bpcharcmp|bpchareq|bpcharge|\" +\n        \"bpchargt|bpchariclike|bpcharicnlike|bpcharicregexeq|bpcharicregexne|bpcharin|bpcharle|\" +\n        \"bpcharlike|bpcharlt|bpcharne|bpcharnlike|bpcharout|bpcharrecv|bpcharregexeq|\" +\n        \"bpcharregexne|bpcharsend|bpchartypmodin|bpchartypmodout|broadcast|btabstimecmp|\" +\n        \"btarraycmp|btbeginscan|btboolcmp|btbpchar_pattern_cmp|btbuild|btbuildempty|\" +\n        \"btbulkdelete|btcanreturn|btcharcmp|btcostestimate|btendscan|btfloat48cmp|btfloat4cmp|\" +\n        \"btfloat4sortsupport|btfloat84cmp|btfloat8cmp|btfloat8sortsupport|btgetbitmap|\" +\n        \"btgettuple|btinsert|btint24cmp|btint28cmp|btint2cmp|btint2sortsupport|btint42cmp|\" +\n        \"btint48cmp|btint4cmp|btint4sortsupport|btint82cmp|btint84cmp|btint8cmp|\" +\n        \"btint8sortsupport|btmarkpos|btnamecmp|btnamesortsupport|btoidcmp|btoidsortsupport|\" +\n        \"btoidvectorcmp|btoptions|btrecordcmp|btreltimecmp|btrescan|btrestrpos|btrim|\" +\n        \"bttext_pattern_cmp|bttextcmp|bttidcmp|bttintervalcmp|btvacuumcleanup|\" +\n        \"bytea_string_agg_finalfn|bytea_string_agg_transfn|byteacat|byteacmp|byteaeq|byteage|\" +\n        \"byteagt|byteain|byteale|bytealike|bytealt|byteane|byteanlike|byteaout|bytearecv|byteasend|\" +\n        \"cash_cmp|cash_div_cash|cash_div_flt4|cash_div_flt8|cash_div_int2|cash_div_int4|cash_eq|\" +\n        \"cash_ge|cash_gt|cash_in|cash_le|cash_lt|cash_mi|cash_mul_flt4|cash_mul_flt8|\" +\n        \"cash_mul_int2|cash_mul_int4|cash_ne|cash_out|cash_pl|cash_recv|cash_send|cash_words|\" +\n        \"cashlarger|cashsmaller|cbrt|ceil|ceiling|center|char|char_length|character_length|chareq|\" +\n        \"charge|chargt|charin|charle|charlt|charne|charout|charrecv|charsend|chr|cideq|cidin|cidout|\" +\n        \"cidr|cidr_in|cidr_out|cidr_recv|cidr_send|cidrecv|cidsend|circle|circle_above|\" +\n        \"circle_add_pt|circle_below|circle_center|circle_contain|circle_contain_pt|\" +\n        \"circle_contained|circle_distance|circle_div_pt|circle_eq|circle_ge|circle_gt|circle_in|\" +\n        \"circle_le|circle_left|circle_lt|circle_mul_pt|circle_ne|circle_out|circle_overabove|\" +\n        \"circle_overbelow|circle_overlap|circle_overleft|circle_overright|circle_recv|\" +\n        \"circle_right|circle_same|circle_send|circle_sub_pt|clock_timestamp|close_lb|close_ls|\" +\n        \"close_lseg|close_pb|close_pl|close_ps|close_sb|close_sl|col_description|concat|concat_ws|\" +\n        \"contjoinsel|contsel|convert|convert_from|convert_to|corr|cos|cot|count|covar_pop|\" +\n        \"covar_samp|cstring_in|cstring_out|cstring_recv|cstring_send|cume_dist|current_database|\" +\n        \"current_query|current_schema|current_schemas|current_setting|current_user|currtid|\" +\n        \"currtid2|currval|cursor_to_xml|cursor_to_xmlschema|database_to_xml|\" +\n        \"database_to_xml_and_xmlschema|database_to_xmlschema|date|date_cmp|date_cmp_timestamp|\" +\n        \"date_cmp_timestamptz|date_eq|date_eq_timestamp|date_eq_timestamptz|date_ge|\" +\n        \"date_ge_timestamp|date_ge_timestamptz|date_gt|date_gt_timestamp|date_gt_timestamptz|\" +\n        \"date_in|date_larger|date_le|date_le_timestamp|date_le_timestamptz|date_lt|\" +\n        \"date_lt_timestamp|date_lt_timestamptz|date_mi|date_mi_interval|date_mii|date_ne|\" +\n        \"date_ne_timestamp|date_ne_timestamptz|date_out|date_part|date_pl_interval|date_pli|\" +\n        \"date_recv|date_send|date_smaller|date_sortsupport|date_trunc|daterange|\" +\n        \"daterange_canonical|daterange_subdiff|datetime_pl|datetimetz_pl|dcbrt|decode|degrees|\" +\n        \"dense_rank|dexp|diagonal|diameter|dispell_init|dispell_lexize|dist_cpoly|dist_lb|dist_pb|\" +\n        \"dist_pc|dist_pl|dist_ppath|dist_ps|dist_sb|dist_sl|div|dlog1|dlog10|domain_in|domain_recv|\" +\n        \"dpow|dround|dsimple_init|dsimple_lexize|dsnowball_init|dsnowball_lexize|dsqrt|\" +\n        \"dsynonym_init|dsynonym_lexize|dtrunc|elem_contained_by_range|encode|enum_cmp|enum_eq|\" +\n        \"enum_first|enum_ge|enum_gt|enum_in|enum_larger|enum_last|enum_le|enum_lt|enum_ne|enum_out|\" +\n        \"enum_range|enum_recv|enum_send|enum_smaller|eqjoinsel|eqsel|euc_cn_to_mic|\" +\n        \"euc_cn_to_utf8|euc_jis_2004_to_shift_jis_2004|euc_jis_2004_to_utf8|euc_jp_to_mic|\" +\n        \"euc_jp_to_sjis|euc_jp_to_utf8|euc_kr_to_mic|euc_kr_to_utf8|euc_tw_to_big5|\" +\n        \"euc_tw_to_mic|euc_tw_to_utf8|event_trigger_in|event_trigger_out|every|exp|factorial|\" +\n        \"family|fdw_handler_in|fdw_handler_out|first_value|float4|float48div|float48eq|float48ge|\" +\n        \"float48gt|float48le|float48lt|float48mi|float48mul|float48ne|float48pl|float4_accum|\" +\n        \"float4abs|float4div|float4eq|float4ge|float4gt|float4in|float4larger|float4le|float4lt|\" +\n        \"float4mi|float4mul|float4ne|float4out|float4pl|float4recv|float4send|float4smaller|\" +\n        \"float4um|float4up|float8|float84div|float84eq|float84ge|float84gt|float84le|float84lt|\" +\n        \"float84mi|float84mul|float84ne|float84pl|float8_accum|float8_avg|float8_corr|\" +\n        \"float8_covar_pop|float8_covar_samp|float8_regr_accum|float8_regr_avgx|\" +\n        \"float8_regr_avgy|float8_regr_intercept|float8_regr_r2|float8_regr_slope|\" +\n        \"float8_regr_sxx|float8_regr_sxy|float8_regr_syy|float8_stddev_pop|float8_stddev_samp|\" +\n        \"float8_var_pop|float8_var_samp|float8abs|float8div|float8eq|float8ge|float8gt|float8in|\" +\n        \"float8larger|float8le|float8lt|float8mi|float8mul|float8ne|float8out|float8pl|float8recv|\" +\n        \"float8send|float8smaller|float8um|float8up|floor|flt4_mul_cash|flt8_mul_cash|\" +\n        \"fmgr_c_validator|fmgr_internal_validator|fmgr_sql_validator|format|format_type|\" +\n        \"gb18030_to_utf8|gbk_to_utf8|generate_series|generate_subscripts|get_bit|get_byte|\" +\n        \"get_current_ts_config|getdatabaseencoding|getpgusername|gin_cmp_prefix|\" +\n        \"gin_cmp_tslexeme|gin_extract_tsquery|gin_extract_tsvector|gin_tsquery_consistent|\" +\n        \"ginarrayconsistent|ginarrayextract|ginbeginscan|ginbuild|ginbuildempty|ginbulkdelete|\" +\n        \"gincostestimate|ginendscan|gingetbitmap|gininsert|ginmarkpos|ginoptions|\" +\n        \"ginqueryarrayextract|ginrescan|ginrestrpos|ginvacuumcleanup|gist_box_compress|\" +\n        \"gist_box_consistent|gist_box_decompress|gist_box_penalty|gist_box_picksplit|\" +\n        \"gist_box_same|gist_box_union|gist_circle_compress|gist_circle_consistent|\" +\n        \"gist_point_compress|gist_point_consistent|gist_point_distance|gist_poly_compress|\" +\n        \"gist_poly_consistent|gistbeginscan|gistbuild|gistbuildempty|gistbulkdelete|\" +\n        \"gistcostestimate|gistendscan|gistgetbitmap|gistgettuple|gistinsert|gistmarkpos|\" +\n        \"gistoptions|gistrescan|gistrestrpos|gistvacuumcleanup|gtsquery_compress|\" +\n        \"gtsquery_consistent|gtsquery_decompress|gtsquery_penalty|gtsquery_picksplit|\" +\n        \"gtsquery_same|gtsquery_union|gtsvector_compress|gtsvector_consistent|\" +\n        \"gtsvector_decompress|gtsvector_penalty|gtsvector_picksplit|gtsvector_same|\" +\n        \"gtsvector_union|gtsvectorin|gtsvectorout|has_any_column_privilege|\" +\n        \"has_column_privilege|has_database_privilege|has_foreign_data_wrapper_privilege|\" +\n        \"has_function_privilege|has_language_privilege|has_schema_privilege|\" +\n        \"has_sequence_privilege|has_server_privilege|has_table_privilege|\" +\n        \"has_tablespace_privilege|has_type_privilege|hash_aclitem|hash_array|hash_numeric|\" +\n        \"hash_range|hashbeginscan|hashbpchar|hashbuild|hashbuildempty|hashbulkdelete|hashchar|\" +\n        \"hashcostestimate|hashendscan|hashenum|hashfloat4|hashfloat8|hashgetbitmap|hashgettuple|\" +\n        \"hashinet|hashinsert|hashint2|hashint2vector|hashint4|hashint8|hashmacaddr|hashmarkpos|\" +\n        \"hashname|hashoid|hashoidvector|hashoptions|hashrescan|hashrestrpos|hashtext|\" +\n        \"hashvacuumcleanup|hashvarlena|height|host|hostmask|iclikejoinsel|iclikesel|\" +\n        \"icnlikejoinsel|icnlikesel|icregexeqjoinsel|icregexeqsel|icregexnejoinsel|icregexnesel|\" +\n        \"inet_client_addr|inet_client_port|inet_in|inet_out|inet_recv|inet_send|\" +\n        \"inet_server_addr|inet_server_port|inetand|inetmi|inetmi_int8|inetnot|inetor|inetpl|\" +\n        \"initcap|int2|int24div|int24eq|int24ge|int24gt|int24le|int24lt|int24mi|int24mul|int24ne|\" +\n        \"int24pl|int28div|int28eq|int28ge|int28gt|int28le|int28lt|int28mi|int28mul|int28ne|int28pl|\" +\n        \"int2_accum|int2_avg_accum|int2_mul_cash|int2_sum|int2abs|int2and|int2div|int2eq|int2ge|\" +\n        \"int2gt|int2in|int2larger|int2le|int2lt|int2mi|int2mod|int2mul|int2ne|int2not|int2or|int2out|\" +\n        \"int2pl|int2recv|int2send|int2shl|int2shr|int2smaller|int2um|int2up|int2vectoreq|\" +\n        \"int2vectorin|int2vectorout|int2vectorrecv|int2vectorsend|int2xor|int4|int42div|int42eq|\" +\n        \"int42ge|int42gt|int42le|int42lt|int42mi|int42mul|int42ne|int42pl|int48div|int48eq|int48ge|\" +\n        \"int48gt|int48le|int48lt|int48mi|int48mul|int48ne|int48pl|int4_accum|int4_avg_accum|\" +\n        \"int4_mul_cash|int4_sum|int4abs|int4and|int4div|int4eq|int4ge|int4gt|int4in|int4inc|\" +\n        \"int4larger|int4le|int4lt|int4mi|int4mod|int4mul|int4ne|int4not|int4or|int4out|int4pl|\" +\n        \"int4range|int4range_canonical|int4range_subdiff|int4recv|int4send|int4shl|int4shr|\" +\n        \"int4smaller|int4um|int4up|int4xor|int8|int82div|int82eq|int82ge|int82gt|int82le|int82lt|\" +\n        \"int82mi|int82mul|int82ne|int82pl|int84div|int84eq|int84ge|int84gt|int84le|int84lt|int84mi|\" +\n        \"int84mul|int84ne|int84pl|int8_accum|int8_avg|int8_avg_accum|int8_sum|int8abs|int8and|\" +\n        \"int8div|int8eq|int8ge|int8gt|int8in|int8inc|int8inc_any|int8inc_float8_float8|int8larger|\" +\n        \"int8le|int8lt|int8mi|int8mod|int8mul|int8ne|int8not|int8or|int8out|int8pl|int8pl_inet|\" +\n        \"int8range|int8range_canonical|int8range_subdiff|int8recv|int8send|int8shl|int8shr|\" +\n        \"int8smaller|int8um|int8up|int8xor|integer_pl_date|inter_lb|inter_sb|inter_sl|internal_in|\" +\n        \"internal_out|interval_accum|interval_avg|interval_cmp|interval_div|interval_eq|\" +\n        \"interval_ge|interval_gt|interval_hash|interval_in|interval_larger|interval_le|\" +\n        \"interval_lt|interval_mi|interval_mul|interval_ne|interval_out|interval_pl|\" +\n        \"interval_pl_date|interval_pl_time|interval_pl_timestamp|interval_pl_timestamptz|\" +\n        \"interval_pl_timetz|interval_recv|interval_send|interval_smaller|interval_transform|\" +\n        \"interval_um|intervaltypmodin|intervaltypmodout|intinterval|isclosed|isempty|isfinite|\" +\n        \"ishorizontal|iso8859_1_to_utf8|iso8859_to_utf8|iso_to_koi8r|iso_to_mic|iso_to_win1251|\" +\n        \"iso_to_win866|isopen|isparallel|isperp|isvertical|johab_to_utf8|json_agg|\" +\n        \"json_agg_finalfn|json_agg_transfn|json_array_element|json_array_element_text|\" +\n        \"json_array_elements|json_array_length|json_each|json_each_text|json_extract_path|\" +\n        \"json_extract_path_op|json_extract_path_text|json_extract_path_text_op|json_in|\" +\n        \"json_object_field|json_object_field_text|json_object_keys|json_out|\" +\n        \"json_populate_record|json_populate_recordset|json_recv|json_send|justify_days|\" +\n        \"justify_hours|justify_interval|koi8r_to_iso|koi8r_to_mic|koi8r_to_utf8|\" +\n        \"koi8r_to_win1251|koi8r_to_win866|koi8u_to_utf8|lag|language_handler_in|\" +\n        \"language_handler_out|last_value|lastval|latin1_to_mic|latin2_to_mic|latin2_to_win1250|\" +\n        \"latin3_to_mic|latin4_to_mic|lead|left|length|like|like_escape|likejoinsel|likesel|line|\" +\n        \"line_distance|line_eq|line_horizontal|line_in|line_interpt|line_intersect|line_out|\" +\n        \"line_parallel|line_perp|line_recv|line_send|line_vertical|ln|lo_close|lo_creat|lo_create|\" +\n        \"lo_export|lo_import|lo_lseek|lo_lseek64|lo_open|lo_tell|lo_tell64|lo_truncate|\" +\n        \"lo_truncate64|lo_unlink|log|loread|lower|lower_inc|lower_inf|lowrite|lpad|lseg|lseg_center|\" +\n        \"lseg_distance|lseg_eq|lseg_ge|lseg_gt|lseg_horizontal|lseg_in|lseg_interpt|\" +\n        \"lseg_intersect|lseg_le|lseg_length|lseg_lt|lseg_ne|lseg_out|lseg_parallel|lseg_perp|\" +\n        \"lseg_recv|lseg_send|lseg_vertical|ltrim|macaddr_and|macaddr_cmp|macaddr_eq|macaddr_ge|\" +\n        \"macaddr_gt|macaddr_in|macaddr_le|macaddr_lt|macaddr_ne|macaddr_not|macaddr_or|\" +\n        \"macaddr_out|macaddr_recv|macaddr_send|makeaclitem|masklen|max|md5|mic_to_ascii|\" +\n        \"mic_to_big5|mic_to_euc_cn|mic_to_euc_jp|mic_to_euc_kr|mic_to_euc_tw|mic_to_iso|\" +\n        \"mic_to_koi8r|mic_to_latin1|mic_to_latin2|mic_to_latin3|mic_to_latin4|mic_to_sjis|\" +\n        \"mic_to_win1250|mic_to_win1251|mic_to_win866|min|mktinterval|mod|money|mul_d_interval|\" +\n        \"name|nameeq|namege|namegt|nameiclike|nameicnlike|nameicregexeq|nameicregexne|namein|\" +\n        \"namele|namelike|namelt|namene|namenlike|nameout|namerecv|nameregexeq|nameregexne|namesend|\" +\n        \"neqjoinsel|neqsel|netmask|network|network_cmp|network_eq|network_ge|network_gt|\" +\n        \"network_le|network_lt|network_ne|network_sub|network_subeq|network_sup|network_supeq|\" +\n        \"nextval|nlikejoinsel|nlikesel|notlike|now|npoints|nth_value|ntile|numeric_abs|\" +\n        \"numeric_accum|numeric_add|numeric_avg|numeric_avg_accum|numeric_cmp|numeric_div|\" +\n        \"numeric_div_trunc|numeric_eq|numeric_exp|numeric_fac|numeric_ge|numeric_gt|numeric_in|\" +\n        \"numeric_inc|numeric_larger|numeric_le|numeric_ln|numeric_log|numeric_lt|numeric_mod|\" +\n        \"numeric_mul|numeric_ne|numeric_out|numeric_power|numeric_recv|numeric_send|\" +\n        \"numeric_smaller|numeric_sqrt|numeric_stddev_pop|numeric_stddev_samp|numeric_sub|\" +\n        \"numeric_transform|numeric_uminus|numeric_uplus|numeric_var_pop|numeric_var_samp|\" +\n        \"numerictypmodin|numerictypmodout|numnode|numrange|numrange_subdiff|obj_description|\" +\n        \"octet_length|oid|oideq|oidge|oidgt|oidin|oidlarger|oidle|oidlt|oidne|oidout|oidrecv|oidsend|\" +\n        \"oidsmaller|oidvectoreq|oidvectorge|oidvectorgt|oidvectorin|oidvectorle|oidvectorlt|\" +\n        \"oidvectorne|oidvectorout|oidvectorrecv|oidvectorsend|oidvectortypes|on_pb|on_pl|\" +\n        \"on_ppath|on_ps|on_sb|on_sl|opaque_in|opaque_out|overlaps|overlay|path|path_add|path_add_pt|\" +\n        \"path_center|path_contain_pt|path_distance|path_div_pt|path_in|path_inter|path_length|\" +\n        \"path_mul_pt|path_n_eq|path_n_ge|path_n_gt|path_n_le|path_n_lt|path_npoints|path_out|\" +\n        \"path_recv|path_send|path_sub_pt|pclose|percent_rank|pg_advisory_lock|\" +\n        \"pg_advisory_lock_shared|pg_advisory_unlock|pg_advisory_unlock_all|\" +\n        \"pg_advisory_unlock_shared|pg_advisory_xact_lock|pg_advisory_xact_lock_shared|\" +\n        \"pg_available_extension_versions|pg_available_extensions|pg_backend_pid|\" +\n        \"pg_backup_start_time|pg_cancel_backend|pg_char_to_encoding|pg_client_encoding|\" +\n        \"pg_collation_for|pg_collation_is_visible|pg_column_is_updatable|pg_column_size|\" +\n        \"pg_conf_load_time|pg_conversion_is_visible|pg_create_restore_point|\" +\n        \"pg_current_xlog_insert_location|pg_current_xlog_location|pg_cursor|pg_database_size|\" +\n        \"pg_describe_object|pg_encoding_max_length|pg_encoding_to_char|\" +\n        \"pg_event_trigger_dropped_objects|pg_export_snapshot|pg_extension_config_dump|\" +\n        \"pg_extension_update_paths|pg_function_is_visible|pg_get_constraintdef|pg_get_expr|\" +\n        \"pg_get_function_arguments|pg_get_function_identity_arguments|\" +\n        \"pg_get_function_result|pg_get_functiondef|pg_get_indexdef|pg_get_keywords|\" +\n        \"pg_get_multixact_members|pg_get_ruledef|pg_get_serial_sequence|pg_get_triggerdef|\" +\n        \"pg_get_userbyid|pg_get_viewdef|pg_has_role|pg_identify_object|pg_indexes_size|\" +\n        \"pg_is_in_backup|pg_is_in_recovery|pg_is_other_temp_schema|pg_is_xlog_replay_paused|\" +\n        \"pg_last_xact_replay_timestamp|pg_last_xlog_receive_location|\" +\n        \"pg_last_xlog_replay_location|pg_listening_channels|pg_lock_status|pg_ls_dir|\" +\n        \"pg_my_temp_schema|pg_node_tree_in|pg_node_tree_out|pg_node_tree_recv|\" +\n        \"pg_node_tree_send|pg_notify|pg_opclass_is_visible|pg_operator_is_visible|\" +\n        \"pg_opfamily_is_visible|pg_options_to_table|pg_postmaster_start_time|\" +\n        \"pg_prepared_statement|pg_prepared_xact|pg_read_binary_file|pg_read_file|\" +\n        \"pg_relation_filenode|pg_relation_filepath|pg_relation_is_updatable|pg_relation_size|\" +\n        \"pg_reload_conf|pg_rotate_logfile|pg_sequence_parameters|pg_show_all_settings|\" +\n        \"pg_size_pretty|pg_sleep|pg_start_backup|pg_stat_clear_snapshot|pg_stat_file|\" +\n        \"pg_stat_get_activity|pg_stat_get_analyze_count|pg_stat_get_autoanalyze_count|\" +\n        \"pg_stat_get_autovacuum_count|pg_stat_get_backend_activity|\" +\n        \"pg_stat_get_backend_activity_start|pg_stat_get_backend_client_addr|\" +\n        \"pg_stat_get_backend_client_port|pg_stat_get_backend_dbid|pg_stat_get_backend_idset|\" +\n        \"pg_stat_get_backend_pid|pg_stat_get_backend_start|pg_stat_get_backend_userid|\" +\n        \"pg_stat_get_backend_waiting|pg_stat_get_backend_xact_start|\" +\n        \"pg_stat_get_bgwriter_buf_written_checkpoints|\" +\n        \"pg_stat_get_bgwriter_buf_written_clean|pg_stat_get_bgwriter_maxwritten_clean|\" +\n        \"pg_stat_get_bgwriter_requested_checkpoints|pg_stat_get_bgwriter_stat_reset_time|\" +\n        \"pg_stat_get_bgwriter_timed_checkpoints|pg_stat_get_blocks_fetched|\" +\n        \"pg_stat_get_blocks_hit|pg_stat_get_buf_alloc|pg_stat_get_buf_fsync_backend|\" +\n        \"pg_stat_get_buf_written_backend|pg_stat_get_checkpoint_sync_time|\" +\n        \"pg_stat_get_checkpoint_write_time|pg_stat_get_db_blk_read_time|\" +\n        \"pg_stat_get_db_blk_write_time|pg_stat_get_db_blocks_fetched|\" +\n        \"pg_stat_get_db_blocks_hit|pg_stat_get_db_conflict_all|\" +\n        \"pg_stat_get_db_conflict_bufferpin|pg_stat_get_db_conflict_lock|\" +\n        \"pg_stat_get_db_conflict_snapshot|pg_stat_get_db_conflict_startup_deadlock|\" +\n        \"pg_stat_get_db_conflict_tablespace|pg_stat_get_db_deadlocks|\" +\n        \"pg_stat_get_db_numbackends|pg_stat_get_db_stat_reset_time|\" +\n        \"pg_stat_get_db_temp_bytes|pg_stat_get_db_temp_files|pg_stat_get_db_tuples_deleted|\" +\n        \"pg_stat_get_db_tuples_fetched|pg_stat_get_db_tuples_inserted|\" +\n        \"pg_stat_get_db_tuples_returned|pg_stat_get_db_tuples_updated|\" +\n        \"pg_stat_get_db_xact_commit|pg_stat_get_db_xact_rollback|pg_stat_get_dead_tuples|\" +\n        \"pg_stat_get_function_calls|pg_stat_get_function_self_time|\" +\n        \"pg_stat_get_function_total_time|pg_stat_get_last_analyze_time|\" +\n        \"pg_stat_get_last_autoanalyze_time|pg_stat_get_last_autovacuum_time|\" +\n        \"pg_stat_get_last_vacuum_time|pg_stat_get_live_tuples|pg_stat_get_numscans|\" +\n        \"pg_stat_get_tuples_deleted|pg_stat_get_tuples_fetched|\" +\n        \"pg_stat_get_tuples_hot_updated|pg_stat_get_tuples_inserted|\" +\n        \"pg_stat_get_tuples_returned|pg_stat_get_tuples_updated|pg_stat_get_vacuum_count|\" +\n        \"pg_stat_get_wal_senders|pg_stat_get_xact_blocks_fetched|\" +\n        \"pg_stat_get_xact_blocks_hit|pg_stat_get_xact_function_calls|\" +\n        \"pg_stat_get_xact_function_self_time|pg_stat_get_xact_function_total_time|\" +\n        \"pg_stat_get_xact_numscans|pg_stat_get_xact_tuples_deleted|\" +\n        \"pg_stat_get_xact_tuples_fetched|pg_stat_get_xact_tuples_hot_updated|\" +\n        \"pg_stat_get_xact_tuples_inserted|pg_stat_get_xact_tuples_returned|\" +\n        \"pg_stat_get_xact_tuples_updated|pg_stat_reset|pg_stat_reset_shared|\" +\n        \"pg_stat_reset_single_function_counters|pg_stat_reset_single_table_counters|\" +\n        \"pg_stop_backup|pg_switch_xlog|pg_table_is_visible|pg_table_size|\" +\n        \"pg_tablespace_databases|pg_tablespace_location|pg_tablespace_size|\" +\n        \"pg_terminate_backend|pg_timezone_abbrevs|pg_timezone_names|pg_total_relation_size|\" +\n        \"pg_trigger_depth|pg_try_advisory_lock|pg_try_advisory_lock_shared|\" +\n        \"pg_try_advisory_xact_lock|pg_try_advisory_xact_lock_shared|pg_ts_config_is_visible|\" +\n        \"pg_ts_dict_is_visible|pg_ts_parser_is_visible|pg_ts_template_is_visible|\" +\n        \"pg_type_is_visible|pg_typeof|pg_xlog_location_diff|pg_xlog_replay_pause|\" +\n        \"pg_xlog_replay_resume|pg_xlogfile_name|pg_xlogfile_name_offset|pi|plainto_tsquery|\" +\n        \"plpgsql_call_handler|plpgsql_inline_handler|plpgsql_validator|point|point_above|\" +\n        \"point_add|point_below|point_distance|point_div|point_eq|point_horiz|point_in|point_left|\" +\n        \"point_mul|point_ne|point_out|point_recv|point_right|point_send|point_sub|point_vert|\" +\n        \"poly_above|poly_below|poly_center|poly_contain|poly_contain_pt|poly_contained|\" +\n        \"poly_distance|poly_in|poly_left|poly_npoints|poly_out|poly_overabove|poly_overbelow|\" +\n        \"poly_overlap|poly_overleft|poly_overright|poly_recv|poly_right|poly_same|poly_send|\" +\n        \"polygon|popen|position|positionjoinsel|positionsel|postgresql_fdw_validator|pow|power|\" +\n        \"prsd_end|prsd_headline|prsd_lextype|prsd_nexttoken|prsd_start|pt_contained_circle|\" +\n        \"pt_contained_poly|query_to_xml|query_to_xml_and_xmlschema|query_to_xmlschema|\" +\n        \"querytree|quote_ident|quote_literal|quote_nullable|radians|radius|random|range_adjacent|\" +\n        \"range_after|range_before|range_cmp|range_contained_by|range_contains|\" +\n        \"range_contains_elem|range_eq|range_ge|range_gist_compress|range_gist_consistent|\" +\n        \"range_gist_decompress|range_gist_penalty|range_gist_picksplit|range_gist_same|\" +\n        \"range_gist_union|range_gt|range_in|range_intersect|range_le|range_lt|range_minus|\" +\n        \"range_ne|range_out|range_overlaps|range_overleft|range_overright|range_recv|range_send|\" +\n        \"range_typanalyze|range_union|rangesel|rank|record_eq|record_ge|record_gt|record_in|\" +\n        \"record_le|record_lt|record_ne|record_out|record_recv|record_send|regclass|regclassin|\" +\n        \"regclassout|regclassrecv|regclasssend|regconfigin|regconfigout|regconfigrecv|\" +\n        \"regconfigsend|regdictionaryin|regdictionaryout|regdictionaryrecv|regdictionarysend|\" +\n        \"regexeqjoinsel|regexeqsel|regexnejoinsel|regexnesel|regexp_matches|regexp_replace|\" +\n        \"regexp_split_to_array|regexp_split_to_table|regoperatorin|regoperatorout|\" +\n        \"regoperatorrecv|regoperatorsend|regoperin|regoperout|regoperrecv|regopersend|\" +\n        \"regprocedurein|regprocedureout|regprocedurerecv|regproceduresend|regprocin|regprocout|\" +\n        \"regprocrecv|regprocsend|regr_avgx|regr_avgy|regr_count|regr_intercept|regr_r2|\" +\n        \"regr_slope|regr_sxx|regr_sxy|regr_syy|regtypein|regtypeout|regtyperecv|regtypesend|\" +\n        \"reltime|reltimeeq|reltimege|reltimegt|reltimein|reltimele|reltimelt|reltimene|reltimeout|\" +\n        \"reltimerecv|reltimesend|repeat|replace|reverse|right|round|row_number|row_to_json|rpad|\" +\n        \"rtrim|scalargtjoinsel|scalargtsel|scalarltjoinsel|scalarltsel|schema_to_xml|\" +\n        \"schema_to_xml_and_xmlschema|schema_to_xmlschema|session_user|set_bit|set_byte|\" +\n        \"set_config|set_masklen|setseed|setval|setweight|shell_in|shell_out|\" +\n        \"shift_jis_2004_to_euc_jis_2004|shift_jis_2004_to_utf8|shobj_description|sign|\" +\n        \"similar_escape|sin|sjis_to_euc_jp|sjis_to_mic|sjis_to_utf8|slope|smgreq|smgrin|smgrne|\" +\n        \"smgrout|spg_kd_choose|spg_kd_config|spg_kd_inner_consistent|spg_kd_picksplit|\" +\n        \"spg_quad_choose|spg_quad_config|spg_quad_inner_consistent|spg_quad_leaf_consistent|\" +\n        \"spg_quad_picksplit|spg_range_quad_choose|spg_range_quad_config|\" +\n        \"spg_range_quad_inner_consistent|spg_range_quad_leaf_consistent|\" +\n        \"spg_range_quad_picksplit|spg_text_choose|spg_text_config|spg_text_inner_consistent|\" +\n        \"spg_text_leaf_consistent|spg_text_picksplit|spgbeginscan|spgbuild|spgbuildempty|\" +\n        \"spgbulkdelete|spgcanreturn|spgcostestimate|spgendscan|spggetbitmap|spggettuple|\" +\n        \"spginsert|spgmarkpos|spgoptions|spgrescan|spgrestrpos|spgvacuumcleanup|split_part|sqrt|\" +\n        \"statement_timestamp|stddev|stddev_pop|stddev_samp|string_agg|string_agg_finalfn|\" +\n        \"string_agg_transfn|string_to_array|strip|strpos|substr|substring|sum|\" +\n        \"suppress_redundant_updates_trigger|table_to_xml|table_to_xml_and_xmlschema|\" +\n        \"table_to_xmlschema|tan|text|text_ge|text_gt|text_larger|text_le|text_lt|text_pattern_ge|\" +\n        \"text_pattern_gt|text_pattern_le|text_pattern_lt|text_smaller|textanycat|textcat|texteq|\" +\n        \"texticlike|texticnlike|texticregexeq|texticregexne|textin|textlen|textlike|textne|\" +\n        \"textnlike|textout|textrecv|textregexeq|textregexne|textsend|thesaurus_init|\" +\n        \"thesaurus_lexize|tideq|tidge|tidgt|tidin|tidlarger|tidle|tidlt|tidne|tidout|tidrecv|tidsend|\" +\n        \"tidsmaller|time_cmp|time_eq|time_ge|time_gt|time_hash|time_in|time_larger|time_le|time_lt|\" +\n        \"time_mi_interval|time_mi_time|time_ne|time_out|time_pl_interval|time_recv|time_send|\" +\n        \"time_smaller|time_transform|timedate_pl|timemi|timenow|timeofday|timepl|timestamp_cmp|\" +\n        \"timestamp_cmp_date|timestamp_cmp_timestamptz|timestamp_eq|timestamp_eq_date|\" +\n        \"timestamp_eq_timestamptz|timestamp_ge|timestamp_ge_date|timestamp_ge_timestamptz|\" +\n        \"timestamp_gt|timestamp_gt_date|timestamp_gt_timestamptz|timestamp_hash|timestamp_in|\" +\n        \"timestamp_larger|timestamp_le|timestamp_le_date|timestamp_le_timestamptz|\" +\n        \"timestamp_lt|timestamp_lt_date|timestamp_lt_timestamptz|timestamp_mi|\" +\n        \"timestamp_mi_interval|timestamp_ne|timestamp_ne_date|timestamp_ne_timestamptz|\" +\n        \"timestamp_out|timestamp_pl_interval|timestamp_recv|timestamp_send|timestamp_smaller|\" +\n        \"timestamp_sortsupport|timestamp_transform|timestamptypmodin|timestamptypmodout|\" +\n        \"timestamptz_cmp|timestamptz_cmp_date|timestamptz_cmp_timestamp|timestamptz_eq|\" +\n        \"timestamptz_eq_date|timestamptz_eq_timestamp|timestamptz_ge|timestamptz_ge_date|\" +\n        \"timestamptz_ge_timestamp|timestamptz_gt|timestamptz_gt_date|\" +\n        \"timestamptz_gt_timestamp|timestamptz_in|timestamptz_larger|timestamptz_le|\" +\n        \"timestamptz_le_date|timestamptz_le_timestamp|timestamptz_lt|timestamptz_lt_date|\" +\n        \"timestamptz_lt_timestamp|timestamptz_mi|timestamptz_mi_interval|timestamptz_ne|\" +\n        \"timestamptz_ne_date|timestamptz_ne_timestamp|timestamptz_out|\" +\n        \"timestamptz_pl_interval|timestamptz_recv|timestamptz_send|timestamptz_smaller|\" +\n        \"timestamptztypmodin|timestamptztypmodout|timetypmodin|timetypmodout|timetz_cmp|\" +\n        \"timetz_eq|timetz_ge|timetz_gt|timetz_hash|timetz_in|timetz_larger|timetz_le|timetz_lt|\" +\n        \"timetz_mi_interval|timetz_ne|timetz_out|timetz_pl_interval|timetz_recv|timetz_send|\" +\n        \"timetz_smaller|timetzdate_pl|timetztypmodin|timetztypmodout|timezone|tinterval|\" +\n        \"tintervalct|tintervalend|tintervaleq|tintervalge|tintervalgt|tintervalin|tintervalle|\" +\n        \"tintervalleneq|tintervallenge|tintervallengt|tintervallenle|tintervallenlt|\" +\n        \"tintervallenne|tintervallt|tintervalne|tintervalout|tintervalov|tintervalrecv|\" +\n        \"tintervalrel|tintervalsame|tintervalsend|tintervalstart|to_ascii|to_char|to_date|to_hex|\" +\n        \"to_json|to_number|to_timestamp|to_tsquery|to_tsvector|transaction_timestamp|translate|\" +\n        \"trigger_in|trigger_out|trunc|ts_debug|ts_headline|ts_lexize|ts_match_qv|ts_match_tq|\" +\n        \"ts_match_tt|ts_match_vq|ts_parse|ts_rank|ts_rank_cd|ts_rewrite|ts_stat|ts_token_type|\" +\n        \"ts_typanalyze|tsmatchjoinsel|tsmatchsel|tsq_mcontained|tsq_mcontains|tsquery_and|\" +\n        \"tsquery_cmp|tsquery_eq|tsquery_ge|tsquery_gt|tsquery_le|tsquery_lt|tsquery_ne|\" +\n        \"tsquery_not|tsquery_or|tsqueryin|tsqueryout|tsqueryrecv|tsquerysend|tsrange|\" +\n        \"tsrange_subdiff|tstzrange|tstzrange_subdiff|tsvector_cmp|tsvector_concat|tsvector_eq|\" +\n        \"tsvector_ge|tsvector_gt|tsvector_le|tsvector_lt|tsvector_ne|tsvector_update_trigger|\" +\n        \"tsvector_update_trigger_column|tsvectorin|tsvectorout|tsvectorrecv|tsvectorsend|\" +\n        \"txid_current|txid_current_snapshot|txid_snapshot_in|txid_snapshot_out|\" +\n        \"txid_snapshot_recv|txid_snapshot_send|txid_snapshot_xip|txid_snapshot_xmax|\" +\n        \"txid_snapshot_xmin|txid_visible_in_snapshot|uhc_to_utf8|unique_key_recheck|unknownin|\" +\n        \"unknownout|unknownrecv|unknownsend|unnest|upper|upper_inc|upper_inf|utf8_to_ascii|\" +\n        \"utf8_to_big5|utf8_to_euc_cn|utf8_to_euc_jis_2004|utf8_to_euc_jp|utf8_to_euc_kr|\" +\n        \"utf8_to_euc_tw|utf8_to_gb18030|utf8_to_gbk|utf8_to_iso8859|utf8_to_iso8859_1|\" +\n        \"utf8_to_johab|utf8_to_koi8r|utf8_to_koi8u|utf8_to_shift_jis_2004|utf8_to_sjis|\" +\n        \"utf8_to_uhc|utf8_to_win|uuid_cmp|uuid_eq|uuid_ge|uuid_gt|uuid_hash|uuid_in|uuid_le|\" +\n        \"uuid_lt|uuid_ne|uuid_out|uuid_recv|uuid_send|var_pop|var_samp|varbit_in|varbit_out|\" +\n        \"varbit_recv|varbit_send|varbit_transform|varbitcmp|varbiteq|varbitge|varbitgt|varbitle|\" +\n        \"varbitlt|varbitne|varbittypmodin|varbittypmodout|varchar_transform|varcharin|\" +\n        \"varcharout|varcharrecv|varcharsend|varchartypmodin|varchartypmodout|variance|version|\" +\n        \"void_in|void_out|void_recv|void_send|width|width_bucket|win1250_to_latin2|\" +\n        \"win1250_to_mic|win1251_to_iso|win1251_to_koi8r|win1251_to_mic|win1251_to_win866|\" +\n        \"win866_to_iso|win866_to_koi8r|win866_to_mic|win866_to_win1251|win_to_utf8|xideq|\" +\n        \"xideqint4|xidin|xidout|xidrecv|xidsend|xml|xml_in|xml_is_well_formed|\" +\n        \"xml_is_well_formed_content|xml_is_well_formed_document|xml_out|xml_recv|xml_send|\" +\n        \"xmlagg|xmlcomment|xmlconcat2|xmlexists|xmlvalidate|xpath|xpath_exists\"\n    );\n\n    var keywordMapper = this.createKeywordMapper({\n        \"support.function\": builtinFunctions,\n        \"keyword\": keywords\n    }, \"identifier\", true);\n\n\n    var sqlRules = [{\n            token : \"string\", // single line string -- assume dollar strings if multi-line for now\n            regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n        }, {\n            token : \"variable.language\", // pg identifier\n            regex : '\".*?\"'\n        }, {\n            token : \"constant.numeric\", // float\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_][a-zA-Z0-9_$]*\\\\b\" // TODO - Unicode in identifiers\n        }, {\n            token : \"keyword.operator\",\n            regex : \"!|!!|!~|!~\\\\*|!~~|!~~\\\\*|#|##|#<|#<=|#<>|#=|#>|#>=|%|\\\\&|\\\\&\\\\&|\\\\&<|\\\\&<\\\\||\\\\&>|\\\\*|\\\\+|\" +\n                    \"\\\\-|/|<|<#>|<\\\\->|<<|<<=|<<\\\\||<=|<>|<\\\\?>|<@|<\\\\^|=|>|>=|>>|>>=|>\\\\^|\\\\?#|\\\\?\\\\-|\\\\?\\\\-\\\\||\" +\n                    \"\\\\?\\\\||\\\\?\\\\|\\\\||@|@\\\\-@|@>|@@|@@@|\\\\^|\\\\||\\\\|\\\\&>|\\\\|/|\\\\|>>|\\\\|\\\\||\\\\|\\\\|/|~|~\\\\*|~<=~|~<~|\" +\n                    \"~=|~>=~|~>~|~~|~~\\\\*\"\n        }, {\n            token : \"paren.lparen\",\n            regex : \"[\\\\(]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\)]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        }\n    ];\n\n\n    this.$rules = {\n        \"start\" : [{\n                token : \"comment\",\n                regex : \"--.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi-line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            },{\n                token : \"keyword.statementBegin\",\n                regex : \"[a-zA-Z]+\", // Could enumerate starting keywords but this allows things to work when new statements are added.\n                next : \"statement\"\n            },{\n                token : \"support.buildin\", // psql directive\n                regex : \"^\\\\\\\\[\\\\S]+.*$\"\n            }\n        ],\n\n        \"statement\" : [{\n                token : \"comment\",\n                regex : \"--.*$\"\n            }, {\n                token : \"comment\", // multi-line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"commentStatement\"\n            }, {\n                token : \"statementEnd\",\n                regex : \";\",\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : \"\\\\$perl\\\\$\",\n                next : \"perl-start\"\n            }, {\n                token : \"string\",\n                regex : \"\\\\$python\\\\$\",\n                next : \"python-start\"\n            }, {\n                token : \"string\",\n                regex : \"\\\\$json\\\\$\",\n                next : \"json-start\"\n            }, {\n                token : \"string\",\n                regex : \"\\\\$(js|javascript)\\\\$\",\n                next : \"javascript-start\"\n            }, {\n                token : \"string\",\n                regex : \"\\\\$[\\\\w_0-9]*\\\\$$\", // dollar quote at the end of a line\n                next : \"dollarSql\"\n            }, {\n                token : \"string\",\n                regex : \"\\\\$[\\\\w_0-9]*\\\\$\",\n                next : \"dollarStatementString\"\n            }\n        ].concat(sqlRules),\n\n        \"dollarSql\" : [{\n                token : \"comment\",\n                regex : \"--.*$\"\n            }, {\n                token : \"comment\", // multi-line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"commentDollarSql\"\n            }, {\n                token : \"string\", // end quoting with dollar at the start of a line\n                regex : \"^\\\\$[\\\\w_0-9]*\\\\$\",\n                next : \"statement\"\n            }, {\n                token : \"string\",\n                regex : \"\\\\$[\\\\w_0-9]*\\\\$\",\n                next : \"dollarSqlString\"\n            }\n        ].concat(sqlRules),\n\n        \"comment\" : [{\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ],\n\n        \"commentStatement\" : [{\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"statement\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ],\n\n        \"commentDollarSql\" : [{\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"dollarSql\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ],\n\n        \"dollarStatementString\" : [{\n                token : \"string\", // closing dollarstring\n                regex : \".*?\\\\$[\\\\w_0-9]*\\\\$\",\n                next : \"statement\"\n            }, {\n                token : \"string\", // dollarstring spanning whole line\n                regex : \".+\"\n            }\n        ],\n\n        \"dollarSqlString\" : [{\n                token : \"string\", // closing dollarstring\n                regex : \".*?\\\\$[\\\\w_0-9]*\\\\$\",\n                next : \"dollarSql\"\n            }, {\n                token : \"string\", // dollarstring spanning whole line\n                regex : \".+\"\n            }\n        ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n    this.embedRules(PerlHighlightRules, \"perl-\", [{token : \"string\", regex : \"\\\\$perl\\\\$\", next : \"statement\"}]);\n    this.embedRules(PythonHighlightRules, \"python-\", [{token : \"string\", regex : \"\\\\$python\\\\$\", next : \"statement\"}]);\n    this.embedRules(JsonHighlightRules, \"json-\", [{token : \"string\", regex : \"\\\\$json\\\\$\", next : \"statement\"}]);\n    this.embedRules(JavaScriptHighlightRules, \"javascript-\", [{token : \"string\", regex : \"\\\\$(js|javascript)\\\\$\", next : \"statement\"}]);\n};\n\noop.inherits(PgsqlHighlightRules, TextHighlightRules);\n\nexports.PgsqlHighlightRules = PgsqlHighlightRules;\n});\n\nace.define(\"ace/mode/pgsql\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/pgsql_highlight_rules\"], function(require, exports, module) {\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"../mode/text\").Mode;\nvar PgsqlHighlightRules = require(\"./pgsql_highlight_rules\").PgsqlHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = PgsqlHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) { \n        if (state == \"start\" || state == \"keyword.statementEnd\") {\n            return \"\";\n        } else {\n            return this.$getIndent(line); // Keep whatever indent the previous line has\n        }\n    };\n\n    this.$id = \"ace/mode/pgsql\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/pgsql\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}