{"ast":null,"code":"var _jsxFileName = \"/home/magoo/projects/keyrier-json/ui/src/components/App.tsx\";\nimport { updateLayouts } from 'actions/actions';\nimport { configuration } from 'config';\nimport { withPerformance } from 'core/logging/performance';\nimport * as React from 'react';\nimport { lazy, Suspense } from 'react';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { getLayouts, getQueryMode } from 'store/selectors';\nimport appStyles from './App.module.scss';\nimport { GrabbleHeader } from './common/GrabbleHeader';\nimport grabbleStyles from './common/GrabbleHeader.module.scss';\nimport Header from './Header';\nimport LateralMenu from './LateralMenu';\nconst ResponsiveGridLayout = WidthProvider(Responsive);\nconst SourceEditor = lazy(() => import(\n/* webpackChunkName: \"SourceEditor\" */\n'components/source/SourceEditor'));\nconst Output = lazy(() => import(\n/* webpackChunkName: \"Output\" */\n'components/output/Output'));\nconst QueryEditor = lazy(() => import(\n/* webpackChunkName: \"QueryEditor\" */\n'components/query/QueryEditor'));\n\nconst App = ({\n  mode,\n  layouts,\n  updateGridLayouts\n}) => {\n  const onLayoutChange = (_, newLayouts) => {\n    updateGridLayouts(newLayouts);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Paste your JSON and Query it.\"), /*#__PURE__*/React.createElement(ResponsiveGridLayout, {\n    autoSize: true,\n    className: \"layout\",\n    isResizable: true,\n    layouts: layouts,\n    draggableHandle: `.${grabbleStyles.grabber}`,\n    breakpoints: {\n      lg: 0\n    },\n    cols: {\n      lg: 24\n    },\n    margin: [1, 1],\n    containerPadding: [10, 10],\n    rowHeight: 25,\n    onLayoutChange: onLayoutChange,\n    verticalCompact: true,\n    compactType: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: configuration.layout.keys.lateralMenuKey,\n    className: `rounded ${appStyles.gridborder}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GrabbleHeader, {\n    title: \"Options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(LateralMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    key: configuration.layout.keys.sourceEditorKey,\n    className: `rounded ${appStyles.gridborder}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GrabbleHeader, {\n    title: \"1. Paste your JSON:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: 'loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SourceEditor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    key: configuration.layout.keys.queryEditorKey,\n    className: `rounded ${appStyles.gridborder}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GrabbleHeader, {\n    title: `2. Type your ${mode} query:`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: 'loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(QueryEditor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    key: configuration.layout.keys.outputKey,\n    className: `rounded ${appStyles.gridborder}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(GrabbleHeader, {\n    title: \"3. View your results:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: 'loading...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Output, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default connect(state => ({\n  mode: getQueryMode(state),\n  layouts: getLayouts(state)\n}), {\n  updateGridLayouts: updateLayouts\n})(withPerformance(App, 'App'));","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/ui/src/components/App.tsx"],"names":["updateLayouts","configuration","withPerformance","React","lazy","Suspense","Responsive","WidthProvider","connect","ToastContainer","getLayouts","getQueryMode","appStyles","GrabbleHeader","grabbleStyles","Header","LateralMenu","ResponsiveGridLayout","SourceEditor","Output","QueryEditor","App","mode","layouts","updateGridLayouts","onLayoutChange","_","newLayouts","grabber","lg","layout","keys","lateralMenuKey","gridborder","sourceEditorKey","queryEditorKey","outputKey","state"],"mappings":";AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,QAA9B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAaC,IAAb,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,mBAA1C;AACA,OAAO,kCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,oBAAoB,GAAGV,aAAa,CAACD,UAAD,CAA1C;AACA,MAAMY,YAAY,GAAGd,IAAI,CAAC,MAAM;AAAO;AAAuC,gCAA9C,CAAP,CAAzB;AACA,MAAMe,MAAM,GAAGf,IAAI,CAAC,MAAM;AAAO;AAAiC,0BAAxC,CAAP,CAAnB;AACA,MAAMgB,WAAW,GAAGhB,IAAI,CAAC,MAAM;AAAO;AAAsC,8BAA7C,CAAP,CAAxB;;AAOA,MAAMiB,GAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA0C;AAC7D,QAAMC,cAAc,GAAG,CAACC,CAAD,EAA8BC,UAA9B,KAAsE;AACzFH,IAAAA,iBAAiB,CAACG,UAAD,CAAjB;AACH,GAFD;;AAGA,sBACI,uDACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,eAEI,oBAAC,oBAAD;AACI,IAAA,QAAQ,EAAE,IADd;AAEI,IAAA,SAAS,EAAC,QAFd;AAGI,IAAA,WAAW,EAAE,IAHjB;AAII,IAAA,OAAO,EAAEJ,OAJb;AAKI,IAAA,eAAe,EAAG,IAAGT,aAAa,CAACc,OAAQ,EAL/C;AAMI,IAAA,WAAW,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN,KANjB;AAOI,IAAA,IAAI,EAAE;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAPV;AAQI,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CARZ;AASI,IAAA,gBAAgB,EAAE,CAAC,EAAD,EAAK,EAAL,CATtB;AAUI,IAAA,SAAS,EAAE,EAVf;AAWI,IAAA,cAAc,EAAEJ,cAXpB;AAYI,IAAA,eAAe,EAAE,IAZrB;AAaI,IAAA,WAAW,EAAC,UAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAeI;AAAK,IAAA,GAAG,EAAExB,aAAa,CAAC6B,MAAd,CAAqBC,IAArB,CAA0BC,cAApC;AAAoD,IAAA,SAAS,EAAG,WAAUpB,SAAS,CAACqB,UAAW,EAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAfJ,eAoBI;AAAK,IAAA,GAAG,EAAEhC,aAAa,CAAC6B,MAAd,CAAqBC,IAArB,CAA0BG,eAApC;AAAqD,IAAA,SAAS,EAAG,WAAUtB,SAAS,CAACqB,UAAW,EAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CApBJ,eA2BI;AAAK,IAAA,GAAG,EAAEhC,aAAa,CAAC6B,MAAd,CAAqBC,IAArB,CAA0BI,cAApC;AAAoD,IAAA,SAAS,EAAG,WAAUvB,SAAS,CAACqB,UAAW,EAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAG,gBAAeX,IAAK,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CA3BJ,eAkCI;AAAK,IAAA,GAAG,EAAErB,aAAa,CAAC6B,MAAd,CAAqBC,IAArB,CAA0BK,SAApC;AAA+C,IAAA,SAAS,EAAG,WAAUxB,SAAS,CAACqB,UAAW,EAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CAlCJ,CAFJ,CAFJ,eA+CI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CJ,CADJ;AAmDH,CAvDD;;AAyDA,eAAezB,OAAO,CAAC6B,KAAK,KAAK;AAAEf,EAAAA,IAAI,EAAEX,YAAY,CAAC0B,KAAD,CAApB;AAA6Bd,EAAAA,OAAO,EAAEb,UAAU,CAAC2B,KAAD;AAAhD,CAAL,CAAN,EAAuE;AACzFb,EAAAA,iBAAiB,EAAExB;AADsE,CAAvE,CAAP,CAEZE,eAAe,CAACmB,GAAD,EAAM,KAAN,CAFH,CAAf","sourcesContent":["import { updateLayouts } from 'actions/actions'\nimport { configuration } from 'config'\nimport { withPerformance } from 'core/logging/performance'\nimport * as React from 'react'\nimport { FC, lazy, Suspense } from 'react'\nimport { Responsive, WidthProvider } from 'react-grid-layout'\nimport 'react-grid-layout/css/styles.css'\nimport { connect } from 'react-redux'\nimport { ToastContainer } from 'react-toastify'\nimport { QueryMode } from 'state/State'\nimport { getLayouts, getQueryMode } from 'store/selectors'\nimport appStyles from './App.module.scss'\nimport { GrabbleHeader } from './common/GrabbleHeader'\nimport grabbleStyles from './common/GrabbleHeader.module.scss'\nimport Header from './Header'\nimport LateralMenu from './LateralMenu'\n\nconst ResponsiveGridLayout = WidthProvider(Responsive)\nconst SourceEditor = lazy(() => import(/* webpackChunkName: \"SourceEditor\" */ 'components/source/SourceEditor'))\nconst Output = lazy(() => import(/* webpackChunkName: \"Output\" */ 'components/output/Output'))\nconst QueryEditor = lazy(() => import(/* webpackChunkName: \"QueryEditor\" */ 'components/query/QueryEditor'))\n\ntype Props = {\n    mode: QueryMode\n    layouts: ReactGridLayout.Layouts\n    updateGridLayouts: typeof updateLayouts\n}\nconst App: FC<Props> = ({ mode, layouts, updateGridLayouts }) => {\n    const onLayoutChange = (_: ReactGridLayout.Layout[], newLayouts: ReactGridLayout.Layouts) => {\n        updateGridLayouts(newLayouts)\n    }\n    return (\n        <>\n            <Header />\n            <div className=\"container-fluid\">\n                <h1 className=\"my-5\">Paste your JSON and Query it.</h1>\n                <ResponsiveGridLayout\n                    autoSize={true}\n                    className=\"layout\"\n                    isResizable={true}\n                    layouts={layouts}\n                    draggableHandle={`.${grabbleStyles.grabber}`}\n                    breakpoints={{ lg: 0 }}\n                    cols={{ lg: 24 }}\n                    margin={[1, 1]}\n                    containerPadding={[10, 10]}\n                    rowHeight={25}\n                    onLayoutChange={onLayoutChange}\n                    verticalCompact={true}\n                    compactType=\"vertical\"\n                >\n                    <div key={configuration.layout.keys.lateralMenuKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"Options\">\n                            <LateralMenu />\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.sourceEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"1. Paste your JSON:\">\n                            <Suspense fallback={'loading...'}>\n                                <SourceEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.queryEditorKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title={`2. Type your ${mode} query:`}>\n                            <Suspense fallback={'loading...'}>\n                                <QueryEditor />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                    <div key={configuration.layout.keys.outputKey} className={`rounded ${appStyles.gridborder}`}>\n                        <GrabbleHeader title=\"3. View your results:\">\n                            <Suspense fallback={'loading...'}>\n                                <Output />\n                            </Suspense>\n                        </GrabbleHeader>\n                    </div>\n                </ResponsiveGridLayout>\n            </div>\n            <ToastContainer />\n        </>\n    )\n}\n\nexport default connect(state => ({ mode: getQueryMode(state), layouts: getLayouts(state) }), {\n    updateGridLayouts: updateLayouts,\n})(withPerformance(App, 'App'))\n"]},"metadata":{},"sourceType":"module"}