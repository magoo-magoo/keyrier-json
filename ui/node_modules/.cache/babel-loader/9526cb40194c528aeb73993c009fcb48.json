{"ast":null,"code":"import { __assign } from \"tslib\";\n/* eslint-disable */\n\nimport { useEffect, useState } from 'react';\nimport { off, on } from './util';\n\nvar getConnection = function () {\n  if (typeof navigator !== 'object') {\n    return null;\n  }\n\n  var nav = navigator;\n  return nav.connection || nav.mozConnection || nav.webkitConnection;\n};\n\nvar getConnectionState = function () {\n  var connection = getConnection();\n\n  if (!connection) {\n    return {};\n  }\n\n  var downlink = connection.downlink,\n      downlinkMax = connection.downlinkMax,\n      effectiveType = connection.effectiveType,\n      type = connection.type,\n      rtt = connection.rtt;\n  return {\n    downlink: downlink,\n    downlinkMax: downlinkMax,\n    effectiveType: effectiveType,\n    type: type,\n    rtt: rtt\n  };\n};\n\nvar useNetwork = function (initialState) {\n  if (initialState === void 0) {\n    initialState = {};\n  }\n\n  var _a = useState(initialState),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    var localState = state;\n\n    var localSetState = function (patch) {\n      localState = __assign(__assign({}, localState), patch);\n      setState(localState);\n    };\n\n    var connection = getConnection();\n\n    var onOnline = function () {\n      localSetState({\n        online: true,\n        since: new Date()\n      });\n    };\n\n    var onOffline = function () {\n      localSetState({\n        online: false,\n        since: new Date()\n      });\n    };\n\n    var onConnectionChange = function () {\n      localSetState(getConnectionState());\n    };\n\n    on(window, 'online', onOnline);\n    on(window, 'offline', onOffline);\n\n    if (connection) {\n      on(connection, 'change', onConnectionChange);\n      localSetState(__assign(__assign(__assign({}, state), {\n        online: navigator.onLine,\n        since: undefined\n      }), getConnectionState()));\n    }\n\n    return function () {\n      off(window, 'online', onOnline);\n      off(window, 'offline', onOffline);\n\n      if (connection) {\n        off(connection, 'change', onConnectionChange);\n      }\n    };\n  }, []);\n  return state;\n};\n\nexport default useNetwork;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useNetwork.js"],"names":["__assign","useEffect","useState","off","on","getConnection","navigator","nav","connection","mozConnection","webkitConnection","getConnectionState","downlink","downlinkMax","effectiveType","type","rtt","useNetwork","initialState","_a","state","setState","localState","localSetState","patch","onOnline","online","since","Date","onOffline","onConnectionChange","window","onLine","undefined"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA;;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,EAAd,QAAwB,QAAxB;;AACA,IAAIC,aAAa,GAAG,YAAY;AAC5B,MAAI,OAAOC,SAAP,KAAqB,QAAzB,EAAmC;AAC/B,WAAO,IAAP;AACH;;AACD,MAAIC,GAAG,GAAGD,SAAV;AACA,SAAOC,GAAG,CAACC,UAAJ,IAAkBD,GAAG,CAACE,aAAtB,IAAuCF,GAAG,CAACG,gBAAlD;AACH,CAND;;AAOA,IAAIC,kBAAkB,GAAG,YAAY;AACjC,MAAIH,UAAU,GAAGH,aAAa,EAA9B;;AACA,MAAI,CAACG,UAAL,EAAiB;AACb,WAAO,EAAP;AACH;;AACD,MAAII,QAAQ,GAAGJ,UAAU,CAACI,QAA1B;AAAA,MAAoCC,WAAW,GAAGL,UAAU,CAACK,WAA7D;AAAA,MAA0EC,aAAa,GAAGN,UAAU,CAACM,aAArG;AAAA,MAAoHC,IAAI,GAAGP,UAAU,CAACO,IAAtI;AAAA,MAA4IC,GAAG,GAAGR,UAAU,CAACQ,GAA7J;AACA,SAAO;AACHJ,IAAAA,QAAQ,EAAEA,QADP;AAEHC,IAAAA,WAAW,EAAEA,WAFV;AAGHC,IAAAA,aAAa,EAAEA,aAHZ;AAIHC,IAAAA,IAAI,EAAEA,IAJH;AAKHC,IAAAA,GAAG,EAAEA;AALF,GAAP;AAOH,CAbD;;AAcA,IAAIC,UAAU,GAAG,UAAUC,YAAV,EAAwB;AACrC,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,IAAAA,YAAY,GAAG,EAAf;AAAoB;;AACnD,MAAIC,EAAE,GAAGjB,QAAQ,CAACgB,YAAD,CAAjB;AAAA,MAAiCE,KAAK,GAAGD,EAAE,CAAC,CAAD,CAA3C;AAAA,MAAgDE,QAAQ,GAAGF,EAAE,CAAC,CAAD,CAA7D;;AACAlB,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIqB,UAAU,GAAGF,KAAjB;;AACA,QAAIG,aAAa,GAAG,UAAUC,KAAV,EAAiB;AACjCF,MAAAA,UAAU,GAAGtB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKsB,UAAL,CAAT,EAA2BE,KAA3B,CAArB;AACAH,MAAAA,QAAQ,CAACC,UAAD,CAAR;AACH,KAHD;;AAIA,QAAId,UAAU,GAAGH,aAAa,EAA9B;;AACA,QAAIoB,QAAQ,GAAG,YAAY;AACvBF,MAAAA,aAAa,CAAC;AACVG,QAAAA,MAAM,EAAE,IADE;AAEVC,QAAAA,KAAK,EAAE,IAAIC,IAAJ;AAFG,OAAD,CAAb;AAIH,KALD;;AAMA,QAAIC,SAAS,GAAG,YAAY;AACxBN,MAAAA,aAAa,CAAC;AACVG,QAAAA,MAAM,EAAE,KADE;AAEVC,QAAAA,KAAK,EAAE,IAAIC,IAAJ;AAFG,OAAD,CAAb;AAIH,KALD;;AAMA,QAAIE,kBAAkB,GAAG,YAAY;AACjCP,MAAAA,aAAa,CAACZ,kBAAkB,EAAnB,CAAb;AACH,KAFD;;AAGAP,IAAAA,EAAE,CAAC2B,MAAD,EAAS,QAAT,EAAmBN,QAAnB,CAAF;AACArB,IAAAA,EAAE,CAAC2B,MAAD,EAAS,SAAT,EAAoBF,SAApB,CAAF;;AACA,QAAIrB,UAAJ,EAAgB;AACZJ,MAAAA,EAAE,CAACI,UAAD,EAAa,QAAb,EAAuBsB,kBAAvB,CAAF;AACAP,MAAAA,aAAa,CAACvB,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKoB,KAAL,CAAT,EAAsB;AAAEM,QAAAA,MAAM,EAAEpB,SAAS,CAAC0B,MAApB;AAA4BL,QAAAA,KAAK,EAAEM;AAAnC,OAAtB,CAAT,EAAgFtB,kBAAkB,EAAlG,CAAT,CAAb;AACH;;AACD,WAAO,YAAY;AACfR,MAAAA,GAAG,CAAC4B,MAAD,EAAS,QAAT,EAAmBN,QAAnB,CAAH;AACAtB,MAAAA,GAAG,CAAC4B,MAAD,EAAS,SAAT,EAAoBF,SAApB,CAAH;;AACA,UAAIrB,UAAJ,EAAgB;AACZL,QAAAA,GAAG,CAACK,UAAD,EAAa,QAAb,EAAuBsB,kBAAvB,CAAH;AACH;AACJ,KAND;AAOH,GAnCQ,EAmCN,EAnCM,CAAT;AAoCA,SAAOV,KAAP;AACH,CAxCD;;AAyCA,eAAeH,UAAf","sourcesContent":["import { __assign } from \"tslib\";\n/* eslint-disable */\nimport { useEffect, useState } from 'react';\nimport { off, on } from './util';\nvar getConnection = function () {\n    if (typeof navigator !== 'object') {\n        return null;\n    }\n    var nav = navigator;\n    return nav.connection || nav.mozConnection || nav.webkitConnection;\n};\nvar getConnectionState = function () {\n    var connection = getConnection();\n    if (!connection) {\n        return {};\n    }\n    var downlink = connection.downlink, downlinkMax = connection.downlinkMax, effectiveType = connection.effectiveType, type = connection.type, rtt = connection.rtt;\n    return {\n        downlink: downlink,\n        downlinkMax: downlinkMax,\n        effectiveType: effectiveType,\n        type: type,\n        rtt: rtt,\n    };\n};\nvar useNetwork = function (initialState) {\n    if (initialState === void 0) { initialState = {}; }\n    var _a = useState(initialState), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var localState = state;\n        var localSetState = function (patch) {\n            localState = __assign(__assign({}, localState), patch);\n            setState(localState);\n        };\n        var connection = getConnection();\n        var onOnline = function () {\n            localSetState({\n                online: true,\n                since: new Date(),\n            });\n        };\n        var onOffline = function () {\n            localSetState({\n                online: false,\n                since: new Date(),\n            });\n        };\n        var onConnectionChange = function () {\n            localSetState(getConnectionState());\n        };\n        on(window, 'online', onOnline);\n        on(window, 'offline', onOffline);\n        if (connection) {\n            on(connection, 'change', onConnectionChange);\n            localSetState(__assign(__assign(__assign({}, state), { online: navigator.onLine, since: undefined }), getConnectionState()));\n        }\n        return function () {\n            off(window, 'online', onOnline);\n            off(window, 'offline', onOffline);\n            if (connection) {\n                off(connection, 'change', onConnectionChange);\n            }\n        };\n    }, []);\n    return state;\n};\nexport default useNetwork;\n"]},"metadata":{},"sourceType":"module"}