{"ast":null,"code":"import { useRef } from 'react';\nimport useMount from './useMount';\nimport useSetState from './useSetState';\nvar voices = typeof window === 'object' && typeof window.speechSynthesis === 'object' ? window.speechSynthesis.getVoices() : [];\n\nvar useSpeech = function (text, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _a = useSetState({\n    isPlaying: false,\n    lang: opts.lang || 'default',\n    voice: opts.voice || voices[0],\n    rate: opts.rate || 1,\n    pitch: opts.pitch || 1,\n    volume: opts.volume || 1\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var uterranceRef = useRef(null);\n  useMount(function () {\n    var utterance = new SpeechSynthesisUtterance(text);\n    opts.lang && (utterance.lang = opts.lang);\n    opts.voice && (utterance.voice = opts.voice);\n    utterance.rate = opts.rate || 1;\n    utterance.pitch = opts.pitch || 1;\n    utterance.volume = opts.volume || 1;\n\n    utterance.onstart = function () {\n      return setState({\n        isPlaying: true\n      });\n    };\n\n    utterance.onresume = function () {\n      return setState({\n        isPlaying: true\n      });\n    };\n\n    utterance.onend = function () {\n      return setState({\n        isPlaying: false\n      });\n    };\n\n    utterance.onpause = function () {\n      return setState({\n        isPlaying: false\n      });\n    };\n\n    uterranceRef.current = utterance;\n    window.speechSynthesis.speak(uterranceRef.current);\n  });\n  return state;\n};\n\nexport default useSpeech;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useSpeech.js"],"names":["useRef","useMount","useSetState","voices","window","speechSynthesis","getVoices","useSpeech","text","opts","_a","isPlaying","lang","voice","rate","pitch","volume","state","setState","uterranceRef","utterance","SpeechSynthesisUtterance","onstart","onresume","onend","onpause","current","speak"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,IAAIC,MAAM,GAAG,OAAOC,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAM,CAACC,eAAd,KAAkC,QAAhE,GAA2ED,MAAM,CAACC,eAAP,CAAuBC,SAAvB,EAA3E,GAAgH,EAA7H;;AACA,IAAIC,SAAS,GAAG,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAClC,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,IAAAA,IAAI,GAAG,EAAP;AAAY;;AACnC,MAAIC,EAAE,GAAGR,WAAW,CAAC;AACjBS,IAAAA,SAAS,EAAE,KADM;AAEjBC,IAAAA,IAAI,EAAEH,IAAI,CAACG,IAAL,IAAa,SAFF;AAGjBC,IAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAL,IAAcV,MAAM,CAAC,CAAD,CAHV;AAIjBW,IAAAA,IAAI,EAAEL,IAAI,CAACK,IAAL,IAAa,CAJF;AAKjBC,IAAAA,KAAK,EAAEN,IAAI,CAACM,KAAL,IAAc,CALJ;AAMjBC,IAAAA,MAAM,EAAEP,IAAI,CAACO,MAAL,IAAe;AANN,GAAD,CAApB;AAAA,MAOIC,KAAK,GAAGP,EAAE,CAAC,CAAD,CAPd;AAAA,MAOmBQ,QAAQ,GAAGR,EAAE,CAAC,CAAD,CAPhC;;AAQA,MAAIS,YAAY,GAAGnB,MAAM,CAAC,IAAD,CAAzB;AACAC,EAAAA,QAAQ,CAAC,YAAY;AACjB,QAAImB,SAAS,GAAG,IAAIC,wBAAJ,CAA6Bb,IAA7B,CAAhB;AACAC,IAAAA,IAAI,CAACG,IAAL,KAAcQ,SAAS,CAACR,IAAV,GAAiBH,IAAI,CAACG,IAApC;AACAH,IAAAA,IAAI,CAACI,KAAL,KAAeO,SAAS,CAACP,KAAV,GAAkBJ,IAAI,CAACI,KAAtC;AACAO,IAAAA,SAAS,CAACN,IAAV,GAAiBL,IAAI,CAACK,IAAL,IAAa,CAA9B;AACAM,IAAAA,SAAS,CAACL,KAAV,GAAkBN,IAAI,CAACM,KAAL,IAAc,CAAhC;AACAK,IAAAA,SAAS,CAACJ,MAAV,GAAmBP,IAAI,CAACO,MAAL,IAAe,CAAlC;;AACAI,IAAAA,SAAS,CAACE,OAAV,GAAoB,YAAY;AAAE,aAAOJ,QAAQ,CAAC;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAf;AAAuC,KAAzE;;AACAS,IAAAA,SAAS,CAACG,QAAV,GAAqB,YAAY;AAAE,aAAOL,QAAQ,CAAC;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAf;AAAuC,KAA1E;;AACAS,IAAAA,SAAS,CAACI,KAAV,GAAkB,YAAY;AAAE,aAAON,QAAQ,CAAC;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAf;AAAwC,KAAxE;;AACAS,IAAAA,SAAS,CAACK,OAAV,GAAoB,YAAY;AAAE,aAAOP,QAAQ,CAAC;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAf;AAAwC,KAA1E;;AACAQ,IAAAA,YAAY,CAACO,OAAb,GAAuBN,SAAvB;AACAhB,IAAAA,MAAM,CAACC,eAAP,CAAuBsB,KAAvB,CAA6BR,YAAY,CAACO,OAA1C;AACH,GAbO,CAAR;AAcA,SAAOT,KAAP;AACH,CA1BD;;AA2BA,eAAeV,SAAf","sourcesContent":["import { useRef } from 'react';\nimport useMount from './useMount';\nimport useSetState from './useSetState';\nvar voices = typeof window === 'object' && typeof window.speechSynthesis === 'object' ? window.speechSynthesis.getVoices() : [];\nvar useSpeech = function (text, opts) {\n    if (opts === void 0) { opts = {}; }\n    var _a = useSetState({\n        isPlaying: false,\n        lang: opts.lang || 'default',\n        voice: opts.voice || voices[0],\n        rate: opts.rate || 1,\n        pitch: opts.pitch || 1,\n        volume: opts.volume || 1,\n    }), state = _a[0], setState = _a[1];\n    var uterranceRef = useRef(null);\n    useMount(function () {\n        var utterance = new SpeechSynthesisUtterance(text);\n        opts.lang && (utterance.lang = opts.lang);\n        opts.voice && (utterance.voice = opts.voice);\n        utterance.rate = opts.rate || 1;\n        utterance.pitch = opts.pitch || 1;\n        utterance.volume = opts.volume || 1;\n        utterance.onstart = function () { return setState({ isPlaying: true }); };\n        utterance.onresume = function () { return setState({ isPlaying: true }); };\n        utterance.onend = function () { return setState({ isPlaying: false }); };\n        utterance.onpause = function () { return setState({ isPlaying: false }); };\n        uterranceRef.current = utterance;\n        window.speechSynthesis.speak(uterranceRef.current);\n    });\n    return state;\n};\nexport default useSpeech;\n"]},"metadata":{},"sourceType":"module"}