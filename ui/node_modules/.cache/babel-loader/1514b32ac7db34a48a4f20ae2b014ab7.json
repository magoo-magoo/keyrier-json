{"ast":null,"code":"import { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, PROD_TYPE } from \"../../grammar/lookahead\";\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\n\nvar LooksAhead =\n/** @class */\nfunction () {\n  function LooksAhead() {}\n\n  LooksAhead.prototype.initLooksAhead = function (config) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\") ? config.dynamicTokensEnabled : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n    this.maxLookahead = has(config, \"maxLookahead\") ? config.maxLookahead : DEFAULT_PARSER_CONFIG.maxLookahead;\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n\n    this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : []; // Performance optimization on newer engines that support ES6 Map\n    // For larger Maps this is slightly faster than using a plain object (array in our case).\n\n    /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n\n    if (isES2015MapSupported()) {\n      this.getLaFuncFromCache = this.getLaFuncFromMap;\n      this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n    } else {\n      this.getLaFuncFromCache = this.getLaFuncFromObj;\n      this.setLaFuncCache = this.setLaFuncUsingObj;\n    }\n  };\n\n  LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n    var _this = this;\n\n    forEach(rules, function (currRule) {\n      _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n        var _a = collectMethods(currRule),\n            alternation = _a.alternation,\n            repetition = _a.repetition,\n            option = _a.option,\n            repetitionMandatory = _a.repetitionMandatory,\n            repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator,\n            repetitionWithSeparator = _a.repetitionWithSeparator;\n\n        forEach(alternation, function (currProd) {\n          var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n\n          _this.TRACE_INIT(\"\" + getProductionDslName(currProd) + prodIdx, function () {\n            var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n\n            _this.setLaFuncCache(key, laFunc);\n          });\n        });\n        forEach(repetition, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(option, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatory, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatoryWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n      });\n    });\n  };\n\n  LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n    var _this = this;\n\n    this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n      var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n      var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n\n      _this.setLaFuncCache(key, laFunc);\n    });\n  };\n\n  LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n    return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n  };\n\n  LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n  }; // this actually returns a number, but it is always used as a string (object prop key)\n\n\n  LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n    var currRuleShortName = this.getLastExplicitRuleShortName();\n    return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n  };\n  /* istanbul ignore next */\n\n\n  LooksAhead.prototype.getLaFuncFromCache = function (key) {\n    return undefined;\n  };\n\n  LooksAhead.prototype.getLaFuncFromMap = function (key) {\n    return this.lookAheadFuncsCache.get(key);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n\n\n  LooksAhead.prototype.getLaFuncFromObj = function (key) {\n    return this.lookAheadFuncsCache[key];\n  };\n  /* istanbul ignore next */\n\n\n  LooksAhead.prototype.setLaFuncCache = function (key, value) {};\n\n  LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n    this.lookAheadFuncsCache.set(key, value);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n\n\n  LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n    this.lookAheadFuncsCache[key] = value;\n  };\n\n  return LooksAhead;\n}();\n\nexport { LooksAhead };","map":{"version":3,"sources":["../../../../../src/parse/parser/traits/looksahead.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, PROD_TYPE } from \"../../grammar/lookahead\";\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nvar LooksAhead = /** @class */ (function () {\n    function LooksAhead() {\n    }\n    LooksAhead.prototype.initLooksAhead = function (config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n        this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : [];\n        // Performance optimization on newer engines that support ES6 Map\n        // For larger Maps this is slightly faster than using a plain object (array in our case).\n        /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n        if (isES2015MapSupported()) {\n            this.getLaFuncFromCache = this.getLaFuncFromMap;\n            this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n        }\n        else {\n            this.getLaFuncFromCache = this.getLaFuncFromObj;\n            this.setLaFuncCache = this.setLaFuncUsingObj;\n        }\n    };\n    LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n        var _this = this;\n        forEach(rules, function (currRule) {\n            _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n                var _a = collectMethods(currRule), alternation = _a.alternation, repetition = _a.repetition, option = _a.option, repetitionMandatory = _a.repetitionMandatory, repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator, repetitionWithSeparator = _a.repetitionWithSeparator;\n                forEach(alternation, function (currProd) {\n                    var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    _this.TRACE_INIT(\"\" + getProductionDslName(currProd) + prodIdx, function () {\n                        var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n                        var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        _this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    };\n    LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        var _this = this;\n        this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n            var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            _this.setLaFuncCache(key, laFunc);\n        });\n    };\n    LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n        return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n    };\n    LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n        return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n    };\n    // this actually returns a number, but it is always used as a string (object prop key)\n    LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.getLaFuncFromCache = function (key) {\n        return undefined;\n    };\n    LooksAhead.prototype.getLaFuncFromMap = function (key) {\n        return this.lookAheadFuncsCache.get(key);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.getLaFuncFromObj = function (key) {\n        return this.lookAheadFuncsCache[key];\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.setLaFuncCache = function (key, value) { };\n    LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n        this.lookAheadFuncsCache[key] = value;\n    };\n    return LooksAhead;\n}());\nexport { LooksAhead };\n//# sourceMappingURL=looksahead.js.map"]},"metadata":{},"sourceType":"module"}