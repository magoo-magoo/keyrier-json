{"ast":null,"code":"ace.define(\"ace/mode/coffee_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  oop.inherits(CoffeeHighlightRules, TextHighlightRules);\n\n  function CoffeeHighlightRules() {\n    var identifier = \"[$A-Za-z_\\\\x7f-\\\\uffff][$\\\\w\\\\x7f-\\\\uffff]*\";\n    var keywords = \"this|throw|then|try|typeof|super|switch|return|break|by|continue|\" + \"catch|class|in|instanceof|is|isnt|if|else|extends|for|own|\" + \"finally|function|while|when|new|no|not|delete|debugger|do|loop|of|off|\" + \"or|on|unless|until|and|yes|yield|export|import|default\";\n    var langConstant = \"true|false|null|undefined|NaN|Infinity\";\n    var illegal = \"case|const|function|var|void|with|enum|implements|\" + \"interface|let|package|private|protected|public|static\";\n    var supportClass = \"Array|Boolean|Date|Function|Number|Object|RegExp|ReferenceError|String|\" + \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" + \"SyntaxError|TypeError|URIError|\" + \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" + \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray\";\n    var supportFunction = \"Math|JSON|isNaN|isFinite|parseInt|parseFloat|encodeURI|\" + \"encodeURIComponent|decodeURI|decodeURIComponent|String|\";\n    var variableLanguage = \"window|arguments|prototype|document\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"constant.language\": langConstant,\n      \"invalid.illegal\": illegal,\n      \"language.support.class\": supportClass,\n      \"language.support.function\": supportFunction,\n      \"variable.language\": variableLanguage\n    }, \"identifier\");\n    var functionRule = {\n      token: [\"paren.lparen\", \"variable.parameter\", \"paren.rparen\", \"text\", \"storage.type\"],\n      regex: /(?:(\\()((?:\"[^\")]*?\"|'[^')]*?'|\\/[^\\/)]*?\\/|[^()\"'\\/])*?)(\\))(\\s*))?([\\-=]>)/.source\n    };\n    var stringEscape = /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)/;\n    this.$rules = {\n      start: [{\n        token: \"constant.numeric\",\n        regex: \"(?:0x[\\\\da-fA-F]+|(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?)\"\n      }, {\n        stateName: \"qdoc\",\n        token: \"string\",\n        regex: \"'''\",\n        next: [{\n          token: \"string\",\n          regex: \"'''\",\n          next: \"start\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: stringEscape\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        stateName: \"qqdoc\",\n        token: \"string\",\n        regex: '\"\"\"',\n        next: [{\n          token: \"string\",\n          regex: '\"\"\"',\n          next: \"start\"\n        }, {\n          token: \"paren.string\",\n          regex: '#{',\n          push: \"start\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: stringEscape\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        stateName: \"qstring\",\n        token: \"string\",\n        regex: \"'\",\n        next: [{\n          token: \"string\",\n          regex: \"'\",\n          next: \"start\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: stringEscape\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        stateName: \"qqstring\",\n        token: \"string.start\",\n        regex: '\"',\n        next: [{\n          token: \"string.end\",\n          regex: '\"',\n          next: \"start\"\n        }, {\n          token: \"paren.string\",\n          regex: '#{',\n          push: \"start\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: stringEscape\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        stateName: \"js\",\n        token: \"string\",\n        regex: \"`\",\n        next: [{\n          token: \"string\",\n          regex: \"`\",\n          next: \"start\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: stringEscape\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        regex: \"[{}]\",\n        onMatch: function (val, state, stack) {\n          this.next = \"\";\n\n          if (val == \"{\" && stack.length) {\n            stack.unshift(\"start\", state);\n            return \"paren\";\n          }\n\n          if (val == \"}\" && stack.length) {\n            stack.shift();\n            this.next = stack.shift() || \"\";\n            if (this.next.indexOf(\"string\") != -1) return \"paren.string\";\n          }\n\n          return \"paren\";\n        }\n      }, {\n        token: \"string.regex\",\n        regex: \"///\",\n        next: \"heregex\"\n      }, {\n        token: \"string.regex\",\n        regex: /(?:\\/(?![\\s=])[^[\\/\\n\\\\]*(?:(?:\\\\[\\s\\S]|\\[[^\\]\\n\\\\]*(?:\\\\[\\s\\S][^\\]\\n\\\\]*)*])[^[\\/\\n\\\\]*)*\\/)(?:[imgy]{0,4})(?!\\w)/\n      }, {\n        token: \"comment\",\n        regex: \"###(?!#)\",\n        next: \"comment\"\n      }, {\n        token: \"comment\",\n        regex: \"#.*\"\n      }, {\n        token: [\"punctuation.operator\", \"text\", \"identifier\"],\n        regex: \"(\\\\.)(\\\\s*)(\" + illegal + \")\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\.{1,3}\"\n      }, {\n        token: [\"keyword\", \"text\", \"language.support.class\", \"text\", \"keyword\", \"text\", \"language.support.class\"],\n        regex: \"(class)(\\\\s+)(\" + identifier + \")(?:(\\\\s+)(extends)(\\\\s+)(\" + identifier + \"))?\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\"].concat(functionRule.token),\n        regex: \"(\" + identifier + \")(\\\\s*)([=:])(\\\\s*)\" + functionRule.regex\n      }, functionRule, {\n        token: \"variable\",\n        regex: \"@(?:\" + identifier + \")?\"\n      }, {\n        token: keywordMapper,\n        regex: identifier\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\,|\\\\.\"\n      }, {\n        token: \"storage.type\",\n        regex: \"[\\\\-=]>\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"(?:[-+*/%<>&|^!?=]=|>>>=?|\\\\-\\\\-|\\\\+\\\\+|::|&&=|\\\\|\\\\|=|<<=|>>=|\\\\?\\\\.|\\\\.{2,3}|[!*+-=><])\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[({[]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]})]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      heregex: [{\n        token: \"string.regex\",\n        regex: '.*?///[imgy]{0,4}',\n        next: \"start\"\n      }, {\n        token: \"comment.regex\",\n        regex: \"\\\\s+(?:#.*)?\"\n      }, {\n        token: \"string.regex\",\n        regex: \"\\\\S+\"\n      }],\n      comment: [{\n        token: \"comment\",\n        regex: '###',\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.normalizeRules();\n  }\n\n  exports.CoffeeHighlightRules = CoffeeHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/coffee\", [\"require\", \"exports\", \"module\", \"ace/mode/coffee_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/coffee\", \"ace/range\", \"ace/mode/text\", \"ace/worker/worker_client\", \"ace/lib/oop\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Rules = require(\"./coffee_highlight_rules\").CoffeeHighlightRules;\n\n  var Outdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var FoldMode = require(\"./folding/coffee\").FoldMode;\n\n  var Range = require(\"../range\").Range;\n\n  var TextMode = require(\"./text\").Mode;\n\n  var WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n\n  var oop = require(\"../lib/oop\");\n\n  function Mode() {\n    this.HighlightRules = Rules;\n    this.$outdent = new Outdent();\n    this.foldingRules = new FoldMode();\n  }\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    var indenter = /(?:[({[=:]|[-=]>|\\b(?:else|try|(?:swi|ca)tch(?:\\s+[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*)?|finally))\\s*$|^\\s*(else\\b\\s*)?(?:if|for|while|loop)\\b(?!.*\\bthen\\b)/;\n    this.lineCommentStart = \"#\";\n    this.blockComment = {\n      start: \"###\",\n      end: \"###\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n      if (!(tokens.length && tokens[tokens.length - 1].type === 'comment') && state === 'start' && indenter.test(line)) indent += tab;\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/coffee_worker\", \"Worker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n\n    this.$id = \"ace/mode/coffee\";\n    this.snippetFileId = \"ace/snippets/coffee\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/coffee\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-coffee.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","inherits","CoffeeHighlightRules","identifier","keywords","langConstant","illegal","supportClass","supportFunction","variableLanguage","keywordMapper","createKeywordMapper","functionRule","token","regex","source","stringEscape","$rules","start","stateName","next","defaultToken","push","onMatch","val","state","stack","length","unshift","shift","indexOf","concat","heregex","comment","normalizeRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","getFoldWidgetRange","session","foldStyle","range","indentationBlock","re","startLevel","search","startColumn","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","prev","prevIndent","nextIndent","foldWidgets","Rules","Outdent","TextMode","Mode","WorkerClient","HighlightRules","$outdent","foldingRules","indenter","lineCommentStart","blockComment","end","getNextLineIndent","tab","tokens","getTokenizer","getLineTokens","type","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","snippetFileId","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/coffee_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\n    var oop = require(\"../lib/oop\");\n    var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n    oop.inherits(CoffeeHighlightRules, TextHighlightRules);\n\n    function CoffeeHighlightRules() {\n        var identifier = \"[$A-Za-z_\\\\x7f-\\\\uffff][$\\\\w\\\\x7f-\\\\uffff]*\";\n\n        var keywords = (\n            \"this|throw|then|try|typeof|super|switch|return|break|by|continue|\" +\n            \"catch|class|in|instanceof|is|isnt|if|else|extends|for|own|\" +\n            \"finally|function|while|when|new|no|not|delete|debugger|do|loop|of|off|\" +\n            \"or|on|unless|until|and|yes|yield|export|import|default\"\n        );\n\n        var langConstant = (\n            \"true|false|null|undefined|NaN|Infinity\"\n        );\n\n        var illegal = (\n            \"case|const|function|var|void|with|enum|implements|\" +\n            \"interface|let|package|private|protected|public|static\"\n        );\n\n        var supportClass = (\n            \"Array|Boolean|Date|Function|Number|Object|RegExp|ReferenceError|String|\" +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" +\n            \"SyntaxError|TypeError|URIError|\"  +\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray\"\n        );\n\n        var supportFunction = (\n            \"Math|JSON|isNaN|isFinite|parseInt|parseFloat|encodeURI|\" +\n            \"encodeURIComponent|decodeURI|decodeURIComponent|String|\"\n        );\n\n        var variableLanguage = (\n            \"window|arguments|prototype|document\"\n        );\n\n        var keywordMapper = this.createKeywordMapper({\n            \"keyword\": keywords,\n            \"constant.language\": langConstant,\n            \"invalid.illegal\": illegal,\n            \"language.support.class\": supportClass,\n            \"language.support.function\": supportFunction,\n            \"variable.language\": variableLanguage\n        }, \"identifier\");\n\n        var functionRule = {\n            token: [\"paren.lparen\", \"variable.parameter\", \"paren.rparen\", \"text\", \"storage.type\"],\n            regex: /(?:(\\()((?:\"[^\")]*?\"|'[^')]*?'|\\/[^\\/)]*?\\/|[^()\"'\\/])*?)(\\))(\\s*))?([\\-=]>)/.source\n        };\n\n        var stringEscape = /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)/;\n\n        this.$rules = {\n            start : [\n                {\n                    token : \"constant.numeric\",\n                    regex : \"(?:0x[\\\\da-fA-F]+|(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?)\"\n                }, {\n                    stateName: \"qdoc\",\n                    token : \"string\", regex : \"'''\", next : [\n                        {token : \"string\", regex : \"'''\", next : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"qqdoc\",\n                    token : \"string\",\n                    regex : '\"\"\"',\n                    next : [\n                        {token : \"string\", regex : '\"\"\"', next : \"start\"},\n                        {token : \"paren.string\", regex : '#{', push : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"qstring\",\n                    token : \"string\", regex : \"'\", next : [\n                        {token : \"string\", regex : \"'\", next : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"qqstring\",\n                    token : \"string.start\", regex : '\"', next : [\n                        {token : \"string.end\", regex : '\"', next : \"start\"},\n                        {token : \"paren.string\", regex : '#{', push : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    stateName: \"js\",\n                    token : \"string\", regex : \"`\", next : [\n                        {token : \"string\", regex : \"`\", next : \"start\"},\n                        {token : \"constant.language.escape\", regex : stringEscape},\n                        {defaultToken: \"string\"}\n                    ]\n                }, {\n                    regex: \"[{}]\", onMatch: function(val, state, stack) {\n                        this.next = \"\";\n                        if (val == \"{\" && stack.length) {\n                            stack.unshift(\"start\", state);\n                            return \"paren\";\n                        }\n                        if (val == \"}\" && stack.length) {\n                            stack.shift();\n                            this.next = stack.shift() || \"\";\n                            if (this.next.indexOf(\"string\") != -1)\n                                return \"paren.string\";\n                        }\n                        return \"paren\";\n                    }\n                }, {\n                    token : \"string.regex\",\n                    regex : \"///\",\n                    next : \"heregex\"\n                }, {\n                    token : \"string.regex\",\n                    regex : /(?:\\/(?![\\s=])[^[\\/\\n\\\\]*(?:(?:\\\\[\\s\\S]|\\[[^\\]\\n\\\\]*(?:\\\\[\\s\\S][^\\]\\n\\\\]*)*])[^[\\/\\n\\\\]*)*\\/)(?:[imgy]{0,4})(?!\\w)/\n                }, {\n                    token : \"comment\",\n                    regex : \"###(?!#)\",\n                    next : \"comment\"\n                }, {\n                    token : \"comment\",\n                    regex : \"#.*\"\n                }, {\n                    token : [\"punctuation.operator\", \"text\", \"identifier\"],\n                    regex : \"(\\\\.)(\\\\s*)(\" + illegal + \")\"\n                }, {\n                    token : \"punctuation.operator\",\n                    regex : \"\\\\.{1,3}\"\n                }, {\n                    token : [\"keyword\", \"text\", \"language.support.class\",\n                     \"text\", \"keyword\", \"text\", \"language.support.class\"],\n                    regex : \"(class)(\\\\s+)(\" + identifier + \")(?:(\\\\s+)(extends)(\\\\s+)(\" + identifier + \"))?\"\n                }, {\n                    token : [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\"].concat(functionRule.token),\n                    regex : \"(\" + identifier + \")(\\\\s*)([=:])(\\\\s*)\" + functionRule.regex\n                }, \n                functionRule, \n                {\n                    token : \"variable\",\n                    regex : \"@(?:\" + identifier + \")?\"\n                }, {\n                    token: keywordMapper,\n                    regex : identifier\n                }, {\n                    token : \"punctuation.operator\",\n                    regex : \"\\\\,|\\\\.\"\n                }, {\n                    token : \"storage.type\",\n                    regex : \"[\\\\-=]>\"\n                }, {\n                    token : \"keyword.operator\",\n                    regex : \"(?:[-+*/%<>&|^!?=]=|>>>=?|\\\\-\\\\-|\\\\+\\\\+|::|&&=|\\\\|\\\\|=|<<=|>>=|\\\\?\\\\.|\\\\.{2,3}|[!*+-=><])\"\n                }, {\n                    token : \"paren.lparen\",\n                    regex : \"[({[]\"\n                }, {\n                    token : \"paren.rparen\",\n                    regex : \"[\\\\]})]\"\n                }, {\n                    token : \"text\",\n                    regex : \"\\\\s+\"\n                }],\n\n\n            heregex : [{\n                token : \"string.regex\",\n                regex : '.*?///[imgy]{0,4}',\n                next : \"start\"\n            }, {\n                token : \"comment.regex\",\n                regex : \"\\\\s+(?:#.*)?\"\n            }, {\n                token : \"string.regex\",\n                regex : \"\\\\S+\"\n            }],\n\n            comment : [{\n                token : \"comment\",\n                regex : '###',\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }]\n        };\n        this.normalizeRules();\n    }\n\n    exports.CoffeeHighlightRules = CoffeeHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/coffee\",[\"require\",\"exports\",\"module\",\"ace/mode/coffee_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/coffee\",\"ace/range\",\"ace/mode/text\",\"ace/worker/worker_client\",\"ace/lib/oop\"], function(require, exports, module) {\n\"use strict\";\n\nvar Rules = require(\"./coffee_highlight_rules\").CoffeeHighlightRules;\nvar Outdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\nvar Range = require(\"../range\").Range;\nvar TextMode = require(\"./text\").Mode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar oop = require(\"../lib/oop\");\n\nfunction Mode() {\n    this.HighlightRules = Rules;\n    this.$outdent = new Outdent();\n    this.foldingRules = new FoldMode();\n}\n\noop.inherits(Mode, TextMode);\n\n(function() {\n    var indenter = /(?:[({[=:]|[-=]>|\\b(?:else|try|(?:swi|ca)tch(?:\\s+[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*)?|finally))\\s*$|^\\s*(else\\b\\s*)?(?:if|for|while|loop)\\b(?!.*\\bthen\\b)/;\n    \n    this.lineCommentStart = \"#\";\n    this.blockComment = {start: \"###\", end: \"###\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n    \n        if (!(tokens.length && tokens[tokens.length - 1].type === 'comment') &&\n            state === 'start' && indenter.test(line))\n            indent += tab;\n        return indent;\n    };\n    \n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    \n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    \n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/coffee_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        \n        worker.on(\"annotate\", function(e) {\n            session.setAnnotations(e.data);\n        });\n        \n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n        \n        return worker;\n    };\n\n    this.$id = \"ace/mode/coffee\";\n    this.snippetFileId = \"ace/snippets/coffee\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/coffee\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}