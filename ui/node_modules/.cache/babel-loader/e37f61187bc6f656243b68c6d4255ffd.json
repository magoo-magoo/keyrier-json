{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Resizable = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n\n  function Resizable() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      slackW: 0,\n      slackH: 0\n    });\n\n    return _this;\n  }\n\n  var _proto = Resizable.prototype;\n\n  _proto.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  } // If you do this, be careful of constraints\n  ;\n\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n    if (!min && !max) return [width, height]; // Fit width & height to aspect ratio\n\n    if (this.props.lockAspectRatio) {\n      if (height === this.props.height) {\n        var ratio = this.props.width / this.props.height;\n        height = width / ratio;\n        width = height * ratio;\n      } else {\n        // Take into account vertical resize with N/S handles on locked aspect\n        // ratio. Calculate the change height-first, instead of width-first\n        var _ratio = this.props.height / this.props.width;\n\n        width = height / _ratio;\n        height = width * _ratio;\n      }\n    }\n\n    var oldW = width,\n        oldH = height; // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _this$state = this.state,\n        slackW = _this$state.slackW,\n        slackH = _this$state.slackH;\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    } // If the numbers changed, we must have introduced some slack. Record it for the next iteration.\n\n\n    slackW += oldW - width;\n    slackH += oldH - height;\n\n    if (slackW !== this.state.slackW || slackH !== this.state.slackH) {\n      this.setState({\n        slackW: slackW,\n        slackH: slackH\n      });\n    }\n\n    return [width, height];\n  }\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n      deltaX /= _this2.props.transformScale;\n      deltaY /= _this2.props.transformScale; // Axis restrictions\n\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && ['n', 's'].indexOf(axis) === -1;\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && ['e', 'w'].indexOf(axis) === -1; // reverse delta if using top or left drag handles\n\n      if (canDragX && axis[axis.length - 1] === 'w') {\n        deltaX = -deltaX;\n      }\n\n      if (canDragY && axis[0] === 'n') {\n        deltaY = -deltaY;\n      } // Update w/h\n\n\n      var width = _this2.props.width + (canDragX ? deltaX : 0);\n      var height = _this2.props.height + (canDragY ? deltaY : 0); // Early return if no change\n\n      var widthChanged = width !== _this2.props.width,\n          heightChanged = height !== _this2.props.height;\n      if (handlerName === 'onResize' && !widthChanged && !heightChanged) return;\n\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1]; // Set the appropriate state for this handler.\n\n      var newState = {};\n\n      if (handlerName === 'onResizeStart') {// nothing\n      } else if (handlerName === 'onResizeStop') {\n        newState.slackW = newState.slackH = 0;\n      } else {\n        // Early return if no change after constraints\n        if (width === _this2.props.width && height === _this2.props.height) return;\n      }\n\n      var hasCb = typeof _this2.props[handlerName] === 'function';\n\n      if (hasCb) {\n        // $FlowIgnore isn't refining this correctly to SyntheticEvent\n        if (typeof e.persist === 'function') e.persist();\n\n        _this2.setState(newState, function () {\n          return _this2.props[handlerName](e, {\n            node: node,\n            size: {\n              width: width,\n              height: height\n            },\n            handle: axis\n          });\n        });\n      } else {\n        _this2.setState(newState);\n      }\n    };\n  };\n\n  _proto.renderResizeHandle = function renderResizeHandle(resizeHandle) {\n    var handle = this.props.handle;\n\n    if (handle) {\n      if (typeof handle === 'function') {\n        return handle(resizeHandle);\n      }\n\n      return handle;\n    }\n\n    return _react.default.createElement(\"span\", {\n      className: \"react-resizable-handle react-resizable-handle-\" + resizeHandle\n    });\n  };\n\n  _proto.render = function render() {\n    var _this3 = this; // eslint-disable-next-line no-unused-vars\n\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        draggableOpts = _this$props.draggableOpts,\n        width = _this$props.width,\n        height = _this$props.height,\n        handleSize = _this$props.handleSize,\n        lockAspectRatio = _this$props.lockAspectRatio,\n        axis = _this$props.axis,\n        minConstraints = _this$props.minConstraints,\n        maxConstraints = _this$props.maxConstraints,\n        onResize = _this$props.onResize,\n        onResizeStop = _this$props.onResizeStop,\n        onResizeStart = _this$props.onResizeStart,\n        resizeHandles = _this$props.resizeHandles,\n        transformScale = _this$props.transformScale,\n        p = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"draggableOpts\", \"width\", \"height\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"]);\n\n    var className = p.className ? p.className + \" react-resizable\" : 'react-resizable'; // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // One or more draggable handles.\n\n    return (0, _utils.cloneElement)(children, _objectSpread({}, p, {\n      className: className,\n      children: [children.props.children, resizeHandles.map(function (h) {\n        return _react.default.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          key: \"resizableHandle-\" + h,\n          onStop: _this3.resizeHandler('onResizeStop', h),\n          onStart: _this3.resizeHandler('onResizeStart', h),\n          onDrag: _this3.resizeHandler('onResize', h)\n        }), _this3.renderResizeHandle(h));\n      })]\n    }));\n  };\n\n  return Resizable;\n}(_react.default.Component);\n\nexports.default = Resizable;\n\n_defineProperty(Resizable, \"propTypes\", {\n  //\n  // Required Props\n  //\n  // Require that one and only one child be present.\n  children: _propTypes.default.element.isRequired,\n  // Initial w/h\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  //\n  // Optional props\n  //\n  // Custom resize handle\n  handle: _propTypes.default.element,\n  // If you change this, be sure to update your css\n  handleSize: _propTypes.default.array,\n  // Defines which resize handles should be rendered (default: 'se')\n  // Allows for any combination of:\n  // 's' - South handle (bottom-center)\n  // 'w' - West handle (left-center)\n  // 'e' - East handle (right-center)\n  // 'n' - North handle (top-center)\n  // 'sw' - Southwest handle (bottom-left)\n  // 'nw' - Northwest handle (top-left)\n  // 'se' - Southeast handle (bottom-right)\n  // 'ne' - Northeast handle (top-center)\n  resizeHandles: _propTypes.default.arrayOf(_propTypes.default.oneOf(['s', 'w', 'e', 'n', 'sw', 'nw', 'se', 'ne'])),\n  transformScale: _propTypes.default.number,\n  // If true, will only allow width/height to move in lockstep\n  lockAspectRatio: _propTypes.default.bool,\n  // Restricts resizing to a particular axis (default: 'both')\n  // 'both' - allows resizing by width or height\n  // 'x' - only allows the width to be changed\n  // 'y' - only allows the height to be changed\n  // 'none' - disables resizing altogether\n  axis: _propTypes.default.oneOf(['both', 'x', 'y', 'none']),\n  // Min/max size\n  minConstraints: _propTypes.default.arrayOf(_propTypes.default.number),\n  maxConstraints: _propTypes.default.arrayOf(_propTypes.default.number),\n  // Callbacks\n  onResizeStop: _propTypes.default.func,\n  onResizeStart: _propTypes.default.func,\n  onResize: _propTypes.default.func,\n  // These will be passed wholesale to react-draggable's DraggableCore\n  draggableOpts: _propTypes.default.object\n});\n\n_defineProperty(Resizable, \"defaultProps\", {\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  axis: 'both',\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n});","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-resizable/build/Resizable.js"],"names":["exports","__esModule","default","_react","_interopRequireDefault","require","_propTypes","_reactDraggable","_utils","obj","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_assertThisInitialized","self","ReferenceError","_inheritsLoose","subClass","superClass","create","constructor","__proto__","value","configurable","writable","Resizable","_React$Component","_this","_len","args","Array","_key","concat","slackW","slackH","_proto","lockAspectRatio","width","height","aspectRatio","runConstraints","_ref","props","minConstraints","maxConstraints","min","max","ratio","_ratio","oldW","oldH","_this$state","state","Math","setState","resizeHandler","handlerName","axis","_this2","e","_ref2","node","deltaX","deltaY","transformScale","canDragX","canDragY","widthChanged","heightChanged","_this2$runConstraints","newState","hasCb","persist","size","handle","renderResizeHandle","resizeHandle","createElement","className","render","_this3","_this$props","children","draggableOpts","handleSize","onResize","onResizeStop","onResizeStart","resizeHandles","p","cloneElement","map","h","DraggableCore","onStop","onStart","onDrag","Component","element","isRequired","number","array","arrayOf","oneOf","bool","func","Infinity"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIC,UAAU,GAAGF,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIE,eAAe,GAAGF,OAAO,CAAC,iBAAD,CAA7B;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACR,UAAX,GAAwBQ,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAE/F,SAASC,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGf,MAAM,CAACe,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIb,MAAM,CAACgB,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGjB,MAAM,CAACgB,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOnB,MAAM,CAACoB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GN,IAAAA,IAAI,CAACO,IAAL,CAAUX,KAAV,CAAgBI,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASQ,aAAT,CAAuBrB,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAES,MAAAA,OAAO,CAACN,MAAD,EAAS,IAAT,CAAP,CAAsBkB,OAAtB,CAA8B,UAAUjB,GAAV,EAAe;AAAEkB,QAAAA,eAAe,CAACvB,MAAD,EAASK,GAAT,EAAcD,MAAM,CAACC,GAAD,CAApB,CAAf;AAA4C,OAA3F;AAA+F,KAA5G,MAAkH,IAAIP,MAAM,CAAC0B,yBAAX,EAAsC;AAAE1B,MAAAA,MAAM,CAAC2B,gBAAP,CAAwBzB,MAAxB,EAAgCF,MAAM,CAAC0B,yBAAP,CAAiCpB,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEM,MAAAA,OAAO,CAACN,MAAD,CAAP,CAAgBkB,OAAhB,CAAwB,UAAUjB,GAAV,EAAe;AAAEP,QAAAA,MAAM,CAAC4B,cAAP,CAAsB1B,MAAtB,EAA8BK,GAA9B,EAAmCP,MAAM,CAACoB,wBAAP,CAAgCd,MAAhC,EAAwCC,GAAxC,CAAnC;AAAmF,OAA5H;AAAgI;AAAE;;AAAC,SAAOL,MAAP;AAAgB;;AAEtgB,SAAS2B,6BAAT,CAAuCvB,MAAvC,EAA+CwB,QAA/C,EAAyD;AAAE,MAAIxB,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAI6B,UAAU,GAAG/B,MAAM,CAACe,IAAP,CAAYT,MAAZ,CAAjB;AAAsC,MAAIC,GAAJ,EAASJ,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4B,UAAU,CAAC1B,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEI,IAAAA,GAAG,GAAGwB,UAAU,CAAC5B,CAAD,CAAhB;AAAqB,QAAI2B,QAAQ,CAACE,OAAT,CAAiBzB,GAAjB,KAAyB,CAA7B,EAAgC;AAAUL,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;;AAAC,SAAOL,MAAP;AAAgB;;AAEnT,SAAS+B,sBAAT,CAAgCC,IAAhC,EAAsC;AAAE,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAE,UAAM,IAAIC,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOD,IAAP;AAAc;;AAEtK,SAASE,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAAED,EAAAA,QAAQ,CAAC7B,SAAT,GAAqBR,MAAM,CAACuC,MAAP,CAAcD,UAAU,CAAC9B,SAAzB,CAArB;AAA0D6B,EAAAA,QAAQ,CAAC7B,SAAT,CAAmBgC,WAAnB,GAAiCH,QAAjC;AAA2CA,EAAAA,QAAQ,CAACI,SAAT,GAAqBH,UAArB;AAAkC;;AAEvL,SAASb,eAAT,CAAyB3B,GAAzB,EAA8BS,GAA9B,EAAmCmC,KAAnC,EAA0C;AAAE,MAAInC,GAAG,IAAIT,GAAX,EAAgB;AAAEE,IAAAA,MAAM,CAAC4B,cAAP,CAAsB9B,GAAtB,EAA2BS,GAA3B,EAAgC;AAAEmC,MAAAA,KAAK,EAAEA,KAAT;AAAgBrB,MAAAA,UAAU,EAAE,IAA5B;AAAkCsB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAE9C,IAAAA,GAAG,CAACS,GAAD,CAAH,GAAWmC,KAAX;AAAmB;;AAAC,SAAO5C,GAAP;AAAa;;AAEjN,IAAI+C,SAAS,GACb,aACA,UAAUC,gBAAV,EAA4B;AAC1BV,EAAAA,cAAc,CAACS,SAAD,EAAYC,gBAAZ,CAAd;;AAEA,WAASD,SAAT,GAAqB;AACnB,QAAIE,KAAJ;;AAEA,SAAK,IAAIC,IAAI,GAAG5C,SAAS,CAACC,MAArB,EAA6B4C,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAa/C,SAAS,CAAC+C,IAAD,CAAtB;AACD;;AAEDJ,IAAAA,KAAK,GAAGD,gBAAgB,CAACpC,IAAjB,CAAsBC,KAAtB,CAA4BmC,gBAA5B,EAA8C,CAAC,IAAD,EAAOM,MAAP,CAAcH,IAAd,CAA9C,KAAsE,IAA9E;;AAEAxB,IAAAA,eAAe,CAACQ,sBAAsB,CAACc,KAAD,CAAvB,EAAgC,OAAhC,EAAyC;AACtDM,MAAAA,MAAM,EAAE,CAD8C;AAEtDC,MAAAA,MAAM,EAAE;AAF8C,KAAzC,CAAf;;AAKA,WAAOP,KAAP;AACD;;AAED,MAAIQ,MAAM,GAAGV,SAAS,CAACrC,SAAvB;;AAEA+C,EAAAA,MAAM,CAACC,eAAP,GAAyB,SAASA,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,WAAxC,EAAqD;AAC5ED,IAAAA,MAAM,GAAGD,KAAK,GAAGE,WAAjB;AACAF,IAAAA,KAAK,GAAGC,MAAM,GAAGC,WAAjB;AACA,WAAO,CAACF,KAAD,EAAQC,MAAR,CAAP;AACD,GAJD,CAIE;AAJF;;AAOAH,EAAAA,MAAM,CAACK,cAAP,GAAwB,SAASA,cAAT,CAAwBH,KAAxB,EAA+BC,MAA/B,EAAuC;AAC7D,QAAIG,IAAI,GAAG,CAAC,KAAKC,KAAL,CAAWC,cAAZ,EAA4B,KAAKD,KAAL,CAAWE,cAAvC,CAAX;AAAA,QACIC,GAAG,GAAGJ,IAAI,CAAC,CAAD,CADd;AAAA,QAEIK,GAAG,GAAGL,IAAI,CAAC,CAAD,CAFd;AAGA,QAAI,CAACI,GAAD,IAAQ,CAACC,GAAb,EAAkB,OAAO,CAACT,KAAD,EAAQC,MAAR,CAAP,CAJ2C,CAInB;;AAE1C,QAAI,KAAKI,KAAL,CAAWN,eAAf,EAAgC;AAC9B,UAAIE,MAAM,KAAK,KAAKI,KAAL,CAAWJ,MAA1B,EAAkC;AAChC,YAAIS,KAAK,GAAG,KAAKL,KAAL,CAAWL,KAAX,GAAmB,KAAKK,KAAL,CAAWJ,MAA1C;AACAA,QAAAA,MAAM,GAAGD,KAAK,GAAGU,KAAjB;AACAV,QAAAA,KAAK,GAAGC,MAAM,GAAGS,KAAjB;AACD,OAJD,MAIO;AACL;AACA;AACA,YAAIC,MAAM,GAAG,KAAKN,KAAL,CAAWJ,MAAX,GAAoB,KAAKI,KAAL,CAAWL,KAA5C;;AAEAA,QAAAA,KAAK,GAAGC,MAAM,GAAGU,MAAjB;AACAV,QAAAA,MAAM,GAAGD,KAAK,GAAGW,MAAjB;AACD;AACF;;AAED,QAAIC,IAAI,GAAGZ,KAAX;AAAA,QACIa,IAAI,GAAGZ,MADX,CArB6D,CAsB1C;AACnB;AACA;;AAEA,QAAIa,WAAW,GAAG,KAAKC,KAAvB;AAAA,QACInB,MAAM,GAAGkB,WAAW,CAAClB,MADzB;AAAA,QAEIC,MAAM,GAAGiB,WAAW,CAACjB,MAFzB;AAGAG,IAAAA,KAAK,IAAIJ,MAAT;AACAK,IAAAA,MAAM,IAAIJ,MAAV;;AAEA,QAAIW,GAAJ,EAAS;AACPR,MAAAA,KAAK,GAAGgB,IAAI,CAACP,GAAL,CAASD,GAAG,CAAC,CAAD,CAAZ,EAAiBR,KAAjB,CAAR;AACAC,MAAAA,MAAM,GAAGe,IAAI,CAACP,GAAL,CAASD,GAAG,CAAC,CAAD,CAAZ,EAAiBP,MAAjB,CAAT;AACD;;AAED,QAAIQ,GAAJ,EAAS;AACPT,MAAAA,KAAK,GAAGgB,IAAI,CAACR,GAAL,CAASC,GAAG,CAAC,CAAD,CAAZ,EAAiBT,KAAjB,CAAR;AACAC,MAAAA,MAAM,GAAGe,IAAI,CAACR,GAAL,CAASC,GAAG,CAAC,CAAD,CAAZ,EAAiBR,MAAjB,CAAT;AACD,KAxC4D,CAwC3D;;;AAGFL,IAAAA,MAAM,IAAIgB,IAAI,GAAGZ,KAAjB;AACAH,IAAAA,MAAM,IAAIgB,IAAI,GAAGZ,MAAjB;;AAEA,QAAIL,MAAM,KAAK,KAAKmB,KAAL,CAAWnB,MAAtB,IAAgCC,MAAM,KAAK,KAAKkB,KAAL,CAAWlB,MAA1D,EAAkE;AAChE,WAAKoB,QAAL,CAAc;AACZrB,QAAAA,MAAM,EAAEA,MADI;AAEZC,QAAAA,MAAM,EAAEA;AAFI,OAAd;AAID;;AAED,WAAO,CAACG,KAAD,EAAQC,MAAR,CAAP;AACD;AACD;;;;;;AAvDA;;AA+DAH,EAAAA,MAAM,CAACoB,aAAP,GAAuB,SAASA,aAAT,CAAuBC,WAAvB,EAAoCC,IAApC,EAA0C;AAC/D,QAAIC,MAAM,GAAG,IAAb;;AAEA,WAAO,UAAUC,CAAV,EAAaC,KAAb,EAAoB;AACzB,UAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAAA,UACIC,MAAM,GAAGF,KAAK,CAACE,MADnB;AAAA,UAEIC,MAAM,GAAGH,KAAK,CAACG,MAFnB;AAGAD,MAAAA,MAAM,IAAIJ,MAAM,CAAChB,KAAP,CAAasB,cAAvB;AACAD,MAAAA,MAAM,IAAIL,MAAM,CAAChB,KAAP,CAAasB,cAAvB,CALyB,CAKc;;AAEvC,UAAIC,QAAQ,GAAG,CAACP,MAAM,CAAChB,KAAP,CAAae,IAAb,KAAsB,MAAtB,IAAgCC,MAAM,CAAChB,KAAP,CAAae,IAAb,KAAsB,GAAvD,KAA+D,CAAC,GAAD,EAAM,GAAN,EAAW7C,OAAX,CAAmB6C,IAAnB,MAA6B,CAAC,CAA5G;AACA,UAAIS,QAAQ,GAAG,CAACR,MAAM,CAAChB,KAAP,CAAae,IAAb,KAAsB,MAAtB,IAAgCC,MAAM,CAAChB,KAAP,CAAae,IAAb,KAAsB,GAAvD,KAA+D,CAAC,GAAD,EAAM,GAAN,EAAW7C,OAAX,CAAmB6C,IAAnB,MAA6B,CAAC,CAA5G,CARyB,CAQsF;;AAE/G,UAAIQ,QAAQ,IAAIR,IAAI,CAACA,IAAI,CAACxE,MAAL,GAAc,CAAf,CAAJ,KAA0B,GAA1C,EAA+C;AAC7C6E,QAAAA,MAAM,GAAG,CAACA,MAAV;AACD;;AAED,UAAII,QAAQ,IAAIT,IAAI,CAAC,CAAD,CAAJ,KAAY,GAA5B,EAAiC;AAC/BM,QAAAA,MAAM,GAAG,CAACA,MAAV;AACD,OAhBwB,CAgBvB;;;AAGF,UAAI1B,KAAK,GAAGqB,MAAM,CAAChB,KAAP,CAAaL,KAAb,IAAsB4B,QAAQ,GAAGH,MAAH,GAAY,CAA1C,CAAZ;AACA,UAAIxB,MAAM,GAAGoB,MAAM,CAAChB,KAAP,CAAaJ,MAAb,IAAuB4B,QAAQ,GAAGH,MAAH,GAAY,CAA3C,CAAb,CApByB,CAoBmC;;AAE5D,UAAII,YAAY,GAAG9B,KAAK,KAAKqB,MAAM,CAAChB,KAAP,CAAaL,KAA1C;AAAA,UACI+B,aAAa,GAAG9B,MAAM,KAAKoB,MAAM,CAAChB,KAAP,CAAaJ,MAD5C;AAEA,UAAIkB,WAAW,KAAK,UAAhB,IAA8B,CAACW,YAA/B,IAA+C,CAACC,aAApD,EAAmE;;AAEnE,UAAIC,qBAAqB,GAAGX,MAAM,CAAClB,cAAP,CAAsBH,KAAtB,EAA6BC,MAA7B,CAA5B;;AAEAD,MAAAA,KAAK,GAAGgC,qBAAqB,CAAC,CAAD,CAA7B;AACA/B,MAAAA,MAAM,GAAG+B,qBAAqB,CAAC,CAAD,CAA9B,CA7ByB,CA8BzB;;AACA,UAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAId,WAAW,KAAK,eAApB,EAAqC,CAAC;AACrC,OADD,MACO,IAAIA,WAAW,KAAK,cAApB,EAAoC;AACzCc,QAAAA,QAAQ,CAACrC,MAAT,GAAkBqC,QAAQ,CAACpC,MAAT,GAAkB,CAApC;AACD,OAFM,MAEA;AACL;AACA,YAAIG,KAAK,KAAKqB,MAAM,CAAChB,KAAP,CAAaL,KAAvB,IAAgCC,MAAM,KAAKoB,MAAM,CAAChB,KAAP,CAAaJ,MAA5D,EAAoE;AACrE;;AAED,UAAIiC,KAAK,GAAG,OAAOb,MAAM,CAAChB,KAAP,CAAac,WAAb,CAAP,KAAqC,UAAjD;;AAEA,UAAIe,KAAJ,EAAW;AACT;AACA,YAAI,OAAOZ,CAAC,CAACa,OAAT,KAAqB,UAAzB,EAAqCb,CAAC,CAACa,OAAF;;AAErCd,QAAAA,MAAM,CAACJ,QAAP,CAAgBgB,QAAhB,EAA0B,YAAY;AACpC,iBAAOZ,MAAM,CAAChB,KAAP,CAAac,WAAb,EAA0BG,CAA1B,EAA6B;AAClCE,YAAAA,IAAI,EAAEA,IAD4B;AAElCY,YAAAA,IAAI,EAAE;AACJpC,cAAAA,KAAK,EAAEA,KADH;AAEJC,cAAAA,MAAM,EAAEA;AAFJ,aAF4B;AAMlCoC,YAAAA,MAAM,EAAEjB;AAN0B,WAA7B,CAAP;AAQD,SATD;AAUD,OAdD,MAcO;AACLC,QAAAA,MAAM,CAACJ,QAAP,CAAgBgB,QAAhB;AACD;AACF,KA5DD;AA6DD,GAhED;;AAkEAnC,EAAAA,MAAM,CAACwC,kBAAP,GAA4B,SAASA,kBAAT,CAA4BC,YAA5B,EAA0C;AACpE,QAAIF,MAAM,GAAG,KAAKhC,KAAL,CAAWgC,MAAxB;;AAEA,QAAIA,MAAJ,EAAY;AACV,UAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,eAAOA,MAAM,CAACE,YAAD,CAAb;AACD;;AAED,aAAOF,MAAP;AACD;;AAED,WAAOtG,MAAM,CAACD,OAAP,CAAe0G,aAAf,CAA6B,MAA7B,EAAqC;AAC1CC,MAAAA,SAAS,EAAE,mDAAmDF;AADpB,KAArC,CAAP;AAGD,GAdD;;AAgBAzC,EAAAA,MAAM,CAAC4C,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,MAAM,GAAG,IAAb,CADgC,CAGhC;;;AACA,QAAIC,WAAW,GAAG,KAAKvC,KAAvB;AAAA,QACIwC,QAAQ,GAAGD,WAAW,CAACC,QAD3B;AAAA,QAEIC,aAAa,GAAGF,WAAW,CAACE,aAFhC;AAAA,QAGI9C,KAAK,GAAG4C,WAAW,CAAC5C,KAHxB;AAAA,QAIIC,MAAM,GAAG2C,WAAW,CAAC3C,MAJzB;AAAA,QAKI8C,UAAU,GAAGH,WAAW,CAACG,UAL7B;AAAA,QAMIhD,eAAe,GAAG6C,WAAW,CAAC7C,eANlC;AAAA,QAOIqB,IAAI,GAAGwB,WAAW,CAACxB,IAPvB;AAAA,QAQId,cAAc,GAAGsC,WAAW,CAACtC,cARjC;AAAA,QASIC,cAAc,GAAGqC,WAAW,CAACrC,cATjC;AAAA,QAUIyC,QAAQ,GAAGJ,WAAW,CAACI,QAV3B;AAAA,QAWIC,YAAY,GAAGL,WAAW,CAACK,YAX/B;AAAA,QAYIC,aAAa,GAAGN,WAAW,CAACM,aAZhC;AAAA,QAaIC,aAAa,GAAGP,WAAW,CAACO,aAbhC;AAAA,QAcIxB,cAAc,GAAGiB,WAAW,CAACjB,cAdjC;AAAA,QAeIyB,CAAC,GAAGhF,6BAA6B,CAACwE,WAAD,EAAc,CAAC,UAAD,EAAa,eAAb,EAA8B,OAA9B,EAAuC,QAAvC,EAAiD,YAAjD,EAA+D,iBAA/D,EAAkF,MAAlF,EAA0F,gBAA1F,EAA4G,gBAA5G,EAA8H,UAA9H,EAA0I,cAA1I,EAA0J,eAA1J,EAA2K,eAA3K,EAA4L,gBAA5L,CAAd,CAfrC;;AAiBA,QAAIH,SAAS,GAAGW,CAAC,CAACX,SAAF,GAAcW,CAAC,CAACX,SAAF,GAAc,kBAA5B,GAAiD,iBAAjE,CArBgC,CAqBoD;AACpF;AACA;AACA;;AAEA,WAAO,CAAC,GAAGrG,MAAM,CAACiH,YAAX,EAAyBR,QAAzB,EAAmC/E,aAAa,CAAC,EAAD,EAAKsF,CAAL,EAAQ;AAC7DX,MAAAA,SAAS,EAAEA,SADkD;AAE7DI,MAAAA,QAAQ,EAAE,CAACA,QAAQ,CAACxC,KAAT,CAAewC,QAAhB,EAA0BM,aAAa,CAACG,GAAd,CAAkB,UAAUC,CAAV,EAAa;AACjE,eAAOxH,MAAM,CAACD,OAAP,CAAe0G,aAAf,CAA6BrG,eAAe,CAACqH,aAA7C,EAA4DlH,QAAQ,CAAC,EAAD,EAAKwG,aAAL,EAAoB;AAC7FhG,UAAAA,GAAG,EAAE,qBAAqByG,CADmE;AAE7FE,UAAAA,MAAM,EAAEd,MAAM,CAACzB,aAAP,CAAqB,cAArB,EAAqCqC,CAArC,CAFqF;AAG7FG,UAAAA,OAAO,EAAEf,MAAM,CAACzB,aAAP,CAAqB,eAArB,EAAsCqC,CAAtC,CAHoF;AAI7FI,UAAAA,MAAM,EAAEhB,MAAM,CAACzB,aAAP,CAAqB,UAArB,EAAiCqC,CAAjC;AAJqF,SAApB,CAApE,EAKHZ,MAAM,CAACL,kBAAP,CAA0BiB,CAA1B,CALG,CAAP;AAMD,OAPmC,CAA1B;AAFmD,KAAR,CAAhD,CAAP;AAWD,GArCD;;AAuCA,SAAOnE,SAAP;AACD,CAtND,CAsNErD,MAAM,CAACD,OAAP,CAAe8H,SAtNjB,CAFA;;AA0NAhI,OAAO,CAACE,OAAR,GAAkBsD,SAAlB;;AAEApB,eAAe,CAACoB,SAAD,EAAY,WAAZ,EAAyB;AACtC;AACA;AACA;AACA;AACAyD,EAAAA,QAAQ,EAAE3G,UAAU,CAACJ,OAAX,CAAmB+H,OAAnB,CAA2BC,UALC;AAMtC;AACA9D,EAAAA,KAAK,EAAE9D,UAAU,CAACJ,OAAX,CAAmBiI,MAAnB,CAA0BD,UAPK;AAQtC7D,EAAAA,MAAM,EAAE/D,UAAU,CAACJ,OAAX,CAAmBiI,MAAnB,CAA0BD,UARI;AAStC;AACA;AACA;AACA;AACAzB,EAAAA,MAAM,EAAEnG,UAAU,CAACJ,OAAX,CAAmB+H,OAbW;AActC;AACAd,EAAAA,UAAU,EAAE7G,UAAU,CAACJ,OAAX,CAAmBkI,KAfO;AAgBtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAb,EAAAA,aAAa,EAAEjH,UAAU,CAACJ,OAAX,CAAmBmI,OAAnB,CAA2B/H,UAAU,CAACJ,OAAX,CAAmBoI,KAAnB,CAAyB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC,CAAzB,CAA3B,CA1BuB;AA2BtCvC,EAAAA,cAAc,EAAEzF,UAAU,CAACJ,OAAX,CAAmBiI,MA3BG;AA4BtC;AACAhE,EAAAA,eAAe,EAAE7D,UAAU,CAACJ,OAAX,CAAmBqI,IA7BE;AA8BtC;AACA;AACA;AACA;AACA;AACA/C,EAAAA,IAAI,EAAElF,UAAU,CAACJ,OAAX,CAAmBoI,KAAnB,CAAyB,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,EAAmB,MAAnB,CAAzB,CAnCgC;AAoCtC;AACA5D,EAAAA,cAAc,EAAEpE,UAAU,CAACJ,OAAX,CAAmBmI,OAAnB,CAA2B/H,UAAU,CAACJ,OAAX,CAAmBiI,MAA9C,CArCsB;AAsCtCxD,EAAAA,cAAc,EAAErE,UAAU,CAACJ,OAAX,CAAmBmI,OAAnB,CAA2B/H,UAAU,CAACJ,OAAX,CAAmBiI,MAA9C,CAtCsB;AAuCtC;AACAd,EAAAA,YAAY,EAAE/G,UAAU,CAACJ,OAAX,CAAmBsI,IAxCK;AAyCtClB,EAAAA,aAAa,EAAEhH,UAAU,CAACJ,OAAX,CAAmBsI,IAzCI;AA0CtCpB,EAAAA,QAAQ,EAAE9G,UAAU,CAACJ,OAAX,CAAmBsI,IA1CS;AA2CtC;AACAtB,EAAAA,aAAa,EAAE5G,UAAU,CAACJ,OAAX,CAAmBsB;AA5CI,CAAzB,CAAf;;AA+CAY,eAAe,CAACoB,SAAD,EAAY,cAAZ,EAA4B;AACzC2D,EAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAD6B;AAEzChD,EAAAA,eAAe,EAAE,KAFwB;AAGzCqB,EAAAA,IAAI,EAAE,MAHmC;AAIzCd,EAAAA,cAAc,EAAE,CAAC,EAAD,EAAK,EAAL,CAJyB;AAKzCC,EAAAA,cAAc,EAAE,CAAC8D,QAAD,EAAWA,QAAX,CALyB;AAMzClB,EAAAA,aAAa,EAAE,CAAC,IAAD,CAN0B;AAOzCxB,EAAAA,cAAc,EAAE;AAPyB,CAA5B,CAAf","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Resizable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n\n  function Resizable() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      slackW: 0,\n      slackH: 0\n    });\n\n    return _this;\n  }\n\n  var _proto = Resizable.prototype;\n\n  _proto.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  } // If you do this, be careful of constraints\n  ;\n\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n    if (!min && !max) return [width, height]; // Fit width & height to aspect ratio\n\n    if (this.props.lockAspectRatio) {\n      if (height === this.props.height) {\n        var ratio = this.props.width / this.props.height;\n        height = width / ratio;\n        width = height * ratio;\n      } else {\n        // Take into account vertical resize with N/S handles on locked aspect\n        // ratio. Calculate the change height-first, instead of width-first\n        var _ratio = this.props.height / this.props.width;\n\n        width = height / _ratio;\n        height = width * _ratio;\n      }\n    }\n\n    var oldW = width,\n        oldH = height; // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _this$state = this.state,\n        slackW = _this$state.slackW,\n        slackH = _this$state.slackH;\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    } // If the numbers changed, we must have introduced some slack. Record it for the next iteration.\n\n\n    slackW += oldW - width;\n    slackH += oldH - height;\n\n    if (slackW !== this.state.slackW || slackH !== this.state.slackH) {\n      this.setState({\n        slackW: slackW,\n        slackH: slackH\n      });\n    }\n\n    return [width, height];\n  }\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n      deltaX /= _this2.props.transformScale;\n      deltaY /= _this2.props.transformScale; // Axis restrictions\n\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && ['n', 's'].indexOf(axis) === -1;\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && ['e', 'w'].indexOf(axis) === -1; // reverse delta if using top or left drag handles\n\n      if (canDragX && axis[axis.length - 1] === 'w') {\n        deltaX = -deltaX;\n      }\n\n      if (canDragY && axis[0] === 'n') {\n        deltaY = -deltaY;\n      } // Update w/h\n\n\n      var width = _this2.props.width + (canDragX ? deltaX : 0);\n      var height = _this2.props.height + (canDragY ? deltaY : 0); // Early return if no change\n\n      var widthChanged = width !== _this2.props.width,\n          heightChanged = height !== _this2.props.height;\n      if (handlerName === 'onResize' && !widthChanged && !heightChanged) return;\n\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1];\n      // Set the appropriate state for this handler.\n      var newState = {};\n\n      if (handlerName === 'onResizeStart') {// nothing\n      } else if (handlerName === 'onResizeStop') {\n        newState.slackW = newState.slackH = 0;\n      } else {\n        // Early return if no change after constraints\n        if (width === _this2.props.width && height === _this2.props.height) return;\n      }\n\n      var hasCb = typeof _this2.props[handlerName] === 'function';\n\n      if (hasCb) {\n        // $FlowIgnore isn't refining this correctly to SyntheticEvent\n        if (typeof e.persist === 'function') e.persist();\n\n        _this2.setState(newState, function () {\n          return _this2.props[handlerName](e, {\n            node: node,\n            size: {\n              width: width,\n              height: height\n            },\n            handle: axis\n          });\n        });\n      } else {\n        _this2.setState(newState);\n      }\n    };\n  };\n\n  _proto.renderResizeHandle = function renderResizeHandle(resizeHandle) {\n    var handle = this.props.handle;\n\n    if (handle) {\n      if (typeof handle === 'function') {\n        return handle(resizeHandle);\n      }\n\n      return handle;\n    }\n\n    return _react.default.createElement(\"span\", {\n      className: \"react-resizable-handle react-resizable-handle-\" + resizeHandle\n    });\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    // eslint-disable-next-line no-unused-vars\n    var _this$props = this.props,\n        children = _this$props.children,\n        draggableOpts = _this$props.draggableOpts,\n        width = _this$props.width,\n        height = _this$props.height,\n        handleSize = _this$props.handleSize,\n        lockAspectRatio = _this$props.lockAspectRatio,\n        axis = _this$props.axis,\n        minConstraints = _this$props.minConstraints,\n        maxConstraints = _this$props.maxConstraints,\n        onResize = _this$props.onResize,\n        onResizeStop = _this$props.onResizeStop,\n        onResizeStart = _this$props.onResizeStart,\n        resizeHandles = _this$props.resizeHandles,\n        transformScale = _this$props.transformScale,\n        p = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"draggableOpts\", \"width\", \"height\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"]);\n\n    var className = p.className ? p.className + \" react-resizable\" : 'react-resizable'; // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // One or more draggable handles.\n\n    return (0, _utils.cloneElement)(children, _objectSpread({}, p, {\n      className: className,\n      children: [children.props.children, resizeHandles.map(function (h) {\n        return _react.default.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          key: \"resizableHandle-\" + h,\n          onStop: _this3.resizeHandler('onResizeStop', h),\n          onStart: _this3.resizeHandler('onResizeStart', h),\n          onDrag: _this3.resizeHandler('onResize', h)\n        }), _this3.renderResizeHandle(h));\n      })]\n    }));\n  };\n\n  return Resizable;\n}(_react.default.Component);\n\nexports.default = Resizable;\n\n_defineProperty(Resizable, \"propTypes\", {\n  //\n  // Required Props\n  //\n  // Require that one and only one child be present.\n  children: _propTypes.default.element.isRequired,\n  // Initial w/h\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  //\n  // Optional props\n  //\n  // Custom resize handle\n  handle: _propTypes.default.element,\n  // If you change this, be sure to update your css\n  handleSize: _propTypes.default.array,\n  // Defines which resize handles should be rendered (default: 'se')\n  // Allows for any combination of:\n  // 's' - South handle (bottom-center)\n  // 'w' - West handle (left-center)\n  // 'e' - East handle (right-center)\n  // 'n' - North handle (top-center)\n  // 'sw' - Southwest handle (bottom-left)\n  // 'nw' - Northwest handle (top-left)\n  // 'se' - Southeast handle (bottom-right)\n  // 'ne' - Northeast handle (top-center)\n  resizeHandles: _propTypes.default.arrayOf(_propTypes.default.oneOf(['s', 'w', 'e', 'n', 'sw', 'nw', 'se', 'ne'])),\n  transformScale: _propTypes.default.number,\n  // If true, will only allow width/height to move in lockstep\n  lockAspectRatio: _propTypes.default.bool,\n  // Restricts resizing to a particular axis (default: 'both')\n  // 'both' - allows resizing by width or height\n  // 'x' - only allows the width to be changed\n  // 'y' - only allows the height to be changed\n  // 'none' - disables resizing altogether\n  axis: _propTypes.default.oneOf(['both', 'x', 'y', 'none']),\n  // Min/max size\n  minConstraints: _propTypes.default.arrayOf(_propTypes.default.number),\n  maxConstraints: _propTypes.default.arrayOf(_propTypes.default.number),\n  // Callbacks\n  onResizeStop: _propTypes.default.func,\n  onResizeStart: _propTypes.default.func,\n  onResize: _propTypes.default.func,\n  // These will be passed wholesale to react-draggable's DraggableCore\n  draggableOpts: _propTypes.default.object\n});\n\n_defineProperty(Resizable, \"defaultProps\", {\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  axis: 'both',\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n});"]},"metadata":{},"sourceType":"script"}