{"ast":null,"code":"ace.define(\"ace/snippets/io\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippets = [{\n    \"content\": \"assertEquals(${1:expected}, ${2:expr})\",\n    \"name\": \"assertEquals\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ae\"\n  }, {\n    \"content\": \"${1:${2:newValue} := ${3:Object} }clone do(\\n\\t$0\\n)\",\n    \"name\": \"clone do\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"cdo\"\n  }, {\n    \"content\": \"docSlot(\\\"${1:slotName}\\\", \\\"${2:documentation}\\\")\",\n    \"name\": \"docSlot\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ds\"\n  }, {\n    \"content\": \"(${1:header,}\\n\\t${2:body}\\n)$0\",\n    \"keyEquivalent\": \"@(\",\n    \"name\": \"Indented Bracketed Line\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"(\"\n  }, {\n    \"content\": \"\\n\\t$0\\n\",\n    \"keyEquivalent\": \"\\r\",\n    \"name\": \"Special: Return Inside Empty Parenthesis\",\n    \"scope\": \"io meta.empty-parenthesis.io, io meta.comma-parenthesis.io\"\n  }, {\n    \"content\": \"${1:methodName} := method(${2:args,}\\n\\t$0\\n)\",\n    \"name\": \"method\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"m\"\n  }, {\n    \"content\": \"newSlot(\\\"${1:slotName}\\\", ${2:defaultValue}, \\\"${3:docString}\\\")$0\",\n    \"name\": \"newSlot\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ns\"\n  }, {\n    \"content\": \"${1:name} := Object clone do(\\n\\t$0\\n)\",\n    \"name\": \"Object clone do\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ocdo\"\n  }, {\n    \"content\": \"test${1:SomeFeature} := method(\\n\\t$0\\n)\",\n    \"name\": \"testMethod\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ts\"\n  }, {\n    \"content\": \"${1:Something}Test := ${2:UnitTest} clone do(\\n\\t$0\\n)\",\n    \"name\": \"UnitTest\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ut\"\n  }];\n  exports.scope = \"io\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/io\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/snippets/io.js"],"names":["ace","define","require","exports","module","snippets","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,iBAAX,EAA6B,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAA7B,EAA6D,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAChG;;AAEAD,EAAAA,OAAO,CAACE,QAAR,GAAmB,CACf;AACI,eAAW,wCADf;AAEI,YAAQ,cAFZ;AAGI,aAAS,IAHb;AAII,kBAAc;AAJlB,GADe,EAOf;AACI,eAAW,sDADf;AAEI,YAAQ,UAFZ;AAGI,aAAS,IAHb;AAII,kBAAc;AAJlB,GAPe,EAaf;AACI,eAAW,oDADf;AAEI,YAAQ,SAFZ;AAGI,aAAS,IAHb;AAII,kBAAc;AAJlB,GAbe,EAmBf;AACI,eAAW,iCADf;AAEI,qBAAiB,IAFrB;AAGI,YAAQ,yBAHZ;AAII,aAAS,IAJb;AAKI,kBAAc;AALlB,GAnBe,EA0Bf;AACI,eAAW,UADf;AAEI,qBAAiB,IAFrB;AAGI,YAAQ,0CAHZ;AAII,aAAS;AAJb,GA1Be,EAgCf;AACI,eAAW,+CADf;AAEI,YAAQ,QAFZ;AAGI,aAAS,IAHb;AAII,kBAAc;AAJlB,GAhCe,EAsCf;AACI,eAAW,qEADf;AAEI,YAAQ,SAFZ;AAGI,aAAS,IAHb;AAII,kBAAc;AAJlB,GAtCe,EA4Cf;AACI,eAAW,wCADf;AAEI,YAAQ,iBAFZ;AAGI,aAAS,IAHb;AAII,kBAAc;AAJlB,GA5Ce,EAkDf;AACI,eAAW,0CADf;AAEI,YAAQ,YAFZ;AAGI,aAAS,IAHb;AAII,kBAAc;AAJlB,GAlDe,EAwDf;AACI,eAAW,wDADf;AAEI,YAAQ,UAFZ;AAGI,aAAS,IAHb;AAII,kBAAc;AAJlB,GAxDe,CAAnB;AA+DAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,IAAhB;AAEC,CApED;;AAoEmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,iBAAD,CAAZ,EAAiC,UAASK,CAAT,EAAY;AACzC,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/io\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\nexports.snippets = [\n    {\n        \"content\": \"assertEquals(${1:expected}, ${2:expr})\",\n        \"name\": \"assertEquals\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ae\"\n    },\n    {\n        \"content\": \"${1:${2:newValue} := ${3:Object} }clone do(\\n\\t$0\\n)\",\n        \"name\": \"clone do\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"cdo\"\n    },\n    {\n        \"content\": \"docSlot(\\\"${1:slotName}\\\", \\\"${2:documentation}\\\")\",\n        \"name\": \"docSlot\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ds\"\n    },\n    {\n        \"content\": \"(${1:header,}\\n\\t${2:body}\\n)$0\",\n        \"keyEquivalent\": \"@(\",\n        \"name\": \"Indented Bracketed Line\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"(\"\n    },\n    {\n        \"content\": \"\\n\\t$0\\n\",\n        \"keyEquivalent\": \"\\r\",\n        \"name\": \"Special: Return Inside Empty Parenthesis\",\n        \"scope\": \"io meta.empty-parenthesis.io, io meta.comma-parenthesis.io\"\n    },\n    {\n        \"content\": \"${1:methodName} := method(${2:args,}\\n\\t$0\\n)\",\n        \"name\": \"method\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"m\"\n    },\n    {\n        \"content\": \"newSlot(\\\"${1:slotName}\\\", ${2:defaultValue}, \\\"${3:docString}\\\")$0\",\n        \"name\": \"newSlot\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ns\"\n    },\n    {\n        \"content\": \"${1:name} := Object clone do(\\n\\t$0\\n)\",\n        \"name\": \"Object clone do\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ocdo\"\n    },\n    {\n        \"content\": \"test${1:SomeFeature} := method(\\n\\t$0\\n)\",\n        \"name\": \"testMethod\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ts\"\n    },\n    {\n        \"content\": \"${1:Something}Test := ${2:UnitTest} clone do(\\n\\t$0\\n)\",\n        \"name\": \"UnitTest\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ut\"\n    }\n];\nexports.scope = \"io\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/io\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}