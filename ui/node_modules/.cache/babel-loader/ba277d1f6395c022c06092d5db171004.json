{"ast":null,"code":"/* eslint-disable */\nimport { useEffect } from 'react';\nimport useRafState from './useRafState';\n\nvar useMouse = function (ref) {\n  if (process.env.NODE_ENV === 'development') {\n    if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n      console.error('useMouse expects a single ref argument.');\n    }\n  }\n\n  var _a = useRafState({\n    docX: 0,\n    docY: 0,\n    posX: 0,\n    posY: 0,\n    elX: 0,\n    elY: 0,\n    elH: 0,\n    elW: 0\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    var moveHandler = function (event) {\n      if (ref && ref.current) {\n        var _a = ref.current.getBoundingClientRect(),\n            left = _a.left,\n            top_1 = _a.top,\n            elW = _a.width,\n            elH = _a.height;\n\n        var posX = left + window.pageXOffset;\n        var posY = top_1 + window.pageYOffset;\n        var elX = event.pageX - posX;\n        var elY = event.pageY - posY;\n        setState({\n          docX: event.pageX,\n          docY: event.pageY,\n          posX: posX,\n          posY: posY,\n          elX: elX,\n          elY: elY,\n          elH: elH,\n          elW: elW\n        });\n      }\n    };\n\n    document.addEventListener('mousemove', moveHandler);\n    return function () {\n      document.removeEventListener('mousemove', moveHandler);\n    };\n  }, [ref]);\n  return state;\n};\n\nexport default useMouse;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useMouse.js"],"names":["useEffect","useRafState","useMouse","ref","process","env","NODE_ENV","current","console","error","_a","docX","docY","posX","posY","elX","elY","elH","elW","state","setState","moveHandler","event","getBoundingClientRect","left","top_1","top","width","height","window","pageXOffset","pageYOffset","pageX","pageY","document","addEventListener","removeEventListener"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,IAAIC,QAAQ,GAAG,UAAUC,GAAV,EAAe;AAC1B,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAI,OAAOH,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAG,CAACI,OAAX,KAAuB,WAAtD,EAAmE;AAC/DC,MAAAA,OAAO,CAACC,KAAR,CAAc,yCAAd;AACH;AACJ;;AACD,MAAIC,EAAE,GAAGT,WAAW,CAAC;AACjBU,IAAAA,IAAI,EAAE,CADW;AAEjBC,IAAAA,IAAI,EAAE,CAFW;AAGjBC,IAAAA,IAAI,EAAE,CAHW;AAIjBC,IAAAA,IAAI,EAAE,CAJW;AAKjBC,IAAAA,GAAG,EAAE,CALY;AAMjBC,IAAAA,GAAG,EAAE,CANY;AAOjBC,IAAAA,GAAG,EAAE,CAPY;AAQjBC,IAAAA,GAAG,EAAE;AARY,GAAD,CAApB;AAAA,MASIC,KAAK,GAAGT,EAAE,CAAC,CAAD,CATd;AAAA,MASmBU,QAAQ,GAAGV,EAAE,CAAC,CAAD,CAThC;;AAUAV,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIqB,WAAW,GAAG,UAAUC,KAAV,EAAiB;AAC/B,UAAInB,GAAG,IAAIA,GAAG,CAACI,OAAf,EAAwB;AACpB,YAAIG,EAAE,GAAGP,GAAG,CAACI,OAAJ,CAAYgB,qBAAZ,EAAT;AAAA,YAA8CC,IAAI,GAAGd,EAAE,CAACc,IAAxD;AAAA,YAA8DC,KAAK,GAAGf,EAAE,CAACgB,GAAzE;AAAA,YAA8ER,GAAG,GAAGR,EAAE,CAACiB,KAAvF;AAAA,YAA8FV,GAAG,GAAGP,EAAE,CAACkB,MAAvG;;AACA,YAAIf,IAAI,GAAGW,IAAI,GAAGK,MAAM,CAACC,WAAzB;AACA,YAAIhB,IAAI,GAAGW,KAAK,GAAGI,MAAM,CAACE,WAA1B;AACA,YAAIhB,GAAG,GAAGO,KAAK,CAACU,KAAN,GAAcnB,IAAxB;AACA,YAAIG,GAAG,GAAGM,KAAK,CAACW,KAAN,GAAcnB,IAAxB;AACAM,QAAAA,QAAQ,CAAC;AACLT,UAAAA,IAAI,EAAEW,KAAK,CAACU,KADP;AAELpB,UAAAA,IAAI,EAAEU,KAAK,CAACW,KAFP;AAGLpB,UAAAA,IAAI,EAAEA,IAHD;AAILC,UAAAA,IAAI,EAAEA,IAJD;AAKLC,UAAAA,GAAG,EAAEA,GALA;AAMLC,UAAAA,GAAG,EAAEA,GANA;AAOLC,UAAAA,GAAG,EAAEA,GAPA;AAQLC,UAAAA,GAAG,EAAEA;AARA,SAAD,CAAR;AAUH;AACJ,KAlBD;;AAmBAgB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCd,WAAvC;AACA,WAAO,YAAY;AACfa,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0Cf,WAA1C;AACH,KAFD;AAGH,GAxBQ,EAwBN,CAAClB,GAAD,CAxBM,CAAT;AAyBA,SAAOgB,KAAP;AACH,CA1CD;;AA2CA,eAAejB,QAAf","sourcesContent":["/* eslint-disable */\nimport { useEffect } from 'react';\nimport useRafState from './useRafState';\nvar useMouse = function (ref) {\n    if (process.env.NODE_ENV === 'development') {\n        if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n            console.error('useMouse expects a single ref argument.');\n        }\n    }\n    var _a = useRafState({\n        docX: 0,\n        docY: 0,\n        posX: 0,\n        posY: 0,\n        elX: 0,\n        elY: 0,\n        elH: 0,\n        elW: 0,\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var moveHandler = function (event) {\n            if (ref && ref.current) {\n                var _a = ref.current.getBoundingClientRect(), left = _a.left, top_1 = _a.top, elW = _a.width, elH = _a.height;\n                var posX = left + window.pageXOffset;\n                var posY = top_1 + window.pageYOffset;\n                var elX = event.pageX - posX;\n                var elY = event.pageY - posY;\n                setState({\n                    docX: event.pageX,\n                    docY: event.pageY,\n                    posX: posX,\n                    posY: posY,\n                    elX: elX,\n                    elY: elY,\n                    elH: elH,\n                    elW: elW,\n                });\n            }\n        };\n        document.addEventListener('mousemove', moveHandler);\n        return function () {\n            document.removeEventListener('mousemove', moveHandler);\n        };\n    }, [ref]);\n    return state;\n};\nexport default useMouse;\n"]},"metadata":{},"sourceType":"module"}