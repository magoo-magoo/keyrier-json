{"ast":null,"code":"ace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/dot_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\", \"ace/mode/doc_comment_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var lang = require(\"../lib/lang\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var DotHighlightRules = function () {\n    var keywords = lang.arrayToMap(\"strict|node|edge|graph|digraph|subgraph\".split(\"|\"));\n    var attributes = lang.arrayToMap(\"damping|k|url|area|arrowhead|arrowsize|arrowtail|aspect|bb|bgcolor|center|charset|clusterrank|color|colorscheme|comment|compound|concentrate|constraint|decorate|defaultdist|dim|dimen|dir|diredgeconstraints|distortion|dpi|edgeurl|edgehref|edgetarget|edgetooltip|epsilon|esep|fillcolor|fixedsize|fontcolor|fontname|fontnames|fontpath|fontsize|forcelabels|gradientangle|group|headurl|head_lp|headclip|headhref|headlabel|headport|headtarget|headtooltip|height|href|id|image|imagepath|imagescale|label|labelurl|label_scheme|labelangle|labeldistance|labelfloat|labelfontcolor|labelfontname|labelfontsize|labelhref|labeljust|labelloc|labeltarget|labeltooltip|landscape|layer|layerlistsep|layers|layerselect|layersep|layout|len|levels|levelsgap|lhead|lheight|lp|ltail|lwidth|margin|maxiter|mclimit|mindist|minlen|mode|model|mosek|nodesep|nojustify|normalize|nslimit|nslimit1|ordering|orientation|outputorder|overlap|overlap_scaling|pack|packmode|pad|page|pagedir|pencolor|penwidth|peripheries|pin|pos|quadtree|quantum|rank|rankdir|ranksep|ratio|rects|regular|remincross|repulsiveforce|resolution|root|rotate|rotation|samehead|sametail|samplepoints|scale|searchsize|sep|shape|shapefile|showboxes|sides|size|skew|smoothing|sortv|splines|start|style|stylesheet|tailurl|tail_lp|tailclip|tailhref|taillabel|tailport|tailtarget|tailtooltip|target|tooltip|truecolor|vertices|viewport|voro_margin|weight|width|xlabel|xlp|z\".split(\"|\"));\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: /\\/\\/.*$/\n      }, {\n        token: \"comment\",\n        regex: /#.*$/\n      }, {\n        token: \"comment\",\n        // multi line comment\n        merge: true,\n        regex: /\\/\\*/,\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        regex: \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"constant.numeric\",\n        regex: /[+\\-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?\\b/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\+|=|\\->/\n      }, {\n        token: \"punctuation.operator\",\n        regex: /,|;/\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[{]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\]}]/\n      }, {\n        token: \"comment\",\n        regex: /^#!.*$/\n      }, {\n        token: function (value) {\n          if (keywords.hasOwnProperty(value.toLowerCase())) {\n            return \"keyword\";\n          } else if (attributes.hasOwnProperty(value.toLowerCase())) {\n            return \"variable\";\n          } else {\n            return \"text\";\n          }\n        },\n        regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"qqstring\": [{\n        token: \"string\",\n        regex: '[^\"\\\\\\\\]+',\n        merge: true\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\",\n        merge: true\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\",\n        merge: true\n      }],\n      \"qstring\": [{\n        token: \"string\",\n        regex: \"[^'\\\\\\\\]+\",\n        merge: true\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qstring\",\n        merge: true\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\",\n        merge: true\n      }]\n    };\n  };\n\n  oop.inherits(DotHighlightRules, TextHighlightRules);\n  exports.DotHighlightRules = DotHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/dot\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/matching_brace_outdent\", \"ace/mode/dot_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var DotHighlightRules = require(\"./dot_highlight_rules\").DotHighlightRules;\n\n  var DotFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = DotHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new DotFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\"//\", \"#\"];\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/dot\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/dot\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-dot.js"],"names":["ace","define","require","exports","module","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","lang","DotHighlightRules","keywords","arrayToMap","split","attributes","merge","value","hasOwnProperty","toLowerCase","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","DotFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/dot_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\nvar DotHighlightRules = function() {\n\n   var keywords = lang.arrayToMap(\n        (\"strict|node|edge|graph|digraph|subgraph\").split(\"|\")\n   );\n\n   var attributes = lang.arrayToMap(\n        (\"damping|k|url|area|arrowhead|arrowsize|arrowtail|aspect|bb|bgcolor|center|charset|clusterrank|color|colorscheme|comment|compound|concentrate|constraint|decorate|defaultdist|dim|dimen|dir|diredgeconstraints|distortion|dpi|edgeurl|edgehref|edgetarget|edgetooltip|epsilon|esep|fillcolor|fixedsize|fontcolor|fontname|fontnames|fontpath|fontsize|forcelabels|gradientangle|group|headurl|head_lp|headclip|headhref|headlabel|headport|headtarget|headtooltip|height|href|id|image|imagepath|imagescale|label|labelurl|label_scheme|labelangle|labeldistance|labelfloat|labelfontcolor|labelfontname|labelfontsize|labelhref|labeljust|labelloc|labeltarget|labeltooltip|landscape|layer|layerlistsep|layers|layerselect|layersep|layout|len|levels|levelsgap|lhead|lheight|lp|ltail|lwidth|margin|maxiter|mclimit|mindist|minlen|mode|model|mosek|nodesep|nojustify|normalize|nslimit|nslimit1|ordering|orientation|outputorder|overlap|overlap_scaling|pack|packmode|pad|page|pagedir|pencolor|penwidth|peripheries|pin|pos|quadtree|quantum|rank|rankdir|ranksep|ratio|rects|regular|remincross|repulsiveforce|resolution|root|rotate|rotation|samehead|sametail|samplepoints|scale|searchsize|sep|shape|shapefile|showboxes|sides|size|skew|smoothing|sortv|splines|start|style|stylesheet|tailurl|tail_lp|tailclip|tailhref|taillabel|tailport|tailtarget|tailtooltip|target|tooltip|truecolor|vertices|viewport|voro_margin|weight|width|xlabel|xlp|z\").split(\"|\")\n   );\n\n   this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : /\\/\\/.*$/\n            }, {\n                token : \"comment\",\n                regex : /#.*$/\n            }, {\n                token : \"comment\", // multi line comment\n                merge : true,\n                regex : /\\/\\*/,\n                next : \"comment\"\n            }, {\n                token : \"string\",\n                regex : \"'(?=.)\",\n                next  : \"qstring\"\n            }, {\n                token : \"string\",\n                regex : '\"(?=.)',\n                next  : \"qqstring\"\n            }, {\n                token : \"constant.numeric\",\n                regex : /[+\\-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?\\b/\n            }, {\n                token : \"keyword.operator\",\n                regex : /\\+|=|\\->/\n            }, {\n                token : \"punctuation.operator\",\n                regex : /,|;/\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[{]/\n            }, {\n                token : \"paren.rparen\",\n                regex : /[\\]}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }, {\n                token: function(value) {\n                    if (keywords.hasOwnProperty(value.toLowerCase())) {\n                        return \"keyword\";\n                    }\n                    else if (attributes.hasOwnProperty(value.toLowerCase())) {\n                        return \"variable\";\n                    }\n                    else {\n                        return \"text\";\n                    }\n                },\n                regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n           }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"string\",\n                regex : '[^\"\\\\\\\\]+',\n                merge : true\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                next  : \"qqstring\",\n                merge : true\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"start\",\n                merge : true\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"string\",\n                regex : \"[^'\\\\\\\\]+\",\n                merge : true\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                next  : \"qstring\",\n                merge : true\n            }, {\n                token : \"string\",\n                regex : \"'|$\",\n                next  : \"start\",\n                merge : true\n            }\n        ]\n   };\n};\n\noop.inherits(DotHighlightRules, TextHighlightRules);\n\nexports.DotHighlightRules = DotHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/dot\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/matching_brace_outdent\",\"ace/mode/dot_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar DotHighlightRules = require(\"./dot_highlight_rules\").DotHighlightRules;\nvar DotFoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = DotHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new DotFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = [\"//\", \"#\"];\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/dot\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/dot\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}