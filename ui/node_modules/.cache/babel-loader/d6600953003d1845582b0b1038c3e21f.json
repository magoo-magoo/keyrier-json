{"ast":null,"code":"ace.define(\"ace/snippets/vala\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippets = [{\n    \"content\": \"case ${1:condition}:\\n\\t$0\\n\\tbreak;\\n\",\n    \"name\": \"case\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"case\"\n  }, {\n    \"content\": \"/**\\n * ${6}\\n */\\n${1:public} class ${2:MethodName}${3: : GLib.Object} {\\n\\n\\t/**\\n\\t * ${7}\\n\\t */\\n\\tpublic ${2}(${4}) {\\n\\t\\t${5}\\n\\t}\\n\\n\\t$0\\n}\",\n    \"name\": \"class\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"class\"\n  }, {\n    \"content\": \"(${1}) => {\\n\\t${0}\\n}\\n\",\n    \"name\": \"closure\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"=>\"\n  }, {\n    \"content\": \"/*\\n * $0\\n */\",\n    \"name\": \"Comment (multiline)\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"/*\"\n  }, {\n    \"content\": \"Console.WriteLine($1);\\n$0\",\n    \"name\": \"Console.WriteLine (writeline)\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"writeline\"\n  }, {\n    \"content\": \"[DBus(name = \\\"$0\\\")]\",\n    \"name\": \"DBus annotation\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"[DBus\"\n  }, {\n    \"content\": \"delegate ${1:void} ${2:DelegateName}($0);\",\n    \"name\": \"delegate\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"delegate\"\n  }, {\n    \"content\": \"do {\\n\\t$0\\n} while ($1);\\n\",\n    \"name\": \"do while\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"dowhile\"\n  }, {\n    \"content\": \"/**\\n * $0\\n */\",\n    \"name\": \"DocBlock\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"/**\"\n  }, {\n    \"content\": \"else if ($1) {\\n\\t$0\\n}\\n\",\n    \"name\": \"else if (elseif)\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"elseif\"\n  }, {\n    \"content\": \"else {\\n\\t$0\\n}\",\n    \"name\": \"else\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"else\"\n  }, {\n    \"content\": \"enum {$1:EnumName} {\\n\\t$0\\n}\",\n    \"name\": \"enum\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"enum\"\n  }, {\n    \"content\": \"public errordomain ${1:Error} {\\n\\t$0\\n}\",\n    \"name\": \"error domain\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"errordomain\"\n  }, {\n    \"content\": \"for ($1;$2;$3) {\\n\\t$0\\n}\",\n    \"name\": \"for\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"for\"\n  }, {\n    \"content\": \"foreach ($1 in $2) {\\n\\t$0\\n}\",\n    \"name\": \"foreach\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"foreach\"\n  }, {\n    \"content\": \"Gee.ArrayList<${1:G}>($0);\",\n    \"name\": \"Gee.ArrayList\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"ArrayList\"\n  }, {\n    \"content\": \"Gee.HashMap<${1:K},${2:V}>($0);\",\n    \"name\": \"Gee.HashMap\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"HashMap\"\n  }, {\n    \"content\": \"Gee.HashSet<${1:G}>($0);\",\n    \"name\": \"Gee.HashSet\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"HashSet\"\n  }, {\n    \"content\": \"if ($1) {\\n\\t$0\\n}\",\n    \"name\": \"if\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"if\"\n  }, {\n    \"content\": \"interface ${1:InterfaceName}{$2: : SuperInterface} {\\n\\t$0\\n}\",\n    \"name\": \"interface\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"interface\"\n  }, {\n    \"content\": \"public static int main(string [] argv) {\\n\\t${0}\\n\\treturn 0;\\n}\",\n    \"name\": \"Main function\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"main\"\n  }, {\n    \"content\": \"namespace $1 {\\n\\t$0\\n}\\n\",\n    \"name\": \"namespace (ns)\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"ns\"\n  }, {\n    \"content\": \"stdout.printf($0);\",\n    \"name\": \"printf\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"printf\"\n  }, {\n    \"content\": \"${1:public} ${2:Type} ${3:Name} {\\n\\tset {\\n\\t\\t$0\\n\\t}\\n\\tget {\\n\\n\\t}\\n}\",\n    \"name\": \"property (prop)\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"prop\"\n  }, {\n    \"content\": \"${1:public} ${2:Type} ${3:Name} {\\n\\tget {\\n\\t\\t$0\\n\\t}\\n}\",\n    \"name\": \"read-only property (roprop)\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"roprop\"\n  }, {\n    \"content\": \"@\\\"${1:\\\\$var}\\\"\",\n    \"name\": \"String template (@)\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"@\"\n  }, {\n    \"content\": \"struct ${1:StructName} {\\n\\t$0\\n}\",\n    \"name\": \"struct\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"struct\"\n  }, {\n    \"content\": \"switch ($1) {\\n\\t$0\\n}\",\n    \"name\": \"switch\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"switch\"\n  }, {\n    \"content\": \"try {\\n\\t$2\\n} catch (${1:Error} e) {\\n\\t$0\\n}\",\n    \"name\": \"try/catch\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"try\"\n  }, {\n    \"content\": \"\\\"\\\"\\\"$0\\\"\\\"\\\";\",\n    \"name\": \"Verbatim string (\\\"\\\"\\\")\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"verbatim\"\n  }, {\n    \"content\": \"while ($1) {\\n\\t$0\\n}\",\n    \"name\": \"while\",\n    \"scope\": \"vala\",\n    \"tabTrigger\": \"while\"\n  }];\n  exports.scope = \"\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/vala\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/snippets/vala.js"],"names":["ace","define","require","exports","module","snippets","scope","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/snippets/vala\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\nexports.snippets = [\n    {\n        \"content\": \"case ${1:condition}:\\n\\t$0\\n\\tbreak;\\n\",\n        \"name\": \"case\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"case\"\n    },\n    {\n        \"content\": \"/**\\n * ${6}\\n */\\n${1:public} class ${2:MethodName}${3: : GLib.Object} {\\n\\n\\t/**\\n\\t * ${7}\\n\\t */\\n\\tpublic ${2}(${4}) {\\n\\t\\t${5}\\n\\t}\\n\\n\\t$0\\n}\",\n        \"name\": \"class\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"class\"\n    },\n    {\n        \"content\": \"(${1}) => {\\n\\t${0}\\n}\\n\",\n        \"name\": \"closure\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"=>\"\n    },\n    {\n        \"content\": \"/*\\n * $0\\n */\",\n        \"name\": \"Comment (multiline)\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"/*\"\n    },\n    {\n        \"content\": \"Console.WriteLine($1);\\n$0\",\n        \"name\": \"Console.WriteLine (writeline)\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"writeline\"\n    },\n    {\n        \"content\": \"[DBus(name = \\\"$0\\\")]\",\n        \"name\": \"DBus annotation\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"[DBus\"\n    },\n    {\n        \"content\": \"delegate ${1:void} ${2:DelegateName}($0);\",\n        \"name\": \"delegate\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"delegate\"\n    },\n    {\n        \"content\": \"do {\\n\\t$0\\n} while ($1);\\n\",\n        \"name\": \"do while\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"dowhile\"\n    },\n    {\n        \"content\": \"/**\\n * $0\\n */\",\n        \"name\": \"DocBlock\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"/**\"\n    },\n    {\n        \"content\": \"else if ($1) {\\n\\t$0\\n}\\n\",\n        \"name\": \"else if (elseif)\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"elseif\"\n    },\n    {\n        \"content\": \"else {\\n\\t$0\\n}\",\n        \"name\": \"else\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"else\"\n    },\n    {\n        \"content\": \"enum {$1:EnumName} {\\n\\t$0\\n}\",\n        \"name\": \"enum\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"enum\"\n    },\n    {\n        \"content\": \"public errordomain ${1:Error} {\\n\\t$0\\n}\",\n        \"name\": \"error domain\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"errordomain\"\n    },\n    {\n        \"content\": \"for ($1;$2;$3) {\\n\\t$0\\n}\",\n        \"name\": \"for\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"for\"\n    },\n    {\n        \"content\": \"foreach ($1 in $2) {\\n\\t$0\\n}\",\n        \"name\": \"foreach\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"foreach\"\n    },\n    {\n        \"content\": \"Gee.ArrayList<${1:G}>($0);\",\n        \"name\": \"Gee.ArrayList\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"ArrayList\"\n    },\n    {\n        \"content\": \"Gee.HashMap<${1:K},${2:V}>($0);\",\n        \"name\": \"Gee.HashMap\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"HashMap\"\n    },\n    {\n        \"content\": \"Gee.HashSet<${1:G}>($0);\",\n        \"name\": \"Gee.HashSet\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"HashSet\"\n    },\n    {\n        \"content\": \"if ($1) {\\n\\t$0\\n}\",\n        \"name\": \"if\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"if\"\n    },\n    {\n        \"content\": \"interface ${1:InterfaceName}{$2: : SuperInterface} {\\n\\t$0\\n}\",\n        \"name\": \"interface\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"interface\"\n    },\n    {\n        \"content\": \"public static int main(string [] argv) {\\n\\t${0}\\n\\treturn 0;\\n}\",\n        \"name\": \"Main function\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"main\"\n    },\n    {\n        \"content\": \"namespace $1 {\\n\\t$0\\n}\\n\",\n        \"name\": \"namespace (ns)\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"ns\"\n    },\n    {\n        \"content\": \"stdout.printf($0);\",\n        \"name\": \"printf\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"printf\"\n    },\n    {\n        \"content\": \"${1:public} ${2:Type} ${3:Name} {\\n\\tset {\\n\\t\\t$0\\n\\t}\\n\\tget {\\n\\n\\t}\\n}\",\n        \"name\": \"property (prop)\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"prop\"\n    },\n    {\n        \"content\": \"${1:public} ${2:Type} ${3:Name} {\\n\\tget {\\n\\t\\t$0\\n\\t}\\n}\",\n        \"name\": \"read-only property (roprop)\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"roprop\"\n    },\n    {\n        \"content\": \"@\\\"${1:\\\\$var}\\\"\",\n        \"name\": \"String template (@)\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"@\"\n    },\n    {\n        \"content\": \"struct ${1:StructName} {\\n\\t$0\\n}\",\n        \"name\": \"struct\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"struct\"\n    },\n    {\n        \"content\": \"switch ($1) {\\n\\t$0\\n}\",\n        \"name\": \"switch\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"switch\"\n    },\n    {\n        \"content\": \"try {\\n\\t$2\\n} catch (${1:Error} e) {\\n\\t$0\\n}\",\n        \"name\": \"try/catch\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"try\"\n    },\n    {\n        \"content\": \"\\\"\\\"\\\"$0\\\"\\\"\\\";\",\n        \"name\": \"Verbatim string (\\\"\\\"\\\")\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"verbatim\"\n    },\n    {\n        \"content\": \"while ($1) {\\n\\t$0\\n}\",\n        \"name\": \"while\",\n        \"scope\": \"vala\",\n        \"tabTrigger\": \"while\"\n    }\n];\nexports.scope = \"\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/vala\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}