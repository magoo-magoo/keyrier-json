{"ast":null,"code":"/* eslint-disable */\nimport { useCallback, useRef } from 'react';\n\nvar isTouchEvent = function (event) {\n  return 'touches' in event;\n};\n\nvar preventDefault = function (event) {\n  if (!isTouchEvent(event)) return;\n\n  if (event.touches.length < 2 && event.preventDefault) {\n    event.preventDefault();\n  }\n};\n\nvar useLongPress = function (callback, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.isPreventDefault,\n      isPreventDefault = _c === void 0 ? true : _c,\n      _d = _b.delay,\n      delay = _d === void 0 ? 300 : _d;\n\n  var timeout = useRef();\n  var target = useRef();\n  var start = useCallback(function (event) {\n    // prevent ghost click on mobile devices\n    if (isPreventDefault && event.target) {\n      event.target.addEventListener('touchend', preventDefault, {\n        passive: false\n      });\n      target.current = event.target;\n    }\n\n    timeout.current = setTimeout(function () {\n      return callback(event);\n    }, delay);\n  }, [callback, delay]);\n  var clear = useCallback(function () {\n    // clearTimeout and removeEventListener\n    timeout.current && clearTimeout(timeout.current);\n\n    if (isPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, []);\n  return {\n    onMouseDown: function (e) {\n      return start(e);\n    },\n    onTouchStart: function (e) {\n      return start(e);\n    },\n    onMouseUp: clear,\n    onMouseLeave: clear,\n    onTouchEnd: clear\n  };\n};\n\nexport default useLongPress;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useLongPress.js"],"names":["useCallback","useRef","isTouchEvent","event","preventDefault","touches","length","useLongPress","callback","_a","_b","_c","isPreventDefault","_d","delay","timeout","target","start","addEventListener","passive","current","setTimeout","clear","clearTimeout","removeEventListener","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,OAApC;;AACA,IAAIC,YAAY,GAAG,UAAUC,KAAV,EAAiB;AAChC,SAAO,aAAaA,KAApB;AACH,CAFD;;AAGA,IAAIC,cAAc,GAAG,UAAUD,KAAV,EAAiB;AAClC,MAAI,CAACD,YAAY,CAACC,KAAD,CAAjB,EACI;;AACJ,MAAIA,KAAK,CAACE,OAAN,CAAcC,MAAd,GAAuB,CAAvB,IAA4BH,KAAK,CAACC,cAAtC,EAAsD;AAClDD,IAAAA,KAAK,CAACC,cAAN;AACH;AACJ,CAND;;AAOA,IAAIG,YAAY,GAAG,UAAUC,QAAV,EAAoBC,EAApB,EAAwB;AACvC,MAAIC,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA9B;AAAA,MAAkCE,EAAE,GAAGD,EAAE,CAACE,gBAA1C;AAAA,MAA4DA,gBAAgB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAtG;AAAA,MAA0GE,EAAE,GAAGH,EAAE,CAACI,KAAlH;AAAA,MAAyHA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,GAAhB,GAAsBA,EAAvJ;;AACA,MAAIE,OAAO,GAAGd,MAAM,EAApB;AACA,MAAIe,MAAM,GAAGf,MAAM,EAAnB;AACA,MAAIgB,KAAK,GAAGjB,WAAW,CAAC,UAAUG,KAAV,EAAiB;AACrC;AACA,QAAIS,gBAAgB,IAAIT,KAAK,CAACa,MAA9B,EAAsC;AAClCb,MAAAA,KAAK,CAACa,MAAN,CAAaE,gBAAb,CAA8B,UAA9B,EAA0Cd,cAA1C,EAA0D;AAAEe,QAAAA,OAAO,EAAE;AAAX,OAA1D;AACAH,MAAAA,MAAM,CAACI,OAAP,GAAiBjB,KAAK,CAACa,MAAvB;AACH;;AACDD,IAAAA,OAAO,CAACK,OAAR,GAAkBC,UAAU,CAAC,YAAY;AAAE,aAAOb,QAAQ,CAACL,KAAD,CAAf;AAAyB,KAAxC,EAA0CW,KAA1C,CAA5B;AACH,GAPsB,EAOpB,CAACN,QAAD,EAAWM,KAAX,CAPoB,CAAvB;AAQA,MAAIQ,KAAK,GAAGtB,WAAW,CAAC,YAAY;AAChC;AACAe,IAAAA,OAAO,CAACK,OAAR,IAAmBG,YAAY,CAACR,OAAO,CAACK,OAAT,CAA/B;;AACA,QAAIR,gBAAgB,IAAII,MAAM,CAACI,OAA/B,EAAwC;AACpCJ,MAAAA,MAAM,CAACI,OAAP,CAAeI,mBAAf,CAAmC,UAAnC,EAA+CpB,cAA/C;AACH;AACJ,GANsB,EAMpB,EANoB,CAAvB;AAOA,SAAO;AACHqB,IAAAA,WAAW,EAAE,UAAUC,CAAV,EAAa;AAAE,aAAOT,KAAK,CAACS,CAAD,CAAZ;AAAkB,KAD3C;AAEHC,IAAAA,YAAY,EAAE,UAAUD,CAAV,EAAa;AAAE,aAAOT,KAAK,CAACS,CAAD,CAAZ;AAAkB,KAF5C;AAGHE,IAAAA,SAAS,EAAEN,KAHR;AAIHO,IAAAA,YAAY,EAAEP,KAJX;AAKHQ,IAAAA,UAAU,EAAER;AALT,GAAP;AAOH,CA1BD;;AA2BA,eAAef,YAAf","sourcesContent":["/* eslint-disable */\nimport { useCallback, useRef } from 'react';\nvar isTouchEvent = function (event) {\n    return 'touches' in event;\n};\nvar preventDefault = function (event) {\n    if (!isTouchEvent(event))\n        return;\n    if (event.touches.length < 2 && event.preventDefault) {\n        event.preventDefault();\n    }\n};\nvar useLongPress = function (callback, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.isPreventDefault, isPreventDefault = _c === void 0 ? true : _c, _d = _b.delay, delay = _d === void 0 ? 300 : _d;\n    var timeout = useRef();\n    var target = useRef();\n    var start = useCallback(function (event) {\n        // prevent ghost click on mobile devices\n        if (isPreventDefault && event.target) {\n            event.target.addEventListener('touchend', preventDefault, { passive: false });\n            target.current = event.target;\n        }\n        timeout.current = setTimeout(function () { return callback(event); }, delay);\n    }, [callback, delay]);\n    var clear = useCallback(function () {\n        // clearTimeout and removeEventListener\n        timeout.current && clearTimeout(timeout.current);\n        if (isPreventDefault && target.current) {\n            target.current.removeEventListener('touchend', preventDefault);\n        }\n    }, []);\n    return {\n        onMouseDown: function (e) { return start(e); },\n        onTouchStart: function (e) { return start(e); },\n        onMouseUp: clear,\n        onMouseLeave: clear,\n        onTouchEnd: clear,\n    };\n};\nexport default useLongPress;\n"]},"metadata":{},"sourceType":"module"}