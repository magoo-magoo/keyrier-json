{"ast":null,"code":"/* eslint-disable */\nimport { useEffect, useRef } from 'react';\nexport function getClosestBody(el) {\n  if (!el) {\n    return null;\n  } else if (el.tagName === 'BODY') {\n    return el;\n  } else if (el.tagName === 'IFRAME') {\n    var document_1 = el.contentDocument;\n    return document_1 ? document_1.body : null;\n  } else if (!el.offsetParent) {\n    return null;\n  }\n\n  return getClosestBody(el.offsetParent);\n}\n\nfunction preventDefault(rawEvent) {\n  var e = rawEvent || window.event; // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n\n  if (e.touches.length > 1) return true;\n  if (e.preventDefault) e.preventDefault();\n  return false;\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && /iP(ad|hone|od)/.test(window.navigator.platform);\nvar bodies = new Map();\nvar doc = typeof document === 'object' ? document : undefined;\nvar documentListenerAdded = false;\nexport default !doc ? function useLockBodyMock(_locked, _elementRef) {\n  if (_locked === void 0) {\n    _locked = true;\n  }\n} : function useLockBody(locked, elementRef) {\n  if (locked === void 0) {\n    locked = true;\n  }\n\n  elementRef = elementRef || useRef(doc.body);\n  useEffect(function () {\n    var body = getClosestBody(elementRef.current);\n\n    if (!body) {\n      return;\n    }\n\n    var bodyInfo = bodies.get(body);\n\n    if (locked) {\n      if (!bodyInfo) {\n        bodies.set(body, {\n          counter: 1,\n          initialOverflow: body.style.overflow\n        });\n\n        if (isIosDevice) {\n          if (!documentListenerAdded) {\n            document.addEventListener('touchmove', preventDefault, {\n              passive: false\n            });\n            documentListenerAdded = true;\n          }\n        } else {\n          body.style.overflow = 'hidden';\n        }\n      } else {\n        bodies.set(body, {\n          counter: bodyInfo.counter + 1,\n          initialOverflow: bodyInfo.initialOverflow\n        });\n      }\n    } else {\n      if (bodyInfo) {\n        if (bodyInfo.counter === 1) {\n          bodies.delete(body);\n\n          if (isIosDevice) {\n            body.ontouchmove = null;\n\n            if (documentListenerAdded) {\n              document.removeEventListener('touchmove', preventDefault);\n              documentListenerAdded = false;\n            }\n          } else {\n            body.style.overflow = bodyInfo.initialOverflow;\n          }\n        } else {\n          bodies.set(body, {\n            counter: bodyInfo.counter - 1,\n            initialOverflow: bodyInfo.initialOverflow\n          });\n        }\n      }\n    }\n  }, [locked, elementRef.current]);\n};","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useLockBodyScroll.js"],"names":["useEffect","useRef","getClosestBody","el","tagName","document_1","contentDocument","body","offsetParent","preventDefault","rawEvent","e","window","event","touches","length","isIosDevice","navigator","platform","test","bodies","Map","doc","document","undefined","documentListenerAdded","useLockBodyMock","_locked","_elementRef","useLockBody","locked","elementRef","current","bodyInfo","get","set","counter","initialOverflow","style","overflow","addEventListener","passive","delete","ontouchmove","removeEventListener"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { useEffect, useRef } from 'react';\nexport function getClosestBody(el) {\n    if (!el) {\n        return null;\n    }\n    else if (el.tagName === 'BODY') {\n        return el;\n    }\n    else if (el.tagName === 'IFRAME') {\n        var document_1 = el.contentDocument;\n        return document_1 ? document_1.body : null;\n    }\n    else if (!el.offsetParent) {\n        return null;\n    }\n    return getClosestBody(el.offsetParent);\n}\nfunction preventDefault(rawEvent) {\n    var e = rawEvent || window.event;\n    // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n    if (e.touches.length > 1)\n        return true;\n    if (e.preventDefault)\n        e.preventDefault();\n    return false;\n}\nvar isIosDevice = typeof window !== 'undefined' &&\n    window.navigator &&\n    window.navigator.platform &&\n    /iP(ad|hone|od)/.test(window.navigator.platform);\nvar bodies = new Map();\nvar doc = typeof document === 'object' ? document : undefined;\nvar documentListenerAdded = false;\nexport default !doc\n    ? function useLockBodyMock(_locked, _elementRef) {\n        if (_locked === void 0) { _locked = true; }\n    }\n    : function useLockBody(locked, elementRef) {\n        if (locked === void 0) { locked = true; }\n        elementRef = elementRef || useRef(doc.body);\n        useEffect(function () {\n            var body = getClosestBody(elementRef.current);\n            if (!body) {\n                return;\n            }\n            var bodyInfo = bodies.get(body);\n            if (locked) {\n                if (!bodyInfo) {\n                    bodies.set(body, { counter: 1, initialOverflow: body.style.overflow });\n                    if (isIosDevice) {\n                        if (!documentListenerAdded) {\n                            document.addEventListener('touchmove', preventDefault, { passive: false });\n                            documentListenerAdded = true;\n                        }\n                    }\n                    else {\n                        body.style.overflow = 'hidden';\n                    }\n                }\n                else {\n                    bodies.set(body, { counter: bodyInfo.counter + 1, initialOverflow: bodyInfo.initialOverflow });\n                }\n            }\n            else {\n                if (bodyInfo) {\n                    if (bodyInfo.counter === 1) {\n                        bodies.delete(body);\n                        if (isIosDevice) {\n                            body.ontouchmove = null;\n                            if (documentListenerAdded) {\n                                document.removeEventListener('touchmove', preventDefault);\n                                documentListenerAdded = false;\n                            }\n                        }\n                        else {\n                            body.style.overflow = bodyInfo.initialOverflow;\n                        }\n                    }\n                    else {\n                        bodies.set(body, { counter: bodyInfo.counter - 1, initialOverflow: bodyInfo.initialOverflow });\n                    }\n                }\n            }\n        }, [locked, elementRef.current]);\n    };\n"]},"metadata":{},"sourceType":"module"}