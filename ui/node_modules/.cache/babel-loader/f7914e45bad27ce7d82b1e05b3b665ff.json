{"ast":null,"code":"ace.define(\"ace/snippets/lsl\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippetText = \"snippet @\\n\\\n\t@${1:label};\\n\\\nsnippet CAMERA_ACTIVE\\n\\\n\tCAMERA_ACTIVE, ${1:integer isActive}, $0\\n\\\nsnippet CAMERA_BEHINDNESS_ANGLE\\n\\\n\tCAMERA_BEHINDNESS_ANGLE, ${1:float degrees}, $0\\n\\\nsnippet CAMERA_BEHINDNESS_LAG\\n\\\n\tCAMERA_BEHINDNESS_LAG, ${1:float seconds}, $0\\n\\\nsnippet CAMERA_DISTANCE\\n\\\n\tCAMERA_DISTANCE, ${1:float meters}, $0\\n\\\nsnippet CAMERA_FOCUS\\n\\\n\tCAMERA_FOCUS, ${1:vector position}, $0\\n\\\nsnippet CAMERA_FOCUS_LAG\\n\\\n\tCAMERA_FOCUS_LAG, ${1:float seconds}, $0\\n\\\nsnippet CAMERA_FOCUS_LOCKED\\n\\\n\tCAMERA_FOCUS_LOCKED, ${1:integer isLocked}, $0\\n\\\nsnippet CAMERA_FOCUS_OFFSET\\n\\\n\tCAMERA_FOCUS_OFFSET, ${1:vector meters}, $0\\n\\\nsnippet CAMERA_FOCUS_THRESHOLD\\n\\\n\tCAMERA_FOCUS_THRESHOLD, ${1:float meters}, $0\\n\\\nsnippet CAMERA_PITCH\\n\\\n\tCAMERA_PITCH, ${1:float degrees}, $0\\n\\\nsnippet CAMERA_POSITION\\n\\\n\tCAMERA_POSITION, ${1:vector position}, $0\\n\\\nsnippet CAMERA_POSITION_LAG\\n\\\n\tCAMERA_POSITION_LAG, ${1:float seconds}, $0\\n\\\nsnippet CAMERA_POSITION_LOCKED\\n\\\n\tCAMERA_POSITION_LOCKED, ${1:integer isLocked}, $0\\n\\\nsnippet CAMERA_POSITION_THRESHOLD\\n\\\n\tCAMERA_POSITION_THRESHOLD, ${1:float meters}, $0\\n\\\nsnippet CHARACTER_AVOIDANCE_MODE\\n\\\n\tCHARACTER_AVOIDANCE_MODE, ${1:integer flags}, $0\\n\\\nsnippet CHARACTER_DESIRED_SPEED\\n\\\n\tCHARACTER_DESIRED_SPEED, ${1:float speed}, $0\\n\\\nsnippet CHARACTER_DESIRED_TURN_SPEED\\n\\\n\tCHARACTER_DESIRED_TURN_SPEED, ${1:float speed}, $0\\n\\\nsnippet CHARACTER_LENGTH\\n\\\n\tCHARACTER_LENGTH, ${1:float length}, $0\\n\\\nsnippet CHARACTER_MAX_TURN_RADIUS\\n\\\n\tCHARACTER_MAX_TURN_RADIUS, ${1:float radius}, $0\\n\\\nsnippet CHARACTER_ORIENTATION\\n\\\n\tCHARACTER_ORIENTATION, ${1:integer orientation}, $0\\n\\\nsnippet CHARACTER_RADIUS\\n\\\n\tCHARACTER_RADIUS, ${1:float radius}, $0\\n\\\nsnippet CHARACTER_STAY_WITHIN_PARCEL\\n\\\n\tCHARACTER_STAY_WITHIN_PARCEL, ${1:boolean stay}, $0\\n\\\nsnippet CHARACTER_TYPE\\n\\\n\tCHARACTER_TYPE, ${1:integer type}, $0\\n\\\nsnippet HTTP_BODY_MAXLENGTH\\n\\\n\tHTTP_BODY_MAXLENGTH, ${1:integer length}, $0\\n\\\nsnippet HTTP_CUSTOM_HEADER\\n\\\n\tHTTP_CUSTOM_HEADER, ${1:string name}, ${2:string value}, $0\\n\\\nsnippet HTTP_METHOD\\n\\\n\tHTTP_METHOD, ${1:string method}, $0\\n\\\nsnippet HTTP_MIMETYPE\\n\\\n\tHTTP_MIMETYPE, ${1:string mimeType}, $0\\n\\\nsnippet HTTP_PRAGMA_NO_CACHE\\n\\\n\tHTTP_PRAGMA_NO_CACHE, ${1:integer send_header}, $0\\n\\\nsnippet HTTP_VERBOSE_THROTTLE\\n\\\n\tHTTP_VERBOSE_THROTTLE, ${1:integer noisy}, $0\\n\\\nsnippet HTTP_VERIFY_CERT\\n\\\n\tHTTP_VERIFY_CERT, ${1:integer verify}, $0\\n\\\nsnippet RC_DATA_FLAGS\\n\\\n\tRC_DATA_FLAGS, ${1:integer flags}, $0\\n\\\nsnippet RC_DETECT_PHANTOM\\n\\\n\tRC_DETECT_PHANTOM, ${1:integer dectedPhantom}, $0\\n\\\nsnippet RC_MAX_HITS\\n\\\n\tRC_MAX_HITS, ${1:integer maxHits}, $0\\n\\\nsnippet RC_REJECT_TYPES\\n\\\n\tRC_REJECT_TYPES, ${1:integer filterMask}, $0\\n\\\nsnippet at_rot_target\\n\\\n\tat_rot_target(${1:integer handle}, ${2:rotation targetrot}, ${3:rotation ourrot})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet at_target\\n\\\n\tat_target(${1:integer tnum}, ${2:vector targetpos}, ${3:vector ourpos})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet attach\\n\\\n\tattach(${1:key id})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet changed\\n\\\n\tchanged(${1:integer change})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet collision\\n\\\n\tcollision(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet collision_end\\n\\\n\tcollision_end(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet collision_start\\n\\\n\tcollision_start(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet control\\n\\\n\tcontrol(${1:key id}, ${2:integer level}, ${3:integer edge})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet dataserver\\n\\\n\tdataserver(${1:key query_id}, ${2:string data})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet do\\n\\\n\tdo\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\n\twhile (${1:condition});\\n\\\nsnippet else\\n\\\n\telse\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet email\\n\\\n\temail(${1:string time}, ${2:string address}, ${3:string subject}, ${4:string message}, ${5:integer num_left})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet experience_permissions\\n\\\n\texperience_permissions(${1:key agent_id})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet experience_permissions_denied\\n\\\n\texperience_permissions_denied(${1:key agent_id}, ${2:integer reason})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet for\\n\\\n\tfor (${1:start}; ${3:condition}; ${3:step})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet http_request\\n\\\n\thttp_request(${1:key request_id}, ${2:string method}, ${3:string body})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet http_response\\n\\\n\thttp_response(${1:key request_id}, ${2:integer status}, ${3:list metadata}, ${4:string body})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet if\\n\\\n\tif (${1:condition})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet jump\\n\\\n\tjump ${1:label};\\n\\\nsnippet land_collision\\n\\\n\tland_collision(${1:vector pos})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet land_collision_end\\n\\\n\tland_collision_end(${1:vector pos})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet land_collision_start\\n\\\n\tland_collision_start(${1:vector pos})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet link_message\\n\\\n\tlink_message(${1:integer sender_num}, ${2:integer num}, ${3:string str}, ${4:key id})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet listen\\n\\\n\tlisten(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string message})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet llAbs\\n\\\n\tllAbs(${1:integer val})\\n\\\nsnippet llAcos\\n\\\n\tllAcos(${1:float val})\\n\\\nsnippet llAddToLandBanList\\n\\\n\tllAddToLandBanList(${1:key agent}, ${2:float hours});\\n\\\n\t$0\\n\\\nsnippet llAddToLandPassList\\n\\\n\tllAddToLandPassList(${1:key agent}, ${2:float hours});\\n\\\n\t$0\\n\\\nsnippet llAdjustSoundVolume\\n\\\n\tllAdjustSoundVolume(${1:float volume});\\n\\\n\t$0\\n\\\nsnippet llAgentInExperience\\n\\\n\tllAgentInExperience(${1:key agent})\\n\\\nsnippet llAllowInventoryDrop\\n\\\n\tllAllowInventoryDrop(${1:integer add});\\n\\\n\t$0\\n\\\nsnippet llAngleBetween\\n\\\n\tllAngleBetween(${1:rotation a}, ${2:rotation b})\\n\\\nsnippet llApplyImpulse\\n\\\n\tllApplyImpulse(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llApplyRotationalImpulse\\n\\\n\tllApplyRotationalImpulse(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llAsin\\n\\\n\tllAsin(${1:float val})\\n\\\nsnippet llAtan2\\n\\\n\tllAtan2(${1:float y}, ${2:float x})\\n\\\nsnippet llAttachToAvatar\\n\\\n\tllAttachToAvatar(${1:integer attach_point});\\n\\\n\t$0\\n\\\nsnippet llAttachToAvatarTemp\\n\\\n\tllAttachToAvatarTemp(${1:integer attach_point});\\n\\\n\t$0\\n\\\nsnippet llAvatarOnLinkSitTarget\\n\\\n\tllAvatarOnLinkSitTarget(${1:integer link})\\n\\\nsnippet llAvatarOnSitTarget\\n\\\n\tllAvatarOnSitTarget()\\n\\\nsnippet llAxes2Rot\\n\\\n\tllAxes2Rot(${1:vector fwd}, ${2:vector left}, ${3:vector up})\\n\\\nsnippet llAxisAngle2Rot\\n\\\n\tllAxisAngle2Rot(${1:vector axis}, ${2:float angle})\\n\\\nsnippet llBase64ToInteger\\n\\\n\tllBase64ToInteger(${1:string str})\\n\\\nsnippet llBase64ToString\\n\\\n\tllBase64ToString(${1:string str})\\n\\\nsnippet llBreakAllLinks\\n\\\n\tllBreakAllLinks();\\n\\\n\t$0\\n\\\nsnippet llBreakLink\\n\\\n\tllBreakLink(${1:integer link});\\n\\\n\t$0\\n\\\nsnippet llCastRay\\n\\\n\tllCastRay(${1:vector start}, ${2:vector end}, ${3:list options});\\n\\\n\t$0\\n\\\nsnippet llCeil\\n\\\n\tllCeil(${1:float val})\\n\\\nsnippet llClearCameraParams\\n\\\n\tllClearCameraParams();\\n\\\n\t$0\\n\\\nsnippet llClearLinkMedia\\n\\\n\tllClearLinkMedia(${1:integer link}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llClearPrimMedia\\n\\\n\tllClearPrimMedia(${1:integer face});\\n\\\n\t$0\\n\\\nsnippet llCloseRemoteDataChannel\\n\\\n\tllCloseRemoteDataChannel(${1:key channel});\\n\\\n\t$0\\n\\\nsnippet llCollisionFilter\\n\\\n\tllCollisionFilter(${1:string name}, ${2:key id}, ${3:integer accept});\\n\\\n\t$0\\n\\\nsnippet llCollisionSound\\n\\\n\tllCollisionSound(${1:string impact_sound}, ${2:float impact_volume});\\n\\\n\t$0\\n\\\nsnippet llCos\\n\\\n\tllCos(${1:float theta})\\n\\\nsnippet llCreateCharacter\\n\\\n\tllCreateCharacter(${1:list options});\\n\\\n\t$0\\n\\\nsnippet llCreateKeyValue\\n\\\n\tllCreateKeyValue(${1:string k})\\n\\\nsnippet llCreateLink\\n\\\n\tllCreateLink(${1:key target}, ${2:integer parent});\\n\\\n\t$0\\n\\\nsnippet llCSV2List\\n\\\n\tllCSV2List(${1:string src})\\n\\\nsnippet llDataSizeKeyValue\\n\\\n\tllDataSizeKeyValue()\\n\\\nsnippet llDeleteCharacter\\n\\\n\tllDeleteCharacter();\\n\\\n\t$0\\n\\\nsnippet llDeleteKeyValue\\n\\\n\tllDeleteKeyValue(${1:string k})\\n\\\nsnippet llDeleteSubList\\n\\\n\tllDeleteSubList(${1:list src}, ${2:integer start}, ${3:integer end})\\n\\\nsnippet llDeleteSubString\\n\\\n\tllDeleteSubString(${1:string src}, ${2:integer start}, ${3:integer end})\\n\\\nsnippet llDetachFromAvatar\\n\\\n\tllDetachFromAvatar();\\n\\\n\t$0\\n\\\nsnippet llDetectedGrab\\n\\\n\tllDetectedGrab(${1:integer number})\\n\\\nsnippet llDetectedGroup\\n\\\n\tllDetectedGroup(${1:integer number})\\n\\\nsnippet llDetectedKey\\n\\\n\tllDetectedKey(${1:integer number})\\n\\\nsnippet llDetectedLinkNumber\\n\\\n\tllDetectedLinkNumber(${1:integer number})\\n\\\nsnippet llDetectedName\\n\\\n\tllDetectedName(${1:integer number})\\n\\\nsnippet llDetectedOwner\\n\\\n\tllDetectedOwner(${1:integer number})\\n\\\nsnippet llDetectedPos\\n\\\n\tllDetectedPosl(${1:integer number})\\n\\\nsnippet llDetectedRot\\n\\\n\tllDetectedRot(${1:integer number})\\n\\\nsnippet llDetectedTouchBinormal\\n\\\n\tllDetectedTouchBinormal(${1:integer number})\\n\\\nsnippet llDetectedTouchFace\\n\\\n\tllDetectedTouchFace(${1:integer number})\\n\\\nsnippet llDetectedTouchNormal\\n\\\n\tllDetectedTouchNormal(${1:integer number})\\n\\\nsnippet llDetectedTouchPos\\n\\\n\tllDetectedTouchPos(${1:integer number})\\n\\\nsnippet llDetectedTouchST\\n\\\n\tllDetectedTouchST(${1:integer number})\\n\\\nsnippet llDetectedTouchUV\\n\\\n\tllDetectedTouchUV(${1:integer number})\\n\\\nsnippet llDetectedType\\n\\\n\tllDetectedType(${1:integer number})\\n\\\nsnippet llDetectedVel\\n\\\n\tllDetectedVel(${1:integer number})\\n\\\nsnippet llDialog\\n\\\n\tllDialog(${1:key agent}, ${2:string message}, ${3:list buttons}, ${4:integer channel});\\n\\\n\t$0\\n\\\nsnippet llDie\\n\\\n\tllDie();\\n\\\n\t$0\\n\\\nsnippet llDumpList2String\\n\\\n\tllDumpList2String(${1:list src}, ${2:string separator})\\n\\\nsnippet llEdgeOfWorld\\n\\\n\tllEdgeOfWorld(${1:vector pos}, ${2:vector dir})\\n\\\nsnippet llEjectFromLand\\n\\\n\tllEjectFromLand(${1:key agent});\\n\\\n\t$0\\n\\\nsnippet llEmail\\n\\\n\tllEmail(${1:string address}, ${2:string subject}, ${3:string message});\\n\\\n\t$0\\n\\\nsnippet llEscapeURL\\n\\\n\tllEscapeURL(${1:string url})\\n\\\nsnippet llEuler2Rot\\n\\\n\tllEuler2Rot(${1:vector v})\\n\\\nsnippet llExecCharacterCmd\\n\\\n\tllExecCharacterCmd(${1:integer command}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llEvade\\n\\\n\tllEvade(${1:key target}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llFabs\\n\\\n\tllFabs(${1:float val})\\n\\\nsnippet llFleeFrom\\n\\\n\tllFleeFrom(${1:vector position}, ${2:float distance}, ${3:list options});\\n\\\n\t$0\\n\\\nsnippet llFloor\\n\\\n\tllFloor(${1:float val})\\n\\\nsnippet llForceMouselook\\n\\\n\tllForceMouselook(${1:integer mouselook});\\n\\\n\t$0\\n\\\nsnippet llFrand\\n\\\n\tllFrand(${1:float mag})\\n\\\nsnippet llGenerateKey\\n\\\n\tllGenerateKey()\\n\\\nsnippet llGetAccel\\n\\\n\tllGetAccel()\\n\\\nsnippet llGetAgentInfo\\n\\\n\tllGetAgentInfo(${1:key id})\\n\\\nsnippet llGetAgentLanguage\\n\\\n\tllGetAgentLanguage(${1:key agent})\\n\\\nsnippet llGetAgentList\\n\\\n\tllGetAgentList(${1:integer scope}, ${2:list options})\\n\\\nsnippet llGetAgentSize\\n\\\n\tllGetAgentSize(${1:key agent})\\n\\\nsnippet llGetAlpha\\n\\\n\tllGetAlpha(${1:integer face})\\n\\\nsnippet llGetAndResetTime\\n\\\n\tllGetAndResetTime()\\n\\\nsnippet llGetAnimation\\n\\\n\tllGetAnimation(${1:key id})\\n\\\nsnippet llGetAnimationList\\n\\\n\tllGetAnimationList(${1:key agent})\\n\\\nsnippet llGetAnimationOverride\\n\\\n\tllGetAnimationOverride(${1:string anim_state})\\n\\\nsnippet llGetAttached\\n\\\n\tllGetAttached()\\n\\\nsnippet llGetAttachedList\\n\\\n\tllGetAttachedList(${1:key id})\\n\\\nsnippet llGetBoundingBox\\n\\\n\tllGetBoundingBox(${1:key object})\\n\\\nsnippet llGetCameraPos\\n\\\n\tllGetCameraPos()\\n\\\nsnippet llGetCameraRot\\n\\\n\tllGetCameraRot()\\n\\\nsnippet llGetCenterOfMass\\n\\\n\tllGetCenterOfMass()\\n\\\nsnippet llGetClosestNavPoint\\n\\\n\tllGetClosestNavPoint(${1:vector point}, ${2:list options})\\n\\\nsnippet llGetColor\\n\\\n\tllGetColor(${1:integer face})\\n\\\nsnippet llGetCreator\\n\\\n\tllGetCreator()\\n\\\nsnippet llGetDate\\n\\\n\tllGetDate()\\n\\\nsnippet llGetDisplayName\\n\\\n\tllGetDisplayName(${1:key id})\\n\\\nsnippet llGetEnergy\\n\\\n\tllGetEnergy()\\n\\\nsnippet llGetEnv\\n\\\n\tllGetEnv(${1:string name})\\n\\\nsnippet llGetExperienceDetails\\n\\\n\tllGetExperienceDetails(${1:key experience_id})\\n\\\nsnippet llGetExperienceErrorMessage\\n\\\n\tllGetExperienceErrorMessage(${1:integer error})\\n\\\nsnippet llGetForce\\n\\\n\tllGetForce()\\n\\\nsnippet llGetFreeMemory\\n\\\n\tllGetFreeMemory()\\n\\\nsnippet llGetFreeURLs\\n\\\n\tllGetFreeURLs()\\n\\\nsnippet llGetGeometricCenter\\n\\\n\tllGetGeometricCenter()\\n\\\nsnippet llGetGMTclock\\n\\\n\tllGetGMTclock()\\n\\\nsnippet llGetHTTPHeader\\n\\\n\tllGetHTTPHeader(${1:key request_id}, ${2:string header})\\n\\\nsnippet llGetInventoryCreator\\n\\\n\tllGetInventoryCreator(${1:string item})\\n\\\nsnippet llGetInventoryKey\\n\\\n\tllGetInventoryKey(${1:string name})\\n\\\nsnippet llGetInventoryName\\n\\\n\tllGetInventoryName(${1:integer type}, ${2:integer number})\\n\\\nsnippet llGetInventoryNumber\\n\\\n\tllGetInventoryNumber(${1:integer type})\\n\\\nsnippet llGetInventoryPermMask\\n\\\n\tllGetInventoryPermMask(${1:string item}, ${2:integer mask})\\n\\\nsnippet llGetInventoryType\\n\\\n\tllGetInventoryType(${1:string name})\\n\\\nsnippet llGetKey\\n\\\n\tllGetKey()\\n\\\nsnippet llGetLandOwnerAt\\n\\\n\tllGetLandOwnerAt(${1:vector pos})\\n\\\nsnippet llGetLinkKey\\n\\\n\tllGetLinkKey(${1:integer link})\\n\\\nsnippet llGetLinkMedia\\n\\\n\tllGetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})\\n\\\nsnippet llGetLinkName\\n\\\n\tllGetLinkName(${1:integer link})\\n\\\nsnippet llGetLinkNumber\\n\\\n\tllGetLinkNumber()\\n\\\nsnippet llGetLinkNumberOfSides\\n\\\n\tllGetLinkNumberOfSides(${1:integer link})\\n\\\nsnippet llGetLinkPrimitiveParams\\n\\\n\tllGetLinkPrimitiveParams(${1:integer link}, ${2:list params})\\n\\\nsnippet llGetListEntryType\\n\\\n\tllGetListEntryType(${1:list src}, ${2:integer index})\\n\\\nsnippet llGetListLength\\n\\\n\tllGetListLength(${1:list src})\\n\\\nsnippet llGetLocalPos\\n\\\n\tllGetLocalPos()\\n\\\nsnippet llGetLocalRot\\n\\\n\tllGetLocalRot()\\n\\\nsnippet llGetMass\\n\\\n\tllGetMass()\\n\\\nsnippet llGetMassMKS\\n\\\n\tllGetMassMKS()\\n\\\nsnippet llGetMaxScaleFactor\\n\\\n\tllGetMaxScaleFactor()\\n\\\nsnippet llGetMemoryLimit\\n\\\n\tllGetMemoryLimit()\\n\\\nsnippet llGetMinScaleFactor\\n\\\n\tllGetMinScaleFactor()\\n\\\nsnippet llGetNextEmail\\n\\\n\tllGetNextEmail(${1:string address}, ${2:string subject});\\n\\\n\t$0\\n\\\nsnippet llGetNotecardLine\\n\\\n\tllGetNotecardLine(${1:string name}, ${2:integer line})\\n\\\nsnippet llGetNumberOfNotecardLines\\n\\\n\tllGetNumberOfNotecardLines(${1:string name})\\n\\\nsnippet llGetNumberOfPrims\\n\\\n\tllGetNumberOfPrims()\\n\\\nsnippet llGetNumberOfSides\\n\\\n\tllGetNumberOfSides()\\n\\\nsnippet llGetObjectDesc\\n\\\n\tllGetObjectDesc()\\n\\\nsnippet llGetObjectDetails\\n\\\n\tllGetObjectDetails(${1:key id}, ${2:list params})\\n\\\nsnippet llGetObjectMass\\n\\\n\tllGetObjectMass(${1:key id})\\n\\\nsnippet llGetObjectName\\n\\\n\tllGetObjectName()\\n\\\nsnippet llGetObjectPermMask\\n\\\n\tllGetObjectPermMask(${1:integer mask})\\n\\\nsnippet llGetObjectPrimCount\\n\\\n\tllGetObjectPrimCount(${1:key prim})\\n\\\nsnippet llGetOmega\\n\\\n\tllGetOmega()\\n\\\nsnippet llGetOwner\\n\\\n\tllGetOwner()\\n\\\nsnippet llGetOwnerKey\\n\\\n\tllGetOwnerKey(${1:key id})\\n\\\nsnippet llGetParcelDetails\\n\\\n\tllGetParcelDetails(${1:vector pos}, ${2:list params})\\n\\\nsnippet llGetParcelFlags\\n\\\n\tllGetParcelFlags(${1:vector pos})\\n\\\nsnippet llGetParcelMaxPrims\\n\\\n\tllGetParcelMaxPrims(${1:vector pos}, ${2:integer sim_wide})\\n\\\nsnippet llGetParcelMusicURL\\n\\\n\tllGetParcelMusicURL()\\n\\\nsnippet llGetParcelPrimCount\\n\\\n\tllGetParcelPrimCount(${1:vector pos}, ${2:integer category}, ${3:integer sim_wide})\\n\\\nsnippet llGetParcelPrimOwners\\n\\\n\tllGetParcelPrimOwners(${1:vector pos})\\n\\\nsnippet llGetPermissions\\n\\\n\tllGetPermissions()\\n\\\nsnippet llGetPermissionsKey\\n\\\n\tllGetPermissionsKey()\\n\\\nsnippet llGetPhysicsMaterial\\n\\\n\tllGetPhysicsMaterial()\\n\\\nsnippet llGetPos\\n\\\n\tllGetPos()\\n\\\nsnippet llGetPrimitiveParams\\n\\\n\tllGetPrimitiveParams(${1:list params})\\n\\\nsnippet llGetPrimMediaParams\\n\\\n\tllGetPrimMediaParams(${1:integer face}, ${2:list params})\\n\\\nsnippet llGetRegionAgentCount\\n\\\n\tllGetRegionAgentCount()\\n\\\nsnippet llGetRegionCorner\\n\\\n\tllGetRegionCorner()\\n\\\nsnippet llGetRegionFlags\\n\\\n\tllGetRegionFlags()\\n\\\nsnippet llGetRegionFPS\\n\\\n\tllGetRegionFPS()\\n\\\nsnippet llGetRegionName\\n\\\n\tllGetRegionName()\\n\\\nsnippet llGetRegionTimeDilation\\n\\\n\tllGetRegionTimeDilation()\\n\\\nsnippet llGetRootPosition\\n\\\n\tllGetRootPosition()\\n\\\nsnippet llGetRootRotation\\n\\\n\tllGetRootRotation()\\n\\\nsnippet llGetRot\\n\\\n\tllGetRot()\\n\\\nsnippet llGetScale\\n\\\n\tllGetScale()\\n\\\nsnippet llGetScriptName\\n\\\n\tllGetScriptName()\\n\\\nsnippet llGetScriptState\\n\\\n\tllGetScriptState(${1:string script})\\n\\\nsnippet llGetSimStats\\n\\\n\tllGetSimStats(${1:integer stat_type})\\n\\\nsnippet llGetSimulatorHostname\\n\\\n\tllGetSimulatorHostname()\\n\\\nsnippet llGetSPMaxMemory\\n\\\n\tllGetSPMaxMemory()\\n\\\nsnippet llGetStartParameter\\n\\\n\tllGetStartParameter()\\n\\\nsnippet llGetStaticPath\\n\\\n\tllGetStaticPath(${1:vector start}, ${2:vector end}, ${3:float radius}, ${4:list params})\\n\\\nsnippet llGetStatus\\n\\\n\tllGetStatus(${1:integer status})\\n\\\nsnippet llGetSubString\\n\\\n\tllGetSubString(${1:string src}, ${2:integer start}, ${3:integer end})\\n\\\nsnippet llGetSunDirection\\n\\\n\tllGetSunDirection()\\n\\\nsnippet llGetTexture\\n\\\n\tllGetTexture(${1:integer face})\\n\\\nsnippet llGetTextureOffset\\n\\\n\tllGetTextureOffset(${1:integer face})\\n\\\nsnippet llGetTextureRot\\n\\\n\tllGetTextureRot(${1:integer face})\\n\\\nsnippet llGetTextureScale\\n\\\n\tllGetTextureScale(${1:integer face})\\n\\\nsnippet llGetTime\\n\\\n\tllGetTime()\\n\\\nsnippet llGetTimeOfDay\\n\\\n\tllGetTimeOfDay()\\n\\\nsnippet llGetTimestamp\\n\\\n\tllGetTimestamp()\\n\\\nsnippet llGetTorque\\n\\\n\tllGetTorque()\\n\\\nsnippet llGetUnixTime\\n\\\n\tllGetUnixTime()\\n\\\nsnippet llGetUsedMemory\\n\\\n\tllGetUsedMemory()\\n\\\nsnippet llGetUsername\\n\\\n\tllGetUsername(${1:key id})\\n\\\nsnippet llGetVel\\n\\\n\tllGetVel()\\n\\\nsnippet llGetWallclock\\n\\\n\tllGetWallclock()\\n\\\nsnippet llGiveInventory\\n\\\n\tllGiveInventory(${1:key destination}, ${2:string inventory});\\n\\\n\t$0\\n\\\nsnippet llGiveInventoryList\\n\\\n\tllGiveInventoryList(${1:key target}, ${2:string folder}, ${3:list inventory});\\n\\\n\t$0\\n\\\nsnippet llGiveMoney\\n\\\n\tllGiveMoney(${1:key destination}, ${2:integer amount})\\n\\\nsnippet llGround\\n\\\n\tllGround(${1:vector offset})\\n\\\nsnippet llGroundContour\\n\\\n\tllGroundContour(${1:vector offset})\\n\\\nsnippet llGroundNormal\\n\\\n\tllGroundNormal(${1:vector offset})\\n\\\nsnippet llGroundRepel\\n\\\n\tllGroundRepel(${1:float height}, ${2:integer water}, ${3:float tau});\\n\\\n\t$0\\n\\\nsnippet llGroundSlope\\n\\\n\tllGroundSlope(${1:vector offset})\\n\\\nsnippet llHTTPRequest\\n\\\n\tllHTTPRequest(${1:string url}, ${2:list parameters}, ${3:string body})\\n\\\nsnippet llHTTPResponse\\n\\\n\tllHTTPResponse(${1:key request_id}, ${2:integer status}, ${3:string body});\\n\\\n\t$0\\n\\\nsnippet llInsertString\\n\\\n\tllInsertString(${1:string dst}, ${2:integer pos}, ${3:string src})\\n\\\nsnippet llInstantMessage\\n\\\n\tllInstantMessage(${1:key user}, ${2:string message});\\n\\\n\t$0\\n\\\nsnippet llIntegerToBase64\\n\\\n\tllIntegerToBase64(${1:integer number})\\n\\\nsnippet llJson2List\\n\\\n\tllJson2List(${1:string json})\\n\\\nsnippet llJsonGetValue\\n\\\n\tllJsonGetValue(${1:string json}, ${2:list specifiers})\\n\\\nsnippet llJsonSetValue\\n\\\n\tllJsonSetValue(${1:string json}, ${2:list specifiers}, ${3:string newValue})\\n\\\nsnippet llJsonValueType\\n\\\n\tllJsonValueType(${1:string json}, ${2:list specifiers})\\n\\\nsnippet llKey2Name\\n\\\n\tllKey2Name(${1:key id})\\n\\\nsnippet llKeyCountKeyValue\\n\\\n\tllKeyCountKeyValue()\\n\\\nsnippet llKeysKeyValue\\n\\\n\tllKeysKeyValue(${1:integer first}, ${2:integer count})\\n\\\nsnippet llLinkParticleSystem\\n\\\n\tllLinkParticleSystem(${1:integer link}, ${2:list rules});\\n\\\n\t$0\\n\\\nsnippet llLinkSitTarget\\n\\\n\tllLinkSitTarget(${1:integer link}, ${2:vector offset}, ${3:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llList2CSV\\n\\\n\tllList2CSV(${1:list src})\\n\\\nsnippet llList2Float\\n\\\n\tllList2Float(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2Integer\\n\\\n\tllList2Integer(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2Json\\n\\\n\tllList2Json(${1:string type}, ${2:list values})\\n\\\nsnippet llList2Key\\n\\\n\tllList2Key(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2List\\n\\\n\tllList2List(${1:list src}, ${2:integer start}, ${3:integer end})\\n\\\nsnippet llList2ListStrided\\n\\\n\tllList2ListStrided(${1:list src}, ${2:integer start}, ${3:integer end}, ${4:integer stride})\\n\\\nsnippet llList2Rot\\n\\\n\tllList2Rot(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2String\\n\\\n\tllList2String(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2Vector\\n\\\n\tllList2Vector(${1:list src}, ${2:integer index})\\n\\\nsnippet llListen\\n\\\n\tllListen(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string msg})\\n\\\nsnippet llListenControl\\n\\\n\tllListenControl(${1:integer handle}, ${2:integer active});\\n\\\n\t$0\\n\\\nsnippet llListenRemove\\n\\\n\tllListenRemove(${1:integer handle});\\n\\\n\t$0\\n\\\nsnippet llListFindList\\n\\\n\tllListFindList(${1:list src}, ${2:list test})\\n\\\nsnippet llListInsertList\\n\\\n\tllListInsertList(${1:list dest}, ${2:list src}, ${3:integer start})\\n\\\nsnippet llListRandomize\\n\\\n\tllListRandomize(${1:list src}, ${2:integer stride})\\n\\\nsnippet llListReplaceList\\n\\\n\tllListReplaceList(${1:list dest}, ${2:list src}, ${3:integer start}, ${4:integer end})\\n\\\nsnippet llListSort\\n\\\n\tllListSort(${1:list src}, ${2:integer stride}, ${3:integer ascending})\\n\\\nsnippet llListStatistics\\n\\\n\tllListStatistics(${1:integer operation}, ${2:list src})\\n\\\nsnippet llLoadURL\\n\\\n\tllLoadURL(${1:key agent}, ${2:string message}, ${3:string url});\\n\\\n\t$0\\n\\\nsnippet llLog\\n\\\n\tllLog(${1:float val})\\n\\\nsnippet llLog10\\n\\\n\tllLog10(${1:float val})\\n\\\nsnippet llLookAt\\n\\\n\tllLookAt(${1:vector target}, ${2:float strength}, ${3:float damping});\\n\\\n\t$0\\n\\\nsnippet llLoopSound\\n\\\n\tllLoopSound(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llLoopSoundMaster\\n\\\n\tllLoopSoundMaster(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llLoopSoundSlave\\n\\\n\tllLoopSoundSlave(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llManageEstateAccess\\n\\\n\tllManageEstateAccess(${1:integer action}, ${2:key agent})\\n\\\nsnippet llMapDestination\\n\\\n\tllMapDestination(${1:string simname}, ${2:vector pos}, ${3:vector look_at});\\n\\\n\t$0\\n\\\nsnippet llMD5String\\n\\\n\tllMD5String(${1:string src}, ${2:integer nonce})\\n\\\nsnippet llMessageLinked\\n\\\n\tllMessageLinked(${1:integer link}, ${2:integer num}, ${3:string str}, ${4:key id});\\n\\\n\t$0\\n\\\nsnippet llMinEventDelay\\n\\\n\tllMinEventDelay(${1:float delay});\\n\\\n\t$0\\n\\\nsnippet llModifyLand\\n\\\n\tllModifyLand(${1:integer action}, ${2:integer brush});\\n\\\n\t$0\\n\\\nsnippet llModPow\\n\\\n\tllModPow(${1:integer a}, ${2:integer b}, ${3:integer c})\\n\\\nsnippet llMoveToTarget\\n\\\n\tllMoveToTarget(${1:vector target}, ${2:float tau});\\n\\\n\t$0\\n\\\nsnippet llNavigateTo\\n\\\n\tllNavigateTo(${1:vector pos}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llOffsetTexture\\n\\\n\tllOffsetTexture(${1:float u}, ${2:float v}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llOpenRemoteDataChannel\\n\\\n\tllOpenRemoteDataChannel();\\n\\\n\t$0\\n\\\nsnippet llOverMyLand\\n\\\n\tllOverMyLand(${1:key id})\\n\\\nsnippet llOwnerSay\\n\\\n\tllOwnerSay(${1:string msg});\\n\\\n\t$0\\n\\\nsnippet llParcelMediaCommandList\\n\\\n\tllParcelMediaCommandList(${1:list commandList});\\n\\\n\t$0\\n\\\nsnippet llParcelMediaQuery\\n\\\n\tllParcelMediaQuery(${1:list query})\\n\\\nsnippet llParseString2List\\n\\\n\tllParseString2List(${1:string src}, ${2:list separators}, ${3:list spacers})\\n\\\nsnippet llParseStringKeepNulls\\n\\\n\tllParseStringKeepNulls(${1:string src}, ${2:list separators}, ${3:list spacers})\\n\\\nsnippet llParticleSystem\\n\\\n\tllParticleSystem(${1:list rules});\\n\\\n\t$0\\n\\\nsnippet llPassCollisions\\n\\\n\tllPassCollisions(${1:integer pass});\\n\\\n\t$0\\n\\\nsnippet llPassTouches\\n\\\n\tllPassTouches(${1:integer pass});\\n\\\n\t$0\\n\\\nsnippet llPatrolPoints\\n\\\n\tllPatrolPoints(${1:list patrolPoints}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llPlaySound\\n\\\n\tllPlaySound(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llPlaySoundSlave\\n\\\n\tllPlaySoundSlave(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llPow\\n\\\n\tllPow(${1:float base}, ${2:float exponent})\\n\\\nsnippet llPreloadSound\\n\\\n\tllPreloadSound(${1:string sound});\\n\\\n\t$0\\n\\\nsnippet llPursue\\n\\\n\tllPursue(${1:key target}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llPushObject\\n\\\n\tllPushObject(${1:key target}, ${2:vector impulse}, ${3:vector ang_impulse}, ${4:integer local});\\n\\\n\t$0\\n\\\nsnippet llReadKeyValue\\n\\\n\tllReadKeyValue(${1:string k})\\n\\\nsnippet llRegionSay\\n\\\n\tllRegionSay(${1:integer channel}, ${2:string msg});\\n\\\n\t$0\\n\\\nsnippet llRegionSayTo\\n\\\n\tllRegionSayTo(${1:key target}, ${2:integer channel}, ${3:string msg});\\n\\\n\t$0\\n\\\nsnippet llReleaseControls\\n\\\n\tllReleaseControls();\\n\\\n\t$0\\n\\\nsnippet llReleaseURL\\n\\\n\tllReleaseURL(${1:string url});\\n\\\n\t$0\\n\\\nsnippet llRemoteDataReply\\n\\\n\tllRemoteDataReply(${1:key channel}, ${2:key message_id}, ${3:string sdata}, ${4:integer idata});\\n\\\n\t$0\\n\\\nsnippet llRemoteLoadScriptPin\\n\\\n\tllRemoteLoadScriptPin(${1:key target}, ${2:string name}, ${3:integer pin}, ${4:integer running}, ${5:integer start_param});\\n\\\n\t$0\\n\\\nsnippet llRemoveFromLandBanList\\n\\\n\tllRemoveFromLandBanList(${1:key agent});\\n\\\n\t$0\\n\\\nsnippet llRemoveFromLandPassList\\n\\\n\tllRemoveFromLandPassList(${1:key agent});\\n\\\n\t$0\\n\\\nsnippet llRemoveInventory\\n\\\n\tllRemoveInventory(${1:string item});\\n\\\n\t$0\\n\\\nsnippet llRemoveVehicleFlags\\n\\\n\tllRemoveVehicleFlags(${1:integer flags});\\n\\\n\t$0\\n\\\nsnippet llRequestAgentData\\n\\\n\tllRequestAgentData(${1:key id}, ${2:integer data})\\n\\\nsnippet llRequestDisplayName\\n\\\n\tllRequestDisplayName(${1:key id})\\n\\\nsnippet llRequestExperiencePermissions\\n\\\n\tllRequestExperiencePermissions(${1:key agent}, ${2:string name})\\n\\\nsnippet llRequestInventoryData\\n\\\n\tllRequestInventoryData(${1:string name})\\n\\\nsnippet llRequestPermissions\\n\\\n\tllRequestPermissions(${1:key agent}, ${2:integer permissions})\\n\\\nsnippet llRequestSecureURL\\n\\\n\tllRequestSecureURL()\\n\\\nsnippet llRequestSimulatorData\\n\\\n\tllRequestSimulatorData(${1:string region}, ${2:integer data})\\n\\\nsnippet llRequestURL\\n\\\n\tllRequestURL()\\n\\\nsnippet llRequestUsername\\n\\\n\tllRequestUsername(${1:key id})\\n\\\nsnippet llResetAnimationOverride\\n\\\n\tllResetAnimationOverride(${1:string anim_state});\\n\\\n\t$0\\n\\\nsnippet llResetLandBanList\\n\\\n\tllResetLandBanList();\\n\\\n\t$0\\n\\\nsnippet llResetLandPassList\\n\\\n\tllResetLandPassList();\\n\\\n\t$0\\n\\\nsnippet llResetOtherScript\\n\\\n\tllResetOtherScript(${1:string name});\\n\\\n\t$0\\n\\\nsnippet llResetScript\\n\\\n\tllResetScript();\\n\\\n\t$0\\n\\\nsnippet llResetTime\\n\\\n\tllResetTime();\\n\\\n\t$0\\n\\\nsnippet llReturnObjectsByID\\n\\\n\tllReturnObjectsByID(${1:list objects})\\n\\\nsnippet llReturnObjectsByOwner\\n\\\n\tllReturnObjectsByOwner(${1:key owner}, ${2:integer scope})\\n\\\nsnippet llRezAtRoot\\n\\\n\tllRezAtRoot(${1:string inventory}, ${2:vector position}, ${3:vector velocity}, ${4:rotation rot}, ${5:integer param});\\n\\\n\t$0\\n\\\nsnippet llRezObject\\n\\\n\tllRezObject(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param});\\n\\\n\t$0\\n\\\nsnippet llRot2Angle\\n\\\n\tllRot2Angle(${1:rotation rot})\\n\\\nsnippet llRot2Axis\\n\\\n\tllRot2Axis(${1:rotation rot})\\n\\\nsnippet llRot2Euler\\n\\\n\tllRot2Euler(${1:rotation quat})\\n\\\nsnippet llRot2Fwd\\n\\\n\tllRot2Fwd(${1:rotation q})\\n\\\nsnippet llRot2Left\\n\\\n\tllRot2Left(${1:rotation q})\\n\\\nsnippet llRot2Up\\n\\\n\tllRot2Up(${1:rotation q})\\n\\\nsnippet llRotateTexture\\n\\\n\tllRotateTexture(${1:float angle}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llRotBetween\\n\\\n\tllRotBetween(${1:vector start}, ${2:vector end})\\n\\\nsnippet llRotLookAt\\n\\\n\tllRotLookAt(${1:rotation target_direction}, ${2:float strength}, ${3:float damping});\\n\\\n\t$0\\n\\\nsnippet llRotTarget\\n\\\n\tllRotTarget(${1:rotation rot}, ${2:float error})\\n\\\nsnippet llRotTargetRemove\\n\\\n\tllRotTargetRemove(${1:integer handle});\\n\\\n\t$0\\n\\\nsnippet llRound\\n\\\n\tllRound(${1:float val})\\n\\\nsnippet llSameGroup\\n\\\n\tllSameGroup(${1:key group})\\n\\\nsnippet llSay\\n\\\n\tllSay(${1:integer channel}, ${2:string msg});\\n\\\n\t$0\\n\\\nsnippet llScaleByFactor\\n\\\n\tllScaleByFactor(${1:float scaling_factor})\\n\\\nsnippet llScaleTexture\\n\\\n\tllScaleTexture(${1:float u}, ${2:float v}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llScriptDanger\\n\\\n\tllScriptDanger(${1:vector pos})\\n\\\nsnippet llScriptProfiler\\n\\\n\tllScriptProfiler(${1:integer flags});\\n\\\n\t$0\\n\\\nsnippet llSendRemoteData\\n\\\n\tllSendRemoteData(${1:key channel}, ${2:string dest}, ${3:integer idata}, ${4:string sdata})\\n\\\nsnippet llSensor\\n\\\n\tllSensor(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc});\\n\\\n\t$0\\n\\\nsnippet llSensorRepeat\\n\\\n\tllSensorRepeat(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc}, ${6:float rate});\\n\\\n\t$0\\n\\\nsnippet llSetAlpha\\n\\\n\tllSetAlpha(${1:float alpha}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetAngularVelocity\\n\\\n\tllSetAngularVelocity(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llSetAnimationOverride\\n\\\n\tllSetAnimationOverride(${1:string anim_state}, ${2:string anim})\\n\\\nsnippet llSetBuoyancy\\n\\\n\tllSetBuoyancy(${1:float buoyancy});\\n\\\n\t$0\\n\\\nsnippet llSetCameraAtOffset\\n\\\n\tllSetCameraAtOffset(${1:vector offset});\\n\\\n\t$0\\n\\\nsnippet llSetCameraEyeOffset\\n\\\n\tllSetCameraEyeOffset(${1:vector offset});\\n\\\n\t$0\\n\\\nsnippet llSetCameraParams\\n\\\n\tllSetCameraParams(${1:list rules});\\n\\\n\t$0\\n\\\nsnippet llSetClickAction\\n\\\n\tllSetClickAction(${1:integer action});\\n\\\n\t$0\\n\\\nsnippet llSetColor\\n\\\n\tllSetColor(${1:vector color}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetContentType\\n\\\n\tllSetContentType(${1:key request_id}, ${2:integer content_type});\\n\\\n\t$0\\n\\\nsnippet llSetDamage\\n\\\n\tllSetDamage(${1:float damage});\\n\\\n\t$0\\n\\\nsnippet llSetForce\\n\\\n\tllSetForce(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llSetForceAndTorque\\n\\\n\tllSetForceAndTorque(${1:vector force}, ${2:vector torque}, ${3:integer local});\\n\\\n\t$0\\n\\\nsnippet llSetHoverHeight\\n\\\n\tllSetHoverHeight(${1:float height}, ${2:integer water}, ${3:float tau});\\n\\\n\t$0\\n\\\nsnippet llSetKeyframedMotion\\n\\\n\tllSetKeyframedMotion(${1:list keyframes}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llSetLinkAlpha\\n\\\n\tllSetLinkAlpha(${1:integer link}, ${2:float alpha}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetLinkCamera\\n\\\n\tllSetLinkCamera(${1:integer link}, ${2:vector eye}, ${3:vector at});\\n\\\n\t$0\\n\\\nsnippet llSetLinkColor\\n\\\n\tllSetLinkColor(${1:integer link}, ${2:vector color}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetLinkMedia\\n\\\n\tllSetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params});\\n\\\n\t$0\\n\\\nsnippet llSetLinkPrimitiveParams\\n\\\n\tllSetLinkPrimitiveParams(${1:integer link}, ${2:list rules});\\n\\\n\t$0\\n\\\nsnippet llSetLinkPrimitiveParamsFast\\n\\\n\tllSetLinkPrimitiveParamsFast(${1:integer link}, ${2:list rules});\\n\\\n\t$0\\n\\\nsnippet llSetLinkTexture\\n\\\n\tllSetLinkTexture(${1:integer link}, ${2:string texture}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetLinkTextureAnim\\n\\\n\tllSetLinkTextureAnim(${1:integer link}, ${2:integer mode}, ${3:integer face}, ${4:integer sizex}, ${5:integer sizey}, ${6:float start}, ${7:float length}, ${8:float rate});\\n\\\n\t$0\\n\\\nsnippet llSetLocalRot\\n\\\n\tllSetLocalRot(${1:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llSetMemoryLimit\\n\\\n\tllSetMemoryLimit(${1:integer limit})\\n\\\nsnippet llSetObjectDesc\\n\\\n\tllSetObjectDesc(${1:string description});\\n\\\n\t$0\\n\\\nsnippet llSetObjectName\\n\\\n\tllSetObjectName(${1:string name});\\n\\\n\t$0\\n\\\nsnippet llSetParcelMusicURL\\n\\\n\tllSetParcelMusicURL(${1:string url});\\n\\\n\t$0\\n\\\nsnippet llSetPayPrice\\n\\\n\tllSetPayPrice(${1:integer price}, [${2:integer price_button_a}, ${3:integer price_button_b}, ${4:integer price_button_c}, ${5:integer price_button_d}]);\\n\\\n\t$0\\n\\\nsnippet llSetPhysicsMaterial\\n\\\n\tllSetPhysicsMaterial(${1:integer mask}, ${2:float gravity_multiplier}, ${3:float restitution}, ${4:float friction}, ${5:float density});\\n\\\n\t$0\\n\\\nsnippet llSetPos\\n\\\n\tllSetPos(${1:vector pos});\\n\\\n\t$0\\n\\\nsnippet llSetPrimitiveParams\\n\\\n\tllSetPrimitiveParams(${1:list rules});\\n\\\n\t$0\\n\\\nsnippet llSetPrimMediaParams\\n\\\n\tllSetPrimMediaParams(${1:integer face}, ${2:list params});\\n\\\n\t$0\\n\\\nsnippet llSetRegionPos\\n\\\n\tllSetRegionPos(${1:vector position})\\n\\\nsnippet llSetRemoteScriptAccessPin\\n\\\n\tllSetRemoteScriptAccessPin(${1:integer pin});\\n\\\n\t$0\\n\\\nsnippet llSetRot\\n\\\n\tllSetRot(${1:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llSetScale\\n\\\n\tllSetScale(${1:vector size});\\n\\\n\t$0\\n\\\nsnippet llSetScriptState\\n\\\n\tllSetScriptState(${1:string name}, ${2:integer run});\\n\\\n\t$0\\n\\\nsnippet llSetSitText\\n\\\n\tllSetSitText(${1:string text});\\n\\\n\t$0\\n\\\nsnippet llSetSoundQueueing\\n\\\n\tllSetSoundQueueing(${1:integer queue});\\n\\\n\t$0\\n\\\nsnippet llSetSoundRadius\\n\\\n\tllSetSoundRadius(${1:float radius});\\n\\\n\t$0\\n\\\nsnippet llSetStatus\\n\\\n\tllSetStatus(${1:integer status}, ${2:integer value});\\n\\\n\t$0\\n\\\nsnippet llSetText\\n\\\n\tllSetText(${1:string text}, ${2:vector color}, ${3:float alpha});\\n\\\n\t$0\\n\\\nsnippet llSetTexture\\n\\\n\tllSetTexture(${1:string texture}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetTextureAnim\\n\\\n\tllSetTextureAnim(${1:integer mode}, ${2:integer face}, ${3:integer sizex}, ${4:integer sizey}, ${5:float start}, ${6:float length}, ${7:float rate});\\n\\\n\t$0\\n\\\nsnippet llSetTimerEvent\\n\\\n\tllSetTimerEvent(${1:float sec});\\n\\\n\t$0\\n\\\nsnippet llSetTorque\\n\\\n\tllSetTorque(${1:vector torque}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llSetTouchText\\n\\\n\tllSetTouchText(${1:string text});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleFlags\\n\\\n\tllSetVehicleFlags(${1:integer flags});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleFloatParam\\n\\\n\tllSetVehicleFloatParam(${1:integer param}, ${2:float value});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleRotationParam\\n\\\n\tllSetVehicleRotationParam(${1:integer param}, ${2:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleType\\n\\\n\tllSetVehicleType(${1:integer type});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleVectorParam\\n\\\n\tllSetVehicleVectorParam(${1:integer param}, ${2:vector vec});\\n\\\n\t$0\\n\\\nsnippet llSetVelocity\\n\\\n\tllSetVelocity(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llSHA1String\\n\\\n\tllSHA1String(${1:string src})\\n\\\nsnippet llShout\\n\\\n\tllShout(${1:integer channel}, ${2:string msg});\\n\\\n\t$0\\n\\\nsnippet llSin\\n\\\n\tllSin(${1:float theta})\\n\\\nsnippet llSitTarget\\n\\\n\tllSitTarget(${1:vector offset}, ${2:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llSleep\\n\\\n\tllSleep(${1:float sec});\\n\\\n\t$0\\n\\\nsnippet llSqrt\\n\\\n\tllSqrt(${1:float val})\\n\\\nsnippet llStartAnimation\\n\\\n\tllStartAnimation(${1:string anim});\\n\\\n\t$0\\n\\\nsnippet llStopAnimation\\n\\\n\tllStopAnimation(${1:string anim});\\n\\\n\t$0\\n\\\nsnippet llStopHover\\n\\\n\tllStopHover();\\n\\\n\t$0\\n\\\nsnippet llStopLookAt\\n\\\n\tllStopLookAt();\\n\\\n\t$0\\n\\\nsnippet llStopMoveToTarget\\n\\\n\tllStopMoveToTarget();\\n\\\n\t$0\\n\\\nsnippet llStopSound\\n\\\n\tllStopSound();\\n\\\n\t$0\\n\\\nsnippet llStringLength\\n\\\n\tllStringLength(${1:string str})\\n\\\nsnippet llStringToBase64\\n\\\n\tllStringToBase64(${1:string str})\\n\\\nsnippet llStringTrim\\n\\\n\tllStringTrim(${1:string src}, ${2:integer type})\\n\\\nsnippet llSubStringIndex\\n\\\n\tllSubStringIndex(${1:string source}, ${2:string pattern})\\n\\\nsnippet llTakeControls\\n\\\n\tllTakeControls(${1:integer controls}, ${2:integer accept}, ${3:integer pass_on});\\n\\\n\t$0\\n\\\nsnippet llTan\\n\\\n\tllTan(${1:float theta})\\n\\\nsnippet llTarget\\n\\\n\tllTarget(${1:vector position}, ${2:float range})\\n\\\nsnippet llTargetOmega\\n\\\n\tllTargetOmega(${1:vector axis}, ${2:float spinrate}, ${3:float gain});\\n\\\n\t$0\\n\\\nsnippet llTargetRemove\\n\\\n\tllTargetRemove(${1:integer handle});\\n\\\n\t$0\\n\\\nsnippet llTeleportAgent\\n\\\n\tllTeleportAgent(${1:key agent}, ${2:string landmark}, ${3:vector position}, ${4:vector look_at});\\n\\\n\t$0\\n\\\nsnippet llTeleportAgentGlobalCoords\\n\\\n\tllTeleportAgentGlobalCoords(${1:key agent}, ${2:vector global_coordinates}, ${3:vector region_coordinates}, ${4:vector look_at});\\n\\\n\t$0\\n\\\nsnippet llTeleportAgentHome\\n\\\n\tllTeleportAgentHome(${1:key agent});\\n\\\n\t$0\\n\\\nsnippet llTextBox\\n\\\n\tllTextBox(${1:key agent}, ${2:string message}, ${3:integer channel});\\n\\\n\t$0\\n\\\nsnippet llToLower\\n\\\n\tllToLower(${1:string src})\\n\\\nsnippet llToUpper\\n\\\n\tllToUpper(${1:string src})\\n\\\nsnippet llTransferLindenDollars\\n\\\n\tllTransferLindenDollars(${1:key destination}, ${2:integer amount})\\n\\\nsnippet llTriggerSound\\n\\\n\tllTriggerSound(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llTriggerSoundLimited\\n\\\n\tllTriggerSoundLimited(${1:string sound}, ${2:float volume}, ${3:vector top_north_east}, ${4:vector bottom_south_west});\\n\\\n\t$0\\n\\\nsnippet llUnescapeURL\\n\\\n\tllUnescapeURL(${1:string url})\\n\\\nsnippet llUnSit\\n\\\n\tllUnSit(${1:key id});\\n\\\n\t$0\\n\\\nsnippet llUpdateCharacter\\n\\\n\tllUpdateCharacter(${1:list options})\\n\\\nsnippet llUpdateKeyValue\\n\\\n\tllUpdateKeyValue(${1:string k}, ${2:string v}, ${3:integer checked}, ${4:string ov})\\n\\\nsnippet llVecDist\\n\\\n\tllVecDist(${1:vector vec_a}, ${2:vector vec_b})\\n\\\nsnippet llVecMag\\n\\\n\tllVecMag(${1:vector vec})\\n\\\nsnippet llVecNorm\\n\\\n\tllVecNorm(${1:vector vec})\\n\\\nsnippet llVolumeDetect\\n\\\n\tllVolumeDetect(${1:integer detect});\\n\\\n\t$0\\n\\\nsnippet llWanderWithin\\n\\\n\tllWanderWithin(${1:vector origin}, ${2:vector dist}, ${3:list options});\\n\\\n\t$0\\n\\\nsnippet llWater\\n\\\n\tllWater(${1:vector offset});\\n\\\n\t$0\\n\\\nsnippet llWhisper\\n\\\n\tllWhisper(${1:integer channel}, ${2:string msg});\\n\\\n\t$0\\n\\\nsnippet llWind\\n\\\n\tllWind(${1:vector offset});\\n\\\n\t$0\\n\\\nsnippet llXorBase64\\n\\\n\tllXorBase64(${1:string str1}, ${2:string str2})\\n\\\nsnippet money\\n\\\n\tmoney(${1:key id}, ${2:integer amount})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet object_rez\\n\\\n\tobject_rez(${1:key id})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet on_rez\\n\\\n\ton_rez(${1:integer start_param})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet path_update\\n\\\n\tpath_update(${1:integer type}, ${2:list reserved})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet remote_data\\n\\\n\tremote_data(${1:integer event_type}, ${2:key channel}, ${3:key message_id}, ${4:string sender}, ${5:integer idata}, ${6:string sdata})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet run_time_permissions\\n\\\n\trun_time_permissions(${1:integer perm})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet sensor\\n\\\n\tsensor(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet state\\n\\\n\tstate ${1:name}\\n\\\nsnippet touch\\n\\\n\ttouch(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet touch_end\\n\\\n\ttouch_end(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet touch_start\\n\\\n\ttouch_start(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet transaction_result\\n\\\n\ttransaction_result(${1:key id}, ${2:integer success}, ${3:string data})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet while\\n\\\n\twhile (${1:condition})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\n\";\n  exports.scope = \"lsl\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/lsl\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/snippets/lsl.js"],"names":["ace","define","require","exports","module","snippetText","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,kBAAX,EAA8B,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAA9B,EAA8D,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AACjG;;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAstB;AAitCAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,KAAhB;AAEC,CAttCD;;AAstCmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,kBAAD,CAAZ,EAAkC,UAASK,CAAT,EAAY;AAC1C,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/lsl\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\nexports.snippetText = \"snippet @\\n\\\n\t@${1:label};\\n\\\nsnippet CAMERA_ACTIVE\\n\\\n\tCAMERA_ACTIVE, ${1:integer isActive}, $0\\n\\\nsnippet CAMERA_BEHINDNESS_ANGLE\\n\\\n\tCAMERA_BEHINDNESS_ANGLE, ${1:float degrees}, $0\\n\\\nsnippet CAMERA_BEHINDNESS_LAG\\n\\\n\tCAMERA_BEHINDNESS_LAG, ${1:float seconds}, $0\\n\\\nsnippet CAMERA_DISTANCE\\n\\\n\tCAMERA_DISTANCE, ${1:float meters}, $0\\n\\\nsnippet CAMERA_FOCUS\\n\\\n\tCAMERA_FOCUS, ${1:vector position}, $0\\n\\\nsnippet CAMERA_FOCUS_LAG\\n\\\n\tCAMERA_FOCUS_LAG, ${1:float seconds}, $0\\n\\\nsnippet CAMERA_FOCUS_LOCKED\\n\\\n\tCAMERA_FOCUS_LOCKED, ${1:integer isLocked}, $0\\n\\\nsnippet CAMERA_FOCUS_OFFSET\\n\\\n\tCAMERA_FOCUS_OFFSET, ${1:vector meters}, $0\\n\\\nsnippet CAMERA_FOCUS_THRESHOLD\\n\\\n\tCAMERA_FOCUS_THRESHOLD, ${1:float meters}, $0\\n\\\nsnippet CAMERA_PITCH\\n\\\n\tCAMERA_PITCH, ${1:float degrees}, $0\\n\\\nsnippet CAMERA_POSITION\\n\\\n\tCAMERA_POSITION, ${1:vector position}, $0\\n\\\nsnippet CAMERA_POSITION_LAG\\n\\\n\tCAMERA_POSITION_LAG, ${1:float seconds}, $0\\n\\\nsnippet CAMERA_POSITION_LOCKED\\n\\\n\tCAMERA_POSITION_LOCKED, ${1:integer isLocked}, $0\\n\\\nsnippet CAMERA_POSITION_THRESHOLD\\n\\\n\tCAMERA_POSITION_THRESHOLD, ${1:float meters}, $0\\n\\\nsnippet CHARACTER_AVOIDANCE_MODE\\n\\\n\tCHARACTER_AVOIDANCE_MODE, ${1:integer flags}, $0\\n\\\nsnippet CHARACTER_DESIRED_SPEED\\n\\\n\tCHARACTER_DESIRED_SPEED, ${1:float speed}, $0\\n\\\nsnippet CHARACTER_DESIRED_TURN_SPEED\\n\\\n\tCHARACTER_DESIRED_TURN_SPEED, ${1:float speed}, $0\\n\\\nsnippet CHARACTER_LENGTH\\n\\\n\tCHARACTER_LENGTH, ${1:float length}, $0\\n\\\nsnippet CHARACTER_MAX_TURN_RADIUS\\n\\\n\tCHARACTER_MAX_TURN_RADIUS, ${1:float radius}, $0\\n\\\nsnippet CHARACTER_ORIENTATION\\n\\\n\tCHARACTER_ORIENTATION, ${1:integer orientation}, $0\\n\\\nsnippet CHARACTER_RADIUS\\n\\\n\tCHARACTER_RADIUS, ${1:float radius}, $0\\n\\\nsnippet CHARACTER_STAY_WITHIN_PARCEL\\n\\\n\tCHARACTER_STAY_WITHIN_PARCEL, ${1:boolean stay}, $0\\n\\\nsnippet CHARACTER_TYPE\\n\\\n\tCHARACTER_TYPE, ${1:integer type}, $0\\n\\\nsnippet HTTP_BODY_MAXLENGTH\\n\\\n\tHTTP_BODY_MAXLENGTH, ${1:integer length}, $0\\n\\\nsnippet HTTP_CUSTOM_HEADER\\n\\\n\tHTTP_CUSTOM_HEADER, ${1:string name}, ${2:string value}, $0\\n\\\nsnippet HTTP_METHOD\\n\\\n\tHTTP_METHOD, ${1:string method}, $0\\n\\\nsnippet HTTP_MIMETYPE\\n\\\n\tHTTP_MIMETYPE, ${1:string mimeType}, $0\\n\\\nsnippet HTTP_PRAGMA_NO_CACHE\\n\\\n\tHTTP_PRAGMA_NO_CACHE, ${1:integer send_header}, $0\\n\\\nsnippet HTTP_VERBOSE_THROTTLE\\n\\\n\tHTTP_VERBOSE_THROTTLE, ${1:integer noisy}, $0\\n\\\nsnippet HTTP_VERIFY_CERT\\n\\\n\tHTTP_VERIFY_CERT, ${1:integer verify}, $0\\n\\\nsnippet RC_DATA_FLAGS\\n\\\n\tRC_DATA_FLAGS, ${1:integer flags}, $0\\n\\\nsnippet RC_DETECT_PHANTOM\\n\\\n\tRC_DETECT_PHANTOM, ${1:integer dectedPhantom}, $0\\n\\\nsnippet RC_MAX_HITS\\n\\\n\tRC_MAX_HITS, ${1:integer maxHits}, $0\\n\\\nsnippet RC_REJECT_TYPES\\n\\\n\tRC_REJECT_TYPES, ${1:integer filterMask}, $0\\n\\\nsnippet at_rot_target\\n\\\n\tat_rot_target(${1:integer handle}, ${2:rotation targetrot}, ${3:rotation ourrot})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet at_target\\n\\\n\tat_target(${1:integer tnum}, ${2:vector targetpos}, ${3:vector ourpos})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet attach\\n\\\n\tattach(${1:key id})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet changed\\n\\\n\tchanged(${1:integer change})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet collision\\n\\\n\tcollision(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet collision_end\\n\\\n\tcollision_end(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet collision_start\\n\\\n\tcollision_start(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet control\\n\\\n\tcontrol(${1:key id}, ${2:integer level}, ${3:integer edge})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet dataserver\\n\\\n\tdataserver(${1:key query_id}, ${2:string data})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet do\\n\\\n\tdo\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\n\twhile (${1:condition});\\n\\\nsnippet else\\n\\\n\telse\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet email\\n\\\n\temail(${1:string time}, ${2:string address}, ${3:string subject}, ${4:string message}, ${5:integer num_left})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet experience_permissions\\n\\\n\texperience_permissions(${1:key agent_id})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet experience_permissions_denied\\n\\\n\texperience_permissions_denied(${1:key agent_id}, ${2:integer reason})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet for\\n\\\n\tfor (${1:start}; ${3:condition}; ${3:step})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet http_request\\n\\\n\thttp_request(${1:key request_id}, ${2:string method}, ${3:string body})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet http_response\\n\\\n\thttp_response(${1:key request_id}, ${2:integer status}, ${3:list metadata}, ${4:string body})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet if\\n\\\n\tif (${1:condition})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet jump\\n\\\n\tjump ${1:label};\\n\\\nsnippet land_collision\\n\\\n\tland_collision(${1:vector pos})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet land_collision_end\\n\\\n\tland_collision_end(${1:vector pos})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet land_collision_start\\n\\\n\tland_collision_start(${1:vector pos})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet link_message\\n\\\n\tlink_message(${1:integer sender_num}, ${2:integer num}, ${3:string str}, ${4:key id})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet listen\\n\\\n\tlisten(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string message})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet llAbs\\n\\\n\tllAbs(${1:integer val})\\n\\\nsnippet llAcos\\n\\\n\tllAcos(${1:float val})\\n\\\nsnippet llAddToLandBanList\\n\\\n\tllAddToLandBanList(${1:key agent}, ${2:float hours});\\n\\\n\t$0\\n\\\nsnippet llAddToLandPassList\\n\\\n\tllAddToLandPassList(${1:key agent}, ${2:float hours});\\n\\\n\t$0\\n\\\nsnippet llAdjustSoundVolume\\n\\\n\tllAdjustSoundVolume(${1:float volume});\\n\\\n\t$0\\n\\\nsnippet llAgentInExperience\\n\\\n\tllAgentInExperience(${1:key agent})\\n\\\nsnippet llAllowInventoryDrop\\n\\\n\tllAllowInventoryDrop(${1:integer add});\\n\\\n\t$0\\n\\\nsnippet llAngleBetween\\n\\\n\tllAngleBetween(${1:rotation a}, ${2:rotation b})\\n\\\nsnippet llApplyImpulse\\n\\\n\tllApplyImpulse(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llApplyRotationalImpulse\\n\\\n\tllApplyRotationalImpulse(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llAsin\\n\\\n\tllAsin(${1:float val})\\n\\\nsnippet llAtan2\\n\\\n\tllAtan2(${1:float y}, ${2:float x})\\n\\\nsnippet llAttachToAvatar\\n\\\n\tllAttachToAvatar(${1:integer attach_point});\\n\\\n\t$0\\n\\\nsnippet llAttachToAvatarTemp\\n\\\n\tllAttachToAvatarTemp(${1:integer attach_point});\\n\\\n\t$0\\n\\\nsnippet llAvatarOnLinkSitTarget\\n\\\n\tllAvatarOnLinkSitTarget(${1:integer link})\\n\\\nsnippet llAvatarOnSitTarget\\n\\\n\tllAvatarOnSitTarget()\\n\\\nsnippet llAxes2Rot\\n\\\n\tllAxes2Rot(${1:vector fwd}, ${2:vector left}, ${3:vector up})\\n\\\nsnippet llAxisAngle2Rot\\n\\\n\tllAxisAngle2Rot(${1:vector axis}, ${2:float angle})\\n\\\nsnippet llBase64ToInteger\\n\\\n\tllBase64ToInteger(${1:string str})\\n\\\nsnippet llBase64ToString\\n\\\n\tllBase64ToString(${1:string str})\\n\\\nsnippet llBreakAllLinks\\n\\\n\tllBreakAllLinks();\\n\\\n\t$0\\n\\\nsnippet llBreakLink\\n\\\n\tllBreakLink(${1:integer link});\\n\\\n\t$0\\n\\\nsnippet llCastRay\\n\\\n\tllCastRay(${1:vector start}, ${2:vector end}, ${3:list options});\\n\\\n\t$0\\n\\\nsnippet llCeil\\n\\\n\tllCeil(${1:float val})\\n\\\nsnippet llClearCameraParams\\n\\\n\tllClearCameraParams();\\n\\\n\t$0\\n\\\nsnippet llClearLinkMedia\\n\\\n\tllClearLinkMedia(${1:integer link}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llClearPrimMedia\\n\\\n\tllClearPrimMedia(${1:integer face});\\n\\\n\t$0\\n\\\nsnippet llCloseRemoteDataChannel\\n\\\n\tllCloseRemoteDataChannel(${1:key channel});\\n\\\n\t$0\\n\\\nsnippet llCollisionFilter\\n\\\n\tllCollisionFilter(${1:string name}, ${2:key id}, ${3:integer accept});\\n\\\n\t$0\\n\\\nsnippet llCollisionSound\\n\\\n\tllCollisionSound(${1:string impact_sound}, ${2:float impact_volume});\\n\\\n\t$0\\n\\\nsnippet llCos\\n\\\n\tllCos(${1:float theta})\\n\\\nsnippet llCreateCharacter\\n\\\n\tllCreateCharacter(${1:list options});\\n\\\n\t$0\\n\\\nsnippet llCreateKeyValue\\n\\\n\tllCreateKeyValue(${1:string k})\\n\\\nsnippet llCreateLink\\n\\\n\tllCreateLink(${1:key target}, ${2:integer parent});\\n\\\n\t$0\\n\\\nsnippet llCSV2List\\n\\\n\tllCSV2List(${1:string src})\\n\\\nsnippet llDataSizeKeyValue\\n\\\n\tllDataSizeKeyValue()\\n\\\nsnippet llDeleteCharacter\\n\\\n\tllDeleteCharacter();\\n\\\n\t$0\\n\\\nsnippet llDeleteKeyValue\\n\\\n\tllDeleteKeyValue(${1:string k})\\n\\\nsnippet llDeleteSubList\\n\\\n\tllDeleteSubList(${1:list src}, ${2:integer start}, ${3:integer end})\\n\\\nsnippet llDeleteSubString\\n\\\n\tllDeleteSubString(${1:string src}, ${2:integer start}, ${3:integer end})\\n\\\nsnippet llDetachFromAvatar\\n\\\n\tllDetachFromAvatar();\\n\\\n\t$0\\n\\\nsnippet llDetectedGrab\\n\\\n\tllDetectedGrab(${1:integer number})\\n\\\nsnippet llDetectedGroup\\n\\\n\tllDetectedGroup(${1:integer number})\\n\\\nsnippet llDetectedKey\\n\\\n\tllDetectedKey(${1:integer number})\\n\\\nsnippet llDetectedLinkNumber\\n\\\n\tllDetectedLinkNumber(${1:integer number})\\n\\\nsnippet llDetectedName\\n\\\n\tllDetectedName(${1:integer number})\\n\\\nsnippet llDetectedOwner\\n\\\n\tllDetectedOwner(${1:integer number})\\n\\\nsnippet llDetectedPos\\n\\\n\tllDetectedPosl(${1:integer number})\\n\\\nsnippet llDetectedRot\\n\\\n\tllDetectedRot(${1:integer number})\\n\\\nsnippet llDetectedTouchBinormal\\n\\\n\tllDetectedTouchBinormal(${1:integer number})\\n\\\nsnippet llDetectedTouchFace\\n\\\n\tllDetectedTouchFace(${1:integer number})\\n\\\nsnippet llDetectedTouchNormal\\n\\\n\tllDetectedTouchNormal(${1:integer number})\\n\\\nsnippet llDetectedTouchPos\\n\\\n\tllDetectedTouchPos(${1:integer number})\\n\\\nsnippet llDetectedTouchST\\n\\\n\tllDetectedTouchST(${1:integer number})\\n\\\nsnippet llDetectedTouchUV\\n\\\n\tllDetectedTouchUV(${1:integer number})\\n\\\nsnippet llDetectedType\\n\\\n\tllDetectedType(${1:integer number})\\n\\\nsnippet llDetectedVel\\n\\\n\tllDetectedVel(${1:integer number})\\n\\\nsnippet llDialog\\n\\\n\tllDialog(${1:key agent}, ${2:string message}, ${3:list buttons}, ${4:integer channel});\\n\\\n\t$0\\n\\\nsnippet llDie\\n\\\n\tllDie();\\n\\\n\t$0\\n\\\nsnippet llDumpList2String\\n\\\n\tllDumpList2String(${1:list src}, ${2:string separator})\\n\\\nsnippet llEdgeOfWorld\\n\\\n\tllEdgeOfWorld(${1:vector pos}, ${2:vector dir})\\n\\\nsnippet llEjectFromLand\\n\\\n\tllEjectFromLand(${1:key agent});\\n\\\n\t$0\\n\\\nsnippet llEmail\\n\\\n\tllEmail(${1:string address}, ${2:string subject}, ${3:string message});\\n\\\n\t$0\\n\\\nsnippet llEscapeURL\\n\\\n\tllEscapeURL(${1:string url})\\n\\\nsnippet llEuler2Rot\\n\\\n\tllEuler2Rot(${1:vector v})\\n\\\nsnippet llExecCharacterCmd\\n\\\n\tllExecCharacterCmd(${1:integer command}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llEvade\\n\\\n\tllEvade(${1:key target}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llFabs\\n\\\n\tllFabs(${1:float val})\\n\\\nsnippet llFleeFrom\\n\\\n\tllFleeFrom(${1:vector position}, ${2:float distance}, ${3:list options});\\n\\\n\t$0\\n\\\nsnippet llFloor\\n\\\n\tllFloor(${1:float val})\\n\\\nsnippet llForceMouselook\\n\\\n\tllForceMouselook(${1:integer mouselook});\\n\\\n\t$0\\n\\\nsnippet llFrand\\n\\\n\tllFrand(${1:float mag})\\n\\\nsnippet llGenerateKey\\n\\\n\tllGenerateKey()\\n\\\nsnippet llGetAccel\\n\\\n\tllGetAccel()\\n\\\nsnippet llGetAgentInfo\\n\\\n\tllGetAgentInfo(${1:key id})\\n\\\nsnippet llGetAgentLanguage\\n\\\n\tllGetAgentLanguage(${1:key agent})\\n\\\nsnippet llGetAgentList\\n\\\n\tllGetAgentList(${1:integer scope}, ${2:list options})\\n\\\nsnippet llGetAgentSize\\n\\\n\tllGetAgentSize(${1:key agent})\\n\\\nsnippet llGetAlpha\\n\\\n\tllGetAlpha(${1:integer face})\\n\\\nsnippet llGetAndResetTime\\n\\\n\tllGetAndResetTime()\\n\\\nsnippet llGetAnimation\\n\\\n\tllGetAnimation(${1:key id})\\n\\\nsnippet llGetAnimationList\\n\\\n\tllGetAnimationList(${1:key agent})\\n\\\nsnippet llGetAnimationOverride\\n\\\n\tllGetAnimationOverride(${1:string anim_state})\\n\\\nsnippet llGetAttached\\n\\\n\tllGetAttached()\\n\\\nsnippet llGetAttachedList\\n\\\n\tllGetAttachedList(${1:key id})\\n\\\nsnippet llGetBoundingBox\\n\\\n\tllGetBoundingBox(${1:key object})\\n\\\nsnippet llGetCameraPos\\n\\\n\tllGetCameraPos()\\n\\\nsnippet llGetCameraRot\\n\\\n\tllGetCameraRot()\\n\\\nsnippet llGetCenterOfMass\\n\\\n\tllGetCenterOfMass()\\n\\\nsnippet llGetClosestNavPoint\\n\\\n\tllGetClosestNavPoint(${1:vector point}, ${2:list options})\\n\\\nsnippet llGetColor\\n\\\n\tllGetColor(${1:integer face})\\n\\\nsnippet llGetCreator\\n\\\n\tllGetCreator()\\n\\\nsnippet llGetDate\\n\\\n\tllGetDate()\\n\\\nsnippet llGetDisplayName\\n\\\n\tllGetDisplayName(${1:key id})\\n\\\nsnippet llGetEnergy\\n\\\n\tllGetEnergy()\\n\\\nsnippet llGetEnv\\n\\\n\tllGetEnv(${1:string name})\\n\\\nsnippet llGetExperienceDetails\\n\\\n\tllGetExperienceDetails(${1:key experience_id})\\n\\\nsnippet llGetExperienceErrorMessage\\n\\\n\tllGetExperienceErrorMessage(${1:integer error})\\n\\\nsnippet llGetForce\\n\\\n\tllGetForce()\\n\\\nsnippet llGetFreeMemory\\n\\\n\tllGetFreeMemory()\\n\\\nsnippet llGetFreeURLs\\n\\\n\tllGetFreeURLs()\\n\\\nsnippet llGetGeometricCenter\\n\\\n\tllGetGeometricCenter()\\n\\\nsnippet llGetGMTclock\\n\\\n\tllGetGMTclock()\\n\\\nsnippet llGetHTTPHeader\\n\\\n\tllGetHTTPHeader(${1:key request_id}, ${2:string header})\\n\\\nsnippet llGetInventoryCreator\\n\\\n\tllGetInventoryCreator(${1:string item})\\n\\\nsnippet llGetInventoryKey\\n\\\n\tllGetInventoryKey(${1:string name})\\n\\\nsnippet llGetInventoryName\\n\\\n\tllGetInventoryName(${1:integer type}, ${2:integer number})\\n\\\nsnippet llGetInventoryNumber\\n\\\n\tllGetInventoryNumber(${1:integer type})\\n\\\nsnippet llGetInventoryPermMask\\n\\\n\tllGetInventoryPermMask(${1:string item}, ${2:integer mask})\\n\\\nsnippet llGetInventoryType\\n\\\n\tllGetInventoryType(${1:string name})\\n\\\nsnippet llGetKey\\n\\\n\tllGetKey()\\n\\\nsnippet llGetLandOwnerAt\\n\\\n\tllGetLandOwnerAt(${1:vector pos})\\n\\\nsnippet llGetLinkKey\\n\\\n\tllGetLinkKey(${1:integer link})\\n\\\nsnippet llGetLinkMedia\\n\\\n\tllGetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})\\n\\\nsnippet llGetLinkName\\n\\\n\tllGetLinkName(${1:integer link})\\n\\\nsnippet llGetLinkNumber\\n\\\n\tllGetLinkNumber()\\n\\\nsnippet llGetLinkNumberOfSides\\n\\\n\tllGetLinkNumberOfSides(${1:integer link})\\n\\\nsnippet llGetLinkPrimitiveParams\\n\\\n\tllGetLinkPrimitiveParams(${1:integer link}, ${2:list params})\\n\\\nsnippet llGetListEntryType\\n\\\n\tllGetListEntryType(${1:list src}, ${2:integer index})\\n\\\nsnippet llGetListLength\\n\\\n\tllGetListLength(${1:list src})\\n\\\nsnippet llGetLocalPos\\n\\\n\tllGetLocalPos()\\n\\\nsnippet llGetLocalRot\\n\\\n\tllGetLocalRot()\\n\\\nsnippet llGetMass\\n\\\n\tllGetMass()\\n\\\nsnippet llGetMassMKS\\n\\\n\tllGetMassMKS()\\n\\\nsnippet llGetMaxScaleFactor\\n\\\n\tllGetMaxScaleFactor()\\n\\\nsnippet llGetMemoryLimit\\n\\\n\tllGetMemoryLimit()\\n\\\nsnippet llGetMinScaleFactor\\n\\\n\tllGetMinScaleFactor()\\n\\\nsnippet llGetNextEmail\\n\\\n\tllGetNextEmail(${1:string address}, ${2:string subject});\\n\\\n\t$0\\n\\\nsnippet llGetNotecardLine\\n\\\n\tllGetNotecardLine(${1:string name}, ${2:integer line})\\n\\\nsnippet llGetNumberOfNotecardLines\\n\\\n\tllGetNumberOfNotecardLines(${1:string name})\\n\\\nsnippet llGetNumberOfPrims\\n\\\n\tllGetNumberOfPrims()\\n\\\nsnippet llGetNumberOfSides\\n\\\n\tllGetNumberOfSides()\\n\\\nsnippet llGetObjectDesc\\n\\\n\tllGetObjectDesc()\\n\\\nsnippet llGetObjectDetails\\n\\\n\tllGetObjectDetails(${1:key id}, ${2:list params})\\n\\\nsnippet llGetObjectMass\\n\\\n\tllGetObjectMass(${1:key id})\\n\\\nsnippet llGetObjectName\\n\\\n\tllGetObjectName()\\n\\\nsnippet llGetObjectPermMask\\n\\\n\tllGetObjectPermMask(${1:integer mask})\\n\\\nsnippet llGetObjectPrimCount\\n\\\n\tllGetObjectPrimCount(${1:key prim})\\n\\\nsnippet llGetOmega\\n\\\n\tllGetOmega()\\n\\\nsnippet llGetOwner\\n\\\n\tllGetOwner()\\n\\\nsnippet llGetOwnerKey\\n\\\n\tllGetOwnerKey(${1:key id})\\n\\\nsnippet llGetParcelDetails\\n\\\n\tllGetParcelDetails(${1:vector pos}, ${2:list params})\\n\\\nsnippet llGetParcelFlags\\n\\\n\tllGetParcelFlags(${1:vector pos})\\n\\\nsnippet llGetParcelMaxPrims\\n\\\n\tllGetParcelMaxPrims(${1:vector pos}, ${2:integer sim_wide})\\n\\\nsnippet llGetParcelMusicURL\\n\\\n\tllGetParcelMusicURL()\\n\\\nsnippet llGetParcelPrimCount\\n\\\n\tllGetParcelPrimCount(${1:vector pos}, ${2:integer category}, ${3:integer sim_wide})\\n\\\nsnippet llGetParcelPrimOwners\\n\\\n\tllGetParcelPrimOwners(${1:vector pos})\\n\\\nsnippet llGetPermissions\\n\\\n\tllGetPermissions()\\n\\\nsnippet llGetPermissionsKey\\n\\\n\tllGetPermissionsKey()\\n\\\nsnippet llGetPhysicsMaterial\\n\\\n\tllGetPhysicsMaterial()\\n\\\nsnippet llGetPos\\n\\\n\tllGetPos()\\n\\\nsnippet llGetPrimitiveParams\\n\\\n\tllGetPrimitiveParams(${1:list params})\\n\\\nsnippet llGetPrimMediaParams\\n\\\n\tllGetPrimMediaParams(${1:integer face}, ${2:list params})\\n\\\nsnippet llGetRegionAgentCount\\n\\\n\tllGetRegionAgentCount()\\n\\\nsnippet llGetRegionCorner\\n\\\n\tllGetRegionCorner()\\n\\\nsnippet llGetRegionFlags\\n\\\n\tllGetRegionFlags()\\n\\\nsnippet llGetRegionFPS\\n\\\n\tllGetRegionFPS()\\n\\\nsnippet llGetRegionName\\n\\\n\tllGetRegionName()\\n\\\nsnippet llGetRegionTimeDilation\\n\\\n\tllGetRegionTimeDilation()\\n\\\nsnippet llGetRootPosition\\n\\\n\tllGetRootPosition()\\n\\\nsnippet llGetRootRotation\\n\\\n\tllGetRootRotation()\\n\\\nsnippet llGetRot\\n\\\n\tllGetRot()\\n\\\nsnippet llGetScale\\n\\\n\tllGetScale()\\n\\\nsnippet llGetScriptName\\n\\\n\tllGetScriptName()\\n\\\nsnippet llGetScriptState\\n\\\n\tllGetScriptState(${1:string script})\\n\\\nsnippet llGetSimStats\\n\\\n\tllGetSimStats(${1:integer stat_type})\\n\\\nsnippet llGetSimulatorHostname\\n\\\n\tllGetSimulatorHostname()\\n\\\nsnippet llGetSPMaxMemory\\n\\\n\tllGetSPMaxMemory()\\n\\\nsnippet llGetStartParameter\\n\\\n\tllGetStartParameter()\\n\\\nsnippet llGetStaticPath\\n\\\n\tllGetStaticPath(${1:vector start}, ${2:vector end}, ${3:float radius}, ${4:list params})\\n\\\nsnippet llGetStatus\\n\\\n\tllGetStatus(${1:integer status})\\n\\\nsnippet llGetSubString\\n\\\n\tllGetSubString(${1:string src}, ${2:integer start}, ${3:integer end})\\n\\\nsnippet llGetSunDirection\\n\\\n\tllGetSunDirection()\\n\\\nsnippet llGetTexture\\n\\\n\tllGetTexture(${1:integer face})\\n\\\nsnippet llGetTextureOffset\\n\\\n\tllGetTextureOffset(${1:integer face})\\n\\\nsnippet llGetTextureRot\\n\\\n\tllGetTextureRot(${1:integer face})\\n\\\nsnippet llGetTextureScale\\n\\\n\tllGetTextureScale(${1:integer face})\\n\\\nsnippet llGetTime\\n\\\n\tllGetTime()\\n\\\nsnippet llGetTimeOfDay\\n\\\n\tllGetTimeOfDay()\\n\\\nsnippet llGetTimestamp\\n\\\n\tllGetTimestamp()\\n\\\nsnippet llGetTorque\\n\\\n\tllGetTorque()\\n\\\nsnippet llGetUnixTime\\n\\\n\tllGetUnixTime()\\n\\\nsnippet llGetUsedMemory\\n\\\n\tllGetUsedMemory()\\n\\\nsnippet llGetUsername\\n\\\n\tllGetUsername(${1:key id})\\n\\\nsnippet llGetVel\\n\\\n\tllGetVel()\\n\\\nsnippet llGetWallclock\\n\\\n\tllGetWallclock()\\n\\\nsnippet llGiveInventory\\n\\\n\tllGiveInventory(${1:key destination}, ${2:string inventory});\\n\\\n\t$0\\n\\\nsnippet llGiveInventoryList\\n\\\n\tllGiveInventoryList(${1:key target}, ${2:string folder}, ${3:list inventory});\\n\\\n\t$0\\n\\\nsnippet llGiveMoney\\n\\\n\tllGiveMoney(${1:key destination}, ${2:integer amount})\\n\\\nsnippet llGround\\n\\\n\tllGround(${1:vector offset})\\n\\\nsnippet llGroundContour\\n\\\n\tllGroundContour(${1:vector offset})\\n\\\nsnippet llGroundNormal\\n\\\n\tllGroundNormal(${1:vector offset})\\n\\\nsnippet llGroundRepel\\n\\\n\tllGroundRepel(${1:float height}, ${2:integer water}, ${3:float tau});\\n\\\n\t$0\\n\\\nsnippet llGroundSlope\\n\\\n\tllGroundSlope(${1:vector offset})\\n\\\nsnippet llHTTPRequest\\n\\\n\tllHTTPRequest(${1:string url}, ${2:list parameters}, ${3:string body})\\n\\\nsnippet llHTTPResponse\\n\\\n\tllHTTPResponse(${1:key request_id}, ${2:integer status}, ${3:string body});\\n\\\n\t$0\\n\\\nsnippet llInsertString\\n\\\n\tllInsertString(${1:string dst}, ${2:integer pos}, ${3:string src})\\n\\\nsnippet llInstantMessage\\n\\\n\tllInstantMessage(${1:key user}, ${2:string message});\\n\\\n\t$0\\n\\\nsnippet llIntegerToBase64\\n\\\n\tllIntegerToBase64(${1:integer number})\\n\\\nsnippet llJson2List\\n\\\n\tllJson2List(${1:string json})\\n\\\nsnippet llJsonGetValue\\n\\\n\tllJsonGetValue(${1:string json}, ${2:list specifiers})\\n\\\nsnippet llJsonSetValue\\n\\\n\tllJsonSetValue(${1:string json}, ${2:list specifiers}, ${3:string newValue})\\n\\\nsnippet llJsonValueType\\n\\\n\tllJsonValueType(${1:string json}, ${2:list specifiers})\\n\\\nsnippet llKey2Name\\n\\\n\tllKey2Name(${1:key id})\\n\\\nsnippet llKeyCountKeyValue\\n\\\n\tllKeyCountKeyValue()\\n\\\nsnippet llKeysKeyValue\\n\\\n\tllKeysKeyValue(${1:integer first}, ${2:integer count})\\n\\\nsnippet llLinkParticleSystem\\n\\\n\tllLinkParticleSystem(${1:integer link}, ${2:list rules});\\n\\\n\t$0\\n\\\nsnippet llLinkSitTarget\\n\\\n\tllLinkSitTarget(${1:integer link}, ${2:vector offset}, ${3:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llList2CSV\\n\\\n\tllList2CSV(${1:list src})\\n\\\nsnippet llList2Float\\n\\\n\tllList2Float(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2Integer\\n\\\n\tllList2Integer(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2Json\\n\\\n\tllList2Json(${1:string type}, ${2:list values})\\n\\\nsnippet llList2Key\\n\\\n\tllList2Key(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2List\\n\\\n\tllList2List(${1:list src}, ${2:integer start}, ${3:integer end})\\n\\\nsnippet llList2ListStrided\\n\\\n\tllList2ListStrided(${1:list src}, ${2:integer start}, ${3:integer end}, ${4:integer stride})\\n\\\nsnippet llList2Rot\\n\\\n\tllList2Rot(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2String\\n\\\n\tllList2String(${1:list src}, ${2:integer index})\\n\\\nsnippet llList2Vector\\n\\\n\tllList2Vector(${1:list src}, ${2:integer index})\\n\\\nsnippet llListen\\n\\\n\tllListen(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string msg})\\n\\\nsnippet llListenControl\\n\\\n\tllListenControl(${1:integer handle}, ${2:integer active});\\n\\\n\t$0\\n\\\nsnippet llListenRemove\\n\\\n\tllListenRemove(${1:integer handle});\\n\\\n\t$0\\n\\\nsnippet llListFindList\\n\\\n\tllListFindList(${1:list src}, ${2:list test})\\n\\\nsnippet llListInsertList\\n\\\n\tllListInsertList(${1:list dest}, ${2:list src}, ${3:integer start})\\n\\\nsnippet llListRandomize\\n\\\n\tllListRandomize(${1:list src}, ${2:integer stride})\\n\\\nsnippet llListReplaceList\\n\\\n\tllListReplaceList(${1:list dest}, ${2:list src}, ${3:integer start}, ${4:integer end})\\n\\\nsnippet llListSort\\n\\\n\tllListSort(${1:list src}, ${2:integer stride}, ${3:integer ascending})\\n\\\nsnippet llListStatistics\\n\\\n\tllListStatistics(${1:integer operation}, ${2:list src})\\n\\\nsnippet llLoadURL\\n\\\n\tllLoadURL(${1:key agent}, ${2:string message}, ${3:string url});\\n\\\n\t$0\\n\\\nsnippet llLog\\n\\\n\tllLog(${1:float val})\\n\\\nsnippet llLog10\\n\\\n\tllLog10(${1:float val})\\n\\\nsnippet llLookAt\\n\\\n\tllLookAt(${1:vector target}, ${2:float strength}, ${3:float damping});\\n\\\n\t$0\\n\\\nsnippet llLoopSound\\n\\\n\tllLoopSound(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llLoopSoundMaster\\n\\\n\tllLoopSoundMaster(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llLoopSoundSlave\\n\\\n\tllLoopSoundSlave(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llManageEstateAccess\\n\\\n\tllManageEstateAccess(${1:integer action}, ${2:key agent})\\n\\\nsnippet llMapDestination\\n\\\n\tllMapDestination(${1:string simname}, ${2:vector pos}, ${3:vector look_at});\\n\\\n\t$0\\n\\\nsnippet llMD5String\\n\\\n\tllMD5String(${1:string src}, ${2:integer nonce})\\n\\\nsnippet llMessageLinked\\n\\\n\tllMessageLinked(${1:integer link}, ${2:integer num}, ${3:string str}, ${4:key id});\\n\\\n\t$0\\n\\\nsnippet llMinEventDelay\\n\\\n\tllMinEventDelay(${1:float delay});\\n\\\n\t$0\\n\\\nsnippet llModifyLand\\n\\\n\tllModifyLand(${1:integer action}, ${2:integer brush});\\n\\\n\t$0\\n\\\nsnippet llModPow\\n\\\n\tllModPow(${1:integer a}, ${2:integer b}, ${3:integer c})\\n\\\nsnippet llMoveToTarget\\n\\\n\tllMoveToTarget(${1:vector target}, ${2:float tau});\\n\\\n\t$0\\n\\\nsnippet llNavigateTo\\n\\\n\tllNavigateTo(${1:vector pos}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llOffsetTexture\\n\\\n\tllOffsetTexture(${1:float u}, ${2:float v}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llOpenRemoteDataChannel\\n\\\n\tllOpenRemoteDataChannel();\\n\\\n\t$0\\n\\\nsnippet llOverMyLand\\n\\\n\tllOverMyLand(${1:key id})\\n\\\nsnippet llOwnerSay\\n\\\n\tllOwnerSay(${1:string msg});\\n\\\n\t$0\\n\\\nsnippet llParcelMediaCommandList\\n\\\n\tllParcelMediaCommandList(${1:list commandList});\\n\\\n\t$0\\n\\\nsnippet llParcelMediaQuery\\n\\\n\tllParcelMediaQuery(${1:list query})\\n\\\nsnippet llParseString2List\\n\\\n\tllParseString2List(${1:string src}, ${2:list separators}, ${3:list spacers})\\n\\\nsnippet llParseStringKeepNulls\\n\\\n\tllParseStringKeepNulls(${1:string src}, ${2:list separators}, ${3:list spacers})\\n\\\nsnippet llParticleSystem\\n\\\n\tllParticleSystem(${1:list rules});\\n\\\n\t$0\\n\\\nsnippet llPassCollisions\\n\\\n\tllPassCollisions(${1:integer pass});\\n\\\n\t$0\\n\\\nsnippet llPassTouches\\n\\\n\tllPassTouches(${1:integer pass});\\n\\\n\t$0\\n\\\nsnippet llPatrolPoints\\n\\\n\tllPatrolPoints(${1:list patrolPoints}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llPlaySound\\n\\\n\tllPlaySound(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llPlaySoundSlave\\n\\\n\tllPlaySoundSlave(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llPow\\n\\\n\tllPow(${1:float base}, ${2:float exponent})\\n\\\nsnippet llPreloadSound\\n\\\n\tllPreloadSound(${1:string sound});\\n\\\n\t$0\\n\\\nsnippet llPursue\\n\\\n\tllPursue(${1:key target}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llPushObject\\n\\\n\tllPushObject(${1:key target}, ${2:vector impulse}, ${3:vector ang_impulse}, ${4:integer local});\\n\\\n\t$0\\n\\\nsnippet llReadKeyValue\\n\\\n\tllReadKeyValue(${1:string k})\\n\\\nsnippet llRegionSay\\n\\\n\tllRegionSay(${1:integer channel}, ${2:string msg});\\n\\\n\t$0\\n\\\nsnippet llRegionSayTo\\n\\\n\tllRegionSayTo(${1:key target}, ${2:integer channel}, ${3:string msg});\\n\\\n\t$0\\n\\\nsnippet llReleaseControls\\n\\\n\tllReleaseControls();\\n\\\n\t$0\\n\\\nsnippet llReleaseURL\\n\\\n\tllReleaseURL(${1:string url});\\n\\\n\t$0\\n\\\nsnippet llRemoteDataReply\\n\\\n\tllRemoteDataReply(${1:key channel}, ${2:key message_id}, ${3:string sdata}, ${4:integer idata});\\n\\\n\t$0\\n\\\nsnippet llRemoteLoadScriptPin\\n\\\n\tllRemoteLoadScriptPin(${1:key target}, ${2:string name}, ${3:integer pin}, ${4:integer running}, ${5:integer start_param});\\n\\\n\t$0\\n\\\nsnippet llRemoveFromLandBanList\\n\\\n\tllRemoveFromLandBanList(${1:key agent});\\n\\\n\t$0\\n\\\nsnippet llRemoveFromLandPassList\\n\\\n\tllRemoveFromLandPassList(${1:key agent});\\n\\\n\t$0\\n\\\nsnippet llRemoveInventory\\n\\\n\tllRemoveInventory(${1:string item});\\n\\\n\t$0\\n\\\nsnippet llRemoveVehicleFlags\\n\\\n\tllRemoveVehicleFlags(${1:integer flags});\\n\\\n\t$0\\n\\\nsnippet llRequestAgentData\\n\\\n\tllRequestAgentData(${1:key id}, ${2:integer data})\\n\\\nsnippet llRequestDisplayName\\n\\\n\tllRequestDisplayName(${1:key id})\\n\\\nsnippet llRequestExperiencePermissions\\n\\\n\tllRequestExperiencePermissions(${1:key agent}, ${2:string name})\\n\\\nsnippet llRequestInventoryData\\n\\\n\tllRequestInventoryData(${1:string name})\\n\\\nsnippet llRequestPermissions\\n\\\n\tllRequestPermissions(${1:key agent}, ${2:integer permissions})\\n\\\nsnippet llRequestSecureURL\\n\\\n\tllRequestSecureURL()\\n\\\nsnippet llRequestSimulatorData\\n\\\n\tllRequestSimulatorData(${1:string region}, ${2:integer data})\\n\\\nsnippet llRequestURL\\n\\\n\tllRequestURL()\\n\\\nsnippet llRequestUsername\\n\\\n\tllRequestUsername(${1:key id})\\n\\\nsnippet llResetAnimationOverride\\n\\\n\tllResetAnimationOverride(${1:string anim_state});\\n\\\n\t$0\\n\\\nsnippet llResetLandBanList\\n\\\n\tllResetLandBanList();\\n\\\n\t$0\\n\\\nsnippet llResetLandPassList\\n\\\n\tllResetLandPassList();\\n\\\n\t$0\\n\\\nsnippet llResetOtherScript\\n\\\n\tllResetOtherScript(${1:string name});\\n\\\n\t$0\\n\\\nsnippet llResetScript\\n\\\n\tllResetScript();\\n\\\n\t$0\\n\\\nsnippet llResetTime\\n\\\n\tllResetTime();\\n\\\n\t$0\\n\\\nsnippet llReturnObjectsByID\\n\\\n\tllReturnObjectsByID(${1:list objects})\\n\\\nsnippet llReturnObjectsByOwner\\n\\\n\tllReturnObjectsByOwner(${1:key owner}, ${2:integer scope})\\n\\\nsnippet llRezAtRoot\\n\\\n\tllRezAtRoot(${1:string inventory}, ${2:vector position}, ${3:vector velocity}, ${4:rotation rot}, ${5:integer param});\\n\\\n\t$0\\n\\\nsnippet llRezObject\\n\\\n\tllRezObject(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param});\\n\\\n\t$0\\n\\\nsnippet llRot2Angle\\n\\\n\tllRot2Angle(${1:rotation rot})\\n\\\nsnippet llRot2Axis\\n\\\n\tllRot2Axis(${1:rotation rot})\\n\\\nsnippet llRot2Euler\\n\\\n\tllRot2Euler(${1:rotation quat})\\n\\\nsnippet llRot2Fwd\\n\\\n\tllRot2Fwd(${1:rotation q})\\n\\\nsnippet llRot2Left\\n\\\n\tllRot2Left(${1:rotation q})\\n\\\nsnippet llRot2Up\\n\\\n\tllRot2Up(${1:rotation q})\\n\\\nsnippet llRotateTexture\\n\\\n\tllRotateTexture(${1:float angle}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llRotBetween\\n\\\n\tllRotBetween(${1:vector start}, ${2:vector end})\\n\\\nsnippet llRotLookAt\\n\\\n\tllRotLookAt(${1:rotation target_direction}, ${2:float strength}, ${3:float damping});\\n\\\n\t$0\\n\\\nsnippet llRotTarget\\n\\\n\tllRotTarget(${1:rotation rot}, ${2:float error})\\n\\\nsnippet llRotTargetRemove\\n\\\n\tllRotTargetRemove(${1:integer handle});\\n\\\n\t$0\\n\\\nsnippet llRound\\n\\\n\tllRound(${1:float val})\\n\\\nsnippet llSameGroup\\n\\\n\tllSameGroup(${1:key group})\\n\\\nsnippet llSay\\n\\\n\tllSay(${1:integer channel}, ${2:string msg});\\n\\\n\t$0\\n\\\nsnippet llScaleByFactor\\n\\\n\tllScaleByFactor(${1:float scaling_factor})\\n\\\nsnippet llScaleTexture\\n\\\n\tllScaleTexture(${1:float u}, ${2:float v}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llScriptDanger\\n\\\n\tllScriptDanger(${1:vector pos})\\n\\\nsnippet llScriptProfiler\\n\\\n\tllScriptProfiler(${1:integer flags});\\n\\\n\t$0\\n\\\nsnippet llSendRemoteData\\n\\\n\tllSendRemoteData(${1:key channel}, ${2:string dest}, ${3:integer idata}, ${4:string sdata})\\n\\\nsnippet llSensor\\n\\\n\tllSensor(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc});\\n\\\n\t$0\\n\\\nsnippet llSensorRepeat\\n\\\n\tllSensorRepeat(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc}, ${6:float rate});\\n\\\n\t$0\\n\\\nsnippet llSetAlpha\\n\\\n\tllSetAlpha(${1:float alpha}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetAngularVelocity\\n\\\n\tllSetAngularVelocity(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llSetAnimationOverride\\n\\\n\tllSetAnimationOverride(${1:string anim_state}, ${2:string anim})\\n\\\nsnippet llSetBuoyancy\\n\\\n\tllSetBuoyancy(${1:float buoyancy});\\n\\\n\t$0\\n\\\nsnippet llSetCameraAtOffset\\n\\\n\tllSetCameraAtOffset(${1:vector offset});\\n\\\n\t$0\\n\\\nsnippet llSetCameraEyeOffset\\n\\\n\tllSetCameraEyeOffset(${1:vector offset});\\n\\\n\t$0\\n\\\nsnippet llSetCameraParams\\n\\\n\tllSetCameraParams(${1:list rules});\\n\\\n\t$0\\n\\\nsnippet llSetClickAction\\n\\\n\tllSetClickAction(${1:integer action});\\n\\\n\t$0\\n\\\nsnippet llSetColor\\n\\\n\tllSetColor(${1:vector color}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetContentType\\n\\\n\tllSetContentType(${1:key request_id}, ${2:integer content_type});\\n\\\n\t$0\\n\\\nsnippet llSetDamage\\n\\\n\tllSetDamage(${1:float damage});\\n\\\n\t$0\\n\\\nsnippet llSetForce\\n\\\n\tllSetForce(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llSetForceAndTorque\\n\\\n\tllSetForceAndTorque(${1:vector force}, ${2:vector torque}, ${3:integer local});\\n\\\n\t$0\\n\\\nsnippet llSetHoverHeight\\n\\\n\tllSetHoverHeight(${1:float height}, ${2:integer water}, ${3:float tau});\\n\\\n\t$0\\n\\\nsnippet llSetKeyframedMotion\\n\\\n\tllSetKeyframedMotion(${1:list keyframes}, ${2:list options});\\n\\\n\t$0\\n\\\nsnippet llSetLinkAlpha\\n\\\n\tllSetLinkAlpha(${1:integer link}, ${2:float alpha}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetLinkCamera\\n\\\n\tllSetLinkCamera(${1:integer link}, ${2:vector eye}, ${3:vector at});\\n\\\n\t$0\\n\\\nsnippet llSetLinkColor\\n\\\n\tllSetLinkColor(${1:integer link}, ${2:vector color}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetLinkMedia\\n\\\n\tllSetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params});\\n\\\n\t$0\\n\\\nsnippet llSetLinkPrimitiveParams\\n\\\n\tllSetLinkPrimitiveParams(${1:integer link}, ${2:list rules});\\n\\\n\t$0\\n\\\nsnippet llSetLinkPrimitiveParamsFast\\n\\\n\tllSetLinkPrimitiveParamsFast(${1:integer link}, ${2:list rules});\\n\\\n\t$0\\n\\\nsnippet llSetLinkTexture\\n\\\n\tllSetLinkTexture(${1:integer link}, ${2:string texture}, ${3:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetLinkTextureAnim\\n\\\n\tllSetLinkTextureAnim(${1:integer link}, ${2:integer mode}, ${3:integer face}, ${4:integer sizex}, ${5:integer sizey}, ${6:float start}, ${7:float length}, ${8:float rate});\\n\\\n\t$0\\n\\\nsnippet llSetLocalRot\\n\\\n\tllSetLocalRot(${1:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llSetMemoryLimit\\n\\\n\tllSetMemoryLimit(${1:integer limit})\\n\\\nsnippet llSetObjectDesc\\n\\\n\tllSetObjectDesc(${1:string description});\\n\\\n\t$0\\n\\\nsnippet llSetObjectName\\n\\\n\tllSetObjectName(${1:string name});\\n\\\n\t$0\\n\\\nsnippet llSetParcelMusicURL\\n\\\n\tllSetParcelMusicURL(${1:string url});\\n\\\n\t$0\\n\\\nsnippet llSetPayPrice\\n\\\n\tllSetPayPrice(${1:integer price}, [${2:integer price_button_a}, ${3:integer price_button_b}, ${4:integer price_button_c}, ${5:integer price_button_d}]);\\n\\\n\t$0\\n\\\nsnippet llSetPhysicsMaterial\\n\\\n\tllSetPhysicsMaterial(${1:integer mask}, ${2:float gravity_multiplier}, ${3:float restitution}, ${4:float friction}, ${5:float density});\\n\\\n\t$0\\n\\\nsnippet llSetPos\\n\\\n\tllSetPos(${1:vector pos});\\n\\\n\t$0\\n\\\nsnippet llSetPrimitiveParams\\n\\\n\tllSetPrimitiveParams(${1:list rules});\\n\\\n\t$0\\n\\\nsnippet llSetPrimMediaParams\\n\\\n\tllSetPrimMediaParams(${1:integer face}, ${2:list params});\\n\\\n\t$0\\n\\\nsnippet llSetRegionPos\\n\\\n\tllSetRegionPos(${1:vector position})\\n\\\nsnippet llSetRemoteScriptAccessPin\\n\\\n\tllSetRemoteScriptAccessPin(${1:integer pin});\\n\\\n\t$0\\n\\\nsnippet llSetRot\\n\\\n\tllSetRot(${1:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llSetScale\\n\\\n\tllSetScale(${1:vector size});\\n\\\n\t$0\\n\\\nsnippet llSetScriptState\\n\\\n\tllSetScriptState(${1:string name}, ${2:integer run});\\n\\\n\t$0\\n\\\nsnippet llSetSitText\\n\\\n\tllSetSitText(${1:string text});\\n\\\n\t$0\\n\\\nsnippet llSetSoundQueueing\\n\\\n\tllSetSoundQueueing(${1:integer queue});\\n\\\n\t$0\\n\\\nsnippet llSetSoundRadius\\n\\\n\tllSetSoundRadius(${1:float radius});\\n\\\n\t$0\\n\\\nsnippet llSetStatus\\n\\\n\tllSetStatus(${1:integer status}, ${2:integer value});\\n\\\n\t$0\\n\\\nsnippet llSetText\\n\\\n\tllSetText(${1:string text}, ${2:vector color}, ${3:float alpha});\\n\\\n\t$0\\n\\\nsnippet llSetTexture\\n\\\n\tllSetTexture(${1:string texture}, ${2:integer face});\\n\\\n\t$0\\n\\\nsnippet llSetTextureAnim\\n\\\n\tllSetTextureAnim(${1:integer mode}, ${2:integer face}, ${3:integer sizex}, ${4:integer sizey}, ${5:float start}, ${6:float length}, ${7:float rate});\\n\\\n\t$0\\n\\\nsnippet llSetTimerEvent\\n\\\n\tllSetTimerEvent(${1:float sec});\\n\\\n\t$0\\n\\\nsnippet llSetTorque\\n\\\n\tllSetTorque(${1:vector torque}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llSetTouchText\\n\\\n\tllSetTouchText(${1:string text});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleFlags\\n\\\n\tllSetVehicleFlags(${1:integer flags});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleFloatParam\\n\\\n\tllSetVehicleFloatParam(${1:integer param}, ${2:float value});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleRotationParam\\n\\\n\tllSetVehicleRotationParam(${1:integer param}, ${2:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleType\\n\\\n\tllSetVehicleType(${1:integer type});\\n\\\n\t$0\\n\\\nsnippet llSetVehicleVectorParam\\n\\\n\tllSetVehicleVectorParam(${1:integer param}, ${2:vector vec});\\n\\\n\t$0\\n\\\nsnippet llSetVelocity\\n\\\n\tllSetVelocity(${1:vector force}, ${2:integer local});\\n\\\n\t$0\\n\\\nsnippet llSHA1String\\n\\\n\tllSHA1String(${1:string src})\\n\\\nsnippet llShout\\n\\\n\tllShout(${1:integer channel}, ${2:string msg});\\n\\\n\t$0\\n\\\nsnippet llSin\\n\\\n\tllSin(${1:float theta})\\n\\\nsnippet llSitTarget\\n\\\n\tllSitTarget(${1:vector offset}, ${2:rotation rot});\\n\\\n\t$0\\n\\\nsnippet llSleep\\n\\\n\tllSleep(${1:float sec});\\n\\\n\t$0\\n\\\nsnippet llSqrt\\n\\\n\tllSqrt(${1:float val})\\n\\\nsnippet llStartAnimation\\n\\\n\tllStartAnimation(${1:string anim});\\n\\\n\t$0\\n\\\nsnippet llStopAnimation\\n\\\n\tllStopAnimation(${1:string anim});\\n\\\n\t$0\\n\\\nsnippet llStopHover\\n\\\n\tllStopHover();\\n\\\n\t$0\\n\\\nsnippet llStopLookAt\\n\\\n\tllStopLookAt();\\n\\\n\t$0\\n\\\nsnippet llStopMoveToTarget\\n\\\n\tllStopMoveToTarget();\\n\\\n\t$0\\n\\\nsnippet llStopSound\\n\\\n\tllStopSound();\\n\\\n\t$0\\n\\\nsnippet llStringLength\\n\\\n\tllStringLength(${1:string str})\\n\\\nsnippet llStringToBase64\\n\\\n\tllStringToBase64(${1:string str})\\n\\\nsnippet llStringTrim\\n\\\n\tllStringTrim(${1:string src}, ${2:integer type})\\n\\\nsnippet llSubStringIndex\\n\\\n\tllSubStringIndex(${1:string source}, ${2:string pattern})\\n\\\nsnippet llTakeControls\\n\\\n\tllTakeControls(${1:integer controls}, ${2:integer accept}, ${3:integer pass_on});\\n\\\n\t$0\\n\\\nsnippet llTan\\n\\\n\tllTan(${1:float theta})\\n\\\nsnippet llTarget\\n\\\n\tllTarget(${1:vector position}, ${2:float range})\\n\\\nsnippet llTargetOmega\\n\\\n\tllTargetOmega(${1:vector axis}, ${2:float spinrate}, ${3:float gain});\\n\\\n\t$0\\n\\\nsnippet llTargetRemove\\n\\\n\tllTargetRemove(${1:integer handle});\\n\\\n\t$0\\n\\\nsnippet llTeleportAgent\\n\\\n\tllTeleportAgent(${1:key agent}, ${2:string landmark}, ${3:vector position}, ${4:vector look_at});\\n\\\n\t$0\\n\\\nsnippet llTeleportAgentGlobalCoords\\n\\\n\tllTeleportAgentGlobalCoords(${1:key agent}, ${2:vector global_coordinates}, ${3:vector region_coordinates}, ${4:vector look_at});\\n\\\n\t$0\\n\\\nsnippet llTeleportAgentHome\\n\\\n\tllTeleportAgentHome(${1:key agent});\\n\\\n\t$0\\n\\\nsnippet llTextBox\\n\\\n\tllTextBox(${1:key agent}, ${2:string message}, ${3:integer channel});\\n\\\n\t$0\\n\\\nsnippet llToLower\\n\\\n\tllToLower(${1:string src})\\n\\\nsnippet llToUpper\\n\\\n\tllToUpper(${1:string src})\\n\\\nsnippet llTransferLindenDollars\\n\\\n\tllTransferLindenDollars(${1:key destination}, ${2:integer amount})\\n\\\nsnippet llTriggerSound\\n\\\n\tllTriggerSound(${1:string sound}, ${2:float volume});\\n\\\n\t$0\\n\\\nsnippet llTriggerSoundLimited\\n\\\n\tllTriggerSoundLimited(${1:string sound}, ${2:float volume}, ${3:vector top_north_east}, ${4:vector bottom_south_west});\\n\\\n\t$0\\n\\\nsnippet llUnescapeURL\\n\\\n\tllUnescapeURL(${1:string url})\\n\\\nsnippet llUnSit\\n\\\n\tllUnSit(${1:key id});\\n\\\n\t$0\\n\\\nsnippet llUpdateCharacter\\n\\\n\tllUpdateCharacter(${1:list options})\\n\\\nsnippet llUpdateKeyValue\\n\\\n\tllUpdateKeyValue(${1:string k}, ${2:string v}, ${3:integer checked}, ${4:string ov})\\n\\\nsnippet llVecDist\\n\\\n\tllVecDist(${1:vector vec_a}, ${2:vector vec_b})\\n\\\nsnippet llVecMag\\n\\\n\tllVecMag(${1:vector vec})\\n\\\nsnippet llVecNorm\\n\\\n\tllVecNorm(${1:vector vec})\\n\\\nsnippet llVolumeDetect\\n\\\n\tllVolumeDetect(${1:integer detect});\\n\\\n\t$0\\n\\\nsnippet llWanderWithin\\n\\\n\tllWanderWithin(${1:vector origin}, ${2:vector dist}, ${3:list options});\\n\\\n\t$0\\n\\\nsnippet llWater\\n\\\n\tllWater(${1:vector offset});\\n\\\n\t$0\\n\\\nsnippet llWhisper\\n\\\n\tllWhisper(${1:integer channel}, ${2:string msg});\\n\\\n\t$0\\n\\\nsnippet llWind\\n\\\n\tllWind(${1:vector offset});\\n\\\n\t$0\\n\\\nsnippet llXorBase64\\n\\\n\tllXorBase64(${1:string str1}, ${2:string str2})\\n\\\nsnippet money\\n\\\n\tmoney(${1:key id}, ${2:integer amount})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet object_rez\\n\\\n\tobject_rez(${1:key id})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet on_rez\\n\\\n\ton_rez(${1:integer start_param})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet path_update\\n\\\n\tpath_update(${1:integer type}, ${2:list reserved})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet remote_data\\n\\\n\tremote_data(${1:integer event_type}, ${2:key channel}, ${3:key message_id}, ${4:string sender}, ${5:integer idata}, ${6:string sdata})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet run_time_permissions\\n\\\n\trun_time_permissions(${1:integer perm})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet sensor\\n\\\n\tsensor(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet state\\n\\\n\tstate ${1:name}\\n\\\nsnippet touch\\n\\\n\ttouch(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet touch_end\\n\\\n\ttouch_end(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet touch_start\\n\\\n\ttouch_start(${1:integer index})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet transaction_result\\n\\\n\ttransaction_result(${1:key id}, ${2:integer success}, ${3:string data})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\nsnippet while\\n\\\n\twhile (${1:condition})\\n\\\n\t{\\n\\\n\t\t$0\\n\\\n\t}\\n\\\n\";\nexports.scope = \"lsl\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/lsl\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}