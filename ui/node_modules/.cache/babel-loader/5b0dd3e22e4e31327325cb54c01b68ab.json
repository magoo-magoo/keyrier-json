{"ast":null,"code":"ace.define(\"ace/snippets/php\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippetText = \"snippet ec\\n\\\n\techo ${1};\\n\\\nsnippet ns\\n\\\n\tnamespace ${1:Foo\\\\Bar\\\\Baz};\\n\\\n\t${2}\\n\\\nsnippet use\\n\\\n\tuse ${1:Foo\\\\Bar\\\\Baz};\\n\\\n\t${2}\\n\\\nsnippet c\\n\\\n\t${1:abstract }class ${2:$FILENAME}\\n\\\n\t{\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\nsnippet i\\n\\\n\tinterface ${1:$FILENAME}\\n\\\n\t{\\n\\\n\t\t${2}\\n\\\n\t}\\n\\\nsnippet t.\\n\\\n\t$this->${1}\\n\\\nsnippet f\\n\\\n\tfunction ${1:foo}(${2:array }${3:$bar})\\n\\\n\t{\\n\\\n\t\t${4}\\n\\\n\t}\\n\\\n# method\\n\\\nsnippet m\\n\\\n\t${1:abstract }${2:protected}${3: static} function ${4:foo}(${5:array }${6:$bar})\\n\\\n\t{\\n\\\n\t\t${7}\\n\\\n\t}\\n\\\n# setter method\\n\\\nsnippet sm\\n\\\n\t/**\\n\\\n\t * Sets the value of ${1:foo}\\n\\\n\t *\\n\\\n\t * @param ${2:$1} $$1 ${3:description}\\n\\\n\t *\\n\\\n\t * @return ${4:$FILENAME}\\n\\\n\t */\\n\\\n\t${5:public} function set${6:$2}(${7:$2 }$$1)\\n\\\n\t{\\n\\\n\t\t$this->${8:$1} = $$1;\\n\\\n\t\treturn $this;\\n\\\n\t}${9}\\n\\\n# getter method\\n\\\nsnippet gm\\n\\\n\t/**\\n\\\n\t * Gets the value of ${1:foo}\\n\\\n\t *\\n\\\n\t * @return ${2:$1}\\n\\\n\t */\\n\\\n\t${3:public} function get${4:$2}()\\n\\\n\t{\\n\\\n\t\treturn $this->${5:$1};\\n\\\n\t}${6}\\n\\\n#setter\\n\\\nsnippet $s\\n\\\n\t${1:$foo}->set${2:Bar}(${3});\\n\\\n#getter\\n\\\nsnippet $g\\n\\\n\t${1:$foo}->get${2:Bar}();\\n\\\n\\n\\\n# Tertiary conditional\\n\\\nsnippet =?:\\n\\\n\t$${1:foo} = ${2:true} ? ${3:a} : ${4};\\n\\\nsnippet ?:\\n\\\n\t${1:true} ? ${2:a} : ${3}\\n\\\n\\n\\\nsnippet C\\n\\\n\t$_COOKIE['${1:variable}']${2}\\n\\\nsnippet E\\n\\\n\t$_ENV['${1:variable}']${2}\\n\\\nsnippet F\\n\\\n\t$_FILES['${1:variable}']${2}\\n\\\nsnippet G\\n\\\n\t$_GET['${1:variable}']${2}\\n\\\nsnippet P\\n\\\n\t$_POST['${1:variable}']${2}\\n\\\nsnippet R\\n\\\n\t$_REQUEST['${1:variable}']${2}\\n\\\nsnippet S\\n\\\n\t$_SERVER['${1:variable}']${2}\\n\\\nsnippet SS\\n\\\n\t$_SESSION['${1:variable}']${2}\\n\\\n\\n\\\n# the following are old ones\\n\\\nsnippet inc\\n\\\n\tinclude '${1:file}';${2}\\n\\\nsnippet inc1\\n\\\n\tinclude_once '${1:file}';${2}\\n\\\nsnippet req\\n\\\n\trequire '${1:file}';${2}\\n\\\nsnippet req1\\n\\\n\trequire_once '${1:file}';${2}\\n\\\n# Start Docblock\\n\\\nsnippet /*\\n\\\n\t/**\\n\\\n\t * ${1}\\n\\\n\t */\\n\\\n# Class - post doc\\n\\\nsnippet doc_cp\\n\\\n\t/**\\n\\\n\t * ${1:undocumented class}\\n\\\n\t *\\n\\\n\t * @package ${2:default}\\n\\\n\t * @subpackage ${3:default}\\n\\\n\t * @author ${4:`g:snips_author`}\\n\\\n\t */${5}\\n\\\n# Class Variable - post doc\\n\\\nsnippet doc_vp\\n\\\n\t/**\\n\\\n\t * ${1:undocumented class variable}\\n\\\n\t *\\n\\\n\t * @var ${2:string}\\n\\\n\t */${3}\\n\\\n# Class Variable\\n\\\nsnippet doc_v\\n\\\n\t/**\\n\\\n\t * ${3:undocumented class variable}\\n\\\n\t *\\n\\\n\t * @var ${4:string}\\n\\\n\t */\\n\\\n\t${1:var} $${2};${5}\\n\\\n# Class\\n\\\nsnippet doc_c\\n\\\n\t/**\\n\\\n\t * ${3:undocumented class}\\n\\\n\t *\\n\\\n\t * @package ${4:default}\\n\\\n\t * @subpackage ${5:default}\\n\\\n\t * @author ${6:`g:snips_author`}\\n\\\n\t */\\n\\\n\t${1:}class ${2:}\\n\\\n\t{\\n\\\n\t\t${7}\\n\\\n\t} // END $1class $2\\n\\\n# Constant Definition - post doc\\n\\\nsnippet doc_dp\\n\\\n\t/**\\n\\\n\t * ${1:undocumented constant}\\n\\\n\t */${2}\\n\\\n# Constant Definition\\n\\\nsnippet doc_d\\n\\\n\t/**\\n\\\n\t * ${3:undocumented constant}\\n\\\n\t */\\n\\\n\tdefine(${1}, ${2});${4}\\n\\\n# Function - post doc\\n\\\nsnippet doc_fp\\n\\\n\t/**\\n\\\n\t * ${1:undocumented function}\\n\\\n\t *\\n\\\n\t * @return ${2:void}\\n\\\n\t * @author ${3:`g:snips_author`}\\n\\\n\t */${4}\\n\\\n# Function signature\\n\\\nsnippet doc_s\\n\\\n\t/**\\n\\\n\t * ${4:undocumented function}\\n\\\n\t *\\n\\\n\t * @return ${5:void}\\n\\\n\t * @author ${6:`g:snips_author`}\\n\\\n\t */\\n\\\n\t${1}function ${2}(${3});${7}\\n\\\n# Function\\n\\\nsnippet doc_f\\n\\\n\t/**\\n\\\n\t * ${4:undocumented function}\\n\\\n\t *\\n\\\n\t * @return ${5:void}\\n\\\n\t * @author ${6:`g:snips_author`}\\n\\\n\t */\\n\\\n\t${1}function ${2}(${3})\\n\\\n\t{${7}\\n\\\n\t}\\n\\\n# Header\\n\\\nsnippet doc_h\\n\\\n\t/**\\n\\\n\t * ${1}\\n\\\n\t *\\n\\\n\t * @author ${2:`g:snips_author`}\\n\\\n\t * @version ${3:$Id$}\\n\\\n\t * @copyright ${4:$2}, `strftime('%d %B, %Y')`\\n\\\n\t * @package ${5:default}\\n\\\n\t */\\n\\\n\\n\\\n# Interface\\n\\\nsnippet interface\\n\\\n\t/**\\n\\\n\t * ${2:undocumented class}\\n\\\n\t *\\n\\\n\t * @package ${3:default}\\n\\\n\t * @author ${4:`g:snips_author`}\\n\\\n\t */\\n\\\n\tinterface ${1:$FILENAME}\\n\\\n\t{\\n\\\n\t\t${5}\\n\\\n\t}\\n\\\n# class ...\\n\\\nsnippet class\\n\\\n\t/**\\n\\\n\t * ${1}\\n\\\n\t */\\n\\\n\tclass ${2:$FILENAME}\\n\\\n\t{\\n\\\n\t\t${3}\\n\\\n\t\t/**\\n\\\n\t\t * ${4}\\n\\\n\t\t */\\n\\\n\t\t${5:public} function ${6:__construct}(${7:argument})\\n\\\n\t\t{\\n\\\n\t\t\t${8:// code...}\\n\\\n\t\t}\\n\\\n\t}\\n\\\n# define(...)\\n\\\nsnippet def\\n\\\n\tdefine('${1}'${2});${3}\\n\\\n# defined(...)\\n\\\nsnippet def?\\n\\\n\t${1}defined('${2}')${3}\\n\\\nsnippet wh\\n\\\n\twhile (${1:/* condition */}) {\\n\\\n\t\t${2:// code...}\\n\\\n\t}\\n\\\n# do ... while\\n\\\nsnippet do\\n\\\n\tdo {\\n\\\n\t\t${2:// code... }\\n\\\n\t} while (${1:/* condition */});\\n\\\nsnippet if\\n\\\n\tif (${1:/* condition */}) {\\n\\\n\t\t${2:// code...}\\n\\\n\t}\\n\\\nsnippet ife\\n\\\n\tif (${1:/* condition */}) {\\n\\\n\t\t${2:// code...}\\n\\\n\t} else {\\n\\\n\t\t${3:// code...}\\n\\\n\t}\\n\\\n\t${4}\\n\\\nsnippet else\\n\\\n\telse {\\n\\\n\t\t${1:// code...}\\n\\\n\t}\\n\\\nsnippet elseif\\n\\\n\telseif (${1:/* condition */}) {\\n\\\n\t\t${2:// code...}\\n\\\n\t}\\n\\\nsnippet switch\\n\\\n\tswitch ($${1:variable}) {\\n\\\n\t\tcase '${2:value}':\\n\\\n\t\t\t${3:// code...}\\n\\\n\t\t\tbreak;\\n\\\n\t\t${5}\\n\\\n\t\tdefault:\\n\\\n\t\t\t${4:// code...}\\n\\\n\t\t\tbreak;\\n\\\n\t}\\n\\\nsnippet case\\n\\\n\tcase '${1:value}':\\n\\\n\t\t${2:// code...}\\n\\\n\t\tbreak;${3}\\n\\\nsnippet for\\n\\\n\tfor ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {\\n\\\n\t\t${4: // code...}\\n\\\n\t}\\n\\\nsnippet foreach\\n\\\n\tforeach ($${1:variable} as $${2:value}) {\\n\\\n\t\t${3:// code...}\\n\\\n\t}\\n\\\nsnippet foreachk\\n\\\n\tforeach ($${1:variable} as $${2:key} => $${3:value}) {\\n\\\n\t\t${4:// code...}\\n\\\n\t}\\n\\\n# $... = array (...)\\n\\\nsnippet array\\n\\\n\t$${1:arrayName} = array('${2}' => ${3});${4}\\n\\\nsnippet try\\n\\\n\ttry {\\n\\\n\t\t${2}\\n\\\n\t} catch (${1:Exception} $e) {\\n\\\n\t}\\n\\\n# lambda with closure\\n\\\nsnippet lambda\\n\\\n\t${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {\\n\\\n\t\t${4}\\n\\\n\t};\\n\\\n# pre_dump();\\n\\\nsnippet pd\\n\\\n\techo '<pre>'; var_dump(${1}); echo '</pre>';\\n\\\n# pre_dump(); die();\\n\\\nsnippet pdd\\n\\\n\techo '<pre>'; var_dump(${1}); echo '</pre>'; die(${2:});\\n\\\nsnippet vd\\n\\\n\tvar_dump(${1});\\n\\\nsnippet vdd\\n\\\n\tvar_dump(${1}); die(${2:});\\n\\\nsnippet http_redirect\\n\\\n\theader (\\\"HTTP/1.1 301 Moved Permanently\\\");\\n\\\n\theader (\\\"Location: \\\".URL);\\n\\\n\texit();\\n\\\n# Getters & Setters\\n\\\nsnippet gs\\n\\\n\t/**\\n\\\n\t * Gets the value of ${1:foo}\\n\\\n\t *\\n\\\n\t * @return ${2:$1}\\n\\\n\t */\\n\\\n\tpublic function get${3:$2}()\\n\\\n\t{\\n\\\n\t\treturn $this->${4:$1};\\n\\\n\t}\\n\\\n\\n\\\n\t/**\\n\\\n\t * Sets the value of $1\\n\\\n\t *\\n\\\n\t * @param $2 $$1 ${5:description}\\n\\\n\t *\\n\\\n\t * @return ${6:$FILENAME}\\n\\\n\t */\\n\\\n\tpublic function set$3(${7:$2 }$$1)\\n\\\n\t{\\n\\\n\t\t$this->$4 = $$1;\\n\\\n\t\treturn $this;\\n\\\n\t}${8}\\n\\\n# anotation, get, and set, useful for doctrine\\n\\\nsnippet ags\\n\\\n\t/**\\n\\\n\t * ${1:description}\\n\\\n\t *\\n\\\n\t * @${7}\\n\\\n\t */\\n\\\n\t${2:protected} $${3:foo};\\n\\\n\\n\\\n\tpublic function get${4:$3}()\\n\\\n\t{\\n\\\n\t\treturn $this->$3;\\n\\\n\t}\\n\\\n\\n\\\n\tpublic function set$4(${5:$4 }$${6:$3})\\n\\\n\t{\\n\\\n\t\t$this->$3 = $$6;\\n\\\n\t\treturn $this;\\n\\\n\t}\\n\\\nsnippet rett\\n\\\n\treturn true;\\n\\\nsnippet retf\\n\\\n\treturn false;\\n\\\nscope html\\n\\\nsnippet <?\\n\\\n\t<?php\\n\\\n\\n\\\n\t${1}\\n\\\nsnippet <?e\\n\\\n\t<?php echo ${1} ?>\\n\\\n# this one is for php5.4\\n\\\nsnippet <?=\\n\\\n\t<?=${1}?>\\n\\\nsnippet ifil\\n\\\n\t<?php if (${1:/* condition */}): ?>\\n\\\n\t\t${2:<!-- code... -->}\\n\\\n\t<?php endif; ?>\\n\\\nsnippet ifeil\\n\\\n\t<?php if (${1:/* condition */}): ?>\\n\\\n\t\t${2:<!-- html... -->}\\n\\\n\t<?php else: ?>\\n\\\n\t\t${3:<!-- html... -->}\\n\\\n\t<?php endif; ?>\\n\\\n\t${4}\\n\\\nsnippet foreachil\\n\\\n\t<?php foreach ($${1:variable} as $${2:value}): ?>\\n\\\n\t\t${3:<!-- html... -->}\\n\\\n\t<?php endforeach; ?>\\n\\\nsnippet foreachkil\\n\\\n\t<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>\\n\\\n\t\t${4:<!-- html... -->}\\n\\\n\t<?php endforeach; ?>\\n\\\nscope html-tag\\n\\\nsnippet ifil\\\\n\\\\\\n\\\n\t<?php if (${1:true}): ?>${2:code}<?php endif; ?>\\n\\\nsnippet ifeil\\\\n\\\\\\n\\\n\t<?php if (${1:true}): ?>${2:code}<?php else: ?>${3:code}<?php endif; ?>${4}\\n\\\n\";\n  exports.scope = \"php\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/php\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/snippets/php.js"],"names":["ace","define","require","exports","module","snippetText","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,kBAAX,EAA8B,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAA9B,EAA8D,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AACjG;;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;AAgYAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,KAAhB;AAEC,CArYD;;AAqYmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,kBAAD,CAAZ,EAAkC,UAASK,CAAT,EAAY;AAC1C,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/php\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\nexports.snippetText = \"snippet ec\\n\\\n\techo ${1};\\n\\\nsnippet ns\\n\\\n\tnamespace ${1:Foo\\\\Bar\\\\Baz};\\n\\\n\t${2}\\n\\\nsnippet use\\n\\\n\tuse ${1:Foo\\\\Bar\\\\Baz};\\n\\\n\t${2}\\n\\\nsnippet c\\n\\\n\t${1:abstract }class ${2:$FILENAME}\\n\\\n\t{\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\nsnippet i\\n\\\n\tinterface ${1:$FILENAME}\\n\\\n\t{\\n\\\n\t\t${2}\\n\\\n\t}\\n\\\nsnippet t.\\n\\\n\t$this->${1}\\n\\\nsnippet f\\n\\\n\tfunction ${1:foo}(${2:array }${3:$bar})\\n\\\n\t{\\n\\\n\t\t${4}\\n\\\n\t}\\n\\\n# method\\n\\\nsnippet m\\n\\\n\t${1:abstract }${2:protected}${3: static} function ${4:foo}(${5:array }${6:$bar})\\n\\\n\t{\\n\\\n\t\t${7}\\n\\\n\t}\\n\\\n# setter method\\n\\\nsnippet sm\\n\\\n\t/**\\n\\\n\t * Sets the value of ${1:foo}\\n\\\n\t *\\n\\\n\t * @param ${2:$1} $$1 ${3:description}\\n\\\n\t *\\n\\\n\t * @return ${4:$FILENAME}\\n\\\n\t */\\n\\\n\t${5:public} function set${6:$2}(${7:$2 }$$1)\\n\\\n\t{\\n\\\n\t\t$this->${8:$1} = $$1;\\n\\\n\t\treturn $this;\\n\\\n\t}${9}\\n\\\n# getter method\\n\\\nsnippet gm\\n\\\n\t/**\\n\\\n\t * Gets the value of ${1:foo}\\n\\\n\t *\\n\\\n\t * @return ${2:$1}\\n\\\n\t */\\n\\\n\t${3:public} function get${4:$2}()\\n\\\n\t{\\n\\\n\t\treturn $this->${5:$1};\\n\\\n\t}${6}\\n\\\n#setter\\n\\\nsnippet $s\\n\\\n\t${1:$foo}->set${2:Bar}(${3});\\n\\\n#getter\\n\\\nsnippet $g\\n\\\n\t${1:$foo}->get${2:Bar}();\\n\\\n\\n\\\n# Tertiary conditional\\n\\\nsnippet =?:\\n\\\n\t$${1:foo} = ${2:true} ? ${3:a} : ${4};\\n\\\nsnippet ?:\\n\\\n\t${1:true} ? ${2:a} : ${3}\\n\\\n\\n\\\nsnippet C\\n\\\n\t$_COOKIE['${1:variable}']${2}\\n\\\nsnippet E\\n\\\n\t$_ENV['${1:variable}']${2}\\n\\\nsnippet F\\n\\\n\t$_FILES['${1:variable}']${2}\\n\\\nsnippet G\\n\\\n\t$_GET['${1:variable}']${2}\\n\\\nsnippet P\\n\\\n\t$_POST['${1:variable}']${2}\\n\\\nsnippet R\\n\\\n\t$_REQUEST['${1:variable}']${2}\\n\\\nsnippet S\\n\\\n\t$_SERVER['${1:variable}']${2}\\n\\\nsnippet SS\\n\\\n\t$_SESSION['${1:variable}']${2}\\n\\\n\\n\\\n# the following are old ones\\n\\\nsnippet inc\\n\\\n\tinclude '${1:file}';${2}\\n\\\nsnippet inc1\\n\\\n\tinclude_once '${1:file}';${2}\\n\\\nsnippet req\\n\\\n\trequire '${1:file}';${2}\\n\\\nsnippet req1\\n\\\n\trequire_once '${1:file}';${2}\\n\\\n# Start Docblock\\n\\\nsnippet /*\\n\\\n\t/**\\n\\\n\t * ${1}\\n\\\n\t */\\n\\\n# Class - post doc\\n\\\nsnippet doc_cp\\n\\\n\t/**\\n\\\n\t * ${1:undocumented class}\\n\\\n\t *\\n\\\n\t * @package ${2:default}\\n\\\n\t * @subpackage ${3:default}\\n\\\n\t * @author ${4:`g:snips_author`}\\n\\\n\t */${5}\\n\\\n# Class Variable - post doc\\n\\\nsnippet doc_vp\\n\\\n\t/**\\n\\\n\t * ${1:undocumented class variable}\\n\\\n\t *\\n\\\n\t * @var ${2:string}\\n\\\n\t */${3}\\n\\\n# Class Variable\\n\\\nsnippet doc_v\\n\\\n\t/**\\n\\\n\t * ${3:undocumented class variable}\\n\\\n\t *\\n\\\n\t * @var ${4:string}\\n\\\n\t */\\n\\\n\t${1:var} $${2};${5}\\n\\\n# Class\\n\\\nsnippet doc_c\\n\\\n\t/**\\n\\\n\t * ${3:undocumented class}\\n\\\n\t *\\n\\\n\t * @package ${4:default}\\n\\\n\t * @subpackage ${5:default}\\n\\\n\t * @author ${6:`g:snips_author`}\\n\\\n\t */\\n\\\n\t${1:}class ${2:}\\n\\\n\t{\\n\\\n\t\t${7}\\n\\\n\t} // END $1class $2\\n\\\n# Constant Definition - post doc\\n\\\nsnippet doc_dp\\n\\\n\t/**\\n\\\n\t * ${1:undocumented constant}\\n\\\n\t */${2}\\n\\\n# Constant Definition\\n\\\nsnippet doc_d\\n\\\n\t/**\\n\\\n\t * ${3:undocumented constant}\\n\\\n\t */\\n\\\n\tdefine(${1}, ${2});${4}\\n\\\n# Function - post doc\\n\\\nsnippet doc_fp\\n\\\n\t/**\\n\\\n\t * ${1:undocumented function}\\n\\\n\t *\\n\\\n\t * @return ${2:void}\\n\\\n\t * @author ${3:`g:snips_author`}\\n\\\n\t */${4}\\n\\\n# Function signature\\n\\\nsnippet doc_s\\n\\\n\t/**\\n\\\n\t * ${4:undocumented function}\\n\\\n\t *\\n\\\n\t * @return ${5:void}\\n\\\n\t * @author ${6:`g:snips_author`}\\n\\\n\t */\\n\\\n\t${1}function ${2}(${3});${7}\\n\\\n# Function\\n\\\nsnippet doc_f\\n\\\n\t/**\\n\\\n\t * ${4:undocumented function}\\n\\\n\t *\\n\\\n\t * @return ${5:void}\\n\\\n\t * @author ${6:`g:snips_author`}\\n\\\n\t */\\n\\\n\t${1}function ${2}(${3})\\n\\\n\t{${7}\\n\\\n\t}\\n\\\n# Header\\n\\\nsnippet doc_h\\n\\\n\t/**\\n\\\n\t * ${1}\\n\\\n\t *\\n\\\n\t * @author ${2:`g:snips_author`}\\n\\\n\t * @version ${3:$Id$}\\n\\\n\t * @copyright ${4:$2}, `strftime('%d %B, %Y')`\\n\\\n\t * @package ${5:default}\\n\\\n\t */\\n\\\n\\n\\\n# Interface\\n\\\nsnippet interface\\n\\\n\t/**\\n\\\n\t * ${2:undocumented class}\\n\\\n\t *\\n\\\n\t * @package ${3:default}\\n\\\n\t * @author ${4:`g:snips_author`}\\n\\\n\t */\\n\\\n\tinterface ${1:$FILENAME}\\n\\\n\t{\\n\\\n\t\t${5}\\n\\\n\t}\\n\\\n# class ...\\n\\\nsnippet class\\n\\\n\t/**\\n\\\n\t * ${1}\\n\\\n\t */\\n\\\n\tclass ${2:$FILENAME}\\n\\\n\t{\\n\\\n\t\t${3}\\n\\\n\t\t/**\\n\\\n\t\t * ${4}\\n\\\n\t\t */\\n\\\n\t\t${5:public} function ${6:__construct}(${7:argument})\\n\\\n\t\t{\\n\\\n\t\t\t${8:// code...}\\n\\\n\t\t}\\n\\\n\t}\\n\\\n# define(...)\\n\\\nsnippet def\\n\\\n\tdefine('${1}'${2});${3}\\n\\\n# defined(...)\\n\\\nsnippet def?\\n\\\n\t${1}defined('${2}')${3}\\n\\\nsnippet wh\\n\\\n\twhile (${1:/* condition */}) {\\n\\\n\t\t${2:// code...}\\n\\\n\t}\\n\\\n# do ... while\\n\\\nsnippet do\\n\\\n\tdo {\\n\\\n\t\t${2:// code... }\\n\\\n\t} while (${1:/* condition */});\\n\\\nsnippet if\\n\\\n\tif (${1:/* condition */}) {\\n\\\n\t\t${2:// code...}\\n\\\n\t}\\n\\\nsnippet ife\\n\\\n\tif (${1:/* condition */}) {\\n\\\n\t\t${2:// code...}\\n\\\n\t} else {\\n\\\n\t\t${3:// code...}\\n\\\n\t}\\n\\\n\t${4}\\n\\\nsnippet else\\n\\\n\telse {\\n\\\n\t\t${1:// code...}\\n\\\n\t}\\n\\\nsnippet elseif\\n\\\n\telseif (${1:/* condition */}) {\\n\\\n\t\t${2:// code...}\\n\\\n\t}\\n\\\nsnippet switch\\n\\\n\tswitch ($${1:variable}) {\\n\\\n\t\tcase '${2:value}':\\n\\\n\t\t\t${3:// code...}\\n\\\n\t\t\tbreak;\\n\\\n\t\t${5}\\n\\\n\t\tdefault:\\n\\\n\t\t\t${4:// code...}\\n\\\n\t\t\tbreak;\\n\\\n\t}\\n\\\nsnippet case\\n\\\n\tcase '${1:value}':\\n\\\n\t\t${2:// code...}\\n\\\n\t\tbreak;${3}\\n\\\nsnippet for\\n\\\n\tfor ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {\\n\\\n\t\t${4: // code...}\\n\\\n\t}\\n\\\nsnippet foreach\\n\\\n\tforeach ($${1:variable} as $${2:value}) {\\n\\\n\t\t${3:// code...}\\n\\\n\t}\\n\\\nsnippet foreachk\\n\\\n\tforeach ($${1:variable} as $${2:key} => $${3:value}) {\\n\\\n\t\t${4:// code...}\\n\\\n\t}\\n\\\n# $... = array (...)\\n\\\nsnippet array\\n\\\n\t$${1:arrayName} = array('${2}' => ${3});${4}\\n\\\nsnippet try\\n\\\n\ttry {\\n\\\n\t\t${2}\\n\\\n\t} catch (${1:Exception} $e) {\\n\\\n\t}\\n\\\n# lambda with closure\\n\\\nsnippet lambda\\n\\\n\t${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {\\n\\\n\t\t${4}\\n\\\n\t};\\n\\\n# pre_dump();\\n\\\nsnippet pd\\n\\\n\techo '<pre>'; var_dump(${1}); echo '</pre>';\\n\\\n# pre_dump(); die();\\n\\\nsnippet pdd\\n\\\n\techo '<pre>'; var_dump(${1}); echo '</pre>'; die(${2:});\\n\\\nsnippet vd\\n\\\n\tvar_dump(${1});\\n\\\nsnippet vdd\\n\\\n\tvar_dump(${1}); die(${2:});\\n\\\nsnippet http_redirect\\n\\\n\theader (\\\"HTTP/1.1 301 Moved Permanently\\\");\\n\\\n\theader (\\\"Location: \\\".URL);\\n\\\n\texit();\\n\\\n# Getters & Setters\\n\\\nsnippet gs\\n\\\n\t/**\\n\\\n\t * Gets the value of ${1:foo}\\n\\\n\t *\\n\\\n\t * @return ${2:$1}\\n\\\n\t */\\n\\\n\tpublic function get${3:$2}()\\n\\\n\t{\\n\\\n\t\treturn $this->${4:$1};\\n\\\n\t}\\n\\\n\\n\\\n\t/**\\n\\\n\t * Sets the value of $1\\n\\\n\t *\\n\\\n\t * @param $2 $$1 ${5:description}\\n\\\n\t *\\n\\\n\t * @return ${6:$FILENAME}\\n\\\n\t */\\n\\\n\tpublic function set$3(${7:$2 }$$1)\\n\\\n\t{\\n\\\n\t\t$this->$4 = $$1;\\n\\\n\t\treturn $this;\\n\\\n\t}${8}\\n\\\n# anotation, get, and set, useful for doctrine\\n\\\nsnippet ags\\n\\\n\t/**\\n\\\n\t * ${1:description}\\n\\\n\t *\\n\\\n\t * @${7}\\n\\\n\t */\\n\\\n\t${2:protected} $${3:foo};\\n\\\n\\n\\\n\tpublic function get${4:$3}()\\n\\\n\t{\\n\\\n\t\treturn $this->$3;\\n\\\n\t}\\n\\\n\\n\\\n\tpublic function set$4(${5:$4 }$${6:$3})\\n\\\n\t{\\n\\\n\t\t$this->$3 = $$6;\\n\\\n\t\treturn $this;\\n\\\n\t}\\n\\\nsnippet rett\\n\\\n\treturn true;\\n\\\nsnippet retf\\n\\\n\treturn false;\\n\\\nscope html\\n\\\nsnippet <?\\n\\\n\t<?php\\n\\\n\\n\\\n\t${1}\\n\\\nsnippet <?e\\n\\\n\t<?php echo ${1} ?>\\n\\\n# this one is for php5.4\\n\\\nsnippet <?=\\n\\\n\t<?=${1}?>\\n\\\nsnippet ifil\\n\\\n\t<?php if (${1:/* condition */}): ?>\\n\\\n\t\t${2:<!-- code... -->}\\n\\\n\t<?php endif; ?>\\n\\\nsnippet ifeil\\n\\\n\t<?php if (${1:/* condition */}): ?>\\n\\\n\t\t${2:<!-- html... -->}\\n\\\n\t<?php else: ?>\\n\\\n\t\t${3:<!-- html... -->}\\n\\\n\t<?php endif; ?>\\n\\\n\t${4}\\n\\\nsnippet foreachil\\n\\\n\t<?php foreach ($${1:variable} as $${2:value}): ?>\\n\\\n\t\t${3:<!-- html... -->}\\n\\\n\t<?php endforeach; ?>\\n\\\nsnippet foreachkil\\n\\\n\t<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>\\n\\\n\t\t${4:<!-- html... -->}\\n\\\n\t<?php endforeach; ?>\\n\\\nscope html-tag\\n\\\nsnippet ifil\\\\n\\\\\\n\\\n\t<?php if (${1:true}): ?>${2:code}<?php endif; ?>\\n\\\nsnippet ifeil\\\\n\\\\\\n\\\n\t<?php if (${1:true}): ?>${2:code}<?php else: ?>${3:code}<?php endif; ?>${4}\\n\\\n\";\nexports.scope = \"php\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/php\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}