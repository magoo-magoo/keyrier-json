{"ast":null,"code":"ace.define(\"ace/mode/asciidoc_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var AsciidocHighlightRules = function () {\n    var identifierRe = \"[a-zA-Z\\u00a1-\\uffff]+\\\\b\";\n    this.$rules = {\n      \"start\": [{\n        token: \"empty\",\n        regex: /$/\n      }, {\n        token: \"literal\",\n        regex: /^\\.{4,}\\s*$/,\n        next: \"listingBlock\"\n      }, {\n        token: \"literal\",\n        regex: /^-{4,}\\s*$/,\n        next: \"literalBlock\"\n      }, {\n        token: \"string\",\n        regex: /^\\+{4,}\\s*$/,\n        next: \"passthroughBlock\"\n      }, {\n        token: \"keyword\",\n        regex: /^={4,}\\s*$/\n      }, {\n        token: \"text\",\n        regex: /^\\s*$/\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"dissallowDelimitedBlock\"\n      }],\n      \"dissallowDelimitedBlock\": [{\n        include: \"paragraphEnd\"\n      }, {\n        token: \"comment\",\n        regex: '^//.+$'\n      }, {\n        token: \"keyword\",\n        regex: \"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):\"\n      }, {\n        include: \"listStart\"\n      }, {\n        token: \"literal\",\n        regex: /^\\s+.+$/,\n        next: \"indentedBlock\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"text\"\n      }],\n      \"paragraphEnd\": [{\n        token: \"doc.comment\",\n        regex: /^\\/{4,}\\s*$/,\n        next: \"commentBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /^\\s*[|!]=+\\s*$/,\n        next: \"tableBlock\"\n      }, {\n        token: \"keyword\",\n        regex: /^(?:--|''')\\s*$/,\n        next: \"start\"\n      }, {\n        token: \"option\",\n        regex: /^\\[.*\\]\\s*$/,\n        next: \"start\"\n      }, {\n        token: \"pageBreak\",\n        regex: /^>{3,}$/,\n        next: \"start\"\n      }, {\n        token: \"literal\",\n        regex: /^\\.{4,}\\s*$/,\n        next: \"listingBlock\"\n      }, {\n        token: \"titleUnderline\",\n        regex: /^(?:={2,}|-{2,}|~{2,}|\\^{2,}|\\+{2,})\\s*$/,\n        next: \"start\"\n      }, {\n        token: \"singleLineTitle\",\n        regex: /^={1,5}\\s+\\S.*$/,\n        next: \"start\"\n      }, {\n        token: \"otherBlock\",\n        regex: /^(?:\\*{2,}|_{2,})\\s*$/,\n        next: \"start\"\n      }, {\n        token: \"optionalTitle\",\n        regex: /^\\.[^.\\s].+$/,\n        next: \"start\"\n      }],\n      \"listStart\": [{\n        token: \"keyword\",\n        regex: /^\\s*(?:\\d+\\.|[a-zA-Z]\\.|[ixvmIXVM]+\\)|\\*{1,5}|-|\\.{1,5})\\s/,\n        next: \"listText\"\n      }, {\n        token: \"meta.tag\",\n        regex: /^.+(?::{2,4}|;;)(?: |$)/,\n        next: \"listText\"\n      }, {\n        token: \"support.function.list.callout\",\n        regex: /^(?:<\\d+>|\\d+>|>) /,\n        next: \"text\"\n      }, {\n        token: \"keyword\",\n        regex: /^\\+\\s*$/,\n        next: \"start\"\n      }],\n      \"text\": [{\n        token: [\"link\", \"variable.language\"],\n        regex: /((?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+)(\\[.*?\\])/\n      }, {\n        token: \"link\",\n        regex: /(?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+/\n      }, {\n        token: \"link\",\n        regex: /\\b[\\w\\.\\/\\-]+@[\\w\\.\\/\\-]+\\b/\n      }, {\n        include: \"macros\"\n      }, {\n        include: \"paragraphEnd\"\n      }, {\n        token: \"literal\",\n        regex: /\\+{3,}/,\n        next: \"smallPassthrough\"\n      }, {\n        token: \"escape\",\n        regex: /\\((?:C|TM|R)\\)|\\.{3}|->|<-|=>|<=|&#(?:\\d+|x[a-fA-F\\d]+);|(?: |^)--(?=\\s+\\S)/\n      }, {\n        token: \"escape\",\n        regex: /\\\\[_*'`+#]|\\\\{2}[_*'`+#]{2}/\n      }, {\n        token: \"keyword\",\n        regex: /\\s\\+$/\n      }, {\n        token: \"text\",\n        regex: identifierRe\n      }, {\n        token: [\"keyword\", \"string\", \"keyword\"],\n        regex: /(<<[\\w\\d\\-$]+,)(.*?)(>>|$)/\n      }, {\n        token: \"keyword\",\n        regex: /<<[\\w\\d\\-$]+,?|>>/\n      }, {\n        token: \"constant.character\",\n        regex: /\\({2,3}.*?\\){2,3}/\n      }, {\n        token: \"keyword\",\n        regex: /\\[\\[.+?\\]\\]/\n      }, {\n        token: \"support\",\n        regex: /^\\[{3}[\\w\\d =\\-]+\\]{3}/\n      }, {\n        include: \"quotes\"\n      }, {\n        token: \"empty\",\n        regex: /^\\s*$/,\n        next: \"start\"\n      }],\n      \"listText\": [{\n        include: \"listStart\"\n      }, {\n        include: \"text\"\n      }],\n      \"indentedBlock\": [{\n        token: \"literal\",\n        regex: /^[\\s\\w].+$/,\n        next: \"indentedBlock\"\n      }, {\n        token: \"literal\",\n        regex: \"\",\n        next: \"start\"\n      }],\n      \"listingBlock\": [{\n        token: \"literal\",\n        regex: /^\\.{4,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"constant.numeric\",\n        regex: '<\\\\d+>'\n      }, {\n        token: \"literal\",\n        regex: '[^<]+'\n      }, {\n        token: \"literal\",\n        regex: '<'\n      }],\n      \"literalBlock\": [{\n        token: \"literal\",\n        regex: /^-{4,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"constant.numeric\",\n        regex: '<\\\\d+>'\n      }, {\n        token: \"literal\",\n        regex: '[^<]+'\n      }, {\n        token: \"literal\",\n        regex: '<'\n      }],\n      \"passthroughBlock\": [{\n        token: \"literal\",\n        regex: /^\\+{4,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"literal\",\n        regex: identifierRe + \"|\\\\d+\"\n      }, {\n        include: \"macros\"\n      }, {\n        token: \"literal\",\n        regex: \".\"\n      }],\n      \"smallPassthrough\": [{\n        token: \"literal\",\n        regex: /[+]{3,}/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"literal\",\n        regex: /^\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"literal\",\n        regex: identifierRe + \"|\\\\d+\"\n      }, {\n        include: \"macros\"\n      }],\n      \"commentBlock\": [{\n        token: \"doc.comment\",\n        regex: /^\\/{4,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"doc.comment\",\n        regex: '^.*$'\n      }],\n      \"tableBlock\": [{\n        token: \"tableBlock\",\n        regex: /^\\s*\\|={3,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /^\\s*!={3,}\\s*$/,\n        next: \"innerTableBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /\\|/\n      }, {\n        include: \"text\",\n        noEscape: true\n      }],\n      \"innerTableBlock\": [{\n        token: \"tableBlock\",\n        regex: /^\\s*!={3,}\\s*$/,\n        next: \"tableBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /^\\s*|={3,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /!/\n      }],\n      \"macros\": [{\n        token: \"macro\",\n        regex: /{[\\w\\-$]+}/\n      }, {\n        token: [\"text\", \"string\", \"text\", \"constant.character\", \"text\"],\n        regex: /({)([\\w\\-$]+)(:)?(.+)?(})/\n      }, {\n        token: [\"text\", \"markup.list.macro\", \"keyword\", \"string\"],\n        regex: /(\\w+)(footnote(?:ref)?::?)([^\\s\\[]+)?(\\[.*?\\])?/\n      }, {\n        token: [\"markup.list.macro\", \"keyword\", \"string\"],\n        regex: /([a-zA-Z\\-][\\w\\.\\/\\-]*::?)([^\\s\\[]+)(\\[.*?\\])?/\n      }, {\n        token: [\"markup.list.macro\", \"keyword\"],\n        regex: /([a-zA-Z\\-][\\w\\.\\/\\-]+::?)(\\[.*?\\])/\n      }, {\n        token: \"keyword\",\n        regex: /^:.+?:(?= |$)/\n      }],\n      \"quotes\": [{\n        token: \"string.italic\",\n        regex: /__[^_\\s].*?__/\n      }, {\n        token: \"string.italic\",\n        regex: quoteRule(\"_\")\n      }, {\n        token: \"keyword.bold\",\n        regex: /\\*\\*[^*\\s].*?\\*\\*/\n      }, {\n        token: \"keyword.bold\",\n        regex: quoteRule(\"\\\\*\")\n      }, {\n        token: \"literal\",\n        regex: quoteRule(\"\\\\+\")\n      }, {\n        token: \"literal\",\n        regex: /\\+\\+[^+\\s].*?\\+\\+/\n      }, {\n        token: \"literal\",\n        regex: /\\$\\$.+?\\$\\$/\n      }, {\n        token: \"literal\",\n        regex: quoteRule(\"`\")\n      }, {\n        token: \"keyword\",\n        regex: quoteRule(\"^\")\n      }, {\n        token: \"keyword\",\n        regex: quoteRule(\"~\")\n      }, {\n        token: \"keyword\",\n        regex: /##?/\n      }, {\n        token: \"keyword\",\n        regex: /(?:\\B|^)``|\\b''/\n      }]\n    };\n\n    function quoteRule(ch) {\n      var prefix = /\\w/.test(ch) ? \"\\\\b\" : \"(?:\\\\B|^)\";\n      return prefix + ch + \"[^\" + ch + \"].*?\" + ch + \"(?![\\\\w*])\";\n    }\n\n    var tokenMap = {\n      macro: \"constant.character\",\n      tableBlock: \"doc.comment\",\n      titleUnderline: \"markup.heading\",\n      singleLineTitle: \"markup.heading\",\n      pageBreak: \"string\",\n      option: \"string.regexp\",\n      otherBlock: \"markup.list\",\n      literal: \"support.function\",\n      optionalTitle: \"constant.numeric\",\n      escape: \"constant.language.escape\",\n      link: \"markup.underline.list\"\n    };\n\n    for (var state in this.$rules) {\n      var stateRules = this.$rules[state];\n\n      for (var i = stateRules.length; i--;) {\n        var rule = stateRules[i];\n\n        if (rule.include || typeof rule == \"string\") {\n          var args = [i, 1].concat(this.$rules[rule.include || rule]);\n\n          if (rule.noEscape) {\n            args = args.filter(function (x) {\n              return !x.next;\n            });\n          }\n\n          stateRules.splice.apply(stateRules, args);\n        } else if (rule.token in tokenMap) {\n          rule.token = tokenMap[rule.token];\n        }\n      }\n    }\n  };\n\n  oop.inherits(AsciidocHighlightRules, TextHighlightRules);\n  exports.AsciidocHighlightRules = AsciidocHighlightRules;\n});\nace.define(\"ace/mode/folding/asciidoc\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^(?:\\|={10,}|[\\.\\/=\\-~^+]{4,}\\s*$|={1,5} )/;\n    this.singleLineHeadingRe = /^={1,5}(?=\\s+\\S)/;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (!this.foldingStartMarker.test(line)) return \"\";\n\n      if (line[0] == \"=\") {\n        if (this.singleLineHeadingRe.test(line)) return \"start\";\n        if (session.getLine(row - 1).length != session.getLine(row).length) return \"\";\n        return \"start\";\n      }\n\n      if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\") return \"end\";\n      return \"start\";\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      if (!line.match(this.foldingStartMarker)) return;\n      var token;\n\n      function getTokenType(row) {\n        token = session.getTokens(row)[0];\n        return token && token.type;\n      }\n\n      var levels = [\"=\", \"-\", \"~\", \"^\", \"+\"];\n      var heading = \"markup.heading\";\n      var singleLineHeadingRe = this.singleLineHeadingRe;\n\n      function getLevel() {\n        var match = token.value.match(singleLineHeadingRe);\n        if (match) return match[0].length;\n        var level = levels.indexOf(token.value[0]) + 1;\n\n        if (level == 1) {\n          if (session.getLine(row - 1).length != session.getLine(row).length) return Infinity;\n        }\n\n        return level;\n      }\n\n      if (getTokenType(row) == heading) {\n        var startHeadingLevel = getLevel();\n\n        while (++row < maxRow) {\n          if (getTokenType(row) != heading) continue;\n          var level = getLevel();\n          if (level <= startHeadingLevel) break;\n        }\n\n        var isSingleLineHeading = token && token.value.match(this.singleLineHeadingRe);\n        endRow = isSingleLineHeading ? row - 1 : row - 2;\n\n        if (endRow > startRow) {\n          while (endRow > startRow && (!getTokenType(endRow) || token.value[0] == \"[\")) endRow--;\n        }\n\n        if (endRow > startRow) {\n          var endColumn = session.getLine(endRow).length;\n          return new Range(startRow, startColumn, endRow, endColumn);\n        }\n      } else {\n        var state = session.bgTokenizer.getState(row);\n\n        if (state == \"dissallowDelimitedBlock\") {\n          while (row-- > 0) {\n            if (session.bgTokenizer.getState(row).lastIndexOf(\"Block\") == -1) break;\n          }\n\n          endRow = row + 1;\n\n          if (endRow < startRow) {\n            var endColumn = session.getLine(row).length;\n            return new Range(endRow, 5, startRow, startColumn - 5);\n          }\n        } else {\n          while (++row < maxRow) {\n            if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\") break;\n          }\n\n          endRow = row;\n\n          if (endRow > startRow) {\n            var endColumn = session.getLine(row).length;\n            return new Range(startRow, 5, endRow, endColumn - 5);\n          }\n        }\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/asciidoc\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/asciidoc_highlight_rules\", \"ace/mode/folding/asciidoc\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var AsciidocHighlightRules = require(\"./asciidoc_highlight_rules\").AsciidocHighlightRules;\n\n  var AsciidocFoldMode = require(\"./folding/asciidoc\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = AsciidocHighlightRules;\n    this.foldingRules = new AsciidocFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.type = \"text\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      if (state == \"listblock\") {\n        var match = /^((?:.+)?)([-+*][ ]+)/.exec(line);\n\n        if (match) {\n          return new Array(match[1].length + 1).join(\" \") + match[2];\n        } else {\n          return \"\";\n        }\n      } else {\n        return this.$getIndent(line);\n      }\n    };\n\n    this.$id = \"ace/mode/asciidoc\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/asciidoc\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-asciidoc.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","AsciidocHighlightRules","identifierRe","$rules","token","regex","next","include","noEscape","quoteRule","ch","prefix","test","tokenMap","macro","tableBlock","titleUnderline","singleLineTitle","pageBreak","option","otherBlock","literal","optionalTitle","escape","link","state","stateRules","i","length","rule","args","concat","filter","x","splice","apply","inherits","BaseFoldMode","FoldMode","Range","foldingStartMarker","singleLineHeadingRe","getFoldWidget","session","foldStyle","row","line","getLine","bgTokenizer","getState","getFoldWidgetRange","startColumn","maxRow","getLength","startRow","endRow","match","getTokenType","getTokens","type","levels","heading","getLevel","value","level","indexOf","Infinity","startHeadingLevel","isSingleLineHeading","endColumn","lastIndexOf","call","prototype","TextMode","Mode","AsciidocFoldMode","HighlightRules","foldingRules","getNextLineIndent","tab","exec","Array","join","$getIndent","$id","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/asciidoc_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar AsciidocHighlightRules = function() {\n    var identifierRe = \"[a-zA-Z\\u00a1-\\uffff]+\\\\b\";\n\n    this.$rules = {\n        \"start\": [\n            {token: \"empty\",   regex: /$/},\n            {token: \"literal\", regex: /^\\.{4,}\\s*$/,  next: \"listingBlock\"},\n            {token: \"literal\", regex: /^-{4,}\\s*$/,   next: \"literalBlock\"},\n            {token: \"string\",  regex: /^\\+{4,}\\s*$/,  next: \"passthroughBlock\"},\n            {token: \"keyword\", regex: /^={4,}\\s*$/},\n            {token: \"text\",    regex: /^\\s*$/},\n            {token: \"empty\", regex: \"\", next: \"dissallowDelimitedBlock\"}\n        ],\n\n        \"dissallowDelimitedBlock\": [\n            {include: \"paragraphEnd\"},\n            {token: \"comment\", regex: '^//.+$'},\n            {token: \"keyword\", regex: \"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):\"},\n\n            {include: \"listStart\"},\n            {token: \"literal\", regex: /^\\s+.+$/, next: \"indentedBlock\"},\n            {token: \"empty\",   regex: \"\", next: \"text\"}\n        ],\n\n        \"paragraphEnd\": [\n            {token: \"doc.comment\", regex: /^\\/{4,}\\s*$/,    next: \"commentBlock\"},\n            {token: \"tableBlock\",  regex: /^\\s*[|!]=+\\s*$/, next: \"tableBlock\"},\n            {token: \"keyword\",     regex: /^(?:--|''')\\s*$/, next: \"start\"},\n            {token: \"option\",      regex: /^\\[.*\\]\\s*$/,     next: \"start\"},\n            {token: \"pageBreak\",   regex: /^>{3,}$/,         next: \"start\"},\n            {token: \"literal\",     regex: /^\\.{4,}\\s*$/,     next: \"listingBlock\"},\n            {token: \"titleUnderline\",    regex: /^(?:={2,}|-{2,}|~{2,}|\\^{2,}|\\+{2,})\\s*$/, next: \"start\"},\n            {token: \"singleLineTitle\",   regex: /^={1,5}\\s+\\S.*$/, next: \"start\"},\n\n            {token: \"otherBlock\",    regex: /^(?:\\*{2,}|_{2,})\\s*$/, next: \"start\"},\n            {token: \"optionalTitle\", regex: /^\\.[^.\\s].+$/,  next: \"start\"}\n        ],\n\n        \"listStart\": [\n            {token: \"keyword\",  regex: /^\\s*(?:\\d+\\.|[a-zA-Z]\\.|[ixvmIXVM]+\\)|\\*{1,5}|-|\\.{1,5})\\s/, next: \"listText\"},\n            {token: \"meta.tag\", regex: /^.+(?::{2,4}|;;)(?: |$)/, next: \"listText\"},\n            {token: \"support.function.list.callout\", regex: /^(?:<\\d+>|\\d+>|>) /, next: \"text\"},\n            {token: \"keyword\",  regex: /^\\+\\s*$/, next: \"start\"}\n        ],\n\n        \"text\": [\n            {token: [\"link\", \"variable.language\"], regex: /((?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+)(\\[.*?\\])/},\n            {token: \"link\", regex: /(?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+/},\n            {token: \"link\", regex: /\\b[\\w\\.\\/\\-]+@[\\w\\.\\/\\-]+\\b/},\n            {include: \"macros\"},\n            {include: \"paragraphEnd\"},\n            {token: \"literal\", regex:/\\+{3,}/, next:\"smallPassthrough\"},\n            {token: \"escape\", regex: /\\((?:C|TM|R)\\)|\\.{3}|->|<-|=>|<=|&#(?:\\d+|x[a-fA-F\\d]+);|(?: |^)--(?=\\s+\\S)/},\n            {token: \"escape\", regex: /\\\\[_*'`+#]|\\\\{2}[_*'`+#]{2}/},\n            {token: \"keyword\", regex: /\\s\\+$/},\n            {token: \"text\", regex: identifierRe},\n            {token: [\"keyword\", \"string\", \"keyword\"],\n                regex: /(<<[\\w\\d\\-$]+,)(.*?)(>>|$)/},\n            {token: \"keyword\", regex: /<<[\\w\\d\\-$]+,?|>>/},\n            {token: \"constant.character\", regex: /\\({2,3}.*?\\){2,3}/},\n            {token: \"keyword\", regex: /\\[\\[.+?\\]\\]/},\n            {token: \"support\", regex: /^\\[{3}[\\w\\d =\\-]+\\]{3}/},\n\n            {include: \"quotes\"},\n            {token: \"empty\", regex: /^\\s*$/, next: \"start\"}\n        ],\n\n        \"listText\": [\n            {include: \"listStart\"},\n            {include: \"text\"}\n        ],\n\n        \"indentedBlock\": [\n            {token: \"literal\", regex: /^[\\s\\w].+$/, next: \"indentedBlock\"},\n            {token: \"literal\", regex: \"\", next: \"start\"}\n        ],\n\n        \"listingBlock\": [\n            {token: \"literal\", regex: /^\\.{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"constant.numeric\", regex: '<\\\\d+>'},\n            {token: \"literal\", regex: '[^<]+'},\n            {token: \"literal\", regex: '<'}\n        ],\n        \"literalBlock\": [\n            {token: \"literal\", regex: /^-{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"constant.numeric\", regex: '<\\\\d+>'},\n            {token: \"literal\", regex: '[^<]+'},\n            {token: \"literal\", regex: '<'}\n        ],\n        \"passthroughBlock\": [\n            {token: \"literal\", regex: /^\\+{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"literal\", regex: identifierRe + \"|\\\\d+\"},\n            {include: \"macros\"},\n            {token: \"literal\", regex: \".\"}\n        ],\n\n        \"smallPassthrough\": [\n            {token: \"literal\", regex: /[+]{3,}/, next: \"dissallowDelimitedBlock\"},\n            {token: \"literal\", regex: /^\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"literal\", regex: identifierRe + \"|\\\\d+\"},\n            {include: \"macros\"}\n        ],\n\n        \"commentBlock\": [\n            {token: \"doc.comment\", regex: /^\\/{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"doc.comment\", regex: '^.*$'}\n        ],\n        \"tableBlock\": [\n            {token: \"tableBlock\", regex: /^\\s*\\|={3,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"innerTableBlock\"},\n            {token: \"tableBlock\", regex: /\\|/},\n            {include: \"text\", noEscape: true}\n        ],\n        \"innerTableBlock\": [\n            {token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"tableBlock\"},\n            {token: \"tableBlock\", regex: /^\\s*|={3,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"tableBlock\", regex: /!/}\n        ],\n        \"macros\": [\n            {token: \"macro\", regex: /{[\\w\\-$]+}/},\n            {token: [\"text\", \"string\", \"text\", \"constant.character\", \"text\"], regex: /({)([\\w\\-$]+)(:)?(.+)?(})/},\n            {token: [\"text\", \"markup.list.macro\", \"keyword\", \"string\"], regex: /(\\w+)(footnote(?:ref)?::?)([^\\s\\[]+)?(\\[.*?\\])?/},\n            {token: [\"markup.list.macro\", \"keyword\", \"string\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]*::?)([^\\s\\[]+)(\\[.*?\\])?/},\n            {token: [\"markup.list.macro\", \"keyword\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]+::?)(\\[.*?\\])/},\n            {token: \"keyword\",     regex: /^:.+?:(?= |$)/}\n        ],\n\n        \"quotes\": [\n            {token: \"string.italic\", regex: /__[^_\\s].*?__/},\n            {token: \"string.italic\", regex: quoteRule(\"_\")},\n            \n            {token: \"keyword.bold\", regex: /\\*\\*[^*\\s].*?\\*\\*/},\n            {token: \"keyword.bold\", regex: quoteRule(\"\\\\*\")},\n            \n            {token: \"literal\", regex: quoteRule(\"\\\\+\")},\n            {token: \"literal\", regex: /\\+\\+[^+\\s].*?\\+\\+/},\n            {token: \"literal\", regex: /\\$\\$.+?\\$\\$/},\n            {token: \"literal\", regex: quoteRule(\"`\")},\n\n            {token: \"keyword\", regex: quoteRule(\"^\")},\n            {token: \"keyword\", regex: quoteRule(\"~\")},\n            {token: \"keyword\", regex: /##?/},\n            {token: \"keyword\", regex: /(?:\\B|^)``|\\b''/}\n        ]\n\n    };\n\n    function quoteRule(ch) {\n        var prefix = /\\w/.test(ch) ? \"\\\\b\" : \"(?:\\\\B|^)\";\n        return prefix + ch + \"[^\" + ch + \"].*?\" + ch + \"(?![\\\\w*])\";\n    }\n\n    var tokenMap = {\n        macro: \"constant.character\",\n        tableBlock: \"doc.comment\",\n        titleUnderline: \"markup.heading\",\n        singleLineTitle: \"markup.heading\",\n        pageBreak: \"string\",\n        option: \"string.regexp\",\n        otherBlock: \"markup.list\",\n        literal: \"support.function\",\n        optionalTitle: \"constant.numeric\",\n        escape: \"constant.language.escape\",\n        link: \"markup.underline.list\"\n    };\n\n    for (var state in this.$rules) {\n        var stateRules = this.$rules[state];\n        for (var i = stateRules.length; i--; ) {\n            var rule = stateRules[i];\n            if (rule.include || typeof rule == \"string\") {\n                var args = [i, 1].concat(this.$rules[rule.include || rule]);\n                if (rule.noEscape) {\n                    args = args.filter(function(x) {\n                        return !x.next;\n                    });\n                }\n                stateRules.splice.apply(stateRules, args);\n            } else if (rule.token in tokenMap) {\n                rule.token = tokenMap[rule.token];\n            }\n        }\n    }\n};\noop.inherits(AsciidocHighlightRules, TextHighlightRules);\n\nexports.AsciidocHighlightRules = AsciidocHighlightRules;\n});\n\nace.define(\"ace/mode/folding/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.foldingStartMarker = /^(?:\\|={10,}|[\\.\\/=\\-~^+]{4,}\\s*$|={1,5} )/;\n    this.singleLineHeadingRe = /^={1,5}(?=\\s+\\S)/;\n\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (!this.foldingStartMarker.test(line))\n            return \"\";\n\n        if (line[0] == \"=\") {\n            if (this.singleLineHeadingRe.test(line))\n                return \"start\";\n            if (session.getLine(row - 1).length != session.getLine(row).length)\n                return \"\";\n            return \"start\";\n        }\n        if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n            return \"end\";\n        return \"start\";\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        if (!line.match(this.foldingStartMarker))\n            return;\n\n        var token;\n        function getTokenType(row) {\n            token = session.getTokens(row)[0];\n            return token && token.type;\n        }\n\n        var levels = [\"=\",\"-\",\"~\",\"^\",\"+\"];\n        var heading = \"markup.heading\";\n        var singleLineHeadingRe = this.singleLineHeadingRe;\n        function getLevel() {\n            var match = token.value.match(singleLineHeadingRe);\n            if (match)\n                return match[0].length;\n            var level = levels.indexOf(token.value[0]) + 1;\n            if (level == 1) {\n                if (session.getLine(row - 1).length != session.getLine(row).length)\n                    return Infinity;\n            }\n            return level;\n        }\n\n        if (getTokenType(row) == heading) {\n            var startHeadingLevel = getLevel();\n            while (++row < maxRow) {\n                if (getTokenType(row) != heading)\n                    continue;\n                var level = getLevel();\n                if (level <= startHeadingLevel)\n                    break;\n            }\n\n            var isSingleLineHeading = token && token.value.match(this.singleLineHeadingRe);\n            endRow = isSingleLineHeading ? row - 1 : row - 2;\n\n            if (endRow > startRow) {\n                while (endRow > startRow && (!getTokenType(endRow) || token.value[0] == \"[\"))\n                    endRow--;\n            }\n\n            if (endRow > startRow) {\n                var endColumn = session.getLine(endRow).length;\n                return new Range(startRow, startColumn, endRow, endColumn);\n            }\n        } else {\n            var state = session.bgTokenizer.getState(row);\n            if (state == \"dissallowDelimitedBlock\") {\n                while (row -- > 0) {\n                    if (session.bgTokenizer.getState(row).lastIndexOf(\"Block\") == -1)\n                        break;\n                }\n                endRow = row + 1;\n                if (endRow < startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(endRow, 5, startRow, startColumn - 5);\n                }\n            } else {\n                while (++row < maxRow) {\n                    if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n                        break;\n                }\n                endRow = row;\n                if (endRow > startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(startRow, 5, endRow, endColumn - 5);\n                }\n            }\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/asciidoc_highlight_rules\",\"ace/mode/folding/asciidoc\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar AsciidocHighlightRules = require(\"./asciidoc_highlight_rules\").AsciidocHighlightRules;\nvar AsciidocFoldMode = require(\"./folding/asciidoc\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = AsciidocHighlightRules;\n    \n    this.foldingRules = new AsciidocFoldMode();    \n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.type = \"text\";\n    this.getNextLineIndent = function(state, line, tab) {\n        if (state == \"listblock\") {\n            var match = /^((?:.+)?)([-+*][ ]+)/.exec(line);\n            if (match) {\n                return new Array(match[1].length + 1).join(\" \") + match[2];\n            } else {\n                return \"\";\n            }\n        } else {\n            return this.$getIndent(line);\n        }\n    };\n    this.$id = \"ace/mode/asciidoc\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/asciidoc\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}