{"ast":null,"code":"import { __assign } from \"tslib\";\n/* eslint-disable */\n\nimport { useCallback, useRef } from 'react';\nimport useUpdate from './useUpdate';\n\nvar useGetSetState = function (initialState) {\n  if (initialState === void 0) {\n    initialState = {};\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof initialState !== 'object') {\n      console.error('useGetSetState initial state must be an object.');\n    }\n  }\n\n  var update = useUpdate();\n  var state = useRef(__assign({}, initialState));\n  var get = useCallback(function () {\n    return state.current;\n  }, []);\n  var set = useCallback(function (patch) {\n    if (!patch) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof patch !== 'object') {\n        console.error('useGetSetState setter patch must be an object.');\n      }\n    }\n\n    Object.assign(state.current, patch);\n    update();\n  }, []);\n  return [get, set];\n};\n\nexport default useGetSetState;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useGetSetState.js"],"names":["__assign","useCallback","useRef","useUpdate","useGetSetState","initialState","process","env","NODE_ENV","console","error","update","state","get","current","set","patch","Object","assign"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA;;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,IAAIC,cAAc,GAAG,UAAUC,YAAV,EAAwB;AACzC,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,IAAAA,YAAY,GAAG,EAAf;AAAoB;;AACnD,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,QAAI,OAAOH,YAAP,KAAwB,QAA5B,EAAsC;AAClCI,MAAAA,OAAO,CAACC,KAAR,CAAc,iDAAd;AACH;AACJ;;AACD,MAAIC,MAAM,GAAGR,SAAS,EAAtB;AACA,MAAIS,KAAK,GAAGV,MAAM,CAACF,QAAQ,CAAC,EAAD,EAAKK,YAAL,CAAT,CAAlB;AACA,MAAIQ,GAAG,GAAGZ,WAAW,CAAC,YAAY;AAAE,WAAOW,KAAK,CAACE,OAAb;AAAuB,GAAtC,EAAwC,EAAxC,CAArB;AACA,MAAIC,GAAG,GAAGd,WAAW,CAAC,UAAUe,KAAV,EAAiB;AACnC,QAAI,CAACA,KAAL,EAAY;AACR;AACH;;AACD,QAAIV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,UAAI,OAAOQ,KAAP,KAAiB,QAArB,EAA+B;AAC3BP,QAAAA,OAAO,CAACC,KAAR,CAAc,gDAAd;AACH;AACJ;;AACDO,IAAAA,MAAM,CAACC,MAAP,CAAcN,KAAK,CAACE,OAApB,EAA6BE,KAA7B;AACAL,IAAAA,MAAM;AACT,GAXoB,EAWlB,EAXkB,CAArB;AAYA,SAAO,CAACE,GAAD,EAAME,GAAN,CAAP;AACH,CAvBD;;AAwBA,eAAeX,cAAf","sourcesContent":["import { __assign } from \"tslib\";\n/* eslint-disable */\nimport { useCallback, useRef } from 'react';\nimport useUpdate from './useUpdate';\nvar useGetSetState = function (initialState) {\n    if (initialState === void 0) { initialState = {}; }\n    if (process.env.NODE_ENV !== 'production') {\n        if (typeof initialState !== 'object') {\n            console.error('useGetSetState initial state must be an object.');\n        }\n    }\n    var update = useUpdate();\n    var state = useRef(__assign({}, initialState));\n    var get = useCallback(function () { return state.current; }, []);\n    var set = useCallback(function (patch) {\n        if (!patch) {\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof patch !== 'object') {\n                console.error('useGetSetState setter patch must be an object.');\n            }\n        }\n        Object.assign(state.current, patch);\n        update();\n    }, []);\n    return [get, set];\n};\nexport default useGetSetState;\n"]},"metadata":{},"sourceType":"module"}