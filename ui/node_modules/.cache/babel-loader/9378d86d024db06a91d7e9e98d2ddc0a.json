{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { contains, every, has, some } from \"../../../utils/utils\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./gast_public\";\nimport { GAstVisitor } from \"./gast_visitor_public\";\nexport function isSequenceProd(prod) {\n  return prod instanceof Alternative || prod instanceof Option || prod instanceof Repetition || prod instanceof RepetitionMandatory || prod instanceof RepetitionMandatoryWithSeparator || prod instanceof RepetitionWithSeparator || prod instanceof Terminal || prod instanceof Rule;\n}\nexport function isOptionalProd(prod, alreadyVisited) {\n  if (alreadyVisited === void 0) {\n    alreadyVisited = [];\n  }\n\n  var isDirectlyOptional = prod instanceof Option || prod instanceof Repetition || prod instanceof RepetitionWithSeparator;\n\n  if (isDirectlyOptional) {\n    return true;\n  } // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n\n\n  if (prod instanceof Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return some(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else if (prod instanceof NonTerminal && contains(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false;\n  } else if (prod instanceof AbstractProduction) {\n    if (prod instanceof NonTerminal) {\n      alreadyVisited.push(prod);\n    }\n\n    return every(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else {\n    return false;\n  }\n}\nexport function isBranchingProd(prod) {\n  return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return \"SUBRULE\";\n  } else if (prod instanceof Option) {\n    return \"OPTION\";\n  } else if (prod instanceof Alternation) {\n    return \"OR\";\n  } else if (prod instanceof RepetitionMandatory) {\n    return \"AT_LEAST_ONE\";\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\";\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return \"MANY_SEP\";\n  } else if (prod instanceof Repetition) {\n    return \"MANY\";\n  } else if (prod instanceof Terminal) {\n    return \"CONSUME\";\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nvar DslMethodsCollectorVisitor =\n/** @class */\nfunction (_super) {\n  __extends(DslMethodsCollectorVisitor, _super);\n\n  function DslMethodsCollectorVisitor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // A minus is never valid in an identifier name\n\n\n    _this.separator = \"-\";\n    _this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    };\n    return _this;\n  }\n\n  DslMethodsCollectorVisitor.prototype.reset = function () {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    };\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {\n    var key = terminal.terminalType.name + this.separator + \"Terminal\";\n\n    if (!has(this.dslMethods, key)) {\n      this.dslMethods[key] = [];\n    }\n\n    this.dslMethods[key].push(terminal);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {\n    var key = subrule.nonTerminalName + this.separator + \"Terminal\";\n\n    if (!has(this.dslMethods, key)) {\n      this.dslMethods[key] = [];\n    }\n\n    this.dslMethods[key].push(subrule);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitOption = function (option) {\n    this.dslMethods.option.push(option);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {\n    this.dslMethods.repetitionWithSeparator.push(manySep);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {\n    this.dslMethods.repetitionMandatory.push(atLeastOne);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {\n    this.dslMethods.repetition.push(many);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {\n    this.dslMethods.alternation.push(or);\n  };\n\n  return DslMethodsCollectorVisitor;\n}(GAstVisitor);\n\nexport { DslMethodsCollectorVisitor };\nvar collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n  collectorVisitor.reset();\n  rule.accept(collectorVisitor);\n  var dslMethods = collectorVisitor.dslMethods; // avoid uncleaned references\n\n  collectorVisitor.reset();\n  return dslMethods;\n}","map":{"version":3,"sources":["../../../../../src/parse/grammar/gast/gast.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { contains, every, has, some } from \"../../../utils/utils\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./gast_public\";\nimport { GAstVisitor } from \"./gast_visitor_public\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited) {\n    if (alreadyVisited === void 0) { alreadyVisited = []; }\n    var isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && contains(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nvar DslMethodsCollectorVisitor = /** @class */ (function (_super) {\n    __extends(DslMethodsCollectorVisitor, _super);\n    function DslMethodsCollectorVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // A minus is never valid in an identifier name\n        _this.separator = \"-\";\n        _this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: []\n        };\n        return _this;\n    }\n    DslMethodsCollectorVisitor.prototype.reset = function () {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: []\n        };\n    };\n    DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {\n        var key = terminal.terminalType.name + this.separator + \"Terminal\";\n        if (!has(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(terminal);\n    };\n    DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {\n        var key = subrule.nonTerminalName + this.separator + \"Terminal\";\n        if (!has(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(subrule);\n    };\n    DslMethodsCollectorVisitor.prototype.visitOption = function (option) {\n        this.dslMethods.option.push(option);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {\n        this.dslMethods.repetition.push(many);\n    };\n    DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {\n        this.dslMethods.alternation.push(or);\n    };\n    return DslMethodsCollectorVisitor;\n}(GAstVisitor));\nexport { DslMethodsCollectorVisitor };\nvar collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    var dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=gast.js.map"]},"metadata":{},"sourceType":"module"}