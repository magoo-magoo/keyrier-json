{"ast":null,"code":"/* eslint-disable */\nimport { useEffect } from 'react';\nimport useRafState from './useRafState';\nimport { isClient } from './util';\n\nvar useWindowSize = function (initialWidth, initialHeight) {\n  if (initialWidth === void 0) {\n    initialWidth = Infinity;\n  }\n\n  if (initialHeight === void 0) {\n    initialHeight = Infinity;\n  }\n\n  var _a = useRafState({\n    width: isClient ? window.innerWidth : initialWidth,\n    height: isClient ? window.innerHeight : initialHeight\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    if (isClient) {\n      var handler_1 = function () {\n        setState({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      };\n\n      window.addEventListener('resize', handler_1);\n      return function () {\n        window.removeEventListener('resize', handler_1);\n      };\n    }\n  }, []);\n  return state;\n};\n\nexport default useWindowSize;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useWindowSize.js"],"names":["useEffect","useRafState","isClient","useWindowSize","initialWidth","initialHeight","Infinity","_a","width","window","innerWidth","height","innerHeight","state","setState","handler_1","addEventListener","removeEventListener"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,QAAzB;;AACA,IAAIC,aAAa,GAAG,UAAUC,YAAV,EAAwBC,aAAxB,EAAuC;AACvD,MAAID,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAAEA,IAAAA,YAAY,GAAGE,QAAf;AAA0B;;AACzD,MAAID,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,IAAAA,aAAa,GAAGC,QAAhB;AAA2B;;AAC3D,MAAIC,EAAE,GAAGN,WAAW,CAAC;AACjBO,IAAAA,KAAK,EAAEN,QAAQ,GAAGO,MAAM,CAACC,UAAV,GAAuBN,YADrB;AAEjBO,IAAAA,MAAM,EAAET,QAAQ,GAAGO,MAAM,CAACG,WAAV,GAAwBP;AAFvB,GAAD,CAApB;AAAA,MAGIQ,KAAK,GAAGN,EAAE,CAAC,CAAD,CAHd;AAAA,MAGmBO,QAAQ,GAAGP,EAAE,CAAC,CAAD,CAHhC;;AAIAP,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIE,QAAJ,EAAc;AACV,UAAIa,SAAS,GAAG,YAAY;AACxBD,QAAAA,QAAQ,CAAC;AACLN,UAAAA,KAAK,EAAEC,MAAM,CAACC,UADT;AAELC,UAAAA,MAAM,EAAEF,MAAM,CAACG;AAFV,SAAD,CAAR;AAIH,OALD;;AAMAH,MAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,SAAlC;AACA,aAAO,YAAY;AACfN,QAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,SAArC;AACH,OAFD;AAGH;AACJ,GAbQ,EAaN,EAbM,CAAT;AAcA,SAAOF,KAAP;AACH,CAtBD;;AAuBA,eAAeV,aAAf","sourcesContent":["/* eslint-disable */\nimport { useEffect } from 'react';\nimport useRafState from './useRafState';\nimport { isClient } from './util';\nvar useWindowSize = function (initialWidth, initialHeight) {\n    if (initialWidth === void 0) { initialWidth = Infinity; }\n    if (initialHeight === void 0) { initialHeight = Infinity; }\n    var _a = useRafState({\n        width: isClient ? window.innerWidth : initialWidth,\n        height: isClient ? window.innerHeight : initialHeight,\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        if (isClient) {\n            var handler_1 = function () {\n                setState({\n                    width: window.innerWidth,\n                    height: window.innerHeight,\n                });\n            };\n            window.addEventListener('resize', handler_1);\n            return function () {\n                window.removeEventListener('resize', handler_1);\n            };\n        }\n    }, []);\n    return state;\n};\nexport default useWindowSize;\n"]},"metadata":{},"sourceType":"module"}