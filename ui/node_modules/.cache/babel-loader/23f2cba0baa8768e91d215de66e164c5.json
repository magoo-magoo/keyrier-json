{"ast":null,"code":"ace.define(\"ace/snippets/coffee\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippetText = \"# Closure loop\\n\\\nsnippet forindo\\n\\\n\tfor ${1:name} in ${2:array}\\n\\\n\t\tdo ($1) ->\\n\\\n\t\t\t${3:// body}\\n\\\n# Array comprehension\\n\\\nsnippet fora\\n\\\n\tfor ${1:name} in ${2:array}\\n\\\n\t\t${3:// body...}\\n\\\n# Object comprehension\\n\\\nsnippet foro\\n\\\n\tfor ${1:key}, ${2:value} of ${3:object}\\n\\\n\t\t${4:// body...}\\n\\\n# Range comprehension (inclusive)\\n\\\nsnippet forr\\n\\\n\tfor ${1:name} in [${2:start}..${3:finish}]\\n\\\n\t\t${4:// body...}\\n\\\nsnippet forrb\\n\\\n\tfor ${1:name} in [${2:start}..${3:finish}] by ${4:step}\\n\\\n\t\t${5:// body...}\\n\\\n# Range comprehension (exclusive)\\n\\\nsnippet forrex\\n\\\n\tfor ${1:name} in [${2:start}...${3:finish}]\\n\\\n\t\t${4:// body...}\\n\\\nsnippet forrexb\\n\\\n\tfor ${1:name} in [${2:start}...${3:finish}] by ${4:step}\\n\\\n\t\t${5:// body...}\\n\\\n# Function\\n\\\nsnippet fun\\n\\\n\t(${1:args}) ->\\n\\\n\t\t${2:// body...}\\n\\\n# Function (bound)\\n\\\nsnippet bfun\\n\\\n\t(${1:args}) =>\\n\\\n\t\t${2:// body...}\\n\\\n# Class\\n\\\nsnippet cla class ..\\n\\\n\tclass ${1:`substitute(Filename(), '\\\\(_\\\\|^\\\\)\\\\(.\\\\)', '\\\\u\\\\2', 'g')`}\\n\\\n\t\t${2}\\n\\\nsnippet cla class .. constructor: ..\\n\\\n\tclass ${1:`substitute(Filename(), '\\\\(_\\\\|^\\\\)\\\\(.\\\\)', '\\\\u\\\\2', 'g')`}\\n\\\n\t\tconstructor: (${2:args}) ->\\n\\\n\t\t\t${3}\\n\\\n\\n\\\n\t\t${4}\\n\\\nsnippet cla class .. extends ..\\n\\\n\tclass ${1:`substitute(Filename(), '\\\\(_\\\\|^\\\\)\\\\(.\\\\)', '\\\\u\\\\2', 'g')`} extends ${2:ParentClass}\\n\\\n\t\t${3}\\n\\\nsnippet cla class .. extends .. constructor: ..\\n\\\n\tclass ${1:`substitute(Filename(), '\\\\(_\\\\|^\\\\)\\\\(.\\\\)', '\\\\u\\\\2', 'g')`} extends ${2:ParentClass}\\n\\\n\t\tconstructor: (${3:args}) ->\\n\\\n\t\t\t${4}\\n\\\n\\n\\\n\t\t${5}\\n\\\n# If\\n\\\nsnippet if\\n\\\n\tif ${1:condition}\\n\\\n\t\t${2:// body...}\\n\\\n# If __ Else\\n\\\nsnippet ife\\n\\\n\tif ${1:condition}\\n\\\n\t\t${2:// body...}\\n\\\n\telse\\n\\\n\t\t${3:// body...}\\n\\\n# Else if\\n\\\nsnippet elif\\n\\\n\telse if ${1:condition}\\n\\\n\t\t${2:// body...}\\n\\\n# Ternary If\\n\\\nsnippet ifte\\n\\\n\tif ${1:condition} then ${2:value} else ${3:other}\\n\\\n# Unless\\n\\\nsnippet unl\\n\\\n\t${1:action} unless ${2:condition}\\n\\\n# Switch\\n\\\nsnippet swi\\n\\\n\tswitch ${1:object}\\n\\\n\t\twhen ${2:value}\\n\\\n\t\t\t${3:// body...}\\n\\\n\\n\\\n# Log\\n\\\nsnippet log\\n\\\n\tconsole.log ${1}\\n\\\n# Try __ Catch\\n\\\nsnippet try\\n\\\n\ttry\\n\\\n\t\t${1}\\n\\\n\tcatch ${2:error}\\n\\\n\t\t${3}\\n\\\n# Require\\n\\\nsnippet req\\n\\\n\t${2:$1} = require '${1:sys}'${3}\\n\\\n# Export\\n\\\nsnippet exp\\n\\\n\t${1:root} = exports ? this\\n\\\n\";\n  exports.scope = \"coffee\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/coffee\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/snippets/coffee.js"],"names":["ace","define","require","exports","module","snippetText","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,qBAAX,EAAiC,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAAjC,EAAiE,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AACpG;;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;AAgGAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,QAAhB;AAEC,CArGD;;AAqGmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,qBAAD,CAAZ,EAAqC,UAASK,CAAT,EAAY;AAC7C,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/coffee\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\nexports.snippetText = \"# Closure loop\\n\\\nsnippet forindo\\n\\\n\tfor ${1:name} in ${2:array}\\n\\\n\t\tdo ($1) ->\\n\\\n\t\t\t${3:// body}\\n\\\n# Array comprehension\\n\\\nsnippet fora\\n\\\n\tfor ${1:name} in ${2:array}\\n\\\n\t\t${3:// body...}\\n\\\n# Object comprehension\\n\\\nsnippet foro\\n\\\n\tfor ${1:key}, ${2:value} of ${3:object}\\n\\\n\t\t${4:// body...}\\n\\\n# Range comprehension (inclusive)\\n\\\nsnippet forr\\n\\\n\tfor ${1:name} in [${2:start}..${3:finish}]\\n\\\n\t\t${4:// body...}\\n\\\nsnippet forrb\\n\\\n\tfor ${1:name} in [${2:start}..${3:finish}] by ${4:step}\\n\\\n\t\t${5:// body...}\\n\\\n# Range comprehension (exclusive)\\n\\\nsnippet forrex\\n\\\n\tfor ${1:name} in [${2:start}...${3:finish}]\\n\\\n\t\t${4:// body...}\\n\\\nsnippet forrexb\\n\\\n\tfor ${1:name} in [${2:start}...${3:finish}] by ${4:step}\\n\\\n\t\t${5:// body...}\\n\\\n# Function\\n\\\nsnippet fun\\n\\\n\t(${1:args}) ->\\n\\\n\t\t${2:// body...}\\n\\\n# Function (bound)\\n\\\nsnippet bfun\\n\\\n\t(${1:args}) =>\\n\\\n\t\t${2:// body...}\\n\\\n# Class\\n\\\nsnippet cla class ..\\n\\\n\tclass ${1:`substitute(Filename(), '\\\\(_\\\\|^\\\\)\\\\(.\\\\)', '\\\\u\\\\2', 'g')`}\\n\\\n\t\t${2}\\n\\\nsnippet cla class .. constructor: ..\\n\\\n\tclass ${1:`substitute(Filename(), '\\\\(_\\\\|^\\\\)\\\\(.\\\\)', '\\\\u\\\\2', 'g')`}\\n\\\n\t\tconstructor: (${2:args}) ->\\n\\\n\t\t\t${3}\\n\\\n\\n\\\n\t\t${4}\\n\\\nsnippet cla class .. extends ..\\n\\\n\tclass ${1:`substitute(Filename(), '\\\\(_\\\\|^\\\\)\\\\(.\\\\)', '\\\\u\\\\2', 'g')`} extends ${2:ParentClass}\\n\\\n\t\t${3}\\n\\\nsnippet cla class .. extends .. constructor: ..\\n\\\n\tclass ${1:`substitute(Filename(), '\\\\(_\\\\|^\\\\)\\\\(.\\\\)', '\\\\u\\\\2', 'g')`} extends ${2:ParentClass}\\n\\\n\t\tconstructor: (${3:args}) ->\\n\\\n\t\t\t${4}\\n\\\n\\n\\\n\t\t${5}\\n\\\n# If\\n\\\nsnippet if\\n\\\n\tif ${1:condition}\\n\\\n\t\t${2:// body...}\\n\\\n# If __ Else\\n\\\nsnippet ife\\n\\\n\tif ${1:condition}\\n\\\n\t\t${2:// body...}\\n\\\n\telse\\n\\\n\t\t${3:// body...}\\n\\\n# Else if\\n\\\nsnippet elif\\n\\\n\telse if ${1:condition}\\n\\\n\t\t${2:// body...}\\n\\\n# Ternary If\\n\\\nsnippet ifte\\n\\\n\tif ${1:condition} then ${2:value} else ${3:other}\\n\\\n# Unless\\n\\\nsnippet unl\\n\\\n\t${1:action} unless ${2:condition}\\n\\\n# Switch\\n\\\nsnippet swi\\n\\\n\tswitch ${1:object}\\n\\\n\t\twhen ${2:value}\\n\\\n\t\t\t${3:// body...}\\n\\\n\\n\\\n# Log\\n\\\nsnippet log\\n\\\n\tconsole.log ${1}\\n\\\n# Try __ Catch\\n\\\nsnippet try\\n\\\n\ttry\\n\\\n\t\t${1}\\n\\\n\tcatch ${2:error}\\n\\\n\t\t${3}\\n\\\n# Require\\n\\\nsnippet req\\n\\\n\t${2:$1} = require '${1:sys}'${3}\\n\\\n# Export\\n\\\nsnippet exp\\n\\\n\t${1:root} = exports ? this\\n\\\n\";\nexports.scope = \"coffee\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/coffee\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}