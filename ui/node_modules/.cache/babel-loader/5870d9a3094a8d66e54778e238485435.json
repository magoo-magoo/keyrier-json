{"ast":null,"code":"ace.define(\"ace/mode/mediawiki_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var MediaWikiHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        include: \"#switch\"\n      }, {\n        include: \"#redirect\"\n      }, {\n        include: \"#variable\"\n      }, {\n        include: \"#comment\"\n      }, {\n        include: \"#entity\"\n      }, {\n        include: \"#emphasis\"\n      }, {\n        include: \"#tag\"\n      }, {\n        include: \"#table\"\n      }, {\n        include: \"#hr\"\n      }, {\n        include: \"#heading\"\n      }, {\n        include: \"#link\"\n      }, {\n        include: \"#list\"\n      }, {\n        include: \"#template\"\n      }],\n      \"#hr\": [{\n        token: \"markup.bold\",\n        regex: /^[-]{4,}/\n      }],\n      \"#switch\": [{\n        token: \"constant.language\",\n        regex: /(__NOTOC__|__FORCETOC__|__TOC__|__NOEDITSECTION__|__NEWSECTIONLINK__|__NONEWSECTIONLINK__|__NOWYSIWYG__|__NOGALLERY__|__HIDDENCAT__|__EXPECTUNUSEDCATEGORY__|__NOCONTENTCONVERT__|__NOCC__|__NOTITLECONVERT__|__NOTC__|__START__|__END__|__INDEX__|__NOINDEX__|__STATICREDIRECT__|__NOGLOBAL__|__DISAMBIG__)/\n      }],\n      \"#redirect\": [{\n        token: [\"keyword.control.redirect\", \"meta.keyword.control\"],\n        regex: /(^#REDIRECT|^#redirect|^#Redirect)(\\s+)/\n      }],\n      \"#variable\": [{\n        token: \"storage.type.variable\",\n        regex: /{{{/,\n        push: [{\n          token: \"storage.type.variable\",\n          regex: /}}}/,\n          next: \"pop\"\n        }, {\n          token: [\"text\", \"variable.other\", \"text\", \"keyword.operator\"],\n          regex: /(\\s*)(\\w+)(\\s*)((?:\\|)?)/\n        }, {\n          defaultToken: \"storage.type.variable\"\n        }]\n      }],\n      \"#entity\": [{\n        token: \"constant.character.entity\",\n        regex: /&\\w+;/\n      }],\n      \"#list\": [{\n        token: \"markup.bold\",\n        regex: /^[#*;:]+/,\n        push: [{\n          token: \"markup.list\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"markup.list\"\n        }]\n      }],\n      \"#template\": [{\n        token: [\"storage.type.function\", \"meta.template\", \"entity.name.function\", \"meta.template\"],\n        regex: /({{)(\\s*)([#\\w: ]+)(\\s*)/,\n        push: [{\n          token: \"storage.type.function\",\n          regex: /}}/,\n          next: \"pop\"\n        }, {\n          token: [\"storage\", \"meta.structure.dictionary\", \"support.type.property-name\", \"meta.structure.dictionary\", \"punctuation.separator.dictionary.key-value\", \"meta.structure.dictionary\", \"meta.structure.dictionary.value\"],\n          regex: /(\\|)(\\s*)([a-zA-Z-]*)(\\s*)(=)(\\s*)([^|}]*)/,\n          push: [{\n            token: \"meta.structure.dictionary\",\n            regex: /(?=}}|[|])/,\n            next: \"pop\"\n          }, {\n            defaultToken: \"meta.structure.dictionary\"\n          }]\n        }, {\n          token: [\"storage\", \"meta.template.value\"],\n          regex: /(\\|)(.*?)/,\n          push: [{\n            token: [],\n            regex: /(?=}}|[|])/,\n            next: \"pop\"\n          }, {\n            include: \"$self\"\n          }, {\n            defaultToken: \"meta.template.value\"\n          }]\n        }, {\n          defaultToken: \"meta.template\"\n        }]\n      }],\n      \"#link\": [{\n        token: [\"punctuation.definition.tag.begin\", \"meta.tag.link.internal\", \"entity.name.tag\", \"meta.tag.link.internal\", \"string.other.link.title\", \"meta.tag.link.internal\", \"punctuation.definition.tag\"],\n        regex: /(\\[\\[)(\\s*)((?:Category|Wikipedia)?)(:?)([^\\]\\]\\|]+)(\\s*)((?:\\|)*)/,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\]\\]/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.link.internal\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"meta.tag.link.external\", \"meta.tag.link.external\", \"string.unquoted\", \"punctuation.definition.tag.end\"],\n        regex: /(\\[)(.*?)([\\s]+)(.*?)(\\])/\n      }],\n      \"#comment\": [{\n        token: \"punctuation.definition.comment.html\",\n        regex: /<!--/,\n        push: [{\n          token: \"punctuation.definition.comment.html\",\n          regex: /-->/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block.html\"\n        }]\n      }],\n      \"#emphasis\": [{\n        token: [\"punctuation.definition.tag.begin\", \"markup.italic.bold\", \"punctuation.definition.tag.end\"],\n        regex: /(''''')(?!')(.*?)('''''|$)/\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"markup.bold\", \"punctuation.definition.tag.end\"],\n        regex: /(''')(?!')(.*?)('''|$)/\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"markup.italic\", \"punctuation.definition.tag.end\"],\n        regex: /('')(?!')(.*?)(''|$)/\n      }],\n      \"#heading\": [{\n        token: [\"punctuation.definition.heading\", \"entity.name.section\", \"punctuation.definition.heading\"],\n        regex: /(={1,6})(.+?)(\\1)(?!=)/\n      }],\n      \"#tag\": [{\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.ref\", \"punctuation.definition.tag.end\"],\n        regex: /(<)(ref)((?:\\s+.*?)?)(>)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.ref\", \"punctuation.definition.tag.end\"],\n          regex: /(<\\/)(ref)(\\s*)(>)/,\n          caseInsensitive: true,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.ref\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.nowiki\", \"punctuation.definition.tag.end\"],\n        regex: /(<)(nowiki)((?:\\s+.*?)?)(>)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.nowiki\", \"punctuation.definition.tag.end\"],\n          regex: /(<\\/)(nowiki)(\\s*)(>)/,\n          caseInsensitive: true,\n          next: \"pop\"\n        }, {\n          defaultToken: \"meta.tag.block.nowiki\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<\\/?)(noinclude|includeonly|onlyinclude)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"invalid.illegal\", \"punctuation.definition.tag.end\"],\n          regex: /((?:\\/)?)(>)/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.block.any\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<)(br|wbr|hr|meta|link)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\/?>/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.other\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<\\/?)(div|center|span|h1|h2|h3|h4|h5|h6|bdo|em|strong|cite|dfn|code|samp|kbd|var|abbr|blockquote|q|sub|sup|p|pre|ins|del|ul|ol|li|dl|dd|dt|table|caption|thead|tfoot|tbody|colgroup|col|tr|td|th|a|img|video|source|track|tt|b|i|big|small|strike|s|u|font|ruby|rb|rp|rt|rtc|math|figure|figcaption|bdi|data|time|mark|html)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"invalid.illegal\", \"punctuation.definition.tag.end\"],\n          regex: /((?:\\/)?)(>)/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.block\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"invalid.illegal\"],\n        regex: /(<\\/)(br|wbr|hr|meta|link)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\/?>/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.other\"\n        }]\n      }],\n      \"#caption\": [{\n        token: [\"meta.tag.block.table-caption\", \"punctuation.definition.tag.begin\"],\n        regex: /^(\\s*)(\\|\\+)/,\n        push: [{\n          token: \"meta.tag.block.table-caption\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"meta.tag.block.table-caption\"\n        }]\n      }],\n      \"#tr\": [{\n        token: [\"meta.tag.block.tr\", \"punctuation.definition.tag.begin\", \"meta.tag.block.tr\", \"invalid.illegal\"],\n        regex: /^(\\s*)(\\|\\-)([\\s]*)(.*)/\n      }],\n      \"#th\": [{\n        token: [\"meta.tag.block.th.heading\", \"punctuation.definition.tag.begin\", \"meta.tag.block.th.heading\", \"punctuation.definition.tag\", \"markup.bold\"],\n        regex: /^(\\s*)(!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/,\n        push: [{\n          token: \"meta.tag.block.th.heading\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          token: [\"punctuation.definition.tag.begin\", \"meta.tag.block.th.inline\", \"punctuation.definition.tag\", \"markup.bold\"],\n          regex: /(!!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.th.heading\"\n        }]\n      }],\n      \"#td\": [{\n        token: [\"meta.tag.block.td\", \"punctuation.definition.tag.begin\"],\n        regex: /^(\\s*)(\\|)/,\n        push: [{\n          token: \"meta.tag.block.td\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.td\"\n        }]\n      }],\n      \"#table\": [{\n        patterns: [{\n          name: \"meta.tag.block.table\",\n          begin: \"^\\\\s*({\\\\|)(.*?)$\",\n          end: \"^\\\\s*\\\\|}\",\n          beginCaptures: {\n            1: {\n              name: \"punctuation.definition.tag.begin\"\n            },\n            2: {\n              patterns: [{\n                include: \"#attribute\"\n              }]\n            },\n            3: {\n              name: \"invalid.illegal\"\n            }\n          },\n          endCaptures: {\n            0: {\n              name: \"punctuation.definition.tag.end\"\n            }\n          },\n          patterns: [{\n            include: \"#comment\"\n          }, {\n            include: \"#template\"\n          }, {\n            include: \"#caption\"\n          }, {\n            include: \"#tr\"\n          }, {\n            include: \"#th\"\n          }, {\n            include: \"#td\"\n          }]\n        }],\n        repository: {\n          caption: {\n            name: \"meta.tag.block.table-caption\",\n            begin: \"^\\\\s*(\\\\|\\\\+)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              }\n            }\n          },\n          tr: {\n            name: \"meta.tag.block.tr\",\n            match: \"^\\\\s*(\\\\|\\\\-)[\\\\s]*(.*)\",\n            captures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              2: {\n                name: \"invalid.illegal\"\n              }\n            }\n          },\n          th: {\n            name: \"meta.tag.block.th.heading\",\n            begin: \"^\\\\s*(!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              3: {\n                patterns: [{\n                  include: \"#attribute\"\n                }]\n              },\n              4: {\n                name: \"punctuation.definition.tag\"\n              },\n              5: {\n                name: \"markup.bold\"\n              }\n            },\n            patterns: [{\n              name: \"meta.tag.block.th.inline\",\n              match: \"(!!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n              captures: {\n                1: {\n                  name: \"punctuation.definition.tag.begin\"\n                },\n                3: {\n                  patterns: [{\n                    include: \"#attribute\"\n                  }]\n                },\n                4: {\n                  name: \"punctuation.definition.tag\"\n                },\n                5: {\n                  name: \"markup.bold\"\n                }\n              }\n            }, {\n              include: \"$self\"\n            }]\n          },\n          td: {\n            name: \"meta.tag.block.td\",\n            begin: \"^\\\\s*(\\\\|)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              2: {\n                patterns: [{\n                  include: \"#attribute\"\n                }]\n              },\n              3: {\n                name: \"punctuation.definition.tag\"\n              }\n            },\n            patterns: [{\n              include: \"$self\"\n            }]\n          }\n        }\n      }],\n      \"#attribute\": [{\n        include: \"#string\"\n      }, {\n        token: \"entity.other.attribute-name\",\n        regex: /\\w+/\n      }],\n      \"#string\": [{\n        token: \"string.quoted.double\",\n        regex: /\\\"/,\n        push: [{\n          token: \"string.quoted.double\",\n          regex: /\\\"/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.double\"\n        }]\n      }, {\n        token: \"string.quoted.single\",\n        regex: /\\'/,\n        push: [{\n          token: \"string.quoted.single\",\n          regex: /\\'/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.single\"\n        }]\n      }],\n      \"#url\": [{\n        token: \"markup.underline.link\",\n        regex: /(?:http(?:s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=.]+/\n      }, {\n        token: \"invalid.illegal\",\n        regex: /.*/\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  MediaWikiHighlightRules.metaData = {\n    name: \"MediaWiki\",\n    scopeName: \"text.html.mediawiki\",\n    fileTypes: [\"mediawiki\", \"wiki\"]\n  };\n  oop.inherits(MediaWikiHighlightRules, TextHighlightRules);\n  exports.MediaWikiHighlightRules = MediaWikiHighlightRules;\n});\nace.define(\"ace/mode/mediawiki\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/mediawiki_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var MediaWikiHighlightRules = require(\"./mediawiki_highlight_rules\").MediaWikiHighlightRules;\n\n  var Mode = function () {\n    this.HighlightRules = MediaWikiHighlightRules;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.type = \"text\";\n    this.blockComment = {\n      start: \"<!--\",\n      end: \"-->\"\n    };\n    this.$id = \"ace/mode/mediawiki\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/mediawiki\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-mediawiki.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","MediaWikiHighlightRules","$rules","start","include","token","regex","push","next","defaultToken","caseInsensitive","patterns","name","begin","end","beginCaptures","endCaptures","repository","caption","tr","match","captures","th","td","normalizeRules","metaData","scopeName","fileTypes","inherits","TextMode","Mode","HighlightRules","type","blockComment","$id","call","prototype","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/mediawiki_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar MediaWikiHighlightRules = function() {\n    this.$rules = {\n        start: [{\n            include: \"#switch\"\n        }, {\n            include: \"#redirect\"\n        }, {\n            include: \"#variable\"\n        }, {\n            include: \"#comment\"\n        }, {\n            include: \"#entity\"\n        }, {\n            include: \"#emphasis\"\n        }, {\n            include: \"#tag\"\n        }, {\n            include: \"#table\"\n        }, {\n            include: \"#hr\"\n        }, {\n            include: \"#heading\"\n        }, {\n            include: \"#link\"\n        }, {\n            include: \"#list\"\n        }, {\n            include: \"#template\"\n        }],\n        \"#hr\": [{\n            token: \"markup.bold\",\n            regex: /^[-]{4,}/\n        }],\n        \"#switch\": [{\n            token: \"constant.language\",\n            regex: /(__NOTOC__|__FORCETOC__|__TOC__|__NOEDITSECTION__|__NEWSECTIONLINK__|__NONEWSECTIONLINK__|__NOWYSIWYG__|__NOGALLERY__|__HIDDENCAT__|__EXPECTUNUSEDCATEGORY__|__NOCONTENTCONVERT__|__NOCC__|__NOTITLECONVERT__|__NOTC__|__START__|__END__|__INDEX__|__NOINDEX__|__STATICREDIRECT__|__NOGLOBAL__|__DISAMBIG__)/\n        }],\n        \"#redirect\": [{\n            token: [\n                \"keyword.control.redirect\",\n                \"meta.keyword.control\"\n            ],\n            regex: /(^#REDIRECT|^#redirect|^#Redirect)(\\s+)/\n        }],\n        \"#variable\": [{\n            token: \"storage.type.variable\",\n            regex: /{{{/,\n            push: [{\n                token: \"storage.type.variable\",\n                regex: /}}}/,\n                next: \"pop\"\n            }, {\n                token: [\n                    \"text\",\n                    \"variable.other\",\n                    \"text\",\n                    \"keyword.operator\"\n                ],\n                regex: /(\\s*)(\\w+)(\\s*)((?:\\|)?)/\n            }, {\n                defaultToken: \"storage.type.variable\"\n            }]\n        }],\n        \"#entity\": [{\n            token: \"constant.character.entity\",\n            regex: /&\\w+;/\n        }],\n        \"#list\": [{\n            token: \"markup.bold\",\n            regex: /^[#*;:]+/,\n            push: [{\n                token: \"markup.list\",\n                regex: /$/,\n                next: \"pop\"\n            }, {\n                include: \"$self\"\n            }, {\n                defaultToken: \"markup.list\"\n            }]\n        }],\n        \"#template\": [{\n            token: [\n                \"storage.type.function\",\n                \"meta.template\",\n                \"entity.name.function\",\n                \"meta.template\"\n            ],\n            regex: /({{)(\\s*)([#\\w: ]+)(\\s*)/,\n            push: [{\n                token: \"storage.type.function\",\n                regex: /}}/,\n                next: \"pop\"\n            }, {\n                token: [\n                    \"storage\",\n                    \"meta.structure.dictionary\",\n                    \"support.type.property-name\",\n                    \"meta.structure.dictionary\",\n                    \"punctuation.separator.dictionary.key-value\",\n                    \"meta.structure.dictionary\",\n                    \"meta.structure.dictionary.value\"\n                ],\n                regex: /(\\|)(\\s*)([a-zA-Z-]*)(\\s*)(=)(\\s*)([^|}]*)/,\n                push: [{\n                    token: \"meta.structure.dictionary\",\n                    regex: /(?=}}|[|])/,\n                    next: \"pop\"\n                }, {\n                    defaultToken: \"meta.structure.dictionary\"\n                }]\n            }, {\n                token: [\"storage\", \"meta.template.value\"],\n                regex: /(\\|)(.*?)/,\n                push: [{\n                    token: [],\n                    regex: /(?=}}|[|])/,\n                    next: \"pop\"\n                }, {\n                    include: \"$self\"\n                }, {\n                    defaultToken: \"meta.template.value\"\n                }]\n            }, {\n                defaultToken: \"meta.template\"\n            }]\n        }],\n        \"#link\": [{\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"meta.tag.link.internal\",\n                \"entity.name.tag\",\n                \"meta.tag.link.internal\",\n                \"string.other.link.title\",\n                \"meta.tag.link.internal\",\n                \"punctuation.definition.tag\"\n            ],\n            regex: /(\\[\\[)(\\s*)((?:Category|Wikipedia)?)(:?)([^\\]\\]\\|]+)(\\s*)((?:\\|)*)/,\n            push: [{\n                token: \"punctuation.definition.tag.end\",\n                regex: /\\]\\]/,\n                next: \"pop\"\n            }, {\n                include: \"$self\"\n            }, {\n                defaultToken: \"meta.tag.link.internal\"\n            }]\n        }, {\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"meta.tag.link.external\",\n                \"meta.tag.link.external\",\n                \"string.unquoted\",\n                \"punctuation.definition.tag.end\"\n            ],\n            regex: /(\\[)(.*?)([\\s]+)(.*?)(\\])/\n        }],\n        \"#comment\": [{\n            token: \"punctuation.definition.comment.html\",\n            regex: /<!--/,\n            push: [{\n                token: \"punctuation.definition.comment.html\",\n                regex: /-->/,\n                next: \"pop\"\n            }, {\n                defaultToken: \"comment.block.html\"\n            }]\n        }],\n        \"#emphasis\": [{\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"markup.italic.bold\",\n                \"punctuation.definition.tag.end\"\n            ],\n            regex: /(''''')(?!')(.*?)('''''|$)/\n        }, {\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"markup.bold\",\n                \"punctuation.definition.tag.end\"\n            ],\n            regex: /(''')(?!')(.*?)('''|$)/\n        }, {\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"markup.italic\",\n                \"punctuation.definition.tag.end\"\n            ],\n            regex: /('')(?!')(.*?)(''|$)/\n        }],\n        \"#heading\": [{\n            token: [\n                \"punctuation.definition.heading\",\n                \"entity.name.section\",\n                \"punctuation.definition.heading\"\n            ],\n            regex: /(={1,6})(.+?)(\\1)(?!=)/\n        }],\n        \"#tag\": [{\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"entity.name.tag\",\n                \"meta.tag.block.ref\",\n                \"punctuation.definition.tag.end\"\n            ],\n            regex: /(<)(ref)((?:\\s+.*?)?)(>)/,\n            caseInsensitive: true,\n            push: [{\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\",\n                    \"meta.tag.block.ref\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(<\\/)(ref)(\\s*)(>)/,\n                caseInsensitive: true,\n                next: \"pop\"\n            }, {\n                include: \"$self\"\n            }, {\n                defaultToken: \"meta.tag.block.ref\"\n            }]\n        },\n        {\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"entity.name.tag\",\n                \"meta.tag.block.nowiki\",\n                \"punctuation.definition.tag.end\"\n            ],\n            regex: /(<)(nowiki)((?:\\s+.*?)?)(>)/,\n            caseInsensitive: true,\n            push: [{\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\",\n                    \"meta.tag.block.nowiki\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(<\\/)(nowiki)(\\s*)(>)/,\n                caseInsensitive: true,\n                next: \"pop\"\n            }, {\n                defaultToken: \"meta.tag.block.nowiki\"\n            }]\n        }, {\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"entity.name.tag\"\n            ],\n            regex: /(<\\/?)(noinclude|includeonly|onlyinclude)(?=\\W)/,\n            caseInsensitive: true,\n            push: [{\n                token: [\n                    \"invalid.illegal\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /((?:\\/)?)(>)/,\n                next: \"pop\"\n            }, {\n                include: \"#attribute\"\n            }, {\n                defaultToken: \"meta.tag.block.any\"\n            }]\n        }, {\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"entity.name.tag\"\n            ],\n            regex: /(<)(br|wbr|hr|meta|link)(?=\\W)/,\n            caseInsensitive: true,\n            push: [{\n                token: \"punctuation.definition.tag.end\",\n                regex: /\\/?>/,\n                next: \"pop\"\n            }, {\n                include: \"#attribute\"\n            }, {\n                defaultToken: \"meta.tag.other\"\n            }]\n        }, {\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"entity.name.tag\"\n            ],\n            regex: /(<\\/?)(div|center|span|h1|h2|h3|h4|h5|h6|bdo|em|strong|cite|dfn|code|samp|kbd|var|abbr|blockquote|q|sub|sup|p|pre|ins|del|ul|ol|li|dl|dd|dt|table|caption|thead|tfoot|tbody|colgroup|col|tr|td|th|a|img|video|source|track|tt|b|i|big|small|strike|s|u|font|ruby|rb|rp|rt|rtc|math|figure|figcaption|bdi|data|time|mark|html)(?=\\W)/,\n            caseInsensitive: true,\n            push: [{\n                token: [\n                    \"invalid.illegal\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /((?:\\/)?)(>)/,\n                next: \"pop\"\n            }, {\n                include: \"#attribute\"\n            }, {\n                defaultToken: \"meta.tag.block\"\n            }]\n        }, {\n            token: [\n                \"punctuation.definition.tag.begin\",\n                \"invalid.illegal\"\n            ],\n            regex: /(<\\/)(br|wbr|hr|meta|link)(?=\\W)/,\n            caseInsensitive: true,\n            push: [{\n                token: \"punctuation.definition.tag.end\",\n                regex: /\\/?>/,\n                next: \"pop\"\n            }, {\n                include: \"#attribute\"\n            }, {\n                defaultToken: \"meta.tag.other\"\n            }]\n        }],\n        \"#caption\": [{\n            token: [\n                \"meta.tag.block.table-caption\",\n                \"punctuation.definition.tag.begin\"\n            ],\n            regex: /^(\\s*)(\\|\\+)/,\n            push: [{\n                token: \"meta.tag.block.table-caption\",\n                regex: /$/,\n                next: \"pop\"\n            }, {\n                defaultToken: \"meta.tag.block.table-caption\"\n            }]\n        }],\n        \"#tr\": [{\n            token: [\n                \"meta.tag.block.tr\",\n                \"punctuation.definition.tag.begin\",\n                \"meta.tag.block.tr\",\n                \"invalid.illegal\"\n            ],\n            regex: /^(\\s*)(\\|\\-)([\\s]*)(.*)/\n        }],\n        \"#th\": [{\n            token: [\n                \"meta.tag.block.th.heading\",\n                \"punctuation.definition.tag.begin\",\n                \"meta.tag.block.th.heading\",\n                \"punctuation.definition.tag\",\n                \"markup.bold\"\n            ],\n            regex: /^(\\s*)(!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/,\n            push: [{\n                token: \"meta.tag.block.th.heading\",\n                regex: /$/,\n                next: \"pop\"\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"meta.tag.block.th.inline\",\n                    \"punctuation.definition.tag\",\n                    \"markup.bold\"\n                ],\n                regex: /(!!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/\n            }, {\n                include: \"$self\"\n            }, {\n                defaultToken: \"meta.tag.block.th.heading\"\n            }]\n        }],\n        \"#td\": [{\n            token: [\n                \"meta.tag.block.td\",\n                \"punctuation.definition.tag.begin\"\n            ],\n            regex: /^(\\s*)(\\|)/,\n            push: [{\n                token: \"meta.tag.block.td\",\n                regex: /$/,\n                next: \"pop\"\n            }, {\n                include: \"$self\"\n            }, {\n                defaultToken: \"meta.tag.block.td\"\n            }]\n        }],\n        \"#table\": [{\n            patterns: [{\n                name: \"meta.tag.block.table\",\n                begin: \"^\\\\s*({\\\\|)(.*?)$\",\n                end: \"^\\\\s*\\\\|}\",\n                beginCaptures: {\n                    1: {\n                        name: \"punctuation.definition.tag.begin\"\n                    },\n                    2: {\n                        patterns: [{\n                            include: \"#attribute\"\n                        }]\n                    },\n                    3: {\n                        name: \"invalid.illegal\"\n                    }\n                },\n                endCaptures: {\n                    0: {\n                        name: \"punctuation.definition.tag.end\"\n                    }\n                },\n                patterns: [{\n                    include: \"#comment\"\n                }, {\n                    include: \"#template\"\n                }, {\n                    include: \"#caption\"\n                }, {\n                    include: \"#tr\"\n                }, {\n                    include: \"#th\"\n                }, {\n                    include: \"#td\"\n                }]\n            }],\n            repository: {\n                caption: {\n                    name: \"meta.tag.block.table-caption\",\n                    begin: \"^\\\\s*(\\\\|\\\\+)\",\n                    end: \"$\",\n                    beginCaptures: {\n                        1: {\n                            name: \"punctuation.definition.tag.begin\"\n                        }\n                    }\n                },\n                tr: {\n                    name: \"meta.tag.block.tr\",\n                    match: \"^\\\\s*(\\\\|\\\\-)[\\\\s]*(.*)\",\n                    captures: {\n                        1: {\n                            name: \"punctuation.definition.tag.begin\"\n                        },\n                        2: {\n                            name: \"invalid.illegal\"\n                        }\n                    }\n                },\n                th: {\n                    name: \"meta.tag.block.th.heading\",\n                    begin: \"^\\\\s*(!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n                    end: \"$\",\n                    beginCaptures: {\n                        1: {\n                            name: \"punctuation.definition.tag.begin\"\n                        },\n                        3: {\n                            patterns: [{\n                                include: \"#attribute\"\n                            }]\n                        },\n                        4: {\n                            name: \"punctuation.definition.tag\"\n                        },\n                        5: {\n                            name: \"markup.bold\"\n                        }\n                    },\n                    patterns: [{\n                        name: \"meta.tag.block.th.inline\",\n                        match: \"(!!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n                        captures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            },\n                            3: {\n                                patterns: [{\n                                    include: \"#attribute\"\n                                }]\n                            },\n                            4: {\n                                name: \"punctuation.definition.tag\"\n                            },\n                            5: {\n                                name: \"markup.bold\"\n                            }\n                        }\n                    }, {\n                        include: \"$self\"\n                    }]\n                },\n                td: {\n                    name: \"meta.tag.block.td\",\n                    begin: \"^\\\\s*(\\\\|)\",\n                    end: \"$\",\n                    beginCaptures: {\n                        1: {\n                            name: \"punctuation.definition.tag.begin\"\n                        },\n                        2: {\n                            patterns: [{\n                                include: \"#attribute\"\n                            }]\n                        },\n                        3: {\n                            name: \"punctuation.definition.tag\"\n                        }\n                    },\n                    patterns: [{\n                        include: \"$self\"\n                    }]\n                }\n            }\n        }],\n        \"#attribute\": [{\n            include: \"#string\"\n        }, {\n            token: \"entity.other.attribute-name\",\n            regex: /\\w+/\n        }],\n        \"#string\": [{\n            token: \"string.quoted.double\",\n            regex: /\\\"/,\n            push: [{\n                token: \"string.quoted.double\",\n                regex: /\\\"/,\n                next: \"pop\"\n            }, {\n                defaultToken: \"string.quoted.double\"\n            }]\n        }, {\n            token: \"string.quoted.single\",\n            regex: /\\'/,\n            push: [{\n                token: \"string.quoted.single\",\n                regex: /\\'/,\n                next: \"pop\"\n            }, {\n                defaultToken: \"string.quoted.single\"\n            }]\n        }],\n        \"#url\": [{\n            token: \"markup.underline.link\",\n            regex: /(?:http(?:s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=.]+/\n        }, {\n            token: \"invalid.illegal\",\n            regex: /.*/\n        }]\n    };\n    \n\n    this.normalizeRules();\n};\n\nMediaWikiHighlightRules.metaData = {\n    name: \"MediaWiki\",\n    scopeName: \"text.html.mediawiki\",\n    fileTypes: [\"mediawiki\", \"wiki\"]\n};\n\n\noop.inherits(MediaWikiHighlightRules, TextHighlightRules);\n\nexports.MediaWikiHighlightRules = MediaWikiHighlightRules;\n});\n\nace.define(\"ace/mode/mediawiki\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/mediawiki_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar MediaWikiHighlightRules = require(\"./mediawiki_highlight_rules\").MediaWikiHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = MediaWikiHighlightRules;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.type = \"text\";\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\n    this.$id = \"ace/mode/mediawiki\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/mediawiki\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}