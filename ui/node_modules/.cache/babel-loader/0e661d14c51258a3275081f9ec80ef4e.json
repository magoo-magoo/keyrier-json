{"ast":null,"code":"var _jsxFileName = \"/home/magoo/projects/keyrier-json/ui/src/components/source/RequestSource.tsx\";\nimport { customToString } from '@keyrier/core';\nimport * as React from 'react';\nimport { memo, useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Alert, Button, Form, FormGroup } from 'reactstrap';\nimport { updateSource } from '../../actions/actions';\nimport { withErrorBoundary } from '../../components/common/ErrorBoundary';\nimport { logError } from '../../core/logging/logger';\nimport { useChangeEventState, useToggleState } from '../../hooks/hooks';\nimport { RenderHeaderInput } from './RequestHeader';\n\nconst HttpRequestSource = ({\n  onFinish,\n  setSource\n}) => {\n  const [method, setMethod] = useChangeEventState('GET');\n  const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/');\n  const [body, setBody] = useChangeEventState('');\n  const [headers, setHeaders] = useState([['Accept', 'application/json']]);\n  const [error, setError] = useState(null);\n  const [hasBody, setHasBody] = useToggleState();\n  const submit = useCallback(async () => {\n    const requestInit = {\n      method,\n      headers,\n      body: hasBody ? body : null\n    };\n    const request = new Request(url, requestInit);\n    setError(null);\n    let json;\n\n    try {\n      const result = await fetch(request);\n      json = await result.json();\n    } catch (e) {\n      logError('HttpRequestSource.submit', e);\n      setError(e);\n      return;\n    }\n\n    setSource(customToString(json));\n    onFinish();\n  }, [method, url, body, headers, hasBody, setSource, onFinish]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"HttpRequestSource\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"requestMethod\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Method\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control-lg form-control\",\n    defaultValue: method,\n    name: \"requestMethod\",\n    id: \"requestMethod\",\n    onChange: setMethod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"GET\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"POST\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"PUT\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"OPTIONS\"))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"requestUrl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Request URL\"), /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: url,\n    className: \"form-control-lg form-control\",\n    type: \"url\",\n    name: \"requestUrl\",\n    id: \"requestUrl\",\n    placeholder: \"enter an URL\",\n    onChange: setUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    onChange: setHasBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), \" Add body\")), /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    hidden: !hasBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Body\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control-lg form-control\",\n    type: \"textarea\",\n    value: body,\n    onChange: setBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), ' ')), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"headers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Request headers\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    color: \"primary\",\n    onClick: () => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Add header\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(HeaderList, {\n    headers: headers,\n    onChange: setHeaders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    color: \"primary\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Submit\"), error && /*#__PURE__*/React.createElement(Alert, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Error: \", error.message ? error.message : '', error.stack ? error.stack : ''));\n};\n\nconst HeaderList = ({\n  headers,\n  onChange\n}) => {\n  const onRemove = useCallback(header => onChange(headers.filter(h => h !== header)), [headers, onChange]);\n  const onChangeCallback = useCallback(header => {\n    const index = headers.indexOf(header);\n    headers[index] = { ...header\n    };\n    onChange([...headers]);\n  }, [headers, onChange]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, headers.map((header, index) => /*#__PURE__*/React.createElement(RenderHeaderInput, {\n    header: header,\n    key: index,\n    id: index,\n    onChange: onChangeCallback,\n    onRemove: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default connect(null, {\n  setSource: updateSource\n})(withErrorBoundary(memo(HttpRequestSource)));","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/ui/src/components/source/RequestSource.tsx"],"names":["customToString","React","memo","useCallback","useState","connect","Alert","Button","Form","FormGroup","updateSource","withErrorBoundary","logError","useChangeEventState","useToggleState","RenderHeaderInput","HttpRequestSource","onFinish","setSource","method","setMethod","url","setUrl","body","setBody","headers","setHeaders","error","setError","hasBody","setHasBody","submit","requestInit","request","Request","json","result","fetch","e","length","message","stack","HeaderList","onChange","onRemove","header","filter","h","onChangeCallback","index","indexOf","map"],"mappings":"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","sourcesContent":["import { customToString } from '@keyrier/core'\nimport * as React from 'react'\nimport { FC, memo, useCallback, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Alert, Button, Form, FormGroup } from 'reactstrap'\nimport { updateSource } from '../../actions/actions'\nimport { withErrorBoundary } from '../../components/common/ErrorBoundary'\nimport { logError } from '../../core/logging/logger'\nimport { useChangeEventState, useToggleState } from '../../hooks/hooks'\nimport { RenderHeaderInput } from './RequestHeader'\n\ninterface Props {\n    onFinish: () => void\n    setSource: (src: string) => void\n}\n\nconst HttpRequestSource: FC<Props> = ({ onFinish, setSource }) => {\n    const [method, setMethod] = useChangeEventState('GET')\n    const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n    const [body, setBody] = useChangeEventState('')\n    const [headers, setHeaders] = useState([['Accept', 'application/json'] as [string, string]])\n    const [error, setError] = useState(null as TypeError | null)\n    const [hasBody, setHasBody] = useToggleState()\n\n    const submit = useCallback(async () => {\n        const requestInit: RequestInit = {\n            method,\n            headers,\n            body: hasBody ? body : null,\n        }\n        const request = new Request(url, requestInit)\n        setError(null)\n\n        let json: string\n        try {\n            const result = await fetch(request)\n            json = await result.json()\n        } catch (e) {\n            logError('HttpRequestSource.submit', e)\n            setError(e)\n            return\n        }\n        setSource(customToString(json))\n        onFinish()\n    }, [method, url, body, headers, hasBody, setSource, onFinish])\n\n    return (\n        <div id=\"HttpRequestSource\">\n            <FormGroup>\n                <label htmlFor=\"requestMethod\">Method</label>\n                <select\n                    className=\"form-control-lg form-control\"\n                    defaultValue={method}\n                    name=\"requestMethod\"\n                    id=\"requestMethod\"\n                    onChange={setMethod}\n                >\n                    <option>GET</option>\n                    <option>POST</option>\n                    <option>PUT</option>\n                    <option>OPTIONS</option>\n                </select>\n            </FormGroup>\n            <FormGroup>\n                <label htmlFor=\"requestUrl\">Request URL</label>\n                <input\n                    defaultValue={url}\n                    className=\"form-control-lg form-control\"\n                    type=\"url\"\n                    name=\"requestUrl\"\n                    id=\"requestUrl\"\n                    placeholder=\"enter an URL\"\n                    onChange={setUrl}\n                />\n            </FormGroup>\n            <div className=\"position-relative form-check\">\n                <label className=\"form-check-label\">\n                    <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n                </label>\n            </div>\n            <Form inline={true} hidden={!hasBody}>\n                <FormGroup>\n                    <label>Body</label>\n                    <input\n                        className=\"form-control-lg form-control\"\n                        type=\"textarea\"\n                        value={body}\n                        onChange={setBody}\n                    />{' '}\n                </FormGroup>\n            </Form>\n            <label htmlFor=\"headers\">Request headers</label>{' '}\n            <Button\n                outline={true}\n                color=\"primary\"\n                onClick={() => setHeaders([...headers, [`name-${headers.length + 1}`, 'value']])}\n            >\n                Add header\n            </Button>\n            <br />\n            <br />\n            <HeaderList headers={headers} onChange={setHeaders} />\n            <br />\n            <Button block={true} color=\"primary\" onClick={submit}>\n                Submit\n            </Button>\n            {error && (\n                <Alert color=\"danger\">\n                    Error: {error.message ? error.message : ''}\n                    {error.stack ? error.stack : ''}\n                </Alert>\n            )}\n        </div>\n    )\n}\n\ntype HeaderListProps = {\n    headers: Array<[string, string]>\n    onChange: (headers: Array<[string, string]>) => void\n}\n\nconst HeaderList: FC<HeaderListProps> = ({ headers, onChange }) => {\n    const onRemove = useCallback((header: [string, string]) => onChange(headers.filter(h => h !== header)), [\n        headers,\n        onChange,\n    ])\n    const onChangeCallback = useCallback(\n        (header: [string, string]) => {\n            const index = headers.indexOf(header)\n            headers[index] = { ...header }\n            onChange([...headers])\n        },\n        [headers, onChange]\n    )\n    return (\n        <>\n            {headers.map((header, index) => (\n                <RenderHeaderInput\n                    header={header}\n                    key={index}\n                    id={index}\n                    onChange={onChangeCallback}\n                    onRemove={onRemove}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default connect(null, { setSource: updateSource })(withErrorBoundary(memo(HttpRequestSource)))\n"]},"metadata":{},"sourceType":"module"}