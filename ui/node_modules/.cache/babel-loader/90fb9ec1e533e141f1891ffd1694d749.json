{"ast":null,"code":"ace.define(\"ace/mode/ruby_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var constantOtherSymbol = exports.constantOtherSymbol = {\n    token: \"constant.other.symbol.ruby\",\n    // symbol\n    regex: \"[:](?:[A-Za-z_]|[@$](?=[a-zA-Z0-9_]))[a-zA-Z0-9_]*[!=?]?\"\n  };\n  var qString = exports.qString = {\n    token: \"string\",\n    // single line\n    regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n  };\n  var qqString = exports.qqString = {\n    token: \"string\",\n    // single line\n    regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n  };\n  var tString = exports.tString = {\n    token: \"string\",\n    // backtick string\n    regex: \"[`](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[`]\"\n  };\n  var constantNumericHex = exports.constantNumericHex = {\n    token: \"constant.numeric\",\n    // hex\n    regex: \"0[xX][0-9a-fA-F](?:[0-9a-fA-F]|_(?=[0-9a-fA-F]))*\\\\b\"\n  };\n  var constantNumericFloat = exports.constantNumericFloat = {\n    token: \"constant.numeric\",\n    // float\n    regex: \"[+-]?\\\\d(?:\\\\d|_(?=\\\\d))*(?:(?:\\\\.\\\\d(?:\\\\d|_(?=\\\\d))*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n  };\n  var instanceVariable = exports.instanceVariable = {\n    token: \"variable.instance\",\n    // instance variable\n    regex: \"@{1,2}[a-zA-Z_\\\\d]+\"\n  };\n\n  var RubyHighlightRules = function () {\n    var builtinFunctions = \"abort|Array|assert|assert_equal|assert_not_equal|assert_same|assert_not_same|\" + \"assert_nil|assert_not_nil|assert_match|assert_no_match|assert_in_delta|assert_throws|\" + \"assert_raise|assert_nothing_raised|assert_instance_of|assert_kind_of|assert_respond_to|\" + \"assert_operator|assert_send|assert_difference|assert_no_difference|assert_recognizes|\" + \"assert_generates|assert_response|assert_redirected_to|assert_template|assert_select|\" + \"assert_select_email|assert_select_rjs|assert_select_encoded|css_select|at_exit|\" + \"attr|attr_writer|attr_reader|attr_accessor|attr_accessible|autoload|binding|block_given?|callcc|\" + \"caller|catch|chomp|chomp!|chop|chop!|defined?|delete_via_redirect|eval|exec|exit|\" + \"exit!|fail|Float|flunk|follow_redirect!|fork|form_for|form_tag|format|gets|global_variables|gsub|\" + \"gsub!|get_via_redirect|host!|https?|https!|include|Integer|lambda|link_to|\" + \"link_to_unless_current|link_to_function|link_to_remote|load|local_variables|loop|open|open_session|\" + \"p|print|printf|proc|putc|puts|post_via_redirect|put_via_redirect|raise|rand|\" + \"raw|readline|readlines|redirect?|request_via_redirect|require|scan|select|\" + \"set_trace_func|sleep|split|sprintf|srand|String|stylesheet_link_tag|syscall|system|sub|sub!|test|\" + \"throw|trace_var|trap|untrace_var|atan2|cos|exp|frexp|ldexp|log|log10|sin|sqrt|tan|\" + \"render|javascript_include_tag|csrf_meta_tag|label_tag|text_field_tag|submit_tag|check_box_tag|\" + \"content_tag|radio_button_tag|text_area_tag|password_field_tag|hidden_field_tag|\" + \"fields_for|select_tag|options_for_select|options_from_collection_for_select|collection_select|\" + \"time_zone_select|select_date|select_time|select_datetime|date_select|time_select|datetime_select|\" + \"select_year|select_month|select_day|select_hour|select_minute|select_second|file_field_tag|\" + \"file_field|respond_to|skip_before_filter|around_filter|after_filter|verify|\" + \"protect_from_forgery|rescue_from|helper_method|redirect_to|before_filter|\" + \"send_data|send_file|validates_presence_of|validates_uniqueness_of|validates_length_of|\" + \"validates_format_of|validates_acceptance_of|validates_associated|validates_exclusion_of|\" + \"validates_inclusion_of|validates_numericality_of|validates_with|validates_each|\" + \"authenticate_or_request_with_http_basic|authenticate_or_request_with_http_digest|\" + \"filter_parameter_logging|match|get|post|resources|redirect|scope|assert_routing|\" + \"translate|localize|extract_locale_from_tld|caches_page|expire_page|caches_action|expire_action|\" + \"cache|expire_fragment|expire_cache_for|observe|cache_sweeper|\" + \"has_many|has_one|belongs_to|has_and_belongs_to_many\";\n    var keywords = \"alias|and|BEGIN|begin|break|case|class|def|defined|do|else|elsif|END|end|ensure|\" + \"__FILE__|finally|for|gem|if|in|__LINE__|module|next|not|or|private|protected|public|\" + \"redo|rescue|retry|return|super|then|undef|unless|until|when|while|yield\";\n    var buildinConstants = \"true|TRUE|false|FALSE|nil|NIL|ARGF|ARGV|DATA|ENV|RUBY_PLATFORM|RUBY_RELEASE_DATE|\" + \"RUBY_VERSION|STDERR|STDIN|STDOUT|TOPLEVEL_BINDING\";\n    var builtinVariables = \"$DEBUG|$defout|$FILENAME|$LOAD_PATH|$SAFE|$stdin|$stdout|$stderr|$VERBOSE|\" + \"$!|root_url|flash|session|cookies|params|request|response|logger|self\";\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"constant.language\": buildinConstants,\n      \"variable.language\": builtinVariables,\n      \"support.function\": builtinFunctions,\n      \"invalid.deprecated\": \"debugger\" // TODO is this a remnant from js mode?\n\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"comment\",\n        // multi line comment\n        regex: \"^=begin(?:$|\\\\s.*$)\",\n        next: \"comment\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n      }, [{\n        regex: \"[{}]\",\n        onMatch: function (val, state, stack) {\n          this.next = val == \"{\" ? this.nextState : \"\";\n\n          if (val == \"{\" && stack.length) {\n            stack.unshift(\"start\", state);\n            return \"paren.lparen\";\n          }\n\n          if (val == \"}\" && stack.length) {\n            stack.shift();\n            this.next = stack.shift();\n            if (this.next.indexOf(\"string\") != -1) return \"paren.end\";\n          }\n\n          return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n        },\n        nextState: \"start\"\n      }, {\n        token: \"string.start\",\n        regex: /\"/,\n        push: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/\n        }, {\n          token: \"paren.start\",\n          regex: /#{/,\n          push: \"start\"\n        }, {\n          token: \"string.end\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string.start\",\n        regex: /`/,\n        push: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/\n        }, {\n          token: \"paren.start\",\n          regex: /#{/,\n          push: \"start\"\n        }, {\n          token: \"string.end\",\n          regex: /`/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string.start\",\n        regex: /'/,\n        push: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\['\\\\]/\n        }, {\n          token: \"string.end\",\n          regex: /'/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }], {\n        token: \"text\",\n        // namespaces aren't symbols\n        regex: \"::\"\n      }, {\n        token: \"variable.instance\",\n        // instance variable\n        regex: \"@{1,2}[a-zA-Z_\\\\d]+\"\n      }, {\n        token: \"support.class\",\n        // class name\n        regex: \"[A-Z][a-zA-Z_\\\\d]+\"\n      }, constantOtherSymbol, constantNumericHex, constantNumericFloat, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"punctuation.separator.key-value\",\n        regex: \"=>\"\n      }, {\n        stateName: \"heredoc\",\n        onMatch: function (value, currentState, stack) {\n          var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n          var tokens = value.split(this.splitRegex);\n          stack.push(next, tokens[3]);\n          return [{\n            type: \"constant\",\n            value: tokens[1]\n          }, {\n            type: \"string\",\n            value: tokens[2]\n          }, {\n            type: \"support.class\",\n            value: tokens[3]\n          }, {\n            type: \"string\",\n            value: tokens[4]\n          }];\n        },\n        regex: \"(<<-?)(['\\\"`]?)([\\\\w]+)(['\\\"`]?)\",\n        rules: {\n          heredoc: [{\n            onMatch: function (value, currentState, stack) {\n              if (value === stack[1]) {\n                stack.shift();\n                stack.shift();\n                this.next = stack[0] || \"start\";\n                return \"support.class\";\n              }\n\n              this.next = \"\";\n              return \"string\";\n            },\n            regex: \".*$\",\n            next: \"start\"\n          }],\n          indentedHeredoc: [{\n            token: \"string\",\n            regex: \"^ +\"\n          }, {\n            onMatch: function (value, currentState, stack) {\n              if (value === stack[1]) {\n                stack.shift();\n                stack.shift();\n                this.next = stack[0] || \"start\";\n                return \"support.class\";\n              }\n\n              this.next = \"\";\n              return \"string\";\n            },\n            regex: \".*$\",\n            next: \"start\"\n          }]\n        }\n      }, {\n        regex: \"$\",\n        token: \"empty\",\n        next: function (currentState, stack) {\n          if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\") return stack[0];\n          return currentState;\n        }\n      }, {\n        token: \"string.character\",\n        regex: \"\\\\B\\\\?.\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"^=end(?:$|\\\\s.*$)\",\n        next: \"start\"\n      }, {\n        token: \"comment\",\n        // comment spanning whole line\n        regex: \".+\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(RubyHighlightRules, TextHighlightRules);\n  exports.RubyHighlightRules = RubyHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/ruby\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/ruby_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/range\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/coffee\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var RubyHighlightRules = require(\"./ruby_highlight_rules\").RubyHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var Range = require(\"../range\").Range;\n\n  var CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\n\n  var FoldMode = require(\"./folding/coffee\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = RubyHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new FoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n        var startingClassOrMethod = line.match(/^\\s*(class|def|module)\\s.*$/);\n        var startingDoBlock = line.match(/.*do(\\s*|\\s+\\|.*\\|\\s*)$/);\n        var startingConditional = line.match(/^\\s*(if|else|when)\\s*/);\n\n        if (match || startingClassOrMethod || startingDoBlock || startingConditional) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return /^\\s+(end|else)$/.test(line + input) || this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, session, row) {\n      var line = session.getLine(row);\n      if (/}/.test(line)) return this.$outdent.autoOutdent(session, row);\n      var indent = this.$getIndent(line);\n      var prevLine = session.getLine(row - 1);\n      var prevIndent = this.$getIndent(prevLine);\n      var tab = session.getTabString();\n\n      if (prevIndent.length <= indent.length) {\n        if (indent.slice(-tab.length) == tab) session.remove(new Range(row, indent.length - tab.length, row, indent.length));\n      }\n    };\n\n    this.$id = \"ace/mode/ruby\";\n    this.snippetFileId = \"ace/snippets/ruby\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/ruby\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-ruby.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","constantOtherSymbol","token","regex","qString","qqString","tString","constantNumericHex","constantNumericFloat","instanceVariable","RubyHighlightRules","builtinFunctions","keywords","buildinConstants","builtinVariables","keywordMapper","$keywords","createKeywordMapper","$rules","next","onMatch","val","state","stack","nextState","length","unshift","shift","indexOf","push","defaultToken","stateName","value","currentState","tokens","split","splitRegex","type","rules","heredoc","indentedHeredoc","normalizeRules","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","getFoldWidgetRange","session","foldStyle","range","indentationBlock","re","startLevel","search","startColumn","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","prev","prevIndent","nextIndent","foldWidgets","TextMode","Mode","CstyleBehaviour","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","getNextLineIndent","tab","tokenizedLine","getTokenizer","getLineTokens","startingClassOrMethod","startingDoBlock","startingConditional","prevLine","getTabString","slice","remove","$id","snippetFileId","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/ruby_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar constantOtherSymbol = exports.constantOtherSymbol = {\n    token : \"constant.other.symbol.ruby\", // symbol\n    regex : \"[:](?:[A-Za-z_]|[@$](?=[a-zA-Z0-9_]))[a-zA-Z0-9_]*[!=?]?\"\n};\n\nvar qString = exports.qString = {\n    token : \"string\", // single line\n    regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n};\n\nvar qqString = exports.qqString = {\n    token : \"string\", // single line\n    regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n};\n\nvar tString = exports.tString = {\n    token : \"string\", // backtick string\n    regex : \"[`](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[`]\"\n};\n\nvar constantNumericHex = exports.constantNumericHex = {\n    token : \"constant.numeric\", // hex\n    regex : \"0[xX][0-9a-fA-F](?:[0-9a-fA-F]|_(?=[0-9a-fA-F]))*\\\\b\"\n};\n\nvar constantNumericFloat = exports.constantNumericFloat = {\n    token : \"constant.numeric\", // float\n    regex : \"[+-]?\\\\d(?:\\\\d|_(?=\\\\d))*(?:(?:\\\\.\\\\d(?:\\\\d|_(?=\\\\d))*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n};\n\nvar instanceVariable = exports.instanceVariable = {\n    token : \"variable.instance\", // instance variable\n    regex : \"@{1,2}[a-zA-Z_\\\\d]+\"\n};\n\nvar RubyHighlightRules = function() {\n\n    var builtinFunctions = (\n        \"abort|Array|assert|assert_equal|assert_not_equal|assert_same|assert_not_same|\" +\n        \"assert_nil|assert_not_nil|assert_match|assert_no_match|assert_in_delta|assert_throws|\" +\n        \"assert_raise|assert_nothing_raised|assert_instance_of|assert_kind_of|assert_respond_to|\" +\n        \"assert_operator|assert_send|assert_difference|assert_no_difference|assert_recognizes|\" +\n        \"assert_generates|assert_response|assert_redirected_to|assert_template|assert_select|\" +\n        \"assert_select_email|assert_select_rjs|assert_select_encoded|css_select|at_exit|\" +\n        \"attr|attr_writer|attr_reader|attr_accessor|attr_accessible|autoload|binding|block_given?|callcc|\" +\n        \"caller|catch|chomp|chomp!|chop|chop!|defined?|delete_via_redirect|eval|exec|exit|\" +\n        \"exit!|fail|Float|flunk|follow_redirect!|fork|form_for|form_tag|format|gets|global_variables|gsub|\" +\n        \"gsub!|get_via_redirect|host!|https?|https!|include|Integer|lambda|link_to|\" +\n        \"link_to_unless_current|link_to_function|link_to_remote|load|local_variables|loop|open|open_session|\" +\n        \"p|print|printf|proc|putc|puts|post_via_redirect|put_via_redirect|raise|rand|\" +\n        \"raw|readline|readlines|redirect?|request_via_redirect|require|scan|select|\" +\n        \"set_trace_func|sleep|split|sprintf|srand|String|stylesheet_link_tag|syscall|system|sub|sub!|test|\" +\n        \"throw|trace_var|trap|untrace_var|atan2|cos|exp|frexp|ldexp|log|log10|sin|sqrt|tan|\" +\n        \"render|javascript_include_tag|csrf_meta_tag|label_tag|text_field_tag|submit_tag|check_box_tag|\" +\n        \"content_tag|radio_button_tag|text_area_tag|password_field_tag|hidden_field_tag|\" +\n        \"fields_for|select_tag|options_for_select|options_from_collection_for_select|collection_select|\" +\n        \"time_zone_select|select_date|select_time|select_datetime|date_select|time_select|datetime_select|\" +\n        \"select_year|select_month|select_day|select_hour|select_minute|select_second|file_field_tag|\" +\n        \"file_field|respond_to|skip_before_filter|around_filter|after_filter|verify|\" +\n        \"protect_from_forgery|rescue_from|helper_method|redirect_to|before_filter|\" +\n        \"send_data|send_file|validates_presence_of|validates_uniqueness_of|validates_length_of|\" +\n        \"validates_format_of|validates_acceptance_of|validates_associated|validates_exclusion_of|\" +\n        \"validates_inclusion_of|validates_numericality_of|validates_with|validates_each|\" +\n        \"authenticate_or_request_with_http_basic|authenticate_or_request_with_http_digest|\" +\n        \"filter_parameter_logging|match|get|post|resources|redirect|scope|assert_routing|\" +\n        \"translate|localize|extract_locale_from_tld|caches_page|expire_page|caches_action|expire_action|\" +\n        \"cache|expire_fragment|expire_cache_for|observe|cache_sweeper|\" +\n        \"has_many|has_one|belongs_to|has_and_belongs_to_many\"\n    );\n\n    var keywords = (\n        \"alias|and|BEGIN|begin|break|case|class|def|defined|do|else|elsif|END|end|ensure|\" +\n        \"__FILE__|finally|for|gem|if|in|__LINE__|module|next|not|or|private|protected|public|\" +\n        \"redo|rescue|retry|return|super|then|undef|unless|until|when|while|yield\"\n    );\n\n    var buildinConstants = (\n        \"true|TRUE|false|FALSE|nil|NIL|ARGF|ARGV|DATA|ENV|RUBY_PLATFORM|RUBY_RELEASE_DATE|\" +\n        \"RUBY_VERSION|STDERR|STDIN|STDOUT|TOPLEVEL_BINDING\"\n    );\n\n    var builtinVariables = (\n        \"$DEBUG|$defout|$FILENAME|$LOAD_PATH|$SAFE|$stdin|$stdout|$stderr|$VERBOSE|\" +\n        \"$!|root_url|flash|session|cookies|params|request|response|logger|self\"\n    );\n\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"constant.language\": buildinConstants,\n        \"variable.language\": builtinVariables,\n        \"support.function\": builtinFunctions,\n        \"invalid.deprecated\": \"debugger\" // TODO is this a remnant from js mode?\n    }, \"identifier\");\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"#.*$\"\n            }, {\n                token : \"comment\", // multi line comment\n                regex : \"^=begin(?:$|\\\\s.*$)\",\n                next : \"comment\"\n            }, {\n                token : \"string.regexp\",\n                regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n            },\n\n            [{\n                regex: \"[{}]\", onMatch: function(val, state, stack) {\n                    this.next = val == \"{\" ? this.nextState : \"\";\n                    if (val == \"{\" && stack.length) {\n                        stack.unshift(\"start\", state);\n                        return \"paren.lparen\";\n                    }\n                    if (val == \"}\" && stack.length) {\n                        stack.shift();\n                        this.next = stack.shift();\n                        if (this.next.indexOf(\"string\") != -1)\n                            return \"paren.end\";\n                    }\n                    return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n                },\n                nextState: \"start\"\n            }, {\n                token : \"string.start\",\n                regex : /\"/,\n                push  : [{\n                    token : \"constant.language.escape\",\n                    regex : /\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/\n                }, {\n                    token : \"paren.start\",\n                    regex : /#{/,\n                    push  : \"start\"\n                }, {\n                    token : \"string.end\",\n                    regex : /\"/,\n                    next  : \"pop\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n            }, {\n                token : \"string.start\",\n                regex : /`/,\n                push  : [{\n                    token : \"constant.language.escape\",\n                    regex : /\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/\n                }, {\n                    token : \"paren.start\",\n                    regex : /#{/,\n                    push  : \"start\"\n                }, {\n                    token : \"string.end\",\n                    regex : /`/,\n                    next  : \"pop\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n            }, {\n                token : \"string.start\",\n                regex : /'/,\n                push  : [{\n                    token : \"constant.language.escape\",\n                    regex : /\\\\['\\\\]/\n                },  {\n                    token : \"string.end\",\n                    regex : /'/,\n                    next  : \"pop\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n            }],\n\n            {\n                token : \"text\", // namespaces aren't symbols\n                regex : \"::\"\n            }, {\n                token : \"variable.instance\", // instance variable\n                regex : \"@{1,2}[a-zA-Z_\\\\d]+\"\n            }, {\n                token : \"support.class\", // class name\n                regex : \"[A-Z][a-zA-Z_\\\\d]+\"\n            },\n\n            constantOtherSymbol,\n            constantNumericHex,\n            constantNumericFloat,\n\n            {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token : \"punctuation.separator.key-value\",\n                regex : \"=>\"\n            }, {\n                stateName: \"heredoc\",\n                onMatch : function(value, currentState, stack) {\n                    var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n                    var tokens = value.split(this.splitRegex);\n                    stack.push(next, tokens[3]);\n                    return [\n                        {type:\"constant\", value: tokens[1]},\n                        {type:\"string\", value: tokens[2]},\n                        {type:\"support.class\", value: tokens[3]},\n                        {type:\"string\", value: tokens[4]}\n                    ];\n                },\n                regex : \"(<<-?)(['\\\"`]?)([\\\\w]+)(['\\\"`]?)\",\n                rules: {\n                    heredoc: [{\n                        onMatch:  function(value, currentState, stack) {\n                            if (value === stack[1]) {\n                                stack.shift();\n                                stack.shift();\n                                this.next = stack[0] || \"start\";\n                                return \"support.class\";\n                            }\n                            this.next = \"\";\n                            return \"string\";\n                        },\n                        regex: \".*$\",\n                        next: \"start\"\n                    }],\n                    indentedHeredoc: [{\n                        token: \"string\",\n                        regex: \"^ +\"\n                    }, {\n                        onMatch:  function(value, currentState, stack) {\n                            if (value === stack[1]) {\n                                stack.shift();\n                                stack.shift();\n                                this.next = stack[0] || \"start\";\n                                return \"support.class\";\n                            }\n                            this.next = \"\";\n                            return \"string\";\n                        },\n                        regex: \".*$\",\n                        next: \"start\"\n                    }]\n                }\n            }, {\n                regex : \"$\",\n                token : \"empty\",\n                next : function(currentState, stack) {\n                    if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\")\n                        return stack[0];\n                    return currentState;\n                }\n            }, {\n               token : \"string.character\",\n               regex : \"\\\\B\\\\?.\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"^=end(?:$|\\\\s.*$)\",\n                next : \"start\"\n            }, {\n                token : \"comment\", // comment spanning whole line\n                regex : \".+\"\n            }\n        ]\n    };\n\n    this.normalizeRules();\n};\n\noop.inherits(RubyHighlightRules, TextHighlightRules);\n\nexports.RubyHighlightRules = RubyHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/ruby\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/ruby_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/range\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/coffee\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RubyHighlightRules = require(\"./ruby_highlight_rules\").RubyHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = require(\"../range\").Range;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = RubyHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            var startingClassOrMethod = line.match(/^\\s*(class|def|module)\\s.*$/);\n            var startingDoBlock = line.match(/.*do(\\s*|\\s+\\|.*\\|\\s*)$/);\n            var startingConditional = line.match(/^\\s*(if|else|when)\\s*/);\n            if (match || startingClassOrMethod || startingDoBlock || startingConditional) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return /^\\s+(end|else)$/.test(line + input) || this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, session, row) {\n        var line = session.getLine(row);\n        if (/}/.test(line))\n            return this.$outdent.autoOutdent(session, row);\n        var indent = this.$getIndent(line);\n        var prevLine = session.getLine(row - 1);\n        var prevIndent = this.$getIndent(prevLine);\n        var tab = session.getTabString();\n        if (prevIndent.length <= indent.length) {\n            if (indent.slice(-tab.length) == tab)\n                session.remove(new Range(row, indent.length-tab.length, row, indent.length));\n        }\n    };\n\n    this.$id = \"ace/mode/ruby\";\n    this.snippetFileId = \"ace/snippets/ruby\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/ruby\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}