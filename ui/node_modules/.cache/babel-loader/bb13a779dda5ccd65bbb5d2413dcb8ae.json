{"ast":null,"code":"'use strict';\n\nexports.addon = function (renderer) {\n  // CSSOM support only browser environment.\n  if (!renderer.client) return;\n\n  if (process.env.NODE_ENV !== 'production') {\n    require('./__dev__/warnOnMissingDependencies')('cssom', renderer, ['sh']);\n  } // Style sheet for media queries.\n\n\n  document.head.appendChild(renderer.msh = document.createElement('style'));\n\n  renderer.createRule = function (selector, prelude) {\n    var rawCss = selector + '{}';\n    if (prelude) rawCss = prelude + '{' + rawCss + '}';\n    var sheet = prelude ? renderer.msh.sheet : renderer.sh.sheet;\n    var index = sheet.insertRule(rawCss, sheet.cssRules.length);\n    var rule = (sheet.cssRules || sheet.rules)[index]; // Keep track of `index` where rule was inserted in the sheet. This is\n    // needed for rule deletion.\n\n    rule.index = index;\n\n    if (prelude) {\n      // If rule has media query (it has prelude), move style (CSSStyleDeclaration)\n      // object to the \"top\" to normalize it with a rule without the media\n      // query, so that both rules have `.style` property available.\n      var selectorRule = (rule.cssRules || rule.rules)[0];\n      rule.style = selectorRule.style;\n      rule.styleMap = selectorRule.styleMap;\n    }\n\n    return rule;\n  };\n};","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/nano-css/addon/cssom.js"],"names":["exports","addon","renderer","client","process","env","NODE_ENV","require","document","head","appendChild","msh","createElement","createRule","selector","prelude","rawCss","sheet","sh","index","insertRule","cssRules","length","rule","rules","selectorRule","style","styleMap"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,KAAR,GAAgB,UAAUC,QAAV,EAAoB;AAChC;AACA,MAAI,CAACA,QAAQ,CAACC,MAAd,EAAsB;;AAEtB,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCC,IAAAA,OAAO,CAAC,qCAAD,CAAP,CAA+C,OAA/C,EAAwDL,QAAxD,EAAkE,CAAC,IAAD,CAAlE;AACH,GAN+B,CAQhC;;;AACAM,EAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BR,QAAQ,CAACS,GAAT,GAAeH,QAAQ,CAACI,aAAT,CAAuB,OAAvB,CAAzC;;AAEAV,EAAAA,QAAQ,CAACW,UAAT,GAAsB,UAAUC,QAAV,EAAoBC,OAApB,EAA6B;AAC/C,QAAIC,MAAM,GAAGF,QAAQ,GAAG,IAAxB;AACA,QAAIC,OAAJ,EAAaC,MAAM,GAAGD,OAAO,GAAG,GAAV,GAAgBC,MAAhB,GAAyB,GAAlC;AACb,QAAIC,KAAK,GAAGF,OAAO,GAAGb,QAAQ,CAACS,GAAT,CAAaM,KAAhB,GAAwBf,QAAQ,CAACgB,EAAT,CAAYD,KAAvD;AACA,QAAIE,KAAK,GAAGF,KAAK,CAACG,UAAN,CAAiBJ,MAAjB,EAAyBC,KAAK,CAACI,QAAN,CAAeC,MAAxC,CAAZ;AACA,QAAIC,IAAI,GAAG,CAACN,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACO,KAAzB,EAAgCL,KAAhC,CAAX,CAL+C,CAO/C;AACA;;AACAI,IAAAA,IAAI,CAACJ,KAAL,GAAaA,KAAb;;AAEA,QAAIJ,OAAJ,EAAa;AACT;AACA;AACA;AACA,UAAIU,YAAY,GAAG,CAACF,IAAI,CAACF,QAAL,IAAiBE,IAAI,CAACC,KAAvB,EAA8B,CAA9B,CAAnB;AACAD,MAAAA,IAAI,CAACG,KAAL,GAAaD,YAAY,CAACC,KAA1B;AACAH,MAAAA,IAAI,CAACI,QAAL,GAAgBF,YAAY,CAACE,QAA7B;AACH;;AAED,WAAOJ,IAAP;AACH,GArBD;AAsBH,CAjCD","sourcesContent":["'use strict';\n\nexports.addon = function (renderer) {\n    // CSSOM support only browser environment.\n    if (!renderer.client) return;\n\n    if (process.env.NODE_ENV !== 'production') {\n        require('./__dev__/warnOnMissingDependencies')('cssom', renderer, ['sh']);\n    }\n\n    // Style sheet for media queries.\n    document.head.appendChild(renderer.msh = document.createElement('style'));\n\n    renderer.createRule = function (selector, prelude) {\n        var rawCss = selector + '{}';\n        if (prelude) rawCss = prelude + '{' + rawCss + '}';\n        var sheet = prelude ? renderer.msh.sheet : renderer.sh.sheet;\n        var index = sheet.insertRule(rawCss, sheet.cssRules.length);\n        var rule = (sheet.cssRules || sheet.rules)[index];\n\n        // Keep track of `index` where rule was inserted in the sheet. This is\n        // needed for rule deletion.\n        rule.index = index;\n\n        if (prelude) {\n            // If rule has media query (it has prelude), move style (CSSStyleDeclaration)\n            // object to the \"top\" to normalize it with a rule without the media\n            // query, so that both rules have `.style` property available.\n            var selectorRule = (rule.cssRules || rule.rules)[0];\n            rule.style = selectorRule.style;\n            rule.styleMap = selectorRule.styleMap;\n        }\n\n        return rule;\n    };\n};\n"]},"metadata":{},"sourceType":"script"}