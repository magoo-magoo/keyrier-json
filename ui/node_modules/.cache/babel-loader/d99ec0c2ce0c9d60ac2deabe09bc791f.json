{"ast":null,"code":"import { useCallback, useRef, useState } from 'react';\nimport useUpdateEffect from './useUpdateEffect';\n\nfunction composeMiddleware(chain) {\n  return function (context, dispatch) {\n    return chain.reduceRight(function (res, middleware) {\n      return middleware(context)(res);\n    }, dispatch);\n  };\n}\n\nvar createReducer = function () {\n  var middlewares = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    middlewares[_i] = arguments[_i];\n  }\n\n  var composedMiddleware = composeMiddleware(middlewares);\n  return function (reducer, initialState, initializer) {\n    if (initializer === void 0) {\n      initializer = function (value) {\n        return value;\n      };\n    }\n\n    var ref = useRef(initializer(initialState));\n\n    var _a = useState(ref.current),\n        setState = _a[1];\n\n    var dispatch = useCallback(function (action) {\n      ref.current = reducer(ref.current, action);\n      setState(ref.current);\n      return action;\n    }, [reducer]);\n    var dispatchRef = useRef(composedMiddleware({\n      getState: function () {\n        return ref.current;\n      },\n      dispatch: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return dispatchRef.current.apply(dispatchRef, args);\n      }\n    }, dispatch));\n    useUpdateEffect(function () {\n      dispatchRef.current = composedMiddleware({\n        getState: function () {\n          return ref.current;\n        },\n        dispatch: function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          return dispatchRef.current.apply(dispatchRef, args);\n        }\n      }, dispatch);\n    }, [dispatch]);\n    return [ref.current, dispatchRef.current];\n  };\n};\n\nexport default createReducer;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/createReducer.js"],"names":["useCallback","useRef","useState","useUpdateEffect","composeMiddleware","chain","context","dispatch","reduceRight","res","middleware","createReducer","middlewares","_i","arguments","length","composedMiddleware","reducer","initialState","initializer","value","ref","_a","current","setState","action","dispatchRef","getState","args","apply"],"mappings":"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","sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport useUpdateEffect from './useUpdateEffect';\nfunction composeMiddleware(chain) {\n    return function (context, dispatch) {\n        return chain.reduceRight(function (res, middleware) {\n            return middleware(context)(res);\n        }, dispatch);\n    };\n}\nvar createReducer = function () {\n    var middlewares = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        middlewares[_i] = arguments[_i];\n    }\n    var composedMiddleware = composeMiddleware(middlewares);\n    return function (reducer, initialState, initializer) {\n        if (initializer === void 0) { initializer = function (value) { return value; }; }\n        var ref = useRef(initializer(initialState));\n        var _a = useState(ref.current), setState = _a[1];\n        var dispatch = useCallback(function (action) {\n            ref.current = reducer(ref.current, action);\n            setState(ref.current);\n            return action;\n        }, [reducer]);\n        var dispatchRef = useRef(composedMiddleware({\n            getState: function () { return ref.current; },\n            dispatch: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return dispatchRef.current.apply(dispatchRef, args);\n            },\n        }, dispatch));\n        useUpdateEffect(function () {\n            dispatchRef.current = composedMiddleware({\n                getState: function () { return ref.current; },\n                dispatch: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    return dispatchRef.current.apply(dispatchRef, args);\n                },\n            }, dispatch);\n        }, [dispatch]);\n        return [ref.current, dispatchRef.current];\n    };\n};\nexport default createReducer;\n"]},"metadata":{},"sourceType":"module"}