{"ast":null,"code":"import { useMemo, useReducer } from 'react';\n\nvar useMethods = function (createMethods, initialState) {\n  var reducer = useMemo(function () {\n    return function (reducerState, action) {\n      var _a;\n\n      return (_a = createMethods(reducerState))[action.type].apply(_a, action.payload);\n    };\n  }, [createMethods]);\n\n  var _a = useReducer(reducer, initialState),\n      state = _a[0],\n      dispatch = _a[1];\n\n  var wrappedMethods = useMemo(function () {\n    var actionTypes = Object.keys(createMethods(initialState));\n    return actionTypes.reduce(function (acc, type) {\n      acc[type] = function () {\n        var payload = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          payload[_i] = arguments[_i];\n        }\n\n        return dispatch({\n          type: type,\n          payload: payload\n        });\n      };\n\n      return acc;\n    }, {});\n  }, [createMethods, initialState]);\n  return [state, wrappedMethods];\n};\n\nexport default useMethods;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useMethods.js"],"names":["useMemo","useReducer","useMethods","createMethods","initialState","reducer","reducerState","action","_a","type","apply","payload","state","dispatch","wrappedMethods","actionTypes","Object","keys","reduce","acc","_i","arguments","length"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,OAApC;;AACA,IAAIC,UAAU,GAAG,UAAUC,aAAV,EAAyBC,YAAzB,EAAuC;AACpD,MAAIC,OAAO,GAAGL,OAAO,CAAC,YAAY;AAAE,WAAO,UAAUM,YAAV,EAAwBC,MAAxB,EAAgC;AACvE,UAAIC,EAAJ;;AACA,aAAO,CAACA,EAAE,GAAGL,aAAa,CAACG,YAAD,CAAnB,EAAmCC,MAAM,CAACE,IAA1C,EAAgDC,KAAhD,CAAsDF,EAAtD,EAA0DD,MAAM,CAACI,OAAjE,CAAP;AACH,KAHmC;AAGhC,GAHiB,EAGf,CAACR,aAAD,CAHe,CAArB;;AAIA,MAAIK,EAAE,GAAGP,UAAU,CAACI,OAAD,EAAUD,YAAV,CAAnB;AAAA,MAA4CQ,KAAK,GAAGJ,EAAE,CAAC,CAAD,CAAtD;AAAA,MAA2DK,QAAQ,GAAGL,EAAE,CAAC,CAAD,CAAxE;;AACA,MAAIM,cAAc,GAAGd,OAAO,CAAC,YAAY;AACrC,QAAIe,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYd,aAAa,CAACC,YAAD,CAAzB,CAAlB;AACA,WAAOW,WAAW,CAACG,MAAZ,CAAmB,UAAUC,GAAV,EAAeV,IAAf,EAAqB;AAC3CU,MAAAA,GAAG,CAACV,IAAD,CAAH,GAAY,YAAY;AACpB,YAAIE,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIS,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CT,UAAAA,OAAO,CAACS,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACD,eAAOP,QAAQ,CAAC;AAAEJ,UAAAA,IAAI,EAAEA,IAAR;AAAcE,UAAAA,OAAO,EAAEA;AAAvB,SAAD,CAAf;AACH,OAND;;AAOA,aAAOQ,GAAP;AACH,KATM,EASJ,EATI,CAAP;AAUH,GAZ2B,EAYzB,CAAChB,aAAD,EAAgBC,YAAhB,CAZyB,CAA5B;AAaA,SAAO,CAACQ,KAAD,EAAQE,cAAR,CAAP;AACH,CApBD;;AAqBA,eAAeZ,UAAf","sourcesContent":["import { useMemo, useReducer } from 'react';\nvar useMethods = function (createMethods, initialState) {\n    var reducer = useMemo(function () { return function (reducerState, action) {\n        var _a;\n        return (_a = createMethods(reducerState))[action.type].apply(_a, action.payload);\n    }; }, [createMethods]);\n    var _a = useReducer(reducer, initialState), state = _a[0], dispatch = _a[1];\n    var wrappedMethods = useMemo(function () {\n        var actionTypes = Object.keys(createMethods(initialState));\n        return actionTypes.reduce(function (acc, type) {\n            acc[type] = function () {\n                var payload = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    payload[_i] = arguments[_i];\n                }\n                return dispatch({ type: type, payload: payload });\n            };\n            return acc;\n        }, {});\n    }, [createMethods, initialState]);\n    return [state, wrappedMethods];\n};\nexport default useMethods;\n"]},"metadata":{},"sourceType":"module"}