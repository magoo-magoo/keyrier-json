{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\n/* eslint-disable */\n\nimport * as React from 'react';\nimport { isClient } from './util';\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useRef = React.useRef;\n\nvar DRAF = function (callback) {\n  return setTimeout(callback, 35);\n};\n\nvar useSize = function (element, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.width,\n      width = _c === void 0 ? Infinity : _c,\n      _d = _b.height,\n      height = _d === void 0 ? Infinity : _d;\n\n  if (!isClient) {\n    return [typeof element === 'function' ? element({\n      width: width,\n      height: height\n    }) : element, {\n      width: width,\n      height: height\n    }];\n  }\n\n  var _e = useState({\n    width: width,\n    height: height\n  }),\n      state = _e[0],\n      setState = _e[1];\n\n  if (typeof element === 'function') {\n    element = element(state);\n  }\n\n  var style = element.props.style || {};\n  var ref = useRef(null);\n  var window = null;\n\n  var setSize = function () {\n    var iframe = ref.current;\n    var size = iframe ? {\n      width: iframe.offsetWidth,\n      height: iframe.offsetHeight\n    } : {\n      width: width,\n      height: height\n    };\n    setState(size);\n  };\n\n  var onWindow = function (windowToListenOn) {\n    windowToListenOn.addEventListener('resize', setSize);\n    DRAF(setSize);\n  };\n\n  useEffect(function () {\n    var iframe = ref.current;\n\n    if (!iframe) {\n      // iframe will be undefined if component is already unmounted\n      return;\n    }\n\n    if (iframe.contentWindow) {\n      window = iframe.contentWindow;\n      onWindow(window);\n    } else {\n      var onLoad_1 = function () {\n        iframe.removeEventListener('load', onLoad_1);\n        window = iframe.contentWindow;\n        onWindow(window);\n      };\n\n      iframe.addEventListener('load', onLoad_1);\n    }\n\n    return function () {\n      if (window && window.removeEventListener) {\n        window.removeEventListener('resize', setSize);\n      }\n    };\n  }, []);\n  style.position = 'relative';\n  var sized = React.cloneElement.apply(React, __spreadArrays([element, {\n    style: style\n  }], __spreadArrays([React.createElement('iframe', {\n    ref: ref,\n    style: {\n      background: 'transparent',\n      border: 'none',\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n      zIndex: -1\n    }\n  })], React.Children.toArray(element.props.children))));\n  return [sized, state];\n};\n\nexport default useSize;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useSize.js"],"names":["__spreadArrays","React","isClient","useState","useEffect","useRef","DRAF","callback","setTimeout","useSize","element","_a","_b","_c","width","Infinity","_d","height","_e","state","setState","style","props","ref","window","setSize","iframe","current","size","offsetWidth","offsetHeight","onWindow","windowToListenOn","addEventListener","contentWindow","onLoad_1","removeEventListener","position","sized","cloneElement","apply","createElement","background","border","left","top","zIndex","Children","toArray","children"],"mappings":"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","sourcesContent":["import { __spreadArrays } from \"tslib\";\n/* eslint-disable */\nimport * as React from 'react';\nimport { isClient } from './util';\nvar useState = React.useState, useEffect = React.useEffect, useRef = React.useRef;\nvar DRAF = function (callback) { return setTimeout(callback, 35); };\nvar useSize = function (element, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.width, width = _c === void 0 ? Infinity : _c, _d = _b.height, height = _d === void 0 ? Infinity : _d;\n    if (!isClient) {\n        return [typeof element === 'function' ? element({ width: width, height: height }) : element, { width: width, height: height }];\n    }\n    var _e = useState({ width: width, height: height }), state = _e[0], setState = _e[1];\n    if (typeof element === 'function') {\n        element = element(state);\n    }\n    var style = element.props.style || {};\n    var ref = useRef(null);\n    var window = null;\n    var setSize = function () {\n        var iframe = ref.current;\n        var size = iframe\n            ? {\n                width: iframe.offsetWidth,\n                height: iframe.offsetHeight,\n            }\n            : { width: width, height: height };\n        setState(size);\n    };\n    var onWindow = function (windowToListenOn) {\n        windowToListenOn.addEventListener('resize', setSize);\n        DRAF(setSize);\n    };\n    useEffect(function () {\n        var iframe = ref.current;\n        if (!iframe) {\n            // iframe will be undefined if component is already unmounted\n            return;\n        }\n        if (iframe.contentWindow) {\n            window = iframe.contentWindow;\n            onWindow(window);\n        }\n        else {\n            var onLoad_1 = function () {\n                iframe.removeEventListener('load', onLoad_1);\n                window = iframe.contentWindow;\n                onWindow(window);\n            };\n            iframe.addEventListener('load', onLoad_1);\n        }\n        return function () {\n            if (window && window.removeEventListener) {\n                window.removeEventListener('resize', setSize);\n            }\n        };\n    }, []);\n    style.position = 'relative';\n    var sized = React.cloneElement.apply(React, __spreadArrays([element,\n        { style: style }], __spreadArrays([\n        React.createElement('iframe', {\n            ref: ref,\n            style: {\n                background: 'transparent',\n                border: 'none',\n                height: '100%',\n                left: 0,\n                position: 'absolute',\n                top: 0,\n                width: '100%',\n                zIndex: -1,\n            },\n        })\n    ], React.Children.toArray(element.props.children))));\n    return [sized, state];\n};\nexport default useSize;\n"]},"metadata":{},"sourceType":"module"}