{"ast":null,"code":"ace.define(\"ace/snippets\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/event_emitter\", \"ace/lib/lang\", \"ace/range\", \"ace/range_list\", \"ace/keyboard/hash_handler\", \"ace/tokenizer\", \"ace/clipboard\", \"ace/lib/dom\", \"ace/editor\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"./lib/oop\");\n\n  var EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\n\n  var lang = require(\"./lib/lang\");\n\n  var Range = require(\"./range\").Range;\n\n  var RangeList = require(\"./range_list\").RangeList;\n\n  var HashHandler = require(\"./keyboard/hash_handler\").HashHandler;\n\n  var Tokenizer = require(\"./tokenizer\").Tokenizer;\n\n  var clipboard = require(\"./clipboard\");\n\n  var VARIABLES = {\n    CURRENT_WORD: function (editor) {\n      return editor.session.getTextRange(editor.session.getWordRange());\n    },\n    SELECTION: function (editor, name, indentation) {\n      var text = editor.session.getTextRange();\n      if (indentation) return text.replace(/\\n\\r?([ \\t]*\\S)/g, \"\\n\" + indentation + \"$1\");\n      return text;\n    },\n    CURRENT_LINE: function (editor) {\n      return editor.session.getLine(editor.getCursorPosition().row);\n    },\n    PREV_LINE: function (editor) {\n      return editor.session.getLine(editor.getCursorPosition().row - 1);\n    },\n    LINE_INDEX: function (editor) {\n      return editor.getCursorPosition().row;\n    },\n    LINE_NUMBER: function (editor) {\n      return editor.getCursorPosition().row + 1;\n    },\n    SOFT_TABS: function (editor) {\n      return editor.session.getUseSoftTabs() ? \"YES\" : \"NO\";\n    },\n    TAB_SIZE: function (editor) {\n      return editor.session.getTabSize();\n    },\n    CLIPBOARD: function (editor) {\n      return clipboard.getText && clipboard.getText();\n    },\n    FILENAME: function (editor) {\n      return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0];\n    },\n    FILENAME_BASE: function (editor) {\n      return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0].replace(/\\.[^.]*$/, \"\");\n    },\n    DIRECTORY: function (editor) {\n      return this.FILEPATH(editor).replace(/[^/\\\\]*$/, \"\");\n    },\n    FILEPATH: function (editor) {\n      return \"/not implemented.txt\";\n    },\n    WORKSPACE_NAME: function () {\n      return \"Unknown\";\n    },\n    FULLNAME: function () {\n      return \"Unknown\";\n    },\n    BLOCK_COMMENT_START: function (editor) {\n      var mode = editor.session.$mode || {};\n      return mode.blockComment && mode.blockComment.start || \"\";\n    },\n    BLOCK_COMMENT_END: function (editor) {\n      var mode = editor.session.$mode || {};\n      return mode.blockComment && mode.blockComment.end || \"\";\n    },\n    LINE_COMMENT: function (editor) {\n      var mode = editor.session.$mode || {};\n      return mode.lineCommentStart || \"\";\n    },\n    CURRENT_YEAR: date.bind(null, {\n      year: \"numeric\"\n    }),\n    CURRENT_YEAR_SHORT: date.bind(null, {\n      year: \"2-digit\"\n    }),\n    CURRENT_MONTH: date.bind(null, {\n      month: \"numeric\"\n    }),\n    CURRENT_MONTH_NAME: date.bind(null, {\n      month: \"long\"\n    }),\n    CURRENT_MONTH_NAME_SHORT: date.bind(null, {\n      month: \"short\"\n    }),\n    CURRENT_DATE: date.bind(null, {\n      day: \"2-digit\"\n    }),\n    CURRENT_DAY_NAME: date.bind(null, {\n      weekday: \"long\"\n    }),\n    CURRENT_DAY_NAME_SHORT: date.bind(null, {\n      weekday: \"short\"\n    }),\n    CURRENT_HOUR: date.bind(null, {\n      hour: \"2-digit\",\n      hour12: false\n    }),\n    CURRENT_MINUTE: date.bind(null, {\n      minute: \"2-digit\"\n    }),\n    CURRENT_SECOND: date.bind(null, {\n      second: \"2-digit\"\n    })\n  };\n  VARIABLES.SELECTED_TEXT = VARIABLES.SELECTION;\n\n  function date(dateFormat) {\n    var str = new Date().toLocaleString(\"en-us\", dateFormat);\n    return str.length == 1 ? \"0\" + str : str;\n  }\n\n  var SnippetManager = function () {\n    this.snippetMap = {};\n    this.snippetNameMap = {};\n  };\n\n  (function () {\n    oop.implement(this, EventEmitter);\n\n    this.getTokenizer = function () {\n      return SnippetManager.$tokenizer || this.createTokenizer();\n    };\n\n    this.createTokenizer = function () {\n      function TabstopToken(str) {\n        str = str.substr(1);\n        if (/^\\d+$/.test(str)) return [{\n          tabstopId: parseInt(str, 10)\n        }];\n        return [{\n          text: str\n        }];\n      }\n\n      function escape(ch) {\n        return \"(?:[^\\\\\\\\\" + ch + \"]|\\\\\\\\.)\";\n      }\n\n      var formatMatcher = {\n        regex: \"/(\" + escape(\"/\") + \"+)/\",\n        onMatch: function (val, state, stack) {\n          var ts = stack[0];\n          ts.fmtString = true;\n          ts.guard = val.slice(1, -1);\n          ts.flag = \"\";\n          return \"\";\n        },\n        next: \"formatString\"\n      };\n      SnippetManager.$tokenizer = new Tokenizer({\n        start: [{\n          regex: /\\\\./,\n          onMatch: function (val, state, stack) {\n            var ch = val[1];\n\n            if (ch == \"}\" && stack.length) {\n              val = ch;\n            } else if (\"`$\\\\\".indexOf(ch) != -1) {\n              val = ch;\n            }\n\n            return [val];\n          }\n        }, {\n          regex: /}/,\n          onMatch: function (val, state, stack) {\n            return [stack.length ? stack.shift() : val];\n          }\n        }, {\n          regex: /\\$(?:\\d+|\\w+)/,\n          onMatch: TabstopToken\n        }, {\n          regex: /\\$\\{[\\dA-Z_a-z]+/,\n          onMatch: function (str, state, stack) {\n            var t = TabstopToken(str.substr(1));\n            stack.unshift(t[0]);\n            return t;\n          },\n          next: \"snippetVar\"\n        }, {\n          regex: /\\n/,\n          token: \"newline\",\n          merge: false\n        }],\n        snippetVar: [{\n          regex: \"\\\\|\" + escape(\"\\\\|\") + \"*\\\\|\",\n          onMatch: function (val, state, stack) {\n            var choices = val.slice(1, -1).replace(/\\\\[,|\\\\]|,/g, function (operator) {\n              return operator.length == 2 ? operator[1] : \"\\x00\";\n            }).split(\"\\x00\");\n            stack[0].choices = choices;\n            return [choices[0]];\n          },\n          next: \"start\"\n        }, formatMatcher, {\n          regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\",\n          token: \"\",\n          next: \"start\"\n        }],\n        formatString: [{\n          regex: /:/,\n          onMatch: function (val, state, stack) {\n            if (stack.length && stack[0].expectElse) {\n              stack[0].expectElse = false;\n              stack[0].ifEnd = {\n                elseEnd: stack[0]\n              };\n              return [stack[0].ifEnd];\n            }\n\n            return \":\";\n          }\n        }, {\n          regex: /\\\\./,\n          onMatch: function (val, state, stack) {\n            var ch = val[1];\n            if (ch == \"}\" && stack.length) val = ch;else if (\"`$\\\\\".indexOf(ch) != -1) val = ch;else if (ch == \"n\") val = \"\\n\";else if (ch == \"t\") val = \"\\t\";else if (\"ulULE\".indexOf(ch) != -1) val = {\n              changeCase: ch,\n              local: ch > \"a\"\n            };\n            return [val];\n          }\n        }, {\n          regex: \"/\\\\w*}\",\n          onMatch: function (val, state, stack) {\n            var next = stack.shift();\n            if (next) next.flag = val.slice(1, -1);\n            this.next = next && next.tabstopId ? \"start\" : \"\";\n            return [next || val];\n          },\n          next: \"start\"\n        }, {\n          regex: /\\$(?:\\d+|\\w+)/,\n          onMatch: function (val, state, stack) {\n            return [{\n              text: val.slice(1)\n            }];\n          }\n        }, {\n          regex: /\\${\\w+/,\n          onMatch: function (val, state, stack) {\n            var token = {\n              text: val.slice(2)\n            };\n            stack.unshift(token);\n            return [token];\n          },\n          next: \"formatStringVar\"\n        }, {\n          regex: /\\n/,\n          token: \"newline\",\n          merge: false\n        }, {\n          regex: /}/,\n          onMatch: function (val, state, stack) {\n            var next = stack.shift();\n            this.next = next && next.tabstopId ? \"start\" : \"\";\n            return [next || val];\n          },\n          next: \"start\"\n        }],\n        formatStringVar: [{\n          regex: /:\\/\\w+}/,\n          onMatch: function (val, state, stack) {\n            var ts = stack[0];\n            ts.formatFunction = val.slice(2, -1);\n            return [stack.shift()];\n          },\n          next: \"formatString\"\n        }, formatMatcher, {\n          regex: /:[\\?\\-+]?/,\n          onMatch: function (val, state, stack) {\n            if (val[1] == \"+\") stack[0].ifEnd = stack[0];\n            if (val[1] == \"?\") stack[0].expectElse = true;\n          },\n          next: \"formatString\"\n        }, {\n          regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\",\n          token: \"\",\n          next: \"formatString\"\n        }]\n      });\n      return SnippetManager.$tokenizer;\n    };\n\n    this.tokenizeTmSnippet = function (str, startState) {\n      return this.getTokenizer().getLineTokens(str, startState).tokens.map(function (x) {\n        return x.value || x;\n      });\n    };\n\n    this.getVariableValue = function (editor, name, indentation) {\n      if (/^\\d+$/.test(name)) return (this.variables.__ || {})[name] || \"\";\n      if (/^[A-Z]\\d+$/.test(name)) return (this.variables[name[0] + \"__\"] || {})[name.substr(1)] || \"\";\n      name = name.replace(/^TM_/, \"\");\n      if (!this.variables.hasOwnProperty(name)) return \"\";\n      var value = this.variables[name];\n      if (typeof value == \"function\") value = this.variables[name](editor, name, indentation);\n      return value == null ? \"\" : value;\n    };\n\n    this.variables = VARIABLES;\n\n    this.tmStrFormat = function (str, ch, editor) {\n      if (!ch.fmt) return str;\n      var flag = ch.flag || \"\";\n      var re = ch.guard;\n      re = new RegExp(re, flag.replace(/[^gim]/g, \"\"));\n      var fmtTokens = typeof ch.fmt == \"string\" ? this.tokenizeTmSnippet(ch.fmt, \"formatString\") : ch.fmt;\n\n      var _self = this;\n\n      var formatted = str.replace(re, function () {\n        var oldArgs = _self.variables.__;\n        _self.variables.__ = [].slice.call(arguments);\n\n        var fmtParts = _self.resolveVariables(fmtTokens, editor);\n\n        var gChangeCase = \"E\";\n\n        for (var i = 0; i < fmtParts.length; i++) {\n          var ch = fmtParts[i];\n\n          if (typeof ch == \"object\") {\n            fmtParts[i] = \"\";\n\n            if (ch.changeCase && ch.local) {\n              var next = fmtParts[i + 1];\n\n              if (next && typeof next == \"string\") {\n                if (ch.changeCase == \"u\") fmtParts[i] = next[0].toUpperCase();else fmtParts[i] = next[0].toLowerCase();\n                fmtParts[i + 1] = next.substr(1);\n              }\n            } else if (ch.changeCase) {\n              gChangeCase = ch.changeCase;\n            }\n          } else if (gChangeCase == \"U\") {\n            fmtParts[i] = ch.toUpperCase();\n          } else if (gChangeCase == \"L\") {\n            fmtParts[i] = ch.toLowerCase();\n          }\n        }\n\n        _self.variables.__ = oldArgs;\n        return fmtParts.join(\"\");\n      });\n      return formatted;\n    };\n\n    this.tmFormatFunction = function (str, ch, editor) {\n      if (ch.formatFunction == \"upcase\") return str.toUpperCase();\n      if (ch.formatFunction == \"downcase\") return str.toLowerCase();\n      return str;\n    };\n\n    this.resolveVariables = function (snippet, editor) {\n      var result = [];\n      var indentation = \"\";\n      var afterNewLine = true;\n\n      for (var i = 0; i < snippet.length; i++) {\n        var ch = snippet[i];\n\n        if (typeof ch == \"string\") {\n          result.push(ch);\n\n          if (ch == \"\\n\") {\n            afterNewLine = true;\n            indentation = \"\";\n          } else if (afterNewLine) {\n            indentation = /^\\t*/.exec(ch)[0];\n            afterNewLine = /\\S/.test(ch);\n          }\n\n          continue;\n        }\n\n        if (!ch) continue;\n        afterNewLine = false;\n\n        if (ch.fmtString) {\n          var j = snippet.indexOf(ch, i + 1);\n          if (j == -1) j = snippet.length;\n          ch.fmt = snippet.slice(i + 1, j);\n          i = j;\n        }\n\n        if (ch.text) {\n          var value = this.getVariableValue(editor, ch.text, indentation) + \"\";\n          if (ch.fmtString) value = this.tmStrFormat(value, ch, editor);\n          if (ch.formatFunction) value = this.tmFormatFunction(value, ch, editor);\n\n          if (value && !ch.ifEnd) {\n            result.push(value);\n            gotoNext(ch);\n          } else if (!value && ch.ifEnd) {\n            gotoNext(ch.ifEnd);\n          }\n        } else if (ch.elseEnd) {\n          gotoNext(ch.elseEnd);\n        } else if (ch.tabstopId != null) {\n          result.push(ch);\n        } else if (ch.changeCase != null) {\n          result.push(ch);\n        }\n      }\n\n      function gotoNext(ch) {\n        var i1 = snippet.indexOf(ch, i + 1);\n        if (i1 != -1) i = i1;\n      }\n\n      return result;\n    };\n\n    this.insertSnippetForSelection = function (editor, snippetText) {\n      var cursor = editor.getCursorPosition();\n      var line = editor.session.getLine(cursor.row);\n      var tabString = editor.session.getTabString();\n      var indentString = line.match(/^\\s*/)[0];\n      if (cursor.column < indentString.length) indentString = indentString.slice(0, cursor.column);\n      snippetText = snippetText.replace(/\\r/g, \"\");\n      var tokens = this.tokenizeTmSnippet(snippetText);\n      tokens = this.resolveVariables(tokens, editor);\n      tokens = tokens.map(function (x) {\n        if (x == \"\\n\") return x + indentString;\n        if (typeof x == \"string\") return x.replace(/\\t/g, tabString);\n        return x;\n      });\n      var tabstops = [];\n      tokens.forEach(function (p, i) {\n        if (typeof p != \"object\") return;\n        var id = p.tabstopId;\n        var ts = tabstops[id];\n\n        if (!ts) {\n          ts = tabstops[id] = [];\n          ts.index = id;\n          ts.value = \"\";\n          ts.parents = {};\n        }\n\n        if (ts.indexOf(p) !== -1) return;\n        if (p.choices && !ts.choices) ts.choices = p.choices;\n        ts.push(p);\n        var i1 = tokens.indexOf(p, i + 1);\n        if (i1 === -1) return;\n        var value = tokens.slice(i + 1, i1);\n        var isNested = value.some(function (t) {\n          return typeof t === \"object\";\n        });\n\n        if (isNested && !ts.value) {\n          ts.value = value;\n        } else if (value.length && (!ts.value || typeof ts.value !== \"string\")) {\n          ts.value = value.join(\"\");\n        }\n      });\n      tabstops.forEach(function (ts) {\n        ts.length = 0;\n      });\n      var expanding = {};\n\n      function copyValue(val) {\n        var copy = [];\n\n        for (var i = 0; i < val.length; i++) {\n          var p = val[i];\n\n          if (typeof p == \"object\") {\n            if (expanding[p.tabstopId]) continue;\n            var j = val.lastIndexOf(p, i - 1);\n            p = copy[j] || {\n              tabstopId: p.tabstopId\n            };\n          }\n\n          copy[i] = p;\n        }\n\n        return copy;\n      }\n\n      for (var i = 0; i < tokens.length; i++) {\n        var p = tokens[i];\n        if (typeof p != \"object\") continue;\n        var id = p.tabstopId;\n        var ts = tabstops[id];\n        var i1 = tokens.indexOf(p, i + 1);\n\n        if (expanding[id]) {\n          if (expanding[id] === p) {\n            delete expanding[id];\n            Object.keys(expanding).forEach(function (parentId) {\n              ts.parents[parentId] = true;\n            });\n          }\n\n          continue;\n        }\n\n        expanding[id] = p;\n        var value = ts.value;\n        if (typeof value !== \"string\") value = copyValue(value);else if (p.fmt) value = this.tmStrFormat(value, p, editor);\n        tokens.splice.apply(tokens, [i + 1, Math.max(0, i1 - i)].concat(value, p));\n        if (ts.indexOf(p) === -1) ts.push(p);\n      }\n\n      var row = 0,\n          column = 0;\n      var text = \"\";\n      tokens.forEach(function (t) {\n        if (typeof t === \"string\") {\n          var lines = t.split(\"\\n\");\n\n          if (lines.length > 1) {\n            column = lines[lines.length - 1].length;\n            row += lines.length - 1;\n          } else column += t.length;\n\n          text += t;\n        } else if (t) {\n          if (!t.start) t.start = {\n            row: row,\n            column: column\n          };else t.end = {\n            row: row,\n            column: column\n          };\n        }\n      });\n      var range = editor.getSelectionRange();\n      var end = editor.session.replace(range, text);\n      var tabstopManager = new TabstopManager(editor);\n      var selectionId = editor.inVirtualSelectionMode && editor.selection.index;\n      tabstopManager.addTabstops(tabstops, range.start, end, selectionId);\n    };\n\n    this.insertSnippet = function (editor, snippetText) {\n      var self = this;\n      if (editor.inVirtualSelectionMode) return self.insertSnippetForSelection(editor, snippetText);\n      editor.forEachSelection(function () {\n        self.insertSnippetForSelection(editor, snippetText);\n      }, null, {\n        keepOrder: true\n      });\n      if (editor.tabstopManager) editor.tabstopManager.tabNext();\n    };\n\n    this.$getScope = function (editor) {\n      var scope = editor.session.$mode.$id || \"\";\n      scope = scope.split(\"/\").pop();\n\n      if (scope === \"html\" || scope === \"php\") {\n        if (scope === \"php\" && !editor.session.$mode.inlinePhp) scope = \"html\";\n        var c = editor.getCursorPosition();\n        var state = editor.session.getState(c.row);\n\n        if (typeof state === \"object\") {\n          state = state[0];\n        }\n\n        if (state.substring) {\n          if (state.substring(0, 3) == \"js-\") scope = \"javascript\";else if (state.substring(0, 4) == \"css-\") scope = \"css\";else if (state.substring(0, 4) == \"php-\") scope = \"php\";\n        }\n      }\n\n      return scope;\n    };\n\n    this.getActiveScopes = function (editor) {\n      var scope = this.$getScope(editor);\n      var scopes = [scope];\n      var snippetMap = this.snippetMap;\n\n      if (snippetMap[scope] && snippetMap[scope].includeScopes) {\n        scopes.push.apply(scopes, snippetMap[scope].includeScopes);\n      }\n\n      scopes.push(\"_\");\n      return scopes;\n    };\n\n    this.expandWithTab = function (editor, options) {\n      var self = this;\n      var result = editor.forEachSelection(function () {\n        return self.expandSnippetForSelection(editor, options);\n      }, null, {\n        keepOrder: true\n      });\n      if (result && editor.tabstopManager) editor.tabstopManager.tabNext();\n      return result;\n    };\n\n    this.expandSnippetForSelection = function (editor, options) {\n      var cursor = editor.getCursorPosition();\n      var line = editor.session.getLine(cursor.row);\n      var before = line.substring(0, cursor.column);\n      var after = line.substr(cursor.column);\n      var snippetMap = this.snippetMap;\n      var snippet;\n      this.getActiveScopes(editor).some(function (scope) {\n        var snippets = snippetMap[scope];\n        if (snippets) snippet = this.findMatchingSnippet(snippets, before, after);\n        return !!snippet;\n      }, this);\n      if (!snippet) return false;\n      if (options && options.dryRun) return true;\n      editor.session.doc.removeInLine(cursor.row, cursor.column - snippet.replaceBefore.length, cursor.column + snippet.replaceAfter.length);\n      this.variables.M__ = snippet.matchBefore;\n      this.variables.T__ = snippet.matchAfter;\n      this.insertSnippetForSelection(editor, snippet.content);\n      this.variables.M__ = this.variables.T__ = null;\n      return true;\n    };\n\n    this.findMatchingSnippet = function (snippetList, before, after) {\n      for (var i = snippetList.length; i--;) {\n        var s = snippetList[i];\n        if (s.startRe && !s.startRe.test(before)) continue;\n        if (s.endRe && !s.endRe.test(after)) continue;\n        if (!s.startRe && !s.endRe) continue;\n        s.matchBefore = s.startRe ? s.startRe.exec(before) : [\"\"];\n        s.matchAfter = s.endRe ? s.endRe.exec(after) : [\"\"];\n        s.replaceBefore = s.triggerRe ? s.triggerRe.exec(before)[0] : \"\";\n        s.replaceAfter = s.endTriggerRe ? s.endTriggerRe.exec(after)[0] : \"\";\n        return s;\n      }\n    };\n\n    this.snippetMap = {};\n    this.snippetNameMap = {};\n\n    this.register = function (snippets, scope) {\n      var snippetMap = this.snippetMap;\n      var snippetNameMap = this.snippetNameMap;\n      var self = this;\n      if (!snippets) snippets = [];\n\n      function wrapRegexp(src) {\n        if (src && !/^\\^?\\(.*\\)\\$?$|^\\\\b$/.test(src)) src = \"(?:\" + src + \")\";\n        return src || \"\";\n      }\n\n      function guardedRegexp(re, guard, opening) {\n        re = wrapRegexp(re);\n        guard = wrapRegexp(guard);\n\n        if (opening) {\n          re = guard + re;\n          if (re && re[re.length - 1] != \"$\") re = re + \"$\";\n        } else {\n          re = re + guard;\n          if (re && re[0] != \"^\") re = \"^\" + re;\n        }\n\n        return new RegExp(re);\n      }\n\n      function addSnippet(s) {\n        if (!s.scope) s.scope = scope || \"_\";\n        scope = s.scope;\n\n        if (!snippetMap[scope]) {\n          snippetMap[scope] = [];\n          snippetNameMap[scope] = {};\n        }\n\n        var map = snippetNameMap[scope];\n\n        if (s.name) {\n          var old = map[s.name];\n          if (old) self.unregister(old);\n          map[s.name] = s;\n        }\n\n        snippetMap[scope].push(s);\n        if (s.prefix) s.tabTrigger = s.prefix;\n        if (!s.content && s.body) s.content = Array.isArray(s.body) ? s.body.join(\"\\n\") : s.body;\n\n        if (s.tabTrigger && !s.trigger) {\n          if (!s.guard && /^\\w/.test(s.tabTrigger)) s.guard = \"\\\\b\";\n          s.trigger = lang.escapeRegExp(s.tabTrigger);\n        }\n\n        if (!s.trigger && !s.guard && !s.endTrigger && !s.endGuard) return;\n        s.startRe = guardedRegexp(s.trigger, s.guard, true);\n        s.triggerRe = new RegExp(s.trigger);\n        s.endRe = guardedRegexp(s.endTrigger, s.endGuard, true);\n        s.endTriggerRe = new RegExp(s.endTrigger);\n      }\n\n      if (Array.isArray(snippets)) {\n        snippets.forEach(addSnippet);\n      } else {\n        Object.keys(snippets).forEach(function (key) {\n          addSnippet(snippets[key]);\n        });\n      }\n\n      this._signal(\"registerSnippets\", {\n        scope: scope\n      });\n    };\n\n    this.unregister = function (snippets, scope) {\n      var snippetMap = this.snippetMap;\n      var snippetNameMap = this.snippetNameMap;\n\n      function removeSnippet(s) {\n        var nameMap = snippetNameMap[s.scope || scope];\n\n        if (nameMap && nameMap[s.name]) {\n          delete nameMap[s.name];\n          var map = snippetMap[s.scope || scope];\n          var i = map && map.indexOf(s);\n          if (i >= 0) map.splice(i, 1);\n        }\n      }\n\n      if (snippets.content) removeSnippet(snippets);else if (Array.isArray(snippets)) snippets.forEach(removeSnippet);\n    };\n\n    this.parseSnippetFile = function (str) {\n      str = str.replace(/\\r/g, \"\");\n      var list = [],\n          snippet = {};\n      var re = /^#.*|^({[\\s\\S]*})\\s*$|^(\\S+) (.*)$|^((?:\\n*\\t.*)+)/gm;\n      var m;\n\n      while (m = re.exec(str)) {\n        if (m[1]) {\n          try {\n            snippet = JSON.parse(m[1]);\n            list.push(snippet);\n          } catch (e) {}\n        }\n\n        if (m[4]) {\n          snippet.content = m[4].replace(/^\\t/gm, \"\");\n          list.push(snippet);\n          snippet = {};\n        } else {\n          var key = m[2],\n              val = m[3];\n\n          if (key == \"regex\") {\n            var guardRe = /\\/((?:[^\\/\\\\]|\\\\.)*)|$/g;\n            snippet.guard = guardRe.exec(val)[1];\n            snippet.trigger = guardRe.exec(val)[1];\n            snippet.endTrigger = guardRe.exec(val)[1];\n            snippet.endGuard = guardRe.exec(val)[1];\n          } else if (key == \"snippet\") {\n            snippet.tabTrigger = val.match(/^\\S*/)[0];\n            if (!snippet.name) snippet.name = val;\n          } else if (key) {\n            snippet[key] = val;\n          }\n        }\n      }\n\n      return list;\n    };\n\n    this.getSnippetByName = function (name, editor) {\n      var snippetMap = this.snippetNameMap;\n      var snippet;\n      this.getActiveScopes(editor).some(function (scope) {\n        var snippets = snippetMap[scope];\n        if (snippets) snippet = snippets[name];\n        return !!snippet;\n      }, this);\n      return snippet;\n    };\n  }).call(SnippetManager.prototype);\n\n  var TabstopManager = function (editor) {\n    if (editor.tabstopManager) return editor.tabstopManager;\n    editor.tabstopManager = this;\n    this.$onChange = this.onChange.bind(this);\n    this.$onChangeSelection = lang.delayedCall(this.onChangeSelection.bind(this)).schedule;\n    this.$onChangeSession = this.onChangeSession.bind(this);\n    this.$onAfterExec = this.onAfterExec.bind(this);\n    this.attach(editor);\n  };\n\n  (function () {\n    this.attach = function (editor) {\n      this.index = 0;\n      this.ranges = [];\n      this.tabstops = [];\n      this.$openTabstops = null;\n      this.selectedTabstop = null;\n      this.editor = editor;\n      this.editor.on(\"change\", this.$onChange);\n      this.editor.on(\"changeSelection\", this.$onChangeSelection);\n      this.editor.on(\"changeSession\", this.$onChangeSession);\n      this.editor.commands.on(\"afterExec\", this.$onAfterExec);\n      this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n    };\n\n    this.detach = function () {\n      this.tabstops.forEach(this.removeTabstopMarkers, this);\n      this.ranges = null;\n      this.tabstops = null;\n      this.selectedTabstop = null;\n      this.editor.removeListener(\"change\", this.$onChange);\n      this.editor.removeListener(\"changeSelection\", this.$onChangeSelection);\n      this.editor.removeListener(\"changeSession\", this.$onChangeSession);\n      this.editor.commands.removeListener(\"afterExec\", this.$onAfterExec);\n      this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\n      this.editor.tabstopManager = null;\n      this.editor = null;\n    };\n\n    this.onChange = function (delta) {\n      var isRemove = delta.action[0] == \"r\";\n      var selectedTabstop = this.selectedTabstop || {};\n      var parents = selectedTabstop.parents || {};\n      var tabstops = (this.tabstops || []).slice();\n\n      for (var i = 0; i < tabstops.length; i++) {\n        var ts = tabstops[i];\n        var active = ts == selectedTabstop || parents[ts.index];\n        ts.rangeList.$bias = active ? 0 : 1;\n\n        if (delta.action == \"remove\" && ts !== selectedTabstop) {\n          var parentActive = ts.parents && ts.parents[selectedTabstop.index];\n          var startIndex = ts.rangeList.pointIndex(delta.start, parentActive);\n          startIndex = startIndex < 0 ? -startIndex - 1 : startIndex + 1;\n          var endIndex = ts.rangeList.pointIndex(delta.end, parentActive);\n          endIndex = endIndex < 0 ? -endIndex - 1 : endIndex - 1;\n          var toRemove = ts.rangeList.ranges.slice(startIndex, endIndex);\n\n          for (var j = 0; j < toRemove.length; j++) this.removeRange(toRemove[j]);\n        }\n\n        ts.rangeList.$onChange(delta);\n      }\n\n      var session = this.editor.session;\n      if (!this.$inChange && isRemove && session.getLength() == 1 && !session.getValue()) this.detach();\n    };\n\n    this.updateLinkedFields = function () {\n      var ts = this.selectedTabstop;\n      if (!ts || !ts.hasLinkedRanges || !ts.firstNonLinked) return;\n      this.$inChange = true;\n      var session = this.editor.session;\n      var text = session.getTextRange(ts.firstNonLinked);\n\n      for (var i = 0; i < ts.length; i++) {\n        var range = ts[i];\n        if (!range.linked) continue;\n        var original = range.original;\n        var fmt = exports.snippetManager.tmStrFormat(text, original, this.editor);\n        session.replace(range, fmt);\n      }\n\n      this.$inChange = false;\n    };\n\n    this.onAfterExec = function (e) {\n      if (e.command && !e.command.readOnly) this.updateLinkedFields();\n    };\n\n    this.onChangeSelection = function () {\n      if (!this.editor) return;\n      var lead = this.editor.selection.lead;\n      var anchor = this.editor.selection.anchor;\n      var isEmpty = this.editor.selection.isEmpty();\n\n      for (var i = 0; i < this.ranges.length; i++) {\n        if (this.ranges[i].linked) continue;\n        var containsLead = this.ranges[i].contains(lead.row, lead.column);\n        var containsAnchor = isEmpty || this.ranges[i].contains(anchor.row, anchor.column);\n        if (containsLead && containsAnchor) return;\n      }\n\n      this.detach();\n    };\n\n    this.onChangeSession = function () {\n      this.detach();\n    };\n\n    this.tabNext = function (dir) {\n      var max = this.tabstops.length;\n      var index = this.index + (dir || 1);\n      index = Math.min(Math.max(index, 1), max);\n      if (index == max) index = 0;\n      this.selectTabstop(index);\n      if (index === 0) this.detach();\n    };\n\n    this.selectTabstop = function (index) {\n      this.$openTabstops = null;\n      var ts = this.tabstops[this.index];\n      if (ts) this.addTabstopMarkers(ts);\n      this.index = index;\n      ts = this.tabstops[this.index];\n      if (!ts || !ts.length) return;\n      this.selectedTabstop = ts;\n      var range = ts.firstNonLinked || ts;\n\n      if (!this.editor.inVirtualSelectionMode) {\n        var sel = this.editor.multiSelect;\n        sel.toSingleRange(range.clone());\n\n        for (var i = 0; i < ts.length; i++) {\n          if (ts.hasLinkedRanges && ts[i].linked) continue;\n          sel.addRange(ts[i].clone(), true);\n        }\n\n        if (sel.ranges[0]) sel.addRange(sel.ranges[0].clone());\n      } else {\n        this.editor.selection.setRange(range);\n      }\n\n      this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n      if (this.selectedTabstop && this.selectedTabstop.choices) this.editor.execCommand(\"startAutocomplete\", {\n        matches: this.selectedTabstop.choices\n      });\n    };\n\n    this.addTabstops = function (tabstops, start, end) {\n      var useLink = this.useLink || !this.editor.getOption(\"enableMultiselect\");\n      if (!this.$openTabstops) this.$openTabstops = [];\n\n      if (!tabstops[0]) {\n        var p = Range.fromPoints(end, end);\n        moveRelative(p.start, start);\n        moveRelative(p.end, start);\n        tabstops[0] = [p];\n        tabstops[0].index = 0;\n      }\n\n      var i = this.index;\n      var arg = [i + 1, 0];\n      var ranges = this.ranges;\n      tabstops.forEach(function (ts, index) {\n        var dest = this.$openTabstops[index] || ts;\n\n        for (var i = 0; i < ts.length; i++) {\n          var p = ts[i];\n          var range = Range.fromPoints(p.start, p.end || p.start);\n          movePoint(range.start, start);\n          movePoint(range.end, start);\n          range.original = p;\n          range.tabstop = dest;\n          ranges.push(range);\n          if (dest != ts) dest.unshift(range);else dest[i] = range;\n\n          if (p.fmtString || dest.firstNonLinked && useLink) {\n            range.linked = true;\n            dest.hasLinkedRanges = true;\n          } else if (!dest.firstNonLinked) dest.firstNonLinked = range;\n        }\n\n        if (!dest.firstNonLinked) dest.hasLinkedRanges = false;\n\n        if (dest === ts) {\n          arg.push(dest);\n          this.$openTabstops[index] = dest;\n        }\n\n        this.addTabstopMarkers(dest);\n        dest.rangeList = dest.rangeList || new RangeList();\n        dest.rangeList.$bias = 0;\n        dest.rangeList.addList(dest);\n      }, this);\n\n      if (arg.length > 2) {\n        if (this.tabstops.length) arg.push(arg.splice(2, 1)[0]);\n        this.tabstops.splice.apply(this.tabstops, arg);\n      }\n    };\n\n    this.addTabstopMarkers = function (ts) {\n      var session = this.editor.session;\n      ts.forEach(function (range) {\n        if (!range.markerId) range.markerId = session.addMarker(range, \"ace_snippet-marker\", \"text\");\n      });\n    };\n\n    this.removeTabstopMarkers = function (ts) {\n      var session = this.editor.session;\n      ts.forEach(function (range) {\n        session.removeMarker(range.markerId);\n        range.markerId = null;\n      });\n    };\n\n    this.removeRange = function (range) {\n      var i = range.tabstop.indexOf(range);\n      if (i != -1) range.tabstop.splice(i, 1);\n      i = this.ranges.indexOf(range);\n      if (i != -1) this.ranges.splice(i, 1);\n      i = range.tabstop.rangeList.ranges.indexOf(range);\n      if (i != -1) range.tabstop.splice(i, 1);\n      this.editor.session.removeMarker(range.markerId);\n\n      if (!range.tabstop.length) {\n        i = this.tabstops.indexOf(range.tabstop);\n        if (i != -1) this.tabstops.splice(i, 1);\n        if (!this.tabstops.length) this.detach();\n      }\n    };\n\n    this.keyboardHandler = new HashHandler();\n    this.keyboardHandler.bindKeys({\n      \"Tab\": function (editor) {\n        if (exports.snippetManager && exports.snippetManager.expandWithTab(editor)) return;\n        editor.tabstopManager.tabNext(1);\n        editor.renderer.scrollCursorIntoView();\n      },\n      \"Shift-Tab\": function (editor) {\n        editor.tabstopManager.tabNext(-1);\n        editor.renderer.scrollCursorIntoView();\n      },\n      \"Esc\": function (editor) {\n        editor.tabstopManager.detach();\n      }\n    });\n  }).call(TabstopManager.prototype);\n\n  var movePoint = function (point, diff) {\n    if (point.row == 0) point.column += diff.column;\n    point.row += diff.row;\n  };\n\n  var moveRelative = function (point, start) {\n    if (point.row == start.row) point.column -= start.column;\n    point.row -= start.row;\n  };\n\n  require(\"./lib/dom\").importCssString(\"\\\n.ace_snippet-marker {\\\n    -moz-box-sizing: border-box;\\\n    box-sizing: border-box;\\\n    background: rgba(194, 193, 208, 0.09);\\\n    border: 1px dotted rgba(211, 208, 235, 0.62);\\\n    position: absolute;\\\n}\");\n\n  exports.snippetManager = new SnippetManager();\n\n  var Editor = require(\"./editor\").Editor;\n\n  (function () {\n    this.insertSnippet = function (content, options) {\n      return exports.snippetManager.insertSnippet(this, content, options);\n    };\n\n    this.expandSnippet = function (options) {\n      return exports.snippetManager.expandWithTab(this, options);\n    };\n  }).call(Editor.prototype);\n});\nace.define(\"ace/ext/emmet\", [\"require\", \"exports\", \"module\", \"ace/keyboard/hash_handler\", \"ace/editor\", \"ace/snippets\", \"ace/range\", \"ace/config\", \"resources\", \"resources\", \"tabStops\", \"resources\", \"utils\", \"actions\"], function (require, exports, module) {\n  \"use strict\";\n\n  var HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\n\n  var Editor = require(\"../editor\").Editor;\n\n  var snippetManager = require(\"../snippets\").snippetManager;\n\n  var Range = require(\"../range\").Range;\n\n  var config = require(\"../config\");\n\n  var emmet, emmetPath;\n\n  function AceEmmetEditor() {}\n\n  AceEmmetEditor.prototype = {\n    setupContext: function (editor) {\n      this.ace = editor;\n      this.indentation = editor.session.getTabString();\n      if (!emmet) emmet = window.emmet;\n\n      var resources = emmet.resources || emmet.require(\"resources\");\n\n      resources.setVariable(\"indentation\", this.indentation);\n      this.$syntax = null;\n      this.$syntax = this.getSyntax();\n    },\n    getSelectionRange: function () {\n      var range = this.ace.getSelectionRange();\n      var doc = this.ace.session.doc;\n      return {\n        start: doc.positionToIndex(range.start),\n        end: doc.positionToIndex(range.end)\n      };\n    },\n    createSelection: function (start, end) {\n      var doc = this.ace.session.doc;\n      this.ace.selection.setRange({\n        start: doc.indexToPosition(start),\n        end: doc.indexToPosition(end)\n      });\n    },\n    getCurrentLineRange: function () {\n      var ace = this.ace;\n      var row = ace.getCursorPosition().row;\n      var lineLength = ace.session.getLine(row).length;\n      var index = ace.session.doc.positionToIndex({\n        row: row,\n        column: 0\n      });\n      return {\n        start: index,\n        end: index + lineLength\n      };\n    },\n    getCaretPos: function () {\n      var pos = this.ace.getCursorPosition();\n      return this.ace.session.doc.positionToIndex(pos);\n    },\n    setCaretPos: function (index) {\n      var pos = this.ace.session.doc.indexToPosition(index);\n      this.ace.selection.moveToPosition(pos);\n    },\n    getCurrentLine: function () {\n      var row = this.ace.getCursorPosition().row;\n      return this.ace.session.getLine(row);\n    },\n    replaceContent: function (value, start, end, noIndent) {\n      if (end == null) end = start == null ? this.getContent().length : start;\n      if (start == null) start = 0;\n      var editor = this.ace;\n      var doc = editor.session.doc;\n      var range = Range.fromPoints(doc.indexToPosition(start), doc.indexToPosition(end));\n      editor.session.remove(range);\n      range.end = range.start;\n      value = this.$updateTabstops(value);\n      snippetManager.insertSnippet(editor, value);\n    },\n    getContent: function () {\n      return this.ace.getValue();\n    },\n    getSyntax: function () {\n      if (this.$syntax) return this.$syntax;\n      var syntax = this.ace.session.$modeId.split(\"/\").pop();\n\n      if (syntax == \"html\" || syntax == \"php\") {\n        var cursor = this.ace.getCursorPosition();\n        var state = this.ace.session.getState(cursor.row);\n        if (typeof state != \"string\") state = state[0];\n\n        if (state) {\n          state = state.split(\"-\");\n          if (state.length > 1) syntax = state[0];else if (syntax == \"php\") syntax = \"html\";\n        }\n      }\n\n      return syntax;\n    },\n    getProfileName: function () {\n      var resources = emmet.resources || emmet.require(\"resources\");\n\n      switch (this.getSyntax()) {\n        case \"css\":\n          return \"css\";\n\n        case \"xml\":\n        case \"xsl\":\n          return \"xml\";\n\n        case \"html\":\n          var profile = resources.getVariable(\"profile\");\n          if (!profile) profile = this.ace.session.getLines(0, 2).join(\"\").search(/<!DOCTYPE[^>]+XHTML/i) != -1 ? \"xhtml\" : \"html\";\n          return profile;\n\n        default:\n          var mode = this.ace.session.$mode;\n          return mode.emmetConfig && mode.emmetConfig.profile || \"xhtml\";\n      }\n    },\n    prompt: function (title) {\n      return prompt(title); // eslint-disable-line no-alert\n    },\n    getSelection: function () {\n      return this.ace.session.getTextRange();\n    },\n    getFilePath: function () {\n      return \"\";\n    },\n    $updateTabstops: function (value) {\n      var base = 1000;\n      var zeroBase = 0;\n      var lastZero = null;\n\n      var ts = emmet.tabStops || emmet.require('tabStops');\n\n      var resources = emmet.resources || emmet.require(\"resources\");\n\n      var settings = resources.getVocabulary(\"user\");\n      var tabstopOptions = {\n        tabstop: function (data) {\n          var group = parseInt(data.group, 10);\n          var isZero = group === 0;\n          if (isZero) group = ++zeroBase;else group += base;\n          var placeholder = data.placeholder;\n\n          if (placeholder) {\n            placeholder = ts.processText(placeholder, tabstopOptions);\n          }\n\n          var result = '${' + group + (placeholder ? ':' + placeholder : '') + '}';\n\n          if (isZero) {\n            lastZero = [data.start, result];\n          }\n\n          return result;\n        },\n        escape: function (ch) {\n          if (ch == '$') return '\\\\$';\n          if (ch == '\\\\') return '\\\\\\\\';\n          return ch;\n        }\n      };\n      value = ts.processText(value, tabstopOptions);\n\n      if (settings.variables['insert_final_tabstop'] && !/\\$\\{0\\}$/.test(value)) {\n        value += '${0}';\n      } else if (lastZero) {\n        var common = emmet.utils ? emmet.utils.common : emmet.require('utils');\n        value = common.replaceSubstring(value, '${0}', lastZero[0], lastZero[1]);\n      }\n\n      return value;\n    }\n  };\n  var keymap = {\n    expand_abbreviation: {\n      \"mac\": \"ctrl+alt+e\",\n      \"win\": \"alt+e\"\n    },\n    match_pair_outward: {\n      \"mac\": \"ctrl+d\",\n      \"win\": \"ctrl+,\"\n    },\n    match_pair_inward: {\n      \"mac\": \"ctrl+j\",\n      \"win\": \"ctrl+shift+0\"\n    },\n    matching_pair: {\n      \"mac\": \"ctrl+alt+j\",\n      \"win\": \"alt+j\"\n    },\n    next_edit_point: \"alt+right\",\n    prev_edit_point: \"alt+left\",\n    toggle_comment: {\n      \"mac\": \"command+/\",\n      \"win\": \"ctrl+/\"\n    },\n    split_join_tag: {\n      \"mac\": \"shift+command+'\",\n      \"win\": \"shift+ctrl+`\"\n    },\n    remove_tag: {\n      \"mac\": \"command+'\",\n      \"win\": \"shift+ctrl+;\"\n    },\n    evaluate_math_expression: {\n      \"mac\": \"shift+command+y\",\n      \"win\": \"shift+ctrl+y\"\n    },\n    increment_number_by_1: \"ctrl+up\",\n    decrement_number_by_1: \"ctrl+down\",\n    increment_number_by_01: \"alt+up\",\n    decrement_number_by_01: \"alt+down\",\n    increment_number_by_10: {\n      \"mac\": \"alt+command+up\",\n      \"win\": \"shift+alt+up\"\n    },\n    decrement_number_by_10: {\n      \"mac\": \"alt+command+down\",\n      \"win\": \"shift+alt+down\"\n    },\n    select_next_item: {\n      \"mac\": \"shift+command+.\",\n      \"win\": \"shift+ctrl+.\"\n    },\n    select_previous_item: {\n      \"mac\": \"shift+command+,\",\n      \"win\": \"shift+ctrl+,\"\n    },\n    reflect_css_value: {\n      \"mac\": \"shift+command+r\",\n      \"win\": \"shift+ctrl+r\"\n    },\n    encode_decode_data_url: {\n      \"mac\": \"shift+ctrl+d\",\n      \"win\": \"ctrl+'\"\n    },\n    expand_abbreviation_with_tab: \"Tab\",\n    wrap_with_abbreviation: {\n      \"mac\": \"shift+ctrl+a\",\n      \"win\": \"shift+ctrl+a\"\n    }\n  };\n  var editorProxy = new AceEmmetEditor();\n  exports.commands = new HashHandler();\n\n  exports.runEmmetCommand = function runEmmetCommand(editor) {\n    if (this.action == \"expand_abbreviation_with_tab\") {\n      if (!editor.selection.isEmpty()) return false;\n      var pos = editor.selection.lead;\n      var token = editor.session.getTokenAt(pos.row, pos.column);\n      if (token && /\\btag\\b/.test(token.type)) return false;\n    }\n\n    try {\n      editorProxy.setupContext(editor);\n\n      var actions = emmet.actions || emmet.require(\"actions\");\n\n      if (this.action == \"wrap_with_abbreviation\") {\n        return setTimeout(function () {\n          actions.run(\"wrap_with_abbreviation\", editorProxy);\n        }, 0);\n      }\n\n      var result = actions.run(this.action, editorProxy);\n    } catch (e) {\n      if (!emmet) {\n        var loading = exports.load(runEmmetCommand.bind(this, editor));\n        if (this.action == \"expand_abbreviation_with_tab\") return false;\n        return loading;\n      }\n\n      editor._signal(\"changeStatus\", typeof e == \"string\" ? e : e.message);\n\n      config.warn(e);\n      result = false;\n    }\n\n    return result;\n  };\n\n  for (var command in keymap) {\n    exports.commands.addCommand({\n      name: \"emmet:\" + command,\n      action: command,\n      bindKey: keymap[command],\n      exec: exports.runEmmetCommand,\n      multiSelectAction: \"forEach\"\n    });\n  }\n\n  exports.updateCommands = function (editor, enabled) {\n    if (enabled) {\n      editor.keyBinding.addKeyboardHandler(exports.commands);\n    } else {\n      editor.keyBinding.removeKeyboardHandler(exports.commands);\n    }\n  };\n\n  exports.isSupportedMode = function (mode) {\n    if (!mode) return false;\n    if (mode.emmetConfig) return true;\n    var id = mode.$id || mode;\n    return /css|less|scss|sass|stylus|html|php|twig|ejs|handlebars/.test(id);\n  };\n\n  exports.isAvailable = function (editor, command) {\n    if (/(evaluate_math_expression|expand_abbreviation)$/.test(command)) return true;\n    var mode = editor.session.$mode;\n    var isSupported = exports.isSupportedMode(mode);\n\n    if (isSupported && mode.$modes) {\n      try {\n        editorProxy.setupContext(editor);\n        if (/js|php/.test(editorProxy.getSyntax())) isSupported = false;\n      } catch (e) {}\n    }\n\n    return isSupported;\n  };\n\n  var onChangeMode = function (e, target) {\n    var editor = target;\n    if (!editor) return;\n    var enabled = exports.isSupportedMode(editor.session.$mode);\n    if (e.enableEmmet === false) enabled = false;\n    if (enabled) exports.load();\n    exports.updateCommands(editor, enabled);\n  };\n\n  exports.load = function (cb) {\n    if (typeof emmetPath !== \"string\") {\n      config.warn(\"script for emmet-core is not loaded\");\n      return false;\n    }\n\n    config.loadModule(emmetPath, function () {\n      emmetPath = null;\n      cb && cb();\n    });\n    return true;\n  };\n\n  exports.AceEmmetEditor = AceEmmetEditor;\n  config.defineOptions(Editor.prototype, \"editor\", {\n    enableEmmet: {\n      set: function (val) {\n        this[val ? \"on\" : \"removeListener\"](\"changeMode\", onChangeMode);\n        onChangeMode({\n          enableEmmet: !!val\n        }, this);\n      },\n      value: true\n    }\n  });\n\n  exports.setCore = function (e) {\n    if (typeof e == \"string\") emmetPath = e;else emmet = e;\n  };\n});\n\n(function () {\n  ace.require([\"ace/ext/emmet\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/ext-emmet.js"],"names":["ace","define","require","exports","module","oop","EventEmitter","lang","Range","RangeList","HashHandler","Tokenizer","clipboard","VARIABLES","CURRENT_WORD","editor","session","getTextRange","getWordRange","SELECTION","name","indentation","text","replace","CURRENT_LINE","getLine","getCursorPosition","row","PREV_LINE","LINE_INDEX","LINE_NUMBER","SOFT_TABS","getUseSoftTabs","TAB_SIZE","getTabSize","CLIPBOARD","getText","FILENAME","exec","FILEPATH","FILENAME_BASE","DIRECTORY","WORKSPACE_NAME","FULLNAME","BLOCK_COMMENT_START","mode","$mode","blockComment","start","BLOCK_COMMENT_END","end","LINE_COMMENT","lineCommentStart","CURRENT_YEAR","date","bind","year","CURRENT_YEAR_SHORT","CURRENT_MONTH","month","CURRENT_MONTH_NAME","CURRENT_MONTH_NAME_SHORT","CURRENT_DATE","day","CURRENT_DAY_NAME","weekday","CURRENT_DAY_NAME_SHORT","CURRENT_HOUR","hour","hour12","CURRENT_MINUTE","minute","CURRENT_SECOND","second","SELECTED_TEXT","dateFormat","str","Date","toLocaleString","length","SnippetManager","snippetMap","snippetNameMap","implement","getTokenizer","$tokenizer","createTokenizer","TabstopToken","substr","test","tabstopId","parseInt","escape","ch","formatMatcher","regex","onMatch","val","state","stack","ts","fmtString","guard","slice","flag","next","indexOf","shift","t","unshift","token","merge","snippetVar","choices","operator","split","formatString","expectElse","ifEnd","elseEnd","changeCase","local","formatStringVar","formatFunction","tokenizeTmSnippet","startState","getLineTokens","tokens","map","x","value","getVariableValue","variables","__","hasOwnProperty","tmStrFormat","fmt","re","RegExp","fmtTokens","_self","formatted","oldArgs","call","arguments","fmtParts","resolveVariables","gChangeCase","i","toUpperCase","toLowerCase","join","tmFormatFunction","snippet","result","afterNewLine","push","j","gotoNext","i1","insertSnippetForSelection","snippetText","cursor","line","tabString","getTabString","indentString","match","column","tabstops","forEach","p","id","index","parents","isNested","some","expanding","copyValue","copy","lastIndexOf","Object","keys","parentId","splice","apply","Math","max","concat","lines","range","getSelectionRange","tabstopManager","TabstopManager","selectionId","inVirtualSelectionMode","selection","addTabstops","insertSnippet","self","forEachSelection","keepOrder","tabNext","$getScope","scope","$id","pop","inlinePhp","c","getState","substring","getActiveScopes","scopes","includeScopes","expandWithTab","options","expandSnippetForSelection","before","after","snippets","findMatchingSnippet","dryRun","doc","removeInLine","replaceBefore","replaceAfter","M__","matchBefore","T__","matchAfter","content","snippetList","s","startRe","endRe","triggerRe","endTriggerRe","register","wrapRegexp","src","guardedRegexp","opening","addSnippet","old","unregister","prefix","tabTrigger","body","Array","isArray","trigger","escapeRegExp","endTrigger","endGuard","key","_signal","removeSnippet","nameMap","parseSnippetFile","list","m","JSON","parse","e","guardRe","getSnippetByName","prototype","$onChange","onChange","$onChangeSelection","delayedCall","onChangeSelection","schedule","$onChangeSession","onChangeSession","$onAfterExec","onAfterExec","attach","ranges","$openTabstops","selectedTabstop","on","commands","keyBinding","addKeyboardHandler","keyboardHandler","detach","removeTabstopMarkers","removeListener","removeKeyboardHandler","delta","isRemove","action","active","rangeList","$bias","parentActive","startIndex","pointIndex","endIndex","toRemove","removeRange","$inChange","getLength","getValue","updateLinkedFields","hasLinkedRanges","firstNonLinked","linked","original","snippetManager","command","readOnly","lead","anchor","isEmpty","containsLead","contains","containsAnchor","dir","min","selectTabstop","addTabstopMarkers","sel","multiSelect","toSingleRange","clone","addRange","setRange","execCommand","matches","useLink","getOption","fromPoints","moveRelative","arg","dest","movePoint","tabstop","addList","markerId","addMarker","removeMarker","bindKeys","renderer","scrollCursorIntoView","point","diff","importCssString","Editor","expandSnippet","config","emmet","emmetPath","AceEmmetEditor","setupContext","window","resources","setVariable","$syntax","getSyntax","positionToIndex","createSelection","indexToPosition","getCurrentLineRange","lineLength","getCaretPos","pos","setCaretPos","moveToPosition","getCurrentLine","replaceContent","noIndent","getContent","remove","$updateTabstops","syntax","$modeId","getProfileName","profile","getVariable","getLines","search","emmetConfig","prompt","title","getSelection","getFilePath","base","zeroBase","lastZero","tabStops","settings","getVocabulary","tabstopOptions","data","group","isZero","placeholder","processText","common","utils","replaceSubstring","keymap","expand_abbreviation","match_pair_outward","match_pair_inward","matching_pair","next_edit_point","prev_edit_point","toggle_comment","split_join_tag","remove_tag","evaluate_math_expression","increment_number_by_1","decrement_number_by_1","increment_number_by_01","decrement_number_by_01","increment_number_by_10","decrement_number_by_10","select_next_item","select_previous_item","reflect_css_value","encode_decode_data_url","expand_abbreviation_with_tab","wrap_with_abbreviation","editorProxy","runEmmetCommand","getTokenAt","type","actions","setTimeout","run","loading","load","message","warn","addCommand","bindKey","multiSelectAction","updateCommands","enabled","isSupportedMode","isAvailable","isSupported","$modes","onChangeMode","target","enableEmmet","cb","loadModule","defineOptions","set","setCore"],"mappings":"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","sourcesContent":["ace.define(\"ace/snippets\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/event_emitter\",\"ace/lib/lang\",\"ace/range\",\"ace/range_list\",\"ace/keyboard/hash_handler\",\"ace/tokenizer\",\"ace/clipboard\",\"ace/lib/dom\",\"ace/editor\"], function(require, exports, module) {\n\"use strict\";\nvar oop = require(\"./lib/oop\");\nvar EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\nvar lang = require(\"./lib/lang\");\nvar Range = require(\"./range\").Range;\nvar RangeList = require(\"./range_list\").RangeList;\nvar HashHandler = require(\"./keyboard/hash_handler\").HashHandler;\nvar Tokenizer = require(\"./tokenizer\").Tokenizer;\nvar clipboard = require(\"./clipboard\");\n\nvar VARIABLES = {\n    CURRENT_WORD: function(editor) {\n        return editor.session.getTextRange(editor.session.getWordRange());\n    },\n    SELECTION: function(editor, name, indentation) {\n        var text = editor.session.getTextRange();\n        if (indentation)\n            return text.replace(/\\n\\r?([ \\t]*\\S)/g, \"\\n\" + indentation + \"$1\");\n        return text;\n    },\n    CURRENT_LINE: function(editor) {\n        return editor.session.getLine(editor.getCursorPosition().row);\n    },\n    PREV_LINE: function(editor) {\n        return editor.session.getLine(editor.getCursorPosition().row - 1);\n    },\n    LINE_INDEX: function(editor) {\n        return editor.getCursorPosition().row;\n    },\n    LINE_NUMBER: function(editor) {\n        return editor.getCursorPosition().row + 1;\n    },\n    SOFT_TABS: function(editor) {\n        return editor.session.getUseSoftTabs() ? \"YES\" : \"NO\";\n    },\n    TAB_SIZE: function(editor) {\n        return editor.session.getTabSize();\n    },\n    CLIPBOARD: function(editor) {\n        return clipboard.getText && clipboard.getText();\n    },\n    FILENAME: function(editor) {\n        return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0];\n    },\n    FILENAME_BASE: function(editor) {\n        return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0].replace(/\\.[^.]*$/, \"\");\n    },\n    DIRECTORY: function(editor) {\n        return this.FILEPATH(editor).replace(/[^/\\\\]*$/, \"\");\n    },\n    FILEPATH: function(editor) { return \"/not implemented.txt\"; },\n    WORKSPACE_NAME: function() { return \"Unknown\"; },\n    FULLNAME: function() { return \"Unknown\"; },\n    BLOCK_COMMENT_START: function(editor) {\n        var mode = editor.session.$mode || {};\n        return mode.blockComment && mode.blockComment.start || \"\";\n    },\n    BLOCK_COMMENT_END: function(editor) {\n        var mode = editor.session.$mode || {};\n        return mode.blockComment && mode.blockComment.end || \"\";\n    },\n    LINE_COMMENT: function(editor) {\n        var mode = editor.session.$mode || {};\n        return mode.lineCommentStart || \"\";\n    },\n    CURRENT_YEAR: date.bind(null, {year: \"numeric\"}),\n    CURRENT_YEAR_SHORT: date.bind(null, {year: \"2-digit\"}),\n    CURRENT_MONTH: date.bind(null, {month: \"numeric\"}),\n    CURRENT_MONTH_NAME: date.bind(null, {month: \"long\"}),\n    CURRENT_MONTH_NAME_SHORT: date.bind(null, {month: \"short\"}),\n    CURRENT_DATE: date.bind(null, {day: \"2-digit\"}),\n    CURRENT_DAY_NAME: date.bind(null, {weekday: \"long\"}),\n    CURRENT_DAY_NAME_SHORT: date.bind(null, {weekday: \"short\"}),\n    CURRENT_HOUR: date.bind(null, {hour: \"2-digit\", hour12: false}),\n    CURRENT_MINUTE: date.bind(null, {minute: \"2-digit\"}),\n    CURRENT_SECOND: date.bind(null, {second: \"2-digit\"})\n};\n\nVARIABLES.SELECTED_TEXT = VARIABLES.SELECTION;\n\nfunction date(dateFormat) {\n    var str = new Date().toLocaleString(\"en-us\", dateFormat);\n    return str.length == 1 ? \"0\" + str : str;\n}\n\nvar SnippetManager = function() {\n    this.snippetMap = {};\n    this.snippetNameMap = {};\n};\n\n(function() {\n    oop.implement(this, EventEmitter);\n    \n    this.getTokenizer = function() {\n        return SnippetManager.$tokenizer || this.createTokenizer();\n    };\n    \n    this.createTokenizer = function() {\n        function TabstopToken(str) {\n            str = str.substr(1);\n            if (/^\\d+$/.test(str))\n                return [{tabstopId: parseInt(str, 10)}];\n            return [{text: str}];\n        }\n        function escape(ch) {\n            return \"(?:[^\\\\\\\\\" + ch + \"]|\\\\\\\\.)\";\n        }\n        var formatMatcher = {\n            regex: \"/(\" + escape(\"/\") + \"+)/\", \n            onMatch: function(val, state, stack) {\n                var ts = stack[0];\n                ts.fmtString = true;\n                ts.guard = val.slice(1, -1);\n                ts.flag = \"\";\n                return \"\";\n            },\n            next: \"formatString\"\n        };\n        \n        SnippetManager.$tokenizer = new Tokenizer({\n            start: [\n                {regex: /\\\\./, onMatch: function(val, state, stack) {\n                    var ch = val[1];\n                    if (ch == \"}\" && stack.length) {\n                        val = ch;\n                    } else if (\"`$\\\\\".indexOf(ch) != -1) {\n                        val = ch;\n                    }\n                    return [val];\n                }},\n                {regex: /}/, onMatch: function(val, state, stack) {\n                    return [stack.length ? stack.shift() : val];\n                }},\n                {regex: /\\$(?:\\d+|\\w+)/, onMatch: TabstopToken},\n                {regex: /\\$\\{[\\dA-Z_a-z]+/, onMatch: function(str, state, stack) {\n                    var t = TabstopToken(str.substr(1));\n                    stack.unshift(t[0]);\n                    return t;\n                }, next: \"snippetVar\"},\n                {regex: /\\n/, token: \"newline\", merge: false}\n            ],\n            snippetVar: [\n                {regex: \"\\\\|\" + escape(\"\\\\|\") + \"*\\\\|\", onMatch: function(val, state, stack) {\n                    var choices = val.slice(1, -1).replace(/\\\\[,|\\\\]|,/g, function(operator) {\n                        return operator.length == 2 ? operator[1] : \"\\x00\";\n                    }).split(\"\\x00\");\n                    stack[0].choices = choices;\n                    return [choices[0]];\n                }, next: \"start\"},\n                formatMatcher,\n                {regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\", token: \"\", next: \"start\"}\n            ],\n            formatString: [\n                {regex: /:/, onMatch: function(val, state, stack) {\n                    if (stack.length && stack[0].expectElse) {\n                        stack[0].expectElse = false;\n                        stack[0].ifEnd = {elseEnd: stack[0]};\n                        return [stack[0].ifEnd];\n                    }\n                    return \":\";\n                }},\n                {regex: /\\\\./, onMatch: function(val, state, stack) {\n                    var ch = val[1];\n                    if (ch == \"}\" && stack.length)\n                        val = ch;\n                    else if (\"`$\\\\\".indexOf(ch) != -1)\n                        val = ch;\n                    else if (ch == \"n\")\n                        val = \"\\n\";\n                    else if (ch == \"t\")\n                        val = \"\\t\";\n                    else if (\"ulULE\".indexOf(ch) != -1)\n                        val = {changeCase: ch, local: ch > \"a\"};\n                    return [val];\n                }},\n                {regex: \"/\\\\w*}\", onMatch: function(val, state, stack) {\n                    var next = stack.shift();\n                    if (next)\n                        next.flag = val.slice(1, -1);\n                    this.next = next && next.tabstopId ? \"start\" : \"\";\n                    return [next || val];\n                }, next: \"start\"},\n                {regex: /\\$(?:\\d+|\\w+)/, onMatch: function(val, state, stack) {\n                    return [{text: val.slice(1)}];\n                }},\n                {regex: /\\${\\w+/, onMatch: function(val, state, stack) {\n                    var token = {text: val.slice(2)};\n                    stack.unshift(token);\n                    return [token];\n                }, next: \"formatStringVar\"},\n                {regex: /\\n/, token: \"newline\", merge: false},\n                {regex: /}/, onMatch: function(val, state, stack) {\n                    var next = stack.shift();\n                    this.next = next && next.tabstopId ? \"start\" : \"\";\n                    return [next || val];\n                }, next: \"start\"}\n            ],\n            formatStringVar: [\n                {regex: /:\\/\\w+}/, onMatch: function(val, state, stack) {\n                    var ts = stack[0];\n                    ts.formatFunction = val.slice(2, -1);\n                    return [stack.shift()];\n                }, next: \"formatString\"},\n                formatMatcher,\n                {regex: /:[\\?\\-+]?/, onMatch: function(val, state, stack) {\n                    if (val[1] == \"+\")\n                        stack[0].ifEnd = stack[0];\n                    if (val[1] == \"?\")\n                        stack[0].expectElse = true;\n                }, next: \"formatString\"},\n                {regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\", token: \"\", next: \"formatString\"}\n            ]\n        });\n        return SnippetManager.$tokenizer;\n    };\n\n    this.tokenizeTmSnippet = function(str, startState) {\n        return this.getTokenizer().getLineTokens(str, startState).tokens.map(function(x) {\n            return x.value || x;\n        });\n    };\n    \n    this.getVariableValue = function(editor, name, indentation) {\n        if (/^\\d+$/.test(name))\n            return (this.variables.__ || {})[name] || \"\";\n        if (/^[A-Z]\\d+$/.test(name))\n            return (this.variables[name[0] + \"__\"] || {})[name.substr(1)] || \"\";\n        \n        name = name.replace(/^TM_/, \"\");\n        if (!this.variables.hasOwnProperty(name))\n            return \"\";\n        var value = this.variables[name];\n        if (typeof value == \"function\")\n            value = this.variables[name](editor, name, indentation);\n        return value == null ? \"\" : value;\n    };\n    \n    this.variables = VARIABLES;\n    this.tmStrFormat = function(str, ch, editor) {\n        if (!ch.fmt) return str;\n        var flag = ch.flag || \"\";\n        var re = ch.guard;\n        re = new RegExp(re, flag.replace(/[^gim]/g, \"\"));\n        var fmtTokens = typeof ch.fmt == \"string\" ? this.tokenizeTmSnippet(ch.fmt, \"formatString\") : ch.fmt;\n        var _self = this;\n        var formatted = str.replace(re, function() {\n            var oldArgs = _self.variables.__;\n            _self.variables.__ = [].slice.call(arguments);\n            var fmtParts = _self.resolveVariables(fmtTokens, editor);\n            var gChangeCase = \"E\";\n            for (var i  = 0; i < fmtParts.length; i++) {\n                var ch = fmtParts[i];\n                if (typeof ch == \"object\") {\n                    fmtParts[i] = \"\";\n                    if (ch.changeCase && ch.local) {\n                        var next = fmtParts[i + 1];\n                        if (next && typeof next == \"string\") {\n                            if (ch.changeCase == \"u\")\n                                fmtParts[i] = next[0].toUpperCase();\n                            else\n                                fmtParts[i] = next[0].toLowerCase();\n                            fmtParts[i + 1] = next.substr(1);\n                        }\n                    } else if (ch.changeCase) {\n                        gChangeCase = ch.changeCase;\n                    }\n                } else if (gChangeCase == \"U\") {\n                    fmtParts[i] = ch.toUpperCase();\n                } else if (gChangeCase == \"L\") {\n                    fmtParts[i] = ch.toLowerCase();\n                }\n            }\n            _self.variables.__ = oldArgs;\n            return fmtParts.join(\"\");\n        });\n        return formatted;\n    };\n    \n    this.tmFormatFunction = function(str, ch, editor) {\n        if (ch.formatFunction == \"upcase\")\n            return str.toUpperCase();\n        if (ch.formatFunction == \"downcase\")\n            return str.toLowerCase();\n        return str;\n    };\n\n    this.resolveVariables = function(snippet, editor) {\n        var result = [];\n        var indentation = \"\";\n        var afterNewLine = true;\n        for (var i = 0; i < snippet.length; i++) {\n            var ch = snippet[i];\n            if (typeof ch == \"string\") {\n                result.push(ch);\n                if (ch == \"\\n\") {\n                    afterNewLine = true;\n                    indentation = \"\";\n                }\n                else if (afterNewLine) {\n                    indentation = /^\\t*/.exec(ch)[0];\n                    afterNewLine = /\\S/.test(ch);\n                }\n                continue;\n            }\n            if (!ch)  continue;\n            afterNewLine = false;\n            \n            if (ch.fmtString) {\n                var j = snippet.indexOf(ch, i + 1);\n                if (j == -1) j = snippet.length;\n                ch.fmt = snippet.slice(i + 1, j);\n                i = j;\n            }\n            \n            if (ch.text) {\n                var value = this.getVariableValue(editor, ch.text, indentation) + \"\";\n                if (ch.fmtString)\n                    value = this.tmStrFormat(value, ch, editor);\n                if (ch.formatFunction)\n                    value = this.tmFormatFunction(value, ch, editor);\n                \n                if (value && !ch.ifEnd) {\n                    result.push(value);\n                    gotoNext(ch);\n                } else if (!value && ch.ifEnd) {\n                    gotoNext(ch.ifEnd);\n                }\n            } else if (ch.elseEnd) {\n                gotoNext(ch.elseEnd);\n            } else if (ch.tabstopId != null) {\n                result.push(ch);\n            } else if (ch.changeCase != null) {\n                result.push(ch);\n            }\n        }\n        function gotoNext(ch) {\n            var i1 = snippet.indexOf(ch, i + 1);\n            if (i1 != -1)\n                i = i1;\n        }\n        return result;\n    };\n\n    this.insertSnippetForSelection = function(editor, snippetText) {\n        var cursor = editor.getCursorPosition();\n        var line = editor.session.getLine(cursor.row);\n        var tabString = editor.session.getTabString();\n        var indentString = line.match(/^\\s*/)[0];\n        \n        if (cursor.column < indentString.length)\n            indentString = indentString.slice(0, cursor.column);\n\n        snippetText = snippetText.replace(/\\r/g, \"\");\n        var tokens = this.tokenizeTmSnippet(snippetText);\n        tokens = this.resolveVariables(tokens, editor);\n        tokens = tokens.map(function(x) {\n            if (x == \"\\n\")\n                return x + indentString;\n            if (typeof x == \"string\")\n                return x.replace(/\\t/g, tabString);\n            return x;\n        });\n        var tabstops = [];\n        tokens.forEach(function(p, i) {\n            if (typeof p != \"object\")\n                return;\n            var id = p.tabstopId;\n            var ts = tabstops[id];\n            if (!ts) {\n                ts = tabstops[id] = [];\n                ts.index = id;\n                ts.value = \"\";\n                ts.parents = {};\n            }\n            if (ts.indexOf(p) !== -1)\n                return;\n            if (p.choices && !ts.choices)\n                ts.choices = p.choices;\n            ts.push(p);\n            var i1 = tokens.indexOf(p, i + 1);\n            if (i1 === -1)\n                return;\n\n            var value = tokens.slice(i + 1, i1);\n            var isNested = value.some(function(t) {return typeof t === \"object\";});\n            if (isNested && !ts.value) {\n                ts.value = value;\n            } else if (value.length && (!ts.value || typeof ts.value !== \"string\")) {\n                ts.value = value.join(\"\");\n            }\n        });\n        tabstops.forEach(function(ts) {ts.length = 0;});\n        var expanding = {};\n        function copyValue(val) {\n            var copy = [];\n            for (var i = 0; i < val.length; i++) {\n                var p = val[i];\n                if (typeof p == \"object\") {\n                    if (expanding[p.tabstopId])\n                        continue;\n                    var j = val.lastIndexOf(p, i - 1);\n                    p = copy[j] || {tabstopId: p.tabstopId};\n                }\n                copy[i] = p;\n            }\n            return copy;\n        }\n        for (var i = 0; i < tokens.length; i++) {\n            var p = tokens[i];\n            if (typeof p != \"object\")\n                continue;\n            var id = p.tabstopId;\n            var ts = tabstops[id];\n            var i1 = tokens.indexOf(p, i + 1);\n            if (expanding[id]) {\n                if (expanding[id] === p) {\n                    delete expanding[id];\n                    Object.keys(expanding).forEach(function(parentId) {\n                        ts.parents[parentId] = true;\n                    });\n                }\n                continue;\n            }\n            expanding[id] = p;\n            var value = ts.value;\n            if (typeof value !== \"string\")\n                value = copyValue(value);\n            else if (p.fmt)\n                value = this.tmStrFormat(value, p, editor);\n            tokens.splice.apply(tokens, [i + 1, Math.max(0, i1 - i)].concat(value, p));\n\n            if (ts.indexOf(p) === -1)\n                ts.push(p);\n        }\n        var row = 0, column = 0;\n        var text = \"\";\n        tokens.forEach(function(t) {\n            if (typeof t === \"string\") {\n                var lines = t.split(\"\\n\");\n                if (lines.length > 1){\n                    column = lines[lines.length - 1].length;\n                    row += lines.length - 1;\n                } else\n                    column += t.length;\n                text += t;\n            } else if (t) {\n                if (!t.start)\n                    t.start = {row: row, column: column};\n                else\n                    t.end = {row: row, column: column};\n            }\n        });\n        var range = editor.getSelectionRange();\n        var end = editor.session.replace(range, text);\n\n        var tabstopManager = new TabstopManager(editor);\n        var selectionId = editor.inVirtualSelectionMode && editor.selection.index;\n        tabstopManager.addTabstops(tabstops, range.start, end, selectionId);\n    };\n    \n    this.insertSnippet = function(editor, snippetText) {\n        var self = this;\n        if (editor.inVirtualSelectionMode)\n            return self.insertSnippetForSelection(editor, snippetText);\n        \n        editor.forEachSelection(function() {\n            self.insertSnippetForSelection(editor, snippetText);\n        }, null, {keepOrder: true});\n        \n        if (editor.tabstopManager)\n            editor.tabstopManager.tabNext();\n    };\n\n    this.$getScope = function(editor) {\n        var scope = editor.session.$mode.$id || \"\";\n        scope = scope.split(\"/\").pop();\n        if (scope === \"html\" || scope === \"php\") {\n            if (scope === \"php\" && !editor.session.$mode.inlinePhp) \n                scope = \"html\";\n            var c = editor.getCursorPosition();\n            var state = editor.session.getState(c.row);\n            if (typeof state === \"object\") {\n                state = state[0];\n            }\n            if (state.substring) {\n                if (state.substring(0, 3) == \"js-\")\n                    scope = \"javascript\";\n                else if (state.substring(0, 4) == \"css-\")\n                    scope = \"css\";\n                else if (state.substring(0, 4) == \"php-\")\n                    scope = \"php\";\n            }\n        }\n        \n        return scope;\n    };\n\n    this.getActiveScopes = function(editor) {\n        var scope = this.$getScope(editor);\n        var scopes = [scope];\n        var snippetMap = this.snippetMap;\n        if (snippetMap[scope] && snippetMap[scope].includeScopes) {\n            scopes.push.apply(scopes, snippetMap[scope].includeScopes);\n        }\n        scopes.push(\"_\");\n        return scopes;\n    };\n\n    this.expandWithTab = function(editor, options) {\n        var self = this;\n        var result = editor.forEachSelection(function() {\n            return self.expandSnippetForSelection(editor, options);\n        }, null, {keepOrder: true});\n        if (result && editor.tabstopManager)\n            editor.tabstopManager.tabNext();\n        return result;\n    };\n    \n    this.expandSnippetForSelection = function(editor, options) {\n        var cursor = editor.getCursorPosition();\n        var line = editor.session.getLine(cursor.row);\n        var before = line.substring(0, cursor.column);\n        var after = line.substr(cursor.column);\n\n        var snippetMap = this.snippetMap;\n        var snippet;\n        this.getActiveScopes(editor).some(function(scope) {\n            var snippets = snippetMap[scope];\n            if (snippets)\n                snippet = this.findMatchingSnippet(snippets, before, after);\n            return !!snippet;\n        }, this);\n        if (!snippet)\n            return false;\n        if (options && options.dryRun)\n            return true;\n        editor.session.doc.removeInLine(cursor.row,\n            cursor.column - snippet.replaceBefore.length,\n            cursor.column + snippet.replaceAfter.length\n        );\n\n        this.variables.M__ = snippet.matchBefore;\n        this.variables.T__ = snippet.matchAfter;\n        this.insertSnippetForSelection(editor, snippet.content);\n\n        this.variables.M__ = this.variables.T__ = null;\n        return true;\n    };\n\n    this.findMatchingSnippet = function(snippetList, before, after) {\n        for (var i = snippetList.length; i--;) {\n            var s = snippetList[i];\n            if (s.startRe && !s.startRe.test(before))\n                continue;\n            if (s.endRe && !s.endRe.test(after))\n                continue;\n            if (!s.startRe && !s.endRe)\n                continue;\n\n            s.matchBefore = s.startRe ? s.startRe.exec(before) : [\"\"];\n            s.matchAfter = s.endRe ? s.endRe.exec(after) : [\"\"];\n            s.replaceBefore = s.triggerRe ? s.triggerRe.exec(before)[0] : \"\";\n            s.replaceAfter = s.endTriggerRe ? s.endTriggerRe.exec(after)[0] : \"\";\n            return s;\n        }\n    };\n\n    this.snippetMap = {};\n    this.snippetNameMap = {};\n    this.register = function(snippets, scope) {\n        var snippetMap = this.snippetMap;\n        var snippetNameMap = this.snippetNameMap;\n        var self = this;\n        \n        if (!snippets) \n            snippets = [];\n        \n        function wrapRegexp(src) {\n            if (src && !/^\\^?\\(.*\\)\\$?$|^\\\\b$/.test(src))\n                src = \"(?:\" + src + \")\";\n\n            return src || \"\";\n        }\n        function guardedRegexp(re, guard, opening) {\n            re = wrapRegexp(re);\n            guard = wrapRegexp(guard);\n            if (opening) {\n                re = guard + re;\n                if (re && re[re.length - 1] != \"$\")\n                    re = re + \"$\";\n            } else {\n                re = re + guard;\n                if (re && re[0] != \"^\")\n                    re = \"^\" + re;\n            }\n            return new RegExp(re);\n        }\n\n        function addSnippet(s) {\n            if (!s.scope)\n                s.scope = scope || \"_\";\n            scope = s.scope;\n            if (!snippetMap[scope]) {\n                snippetMap[scope] = [];\n                snippetNameMap[scope] = {};\n            }\n\n            var map = snippetNameMap[scope];\n            if (s.name) {\n                var old = map[s.name];\n                if (old)\n                    self.unregister(old);\n                map[s.name] = s;\n            }\n            snippetMap[scope].push(s);\n\n            if (s.prefix)\n                s.tabTrigger = s.prefix;\n\n            if (!s.content && s.body)\n                s.content = Array.isArray(s.body) ? s.body.join(\"\\n\") : s.body;\n\n            if (s.tabTrigger && !s.trigger) {\n                if (!s.guard && /^\\w/.test(s.tabTrigger))\n                    s.guard = \"\\\\b\";\n                s.trigger = lang.escapeRegExp(s.tabTrigger);\n            }\n            \n            if (!s.trigger && !s.guard && !s.endTrigger && !s.endGuard)\n                return;\n            \n            s.startRe = guardedRegexp(s.trigger, s.guard, true);\n            s.triggerRe = new RegExp(s.trigger);\n\n            s.endRe = guardedRegexp(s.endTrigger, s.endGuard, true);\n            s.endTriggerRe = new RegExp(s.endTrigger);\n        }\n\n        if (Array.isArray(snippets)) {\n            snippets.forEach(addSnippet);\n        } else {\n            Object.keys(snippets).forEach(function(key) {\n                addSnippet(snippets[key]);\n            });\n        }\n        \n        this._signal(\"registerSnippets\", {scope: scope});\n    };\n    this.unregister = function(snippets, scope) {\n        var snippetMap = this.snippetMap;\n        var snippetNameMap = this.snippetNameMap;\n\n        function removeSnippet(s) {\n            var nameMap = snippetNameMap[s.scope||scope];\n            if (nameMap && nameMap[s.name]) {\n                delete nameMap[s.name];\n                var map = snippetMap[s.scope||scope];\n                var i = map && map.indexOf(s);\n                if (i >= 0)\n                    map.splice(i, 1);\n            }\n        }\n        if (snippets.content)\n            removeSnippet(snippets);\n        else if (Array.isArray(snippets))\n            snippets.forEach(removeSnippet);\n    };\n    this.parseSnippetFile = function(str) {\n        str = str.replace(/\\r/g, \"\");\n        var list = [], snippet = {};\n        var re = /^#.*|^({[\\s\\S]*})\\s*$|^(\\S+) (.*)$|^((?:\\n*\\t.*)+)/gm;\n        var m;\n        while (m = re.exec(str)) {\n            if (m[1]) {\n                try {\n                    snippet = JSON.parse(m[1]);\n                    list.push(snippet);\n                } catch (e) {}\n            } if (m[4]) {\n                snippet.content = m[4].replace(/^\\t/gm, \"\");\n                list.push(snippet);\n                snippet = {};\n            } else {\n                var key = m[2], val = m[3];\n                if (key == \"regex\") {\n                    var guardRe = /\\/((?:[^\\/\\\\]|\\\\.)*)|$/g;\n                    snippet.guard = guardRe.exec(val)[1];\n                    snippet.trigger = guardRe.exec(val)[1];\n                    snippet.endTrigger = guardRe.exec(val)[1];\n                    snippet.endGuard = guardRe.exec(val)[1];\n                } else if (key == \"snippet\") {\n                    snippet.tabTrigger = val.match(/^\\S*/)[0];\n                    if (!snippet.name)\n                        snippet.name = val;\n                } else if (key) {\n                    snippet[key] = val;\n                }\n            }\n        }\n        return list;\n    };\n    this.getSnippetByName = function(name, editor) {\n        var snippetMap = this.snippetNameMap;\n        var snippet;\n        this.getActiveScopes(editor).some(function(scope) {\n            var snippets = snippetMap[scope];\n            if (snippets)\n                snippet = snippets[name];\n            return !!snippet;\n        }, this);\n        return snippet;\n    };\n\n}).call(SnippetManager.prototype);\n\n\nvar TabstopManager = function(editor) {\n    if (editor.tabstopManager)\n        return editor.tabstopManager;\n    editor.tabstopManager = this;\n    this.$onChange = this.onChange.bind(this);\n    this.$onChangeSelection = lang.delayedCall(this.onChangeSelection.bind(this)).schedule;\n    this.$onChangeSession = this.onChangeSession.bind(this);\n    this.$onAfterExec = this.onAfterExec.bind(this);\n    this.attach(editor);\n};\n(function() {\n    this.attach = function(editor) {\n        this.index = 0;\n        this.ranges = [];\n        this.tabstops = [];\n        this.$openTabstops = null;\n        this.selectedTabstop = null;\n\n        this.editor = editor;\n        this.editor.on(\"change\", this.$onChange);\n        this.editor.on(\"changeSelection\", this.$onChangeSelection);\n        this.editor.on(\"changeSession\", this.$onChangeSession);\n        this.editor.commands.on(\"afterExec\", this.$onAfterExec);\n        this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n    };\n    this.detach = function() {\n        this.tabstops.forEach(this.removeTabstopMarkers, this);\n        this.ranges = null;\n        this.tabstops = null;\n        this.selectedTabstop = null;\n        this.editor.removeListener(\"change\", this.$onChange);\n        this.editor.removeListener(\"changeSelection\", this.$onChangeSelection);\n        this.editor.removeListener(\"changeSession\", this.$onChangeSession);\n        this.editor.commands.removeListener(\"afterExec\", this.$onAfterExec);\n        this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\n        this.editor.tabstopManager = null;\n        this.editor = null;\n    };\n\n    this.onChange = function(delta) {\n        var isRemove = delta.action[0] == \"r\";\n        var selectedTabstop = this.selectedTabstop || {};\n        var parents = selectedTabstop.parents || {};\n        var tabstops = (this.tabstops || []).slice();\n        for (var i = 0; i < tabstops.length; i++) {\n            var ts = tabstops[i];\n            var active = ts == selectedTabstop || parents[ts.index];\n            ts.rangeList.$bias = active ? 0 : 1;\n            \n            if (delta.action == \"remove\" && ts !== selectedTabstop) {\n                var parentActive = ts.parents && ts.parents[selectedTabstop.index];\n                var startIndex = ts.rangeList.pointIndex(delta.start, parentActive);\n                startIndex = startIndex < 0 ? -startIndex - 1 : startIndex + 1;\n                var endIndex = ts.rangeList.pointIndex(delta.end, parentActive);\n                endIndex = endIndex < 0 ? -endIndex - 1 : endIndex - 1;\n                var toRemove = ts.rangeList.ranges.slice(startIndex, endIndex);\n                for (var j = 0; j < toRemove.length; j++)\n                    this.removeRange(toRemove[j]);\n            }\n            ts.rangeList.$onChange(delta);\n        }\n        var session = this.editor.session;\n        if (!this.$inChange && isRemove && session.getLength() == 1 && !session.getValue())\n            this.detach();\n    };\n    this.updateLinkedFields = function() {\n        var ts = this.selectedTabstop;\n        if (!ts || !ts.hasLinkedRanges || !ts.firstNonLinked)\n            return;\n        this.$inChange = true;\n        var session = this.editor.session;\n        var text = session.getTextRange(ts.firstNonLinked);\n        for (var i = 0; i < ts.length; i++) {\n            var range = ts[i];\n            if (!range.linked)\n                continue;\n            var original = range.original;\n            var fmt = exports.snippetManager.tmStrFormat(text, original, this.editor);\n            session.replace(range, fmt);\n        }\n        this.$inChange = false;\n    };\n    this.onAfterExec = function(e) {\n        if (e.command && !e.command.readOnly)\n            this.updateLinkedFields();\n    };\n    this.onChangeSelection = function() {\n        if (!this.editor)\n            return;\n        var lead = this.editor.selection.lead;\n        var anchor = this.editor.selection.anchor;\n        var isEmpty = this.editor.selection.isEmpty();\n        for (var i = 0; i < this.ranges.length; i++) {\n            if (this.ranges[i].linked)\n                continue;\n            var containsLead = this.ranges[i].contains(lead.row, lead.column);\n            var containsAnchor = isEmpty || this.ranges[i].contains(anchor.row, anchor.column);\n            if (containsLead && containsAnchor)\n                return;\n        }\n        this.detach();\n    };\n    this.onChangeSession = function() {\n        this.detach();\n    };\n    this.tabNext = function(dir) {\n        var max = this.tabstops.length;\n        var index = this.index + (dir || 1);\n        index = Math.min(Math.max(index, 1), max);\n        if (index == max)\n            index = 0;\n        this.selectTabstop(index);\n        if (index === 0)\n            this.detach();\n    };\n    this.selectTabstop = function(index) {\n        this.$openTabstops = null;\n        var ts = this.tabstops[this.index];\n        if (ts)\n            this.addTabstopMarkers(ts);\n        this.index = index;\n        ts = this.tabstops[this.index];\n        if (!ts || !ts.length)\n            return;\n        \n        this.selectedTabstop = ts;\n        var range = ts.firstNonLinked || ts;\n        if (!this.editor.inVirtualSelectionMode) {\n            var sel = this.editor.multiSelect;\n            sel.toSingleRange(range.clone());\n            for (var i = 0; i < ts.length; i++) {\n                if (ts.hasLinkedRanges && ts[i].linked)\n                    continue;\n                sel.addRange(ts[i].clone(), true);\n            }\n            if (sel.ranges[0])\n                sel.addRange(sel.ranges[0].clone());\n        } else {\n            this.editor.selection.setRange(range);\n        }\n        \n        this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n        if (this.selectedTabstop && this.selectedTabstop.choices)\n            this.editor.execCommand(\"startAutocomplete\", {matches: this.selectedTabstop.choices});\n    };\n    this.addTabstops = function(tabstops, start, end) {\n        var useLink = this.useLink || !this.editor.getOption(\"enableMultiselect\");\n        \n        if (!this.$openTabstops)\n            this.$openTabstops = [];\n        if (!tabstops[0]) {\n            var p = Range.fromPoints(end, end);\n            moveRelative(p.start, start);\n            moveRelative(p.end, start);\n            tabstops[0] = [p];\n            tabstops[0].index = 0;\n        }\n\n        var i = this.index;\n        var arg = [i + 1, 0];\n        var ranges = this.ranges;\n        tabstops.forEach(function(ts, index) {\n            var dest = this.$openTabstops[index] || ts;\n            \n            for (var i = 0; i < ts.length; i++) {\n                var p = ts[i];\n                var range = Range.fromPoints(p.start, p.end || p.start);\n                movePoint(range.start, start);\n                movePoint(range.end, start);\n                range.original = p;\n                range.tabstop = dest;\n                ranges.push(range);\n                if (dest != ts)\n                    dest.unshift(range);\n                else\n                    dest[i] = range;\n                if (p.fmtString || (dest.firstNonLinked && useLink)) {\n                    range.linked = true;\n                    dest.hasLinkedRanges = true;\n                } else if (!dest.firstNonLinked)\n                    dest.firstNonLinked = range;\n            }\n            if (!dest.firstNonLinked)\n                dest.hasLinkedRanges = false;\n            if (dest === ts) {\n                arg.push(dest);\n                this.$openTabstops[index] = dest;\n            }\n            this.addTabstopMarkers(dest);\n            dest.rangeList = dest.rangeList || new RangeList();\n            dest.rangeList.$bias = 0;\n            dest.rangeList.addList(dest);\n        }, this);\n        \n        if (arg.length > 2) {\n            if (this.tabstops.length)\n                arg.push(arg.splice(2, 1)[0]);\n            this.tabstops.splice.apply(this.tabstops, arg);\n        }\n    };\n\n    this.addTabstopMarkers = function(ts) {\n        var session = this.editor.session;\n        ts.forEach(function(range) {\n            if  (!range.markerId)\n                range.markerId = session.addMarker(range, \"ace_snippet-marker\", \"text\");\n        });\n    };\n    this.removeTabstopMarkers = function(ts) {\n        var session = this.editor.session;\n        ts.forEach(function(range) {\n            session.removeMarker(range.markerId);\n            range.markerId = null;\n        });\n    };\n    this.removeRange = function(range) {\n        var i = range.tabstop.indexOf(range);\n        if (i != -1) range.tabstop.splice(i, 1);\n        i = this.ranges.indexOf(range);\n        if (i != -1) this.ranges.splice(i, 1);\n        i = range.tabstop.rangeList.ranges.indexOf(range);\n        if (i != -1) range.tabstop.splice(i, 1);\n        this.editor.session.removeMarker(range.markerId);\n        if (!range.tabstop.length) {\n            i = this.tabstops.indexOf(range.tabstop);\n            if (i != -1)\n                this.tabstops.splice(i, 1);\n            if (!this.tabstops.length)\n                this.detach();\n        }\n    };\n\n    this.keyboardHandler = new HashHandler();\n    this.keyboardHandler.bindKeys({\n        \"Tab\": function(editor) {\n            if (exports.snippetManager && exports.snippetManager.expandWithTab(editor))\n                return;\n            editor.tabstopManager.tabNext(1);\n            editor.renderer.scrollCursorIntoView();\n        },\n        \"Shift-Tab\": function(editor) {\n            editor.tabstopManager.tabNext(-1);\n            editor.renderer.scrollCursorIntoView();\n        },\n        \"Esc\": function(editor) {\n            editor.tabstopManager.detach();\n        }\n    });\n}).call(TabstopManager.prototype);\n\n\n\nvar movePoint = function(point, diff) {\n    if (point.row == 0)\n        point.column += diff.column;\n    point.row += diff.row;\n};\n\nvar moveRelative = function(point, start) {\n    if (point.row == start.row)\n        point.column -= start.column;\n    point.row -= start.row;\n};\n\n\nrequire(\"./lib/dom\").importCssString(\"\\\n.ace_snippet-marker {\\\n    -moz-box-sizing: border-box;\\\n    box-sizing: border-box;\\\n    background: rgba(194, 193, 208, 0.09);\\\n    border: 1px dotted rgba(211, 208, 235, 0.62);\\\n    position: absolute;\\\n}\");\n\nexports.snippetManager = new SnippetManager();\n\n\nvar Editor = require(\"./editor\").Editor;\n(function() {\n    this.insertSnippet = function(content, options) {\n        return exports.snippetManager.insertSnippet(this, content, options);\n    };\n    this.expandSnippet = function(options) {\n        return exports.snippetManager.expandWithTab(this, options);\n    };\n}).call(Editor.prototype);\n\n});\n\nace.define(\"ace/ext/emmet\",[\"require\",\"exports\",\"module\",\"ace/keyboard/hash_handler\",\"ace/editor\",\"ace/snippets\",\"ace/range\",\"ace/config\",\"resources\",\"resources\",\"tabStops\",\"resources\",\"utils\",\"actions\"], function(require, exports, module) {\n\"use strict\";\nvar HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\nvar Editor = require(\"../editor\").Editor;\nvar snippetManager = require(\"../snippets\").snippetManager;\nvar Range = require(\"../range\").Range;\nvar config = require(\"../config\");\nvar emmet, emmetPath;\nfunction AceEmmetEditor() {}\n\nAceEmmetEditor.prototype = {\n    setupContext: function(editor) {\n        this.ace = editor;\n        this.indentation = editor.session.getTabString();\n        if (!emmet)\n            emmet = window.emmet;\n        var resources = emmet.resources || emmet.require(\"resources\");\n        resources.setVariable(\"indentation\", this.indentation);\n        this.$syntax = null;\n        this.$syntax = this.getSyntax();\n    },\n    getSelectionRange: function() {\n        var range = this.ace.getSelectionRange();\n        var doc = this.ace.session.doc;\n        return {\n            start: doc.positionToIndex(range.start),\n            end: doc.positionToIndex(range.end)\n        };\n    },\n    createSelection: function(start, end) {\n        var doc = this.ace.session.doc;\n        this.ace.selection.setRange({\n            start: doc.indexToPosition(start),\n            end: doc.indexToPosition(end)\n        });\n    },\n    getCurrentLineRange: function() {\n        var ace = this.ace;\n        var row = ace.getCursorPosition().row;\n        var lineLength = ace.session.getLine(row).length;\n        var index = ace.session.doc.positionToIndex({row: row, column: 0});\n        return {\n            start: index,\n            end: index + lineLength\n        };\n    },\n    getCaretPos: function(){\n        var pos = this.ace.getCursorPosition();\n        return this.ace.session.doc.positionToIndex(pos);\n    },\n    setCaretPos: function(index){\n        var pos = this.ace.session.doc.indexToPosition(index);\n        this.ace.selection.moveToPosition(pos);\n    },\n    getCurrentLine: function() {\n        var row = this.ace.getCursorPosition().row;\n        return this.ace.session.getLine(row);\n    },\n    replaceContent: function(value, start, end, noIndent) {\n        if (end == null)\n            end = start == null ? this.getContent().length : start;\n        if (start == null)\n            start = 0;        \n        \n        var editor = this.ace;\n        var doc = editor.session.doc;\n        var range = Range.fromPoints(doc.indexToPosition(start), doc.indexToPosition(end));\n        editor.session.remove(range);\n        \n        range.end = range.start;\n        \n        value = this.$updateTabstops(value);\n        snippetManager.insertSnippet(editor, value);\n    },\n    getContent: function(){\n        return this.ace.getValue();\n    },\n    getSyntax: function() {\n        if (this.$syntax)\n            return this.$syntax;\n        var syntax = this.ace.session.$modeId.split(\"/\").pop();\n        if (syntax == \"html\" || syntax == \"php\") {\n            var cursor = this.ace.getCursorPosition();\n            var state = this.ace.session.getState(cursor.row);\n            if (typeof state != \"string\")\n                state = state[0];\n            if (state) {\n                state = state.split(\"-\");\n                if (state.length > 1)\n                    syntax = state[0];\n                else if (syntax == \"php\")\n                    syntax = \"html\";\n            }\n        }\n        return syntax;\n    },\n    getProfileName: function() {\n        var resources = emmet.resources || emmet.require(\"resources\");\n        switch (this.getSyntax()) {\n          case \"css\": return \"css\";\n          case \"xml\":\n          case \"xsl\":\n            return \"xml\";\n          case \"html\":\n            var profile = resources.getVariable(\"profile\");\n            if (!profile)\n                profile = this.ace.session.getLines(0,2).join(\"\").search(/<!DOCTYPE[^>]+XHTML/i) != -1 ? \"xhtml\": \"html\";\n            return profile;\n          default:\n            var mode = this.ace.session.$mode;\n            return mode.emmetConfig && mode.emmetConfig.profile || \"xhtml\";\n        }\n    },\n    prompt: function(title) {\n        return prompt(title); // eslint-disable-line no-alert\n    },\n    getSelection: function() {\n        return this.ace.session.getTextRange();\n    },\n    getFilePath: function() {\n        return \"\";\n    },\n    $updateTabstops: function(value) {\n        var base = 1000;\n        var zeroBase = 0;\n        var lastZero = null;\n        var ts = emmet.tabStops || emmet.require('tabStops');\n        var resources = emmet.resources || emmet.require(\"resources\");\n        var settings = resources.getVocabulary(\"user\");\n        var tabstopOptions = {\n            tabstop: function(data) {\n                var group = parseInt(data.group, 10);\n                var isZero = group === 0;\n                if (isZero)\n                    group = ++zeroBase;\n                else\n                    group += base;\n\n                var placeholder = data.placeholder;\n                if (placeholder) {\n                    placeholder = ts.processText(placeholder, tabstopOptions);\n                }\n\n                var result = '${' + group + (placeholder ? ':' + placeholder : '') + '}';\n\n                if (isZero) {\n                    lastZero = [data.start, result];\n                }\n\n                return result;\n            },\n            escape: function(ch) {\n                if (ch == '$') return '\\\\$';\n                if (ch == '\\\\') return '\\\\\\\\';\n                return ch;\n            }\n        };\n\n        value = ts.processText(value, tabstopOptions);\n\n        if (settings.variables['insert_final_tabstop'] && !/\\$\\{0\\}$/.test(value)) {\n            value += '${0}';\n        } else if (lastZero) {\n            var common = emmet.utils ? emmet.utils.common : emmet.require('utils');\n            value = common.replaceSubstring(value, '${0}', lastZero[0], lastZero[1]);\n        }\n        \n        return value;\n    }\n};\n\n\nvar keymap = {\n    expand_abbreviation: {\"mac\": \"ctrl+alt+e\", \"win\": \"alt+e\"},\n    match_pair_outward: {\"mac\": \"ctrl+d\", \"win\": \"ctrl+,\"},\n    match_pair_inward: {\"mac\": \"ctrl+j\", \"win\": \"ctrl+shift+0\"},\n    matching_pair: {\"mac\": \"ctrl+alt+j\", \"win\": \"alt+j\"},\n    next_edit_point: \"alt+right\",\n    prev_edit_point: \"alt+left\",\n    toggle_comment: {\"mac\": \"command+/\", \"win\": \"ctrl+/\"},\n    split_join_tag: {\"mac\": \"shift+command+'\", \"win\": \"shift+ctrl+`\"},\n    remove_tag: {\"mac\": \"command+'\", \"win\": \"shift+ctrl+;\"},\n    evaluate_math_expression: {\"mac\": \"shift+command+y\", \"win\": \"shift+ctrl+y\"},\n    increment_number_by_1: \"ctrl+up\",\n    decrement_number_by_1: \"ctrl+down\",\n    increment_number_by_01: \"alt+up\",\n    decrement_number_by_01: \"alt+down\",\n    increment_number_by_10: {\"mac\": \"alt+command+up\", \"win\": \"shift+alt+up\"},\n    decrement_number_by_10: {\"mac\": \"alt+command+down\", \"win\": \"shift+alt+down\"},\n    select_next_item: {\"mac\": \"shift+command+.\", \"win\": \"shift+ctrl+.\"},\n    select_previous_item: {\"mac\": \"shift+command+,\", \"win\": \"shift+ctrl+,\"},\n    reflect_css_value: {\"mac\": \"shift+command+r\", \"win\": \"shift+ctrl+r\"},\n\n    encode_decode_data_url: {\"mac\": \"shift+ctrl+d\", \"win\": \"ctrl+'\"},\n    expand_abbreviation_with_tab: \"Tab\",\n    wrap_with_abbreviation: {\"mac\": \"shift+ctrl+a\", \"win\": \"shift+ctrl+a\"}\n};\n\nvar editorProxy = new AceEmmetEditor();\nexports.commands = new HashHandler();\nexports.runEmmetCommand = function runEmmetCommand(editor) {\n    if (this.action == \"expand_abbreviation_with_tab\") {\n        if (!editor.selection.isEmpty())\n            return false;\n        var pos = editor.selection.lead;\n        var token = editor.session.getTokenAt(pos.row, pos.column);\n        if (token && /\\btag\\b/.test(token.type))\n            return false;\n    }\n    try {\n        editorProxy.setupContext(editor);\n        var actions = emmet.actions || emmet.require(\"actions\");\n        \n        if (this.action == \"wrap_with_abbreviation\") {\n            return setTimeout(function() {\n                actions.run(\"wrap_with_abbreviation\", editorProxy);\n            }, 0);\n        }\n        \n        var result = actions.run(this.action, editorProxy);\n    } catch(e) {\n        if (!emmet) {\n            var loading = exports.load(runEmmetCommand.bind(this, editor));\n            if (this.action == \"expand_abbreviation_with_tab\")\n                return false;\n            return loading;\n        }\n        editor._signal(\"changeStatus\", typeof e == \"string\" ? e : e.message);\n        config.warn(e);\n        result = false;\n    }\n    return result;\n};\n\nfor (var command in keymap) {\n    exports.commands.addCommand({\n        name: \"emmet:\" + command,\n        action: command,\n        bindKey: keymap[command],\n        exec: exports.runEmmetCommand,\n        multiSelectAction: \"forEach\"\n    });\n}\n\nexports.updateCommands = function(editor, enabled) {\n    if (enabled) {\n        editor.keyBinding.addKeyboardHandler(exports.commands);\n    } else {\n        editor.keyBinding.removeKeyboardHandler(exports.commands);\n    }\n};\n\nexports.isSupportedMode = function(mode) {\n    if (!mode) return false;\n    if (mode.emmetConfig) return true;\n    var id = mode.$id || mode;\n    return /css|less|scss|sass|stylus|html|php|twig|ejs|handlebars/.test(id);\n};\n\nexports.isAvailable = function(editor, command) {\n    if (/(evaluate_math_expression|expand_abbreviation)$/.test(command))\n        return true;\n    var mode = editor.session.$mode;\n    var isSupported = exports.isSupportedMode(mode);\n    if (isSupported && mode.$modes) {\n        try {\n            editorProxy.setupContext(editor);\n            if (/js|php/.test(editorProxy.getSyntax()))\n                isSupported = false;\n        } catch(e) {}\n    }\n    return isSupported;\n};\n\nvar onChangeMode = function(e, target) {\n    var editor = target;\n    if (!editor)\n        return;\n    var enabled = exports.isSupportedMode(editor.session.$mode);\n    if (e.enableEmmet === false)\n        enabled = false;\n    if (enabled)\n        exports.load();\n    exports.updateCommands(editor, enabled);\n};\n\nexports.load = function(cb) {\n    if (typeof emmetPath !== \"string\") {\n        config.warn(\"script for emmet-core is not loaded\");\n        return false;\n    }\n    config.loadModule(emmetPath, function() {\n        emmetPath = null;\n        cb && cb();\n    });\n    return true;\n};\n\nexports.AceEmmetEditor = AceEmmetEditor;\nconfig.defineOptions(Editor.prototype, \"editor\", {\n    enableEmmet: {\n        set: function(val) {\n            this[val ? \"on\" : \"removeListener\"](\"changeMode\", onChangeMode);\n            onChangeMode({enableEmmet: !!val}, this);\n        },\n        value: true\n    }\n});\n\nexports.setCore = function(e) {\n    if (typeof e == \"string\")\n       emmetPath = e;\n    else\n       emmet = e;\n};\n});                (function() {\n                    ace.require([\"ace/ext/emmet\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}