{"ast":null,"code":"ace.define(\"ace/snippets/actionscript\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippetText = \"snippet main\\n\\\n\tpackage {\\n\\\n\t\timport flash.display.*;\\n\\\n\t\timport flash.Events.*;\\n\\\n\t\\n\\\n\t\tpublic class Main extends Sprite {\\n\\\n\t\t\tpublic function Main (\t) {\\n\\\n\t\t\t\ttrace(\\\"start\\\");\\n\\\n\t\t\t\tstage.scaleMode = StageScaleMode.NO_SCALE;\\n\\\n\t\t\t\tstage.addEventListener(Event.RESIZE, resizeListener);\\n\\\n\t\t\t}\\n\\\n\t\\n\\\n\t\t\tprivate function resizeListener (e:Event):void {\\n\\\n\t\t\t\ttrace(\\\"The application window changed size!\\\");\\n\\\n\t\t\t\ttrace(\\\"New width:  \\\" + stage.stageWidth);\\n\\\n\t\t\t\ttrace(\\\"New height: \\\" + stage.stageHeight);\\n\\\n\t\t\t}\\n\\\n\t\\n\\\n\t\t}\\n\\\n\t\\n\\\n\t}\\n\\\nsnippet class\\n\\\n\t${1:public|internal} class ${2:name} ${3:extends } {\\n\\\n\t\tpublic function $2 (\t) {\\n\\\n\t\t\t(\\\"start\\\");\\n\\\n\t\t}\\n\\\n\t}\\n\\\nsnippet all\\n\\\n\tpackage name {\\n\\\n\\n\\\n\t\t${1:public|internal|final} class ${2:name} ${3:extends } {\\n\\\n\t\t\tprivate|public| static const FOO = \\\"abc\\\";\\n\\\n\t\t\tprivate|public| static var BAR = \\\"abc\\\";\\n\\\n\\n\\\n\t\t\t// class initializer - no JIT !! one time setup\\n\\\n\t\t\tif Cababilities.os == \\\"Linux|MacOS\\\" {\\n\\\n\t\t\t\tFOO = \\\"other\\\";\\n\\\n\t\t\t}\\n\\\n\\n\\\n\t\t\t// constructor:\\n\\\n\t\t\tpublic function $2 (\t){\\n\\\n\t\t\t\tsuper2();\\n\\\n\t\t\t\ttrace(\\\"start\\\");\\n\\\n\t\t\t}\\n\\\n\t\t\tpublic function name (a, b...){\\n\\\n\t\t\t\tsuper.name(..);\\n\\\n\t\t\t\tlable:break\\n\\\n\t\t\t}\\n\\\n\t\t}\\n\\\n\t}\\n\\\n\\n\\\n\tfunction A(){\\n\\\n\t\t// A can only be accessed within this file\\n\\\n\t}\\n\\\nsnippet switch\\n\\\n\tswitch(${1}){\\n\\\n\t\tcase ${2}:\\n\\\n\t\t\t${3}\\n\\\n\t\tbreak;\\n\\\n\t\tdefault:\\n\\\n\t}\\n\\\nsnippet case\\n\\\n\t\tcase ${1}:\\n\\\n\t\t\t${2}\\n\\\n\t\tbreak;\\n\\\nsnippet package\\n\\\n\tpackage ${1:package}{\\n\\\n\t\t${2}\\n\\\n\t}\\n\\\nsnippet wh\\n\\\n\twhile ${1:cond}{\\n\\\n\t\t${2}\\n\\\n\t}\\n\\\nsnippet do\\n\\\n\tdo {\\n\\\n\t\t${2}\\n\\\n\t} while (${1:cond})\\n\\\nsnippet while\\n\\\n\twhile ${1:cond}{\\n\\\n\t\t${2}\\n\\\n\t}\\n\\\nsnippet for enumerate names\\n\\\n\tfor (${1:var} in ${2:object}){\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\nsnippet for enumerate values\\n\\\n\tfor each (${1:var} in ${2:object}){\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\nsnippet get_set\\n\\\n\tfunction get ${1:name} {\\n\\\n\t\treturn ${2}\\n\\\n\t}\\n\\\n\tfunction set $1 (newValue) {\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\nsnippet interface\\n\\\n\tinterface name {\\n\\\n\t\tfunction method(${1}):${2:returntype};\\n\\\n\t}\\n\\\nsnippet try\\n\\\n\ttry {\\n\\\n\t\t${1}\\n\\\n\t} catch (error:ErrorType) {\\n\\\n\t\t${2}\\n\\\n\t} finally {\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\n# For Loop (same as c.snippet)\\n\\\nsnippet for for (..) {..}\\n\\\n\tfor (${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\\n\\\n\t\t${4:/* code */}\\n\\\n\t}\\n\\\n# Custom For Loop\\n\\\nsnippet forr\\n\\\n\tfor (${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\\n\\\n\t\t${5:/* code */}\\n\\\n\t}\\n\\\n# If Condition\\n\\\nsnippet if\\n\\\n\tif (${1:/* condition */}) {\\n\\\n\t\t${2:/* code */}\\n\\\n\t}\\n\\\nsnippet el\\n\\\n\telse {\\n\\\n\t\t${1}\\n\\\n\t}\\n\\\n# Ternary conditional\\n\\\nsnippet t\\n\\\n\t${1:/* condition */} ? ${2:a} : ${3:b}\\n\\\nsnippet fun\\n\\\n\tfunction ${1:function_name}(${2})${3}\\n\\\n\t{\\n\\\n\t\t${4:/* code */}\\n\\\n\t}\\n\\\n# FlxSprite (usefull when using the flixel library)\\n\\\nsnippet FlxSprite\\n\\\n\tpackage\\n\\\n\t{\\n\\\n\t\timport org.flixel.*\\n\\\n\\n\\\n\t\tpublic class ${1:ClassName} extends ${2:FlxSprite}\\n\\\n\t\t{\\n\\\n\t\t\tpublic function $1(${3: X:Number, Y:Number}):void\\n\\\n\t\t\t{\\n\\\n\t\t\t\tsuper(X,Y);\\n\\\n\t\t\t\t${4: //code...}\\n\\\n\t\t\t}\\n\\\n\\n\\\n\t\t\toverride public function update():void\\n\\\n\t\t\t{\\n\\\n\t\t\t\tsuper.update();\\n\\\n\t\t\t\t${5: //code...}\\n\\\n\t\t\t}\\n\\\n\t\t}\\n\\\n\t}\\n\\\n\\n\\\n\";\n  exports.scope = \"actionscript\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/actionscript\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/snippets/actionscript.js"],"names":["ace","define","require","exports","module","snippetText","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,2BAAX,EAAuC,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAAvC,EAAuE,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAC1G;;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;AA8JAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,cAAhB;AAEC,CAnKD;;AAmKmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,2BAAD,CAAZ,EAA2C,UAASK,CAAT,EAAY;AACnD,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/actionscript\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\nexports.snippetText = \"snippet main\\n\\\n\tpackage {\\n\\\n\t\timport flash.display.*;\\n\\\n\t\timport flash.Events.*;\\n\\\n\t\\n\\\n\t\tpublic class Main extends Sprite {\\n\\\n\t\t\tpublic function Main (\t) {\\n\\\n\t\t\t\ttrace(\\\"start\\\");\\n\\\n\t\t\t\tstage.scaleMode = StageScaleMode.NO_SCALE;\\n\\\n\t\t\t\tstage.addEventListener(Event.RESIZE, resizeListener);\\n\\\n\t\t\t}\\n\\\n\t\\n\\\n\t\t\tprivate function resizeListener (e:Event):void {\\n\\\n\t\t\t\ttrace(\\\"The application window changed size!\\\");\\n\\\n\t\t\t\ttrace(\\\"New width:  \\\" + stage.stageWidth);\\n\\\n\t\t\t\ttrace(\\\"New height: \\\" + stage.stageHeight);\\n\\\n\t\t\t}\\n\\\n\t\\n\\\n\t\t}\\n\\\n\t\\n\\\n\t}\\n\\\nsnippet class\\n\\\n\t${1:public|internal} class ${2:name} ${3:extends } {\\n\\\n\t\tpublic function $2 (\t) {\\n\\\n\t\t\t(\\\"start\\\");\\n\\\n\t\t}\\n\\\n\t}\\n\\\nsnippet all\\n\\\n\tpackage name {\\n\\\n\\n\\\n\t\t${1:public|internal|final} class ${2:name} ${3:extends } {\\n\\\n\t\t\tprivate|public| static const FOO = \\\"abc\\\";\\n\\\n\t\t\tprivate|public| static var BAR = \\\"abc\\\";\\n\\\n\\n\\\n\t\t\t// class initializer - no JIT !! one time setup\\n\\\n\t\t\tif Cababilities.os == \\\"Linux|MacOS\\\" {\\n\\\n\t\t\t\tFOO = \\\"other\\\";\\n\\\n\t\t\t}\\n\\\n\\n\\\n\t\t\t// constructor:\\n\\\n\t\t\tpublic function $2 (\t){\\n\\\n\t\t\t\tsuper2();\\n\\\n\t\t\t\ttrace(\\\"start\\\");\\n\\\n\t\t\t}\\n\\\n\t\t\tpublic function name (a, b...){\\n\\\n\t\t\t\tsuper.name(..);\\n\\\n\t\t\t\tlable:break\\n\\\n\t\t\t}\\n\\\n\t\t}\\n\\\n\t}\\n\\\n\\n\\\n\tfunction A(){\\n\\\n\t\t// A can only be accessed within this file\\n\\\n\t}\\n\\\nsnippet switch\\n\\\n\tswitch(${1}){\\n\\\n\t\tcase ${2}:\\n\\\n\t\t\t${3}\\n\\\n\t\tbreak;\\n\\\n\t\tdefault:\\n\\\n\t}\\n\\\nsnippet case\\n\\\n\t\tcase ${1}:\\n\\\n\t\t\t${2}\\n\\\n\t\tbreak;\\n\\\nsnippet package\\n\\\n\tpackage ${1:package}{\\n\\\n\t\t${2}\\n\\\n\t}\\n\\\nsnippet wh\\n\\\n\twhile ${1:cond}{\\n\\\n\t\t${2}\\n\\\n\t}\\n\\\nsnippet do\\n\\\n\tdo {\\n\\\n\t\t${2}\\n\\\n\t} while (${1:cond})\\n\\\nsnippet while\\n\\\n\twhile ${1:cond}{\\n\\\n\t\t${2}\\n\\\n\t}\\n\\\nsnippet for enumerate names\\n\\\n\tfor (${1:var} in ${2:object}){\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\nsnippet for enumerate values\\n\\\n\tfor each (${1:var} in ${2:object}){\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\nsnippet get_set\\n\\\n\tfunction get ${1:name} {\\n\\\n\t\treturn ${2}\\n\\\n\t}\\n\\\n\tfunction set $1 (newValue) {\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\nsnippet interface\\n\\\n\tinterface name {\\n\\\n\t\tfunction method(${1}):${2:returntype};\\n\\\n\t}\\n\\\nsnippet try\\n\\\n\ttry {\\n\\\n\t\t${1}\\n\\\n\t} catch (error:ErrorType) {\\n\\\n\t\t${2}\\n\\\n\t} finally {\\n\\\n\t\t${3}\\n\\\n\t}\\n\\\n# For Loop (same as c.snippet)\\n\\\nsnippet for for (..) {..}\\n\\\n\tfor (${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\\n\\\n\t\t${4:/* code */}\\n\\\n\t}\\n\\\n# Custom For Loop\\n\\\nsnippet forr\\n\\\n\tfor (${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\\n\\\n\t\t${5:/* code */}\\n\\\n\t}\\n\\\n# If Condition\\n\\\nsnippet if\\n\\\n\tif (${1:/* condition */}) {\\n\\\n\t\t${2:/* code */}\\n\\\n\t}\\n\\\nsnippet el\\n\\\n\telse {\\n\\\n\t\t${1}\\n\\\n\t}\\n\\\n# Ternary conditional\\n\\\nsnippet t\\n\\\n\t${1:/* condition */} ? ${2:a} : ${3:b}\\n\\\nsnippet fun\\n\\\n\tfunction ${1:function_name}(${2})${3}\\n\\\n\t{\\n\\\n\t\t${4:/* code */}\\n\\\n\t}\\n\\\n# FlxSprite (usefull when using the flixel library)\\n\\\nsnippet FlxSprite\\n\\\n\tpackage\\n\\\n\t{\\n\\\n\t\timport org.flixel.*\\n\\\n\\n\\\n\t\tpublic class ${1:ClassName} extends ${2:FlxSprite}\\n\\\n\t\t{\\n\\\n\t\t\tpublic function $1(${3: X:Number, Y:Number}):void\\n\\\n\t\t\t{\\n\\\n\t\t\t\tsuper(X,Y);\\n\\\n\t\t\t\t${4: //code...}\\n\\\n\t\t\t}\\n\\\n\\n\\\n\t\t\toverride public function update():void\\n\\\n\t\t\t{\\n\\\n\t\t\t\tsuper.update();\\n\\\n\t\t\t\t${5: //code...}\\n\\\n\t\t\t}\\n\\\n\t\t}\\n\\\n\t}\\n\\\n\\n\\\n\";\nexports.scope = \"actionscript\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/actionscript\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}