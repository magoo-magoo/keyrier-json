{"ast":null,"code":"import { combineReducers } from 'redux';\nimport undoable from 'redux-undo';\nexport const rootReducer = (rootState = getDefaultAppState(), action) => {\n  var _newOutputState$table;\n\n  if (action.type === 'CLEAR_EDITOR') {\n    return emptyState;\n  }\n\n  const newState = (rootState === null || rootState === void 0 ? void 0 : rootState.query) && (rootState === null || rootState === void 0 ? void 0 : rootState.source) ? { ...rootState,\n    query: query(rootState.query, action),\n    source: source(rootState.source, action)\n  } : {};\n  const newOutputState = output(rootState, newState, action);\n  const ret = { ...newState,\n    output: { ...newOutputState,\n      table: table((_newOutputState$table = newOutputState === null || newOutputState === void 0 ? void 0 : newOutputState.table) !== null && _newOutputState$table !== void 0 ? _newOutputState$table : {}, action)\n    }\n  };\n  return ret;\n};\nexport const source = (state, action) => {\n  var _state$text, _state$text2;\n\n  switch (action.type) {\n    case 'UPDATE_SOURCE_TEXT':\n      return { ...state,\n        text: (state === null || state === void 0 ? void 0 : state.autoFormat) ? jsonBeautify(action.source.trim()) : action.source\n      };\n\n    case 'UPDATE_AUTOFORMAT_SOURCE':\n      return { ...state,\n        text: action.active ? jsonBeautify(state === null || state === void 0 ? void 0 : (_state$text = state.text) === null || _state$text === void 0 ? void 0 : _state$text.trim()) : (_state$text2 = state === null || state === void 0 ? void 0 : state.text) !== null && _state$text2 !== void 0 ? _state$text2 : '',\n        autoFormat: action.active\n      };\n\n    default:\n      return state;\n  }\n};\nexport const userSettings = (state = getDefaultUserSettingsState(), action) => {\n  switch (action.type) {\n    case 'SWITCH_GLOBAL_THEME':\n      return { ...state,\n        globalTheme: action.theme\n      };\n\n    case 'SWITCH_EDITOR_THEME':\n      return { ...state,\n        editorTheme: action.theme\n      };\n\n    case 'UPDATE_LAYOUTS':\n      return { ...state,\n        layouts: action.layouts\n      };\n\n    default:\n      return state;\n  }\n};\nexport const query = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_QUERY':\n      return { ...state,\n        text: action.query\n      };\n\n    case 'UPDATE_QUERY_MODE':\n      return { ...state,\n        mode: action.mode,\n        text: action.mode === 'SQL' ? initialStateJson.query.text : \"// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// you can use lodash helper functions. see https://lodash.com/docs/\\n// ex: _.chain(data).orderBy('age', 'desc')\\n\\n      data\\n    \"\n      };\n\n    default:\n      return state;\n  }\n};\nexport const computeOutput = (previousState, sourceString, queryString, action, mode) => {\n  const text = codeEvaluation(sourceString, queryString, mode);\n\n  if (text instanceof Error) {\n    return {\n      selectedTab: 'RawJson',\n      obj: null,\n      objSize: 0,\n      searchTerm: '',\n      match: false,\n      errorMessage: text.message,\n      table: {\n        isArray: false,\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: []\n      }\n    };\n  }\n\n  let displayedColumns = new Array();\n  const outputObject = jsonParseSafe(text);\n\n  if (Array.isArray(outputObject)) {\n    const keyMap = {};\n    outputObject.forEach(d => {\n      if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n        const keysToAdd = d ? typeof d === 'object' ? Object.keys(d) : [arrayElementName] : [];\n        keysToAdd.forEach(key => keyMap[key] = key);\n      }\n    });\n    displayedColumns = Object.keys(keyMap).filter(key => key && typeof key === 'string' && key.trim() !== '').sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()));\n  }\n\n  const isModalOpen = previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL' ? previousState && !previousState.table.isModalOpen : previousState && previousState.table ? previousState.table.isModalOpen : false;\n  let selectedTab = Array.isArray(outputObject) ? 'Table' : 'RawJson';\n\n  if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n    selectedTab = action.tab;\n  }\n\n  return {\n    selectedTab,\n    obj: outputObject,\n    objSize: text ? text.length : 0,\n    searchTerm: '',\n    match: false,\n    table: {\n      isArray: Array.isArray(outputObject),\n      isModalOpen,\n      displayedColumns,\n      columns: displayedColumns,\n      groupBy: []\n    }\n  };\n};\nexport const output = (previousState, newState, action) => {\n  var _previousState$source, _newState$source, _previousState$query, _newState$query, _newState$output2;\n\n  switch (action.type) {\n    case 'UPDATE_QUERY':\n    case 'UPDATE_SOURCE_TEXT':\n    case 'UPDATE_TABLE_COLUMNS':\n    case 'UPDATE_TABLE_GROUP_BY':\n      if ((previousState === null || previousState === void 0 ? void 0 : (_previousState$source = previousState.source) === null || _previousState$source === void 0 ? void 0 : _previousState$source.text) === (newState === null || newState === void 0 ? void 0 : (_newState$source = newState.source) === null || _newState$source === void 0 ? void 0 : _newState$source.text) && (previousState === null || previousState === void 0 ? void 0 : (_previousState$query = previousState.query) === null || _previousState$query === void 0 ? void 0 : _previousState$query.text) === (newState === null || newState === void 0 ? void 0 : (_newState$query = newState.query) === null || _newState$query === void 0 ? void 0 : _newState$query.text)) {\n        return previousState.output;\n      }\n\n      if (newState) {\n        var _newState$output, _newState$source2, _newState$query2, _newState$query3;\n\n        return computeOutput((_newState$output = newState.output) !== null && _newState$output !== void 0 ? _newState$output : {}, ((_newState$source2 = newState.source) === null || _newState$source2 === void 0 ? void 0 : _newState$source2.text) ? newState.source.text : '', ((_newState$query2 = newState.query) === null || _newState$query2 === void 0 ? void 0 : _newState$query2.text) ? newState.query.text : '', action, ((_newState$query3 = newState.query) === null || _newState$query3 === void 0 ? void 0 : _newState$query3.mode) ? newState.query.mode : 'SQL');\n      }\n\n      break;\n\n    case 'TOGGLE_OUTPUT_TABLE_MODAL':\n      return newState ? { ...newState.output,\n        table: { ...(newState.output ? newState.output.table : {}),\n          isModalOpen: ((_newState$output2 = newState.output) === null || _newState$output2 === void 0 ? void 0 : _newState$output2.table) ? !newState.output.table.isModalOpen : false\n        }\n      } : {};\n\n    case 'UPDATE_OUTPUT_TAB_SELECTION':\n      if (newState) {\n        return { ...newState.output,\n          selectedTab: action.tab\n        };\n      }\n\n      break;\n\n    case 'UPDATE_OUTPUT_SEARCH_TERM':\n      if (newState && newState.output) {\n        return { ...filter(newState.output, action.searchTerm),\n          searchTerm: action.searchTerm,\n          selectedTab: 'RawJson'\n        };\n      }\n\n      break;\n\n    default:\n      if (newState === null || newState === void 0 ? void 0 : newState.output) {\n        var _newState$source3, _newState$query4, _newState$query5;\n\n        return computeOutput(newState.output, ((_newState$source3 = newState.source) === null || _newState$source3 === void 0 ? void 0 : _newState$source3.text) ? newState.source.text : '', ((_newState$query4 = newState.query) === null || _newState$query4 === void 0 ? void 0 : _newState$query4.text) ? newState.query.text : '', action, ((_newState$query5 = newState.query) === null || _newState$query5 === void 0 ? void 0 : _newState$query5.mode) ? newState.query.mode : 'SQL');\n      }\n\n      break;\n  }\n\n  return {};\n};\nexport const containsTerm = (src, searchTerm) => {\n  if (typeof src !== 'string' && typeof src !== 'object') {\n    return {\n      match: false,\n      filteredObj: src\n    };\n  }\n\n  if (typeof src === 'string') {\n    if (containsIgnoreCase(src, searchTerm)) {\n      return {\n        match: true,\n        filteredObj: src\n      };\n    }\n\n    return {\n      match: false,\n      filteredObj: src\n    };\n  }\n\n  const obj = Array.isArray(src) ? [...src] : { ...src\n  };\n  const keys = Array.isArray(obj) ? Array.from({\n    length: obj.length\n  }, (_, k) => k) : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName);\n  let result = false;\n\n  for (const propertyName of keys) {\n    const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm);\n\n    if (propertyNameContains) {\n      result = true;\n      continue;\n    }\n\n    const child = obj[propertyName];\n    const {\n      match,\n      filteredObj\n    } = containsTerm(child, searchTerm);\n\n    if (propertyNameContains || match) {\n      result = true;\n      obj[propertyName] = filteredObj;\n    } else {\n      if (Array.isArray(obj) && typeof propertyName === 'number') {\n        obj.splice(propertyName, 1);\n      } else {\n        delete obj[propertyName];\n      }\n    }\n  }\n\n  if (!result) {\n    if (!Array.isArray(obj)) {\n      ;\n      keys.forEach(propertyName => delete obj[propertyName]);\n    } else {\n      obj.length = 0;\n    }\n  }\n\n  return {\n    match: result,\n    filteredObj: obj\n  };\n};\n\nconst filter = (state, searchTerm) => {\n  if (!searchTerm || searchTerm.trim() === '' || !state) {\n    return { ...state,\n      match: false\n    };\n  }\n\n  const {\n    filteredObj,\n    match\n  } = containsTerm(state.obj, searchTerm);\n\n  if (match) {\n    return { ...state,\n      obj: filteredObj,\n      match\n    };\n  }\n\n  return state;\n};\n\nconst table = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      let groupByList = (state === null || state === void 0 ? void 0 : state.groupBy) ? state.groupBy : [];\n      groupByList.forEach(groupBy => {\n        if (action.columns.indexOf(groupBy) === -1) {\n          groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1);\n        }\n      });\n      return { ...state,\n        displayedColumns: action.columns,\n        groupBy: groupByList\n      };\n\n    case 'UPDATE_TABLE_GROUP_BY':\n      return { ...state,\n        groupBy: action.groupBy.filter(gb => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1).filter(gb => gb !== 'Group by...')\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const resetApp = (state = getDefaultAppState(), action) => {\n  if (action.type === 'RESET_EDITOR') {\n    return rootReducer({ ...getDefaultAppState()\n    }, action);\n  }\n\n  return rootReducer(state, action);\n};\n\nconst perf = (state = getDefaultAppState(), action) => {\n  perfStart(`reduce - action: ${action.type}`);\n  const newState = resetApp(state, action);\n  perfEnd(`reduce - action: ${action.type}`);\n  return newState;\n};\n\nconst rootReducers = combineReducers({\n  app: undoable(perf, {\n    undoType: 'APP_UNDO',\n    redoType: 'APP_REDO',\n    limit: configuration.limitUndo\n  }),\n  userSettings\n});\nexport default rootReducers;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/ui/src/reducers/reducers.ts"],"names":["combineReducers","undoable","rootReducer","rootState","getDefaultAppState","action","type","emptyState","newState","query","source","newOutputState","output","ret","table","state","text","autoFormat","jsonBeautify","trim","active","userSettings","getDefaultUserSettingsState","globalTheme","theme","editorTheme","layouts","mode","initialStateJson","computeOutput","previousState","sourceString","queryString","codeEvaluation","Error","selectedTab","obj","objSize","searchTerm","match","errorMessage","message","isArray","isModalOpen","displayedColumns","columns","groupBy","Array","outputObject","jsonParseSafe","keyMap","forEach","d","undefined","Object","is","keysToAdd","keys","arrayElementName","key","filter","sort","ax","b","toLowerCase","localeCompare","tab","length","containsTerm","src","filteredObj","containsIgnoreCase","from","_","k","getOwnPropertyNames","propertyName","result","propertyNameContains","child","splice","groupByList","indexOf","gb","resetApp","perf","perfStart","perfEnd","rootReducers","app","undoType","redoType","limit","configuration","limitUndo"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\nimport undoable from 'redux-undo'\n\nexport const rootReducer = (rootState = getDefaultAppState(), action: Action) => {\n    if (action.type === 'CLEAR_EDITOR') {\n        return emptyState\n    }\n    const newState =\n        rootState?.query && rootState?.source\n            ? ({\n                  ...rootState,\n                  query: query(rootState.query, action),\n                  source: source(rootState.source, action),\n              } as const)\n            : {}\n\n    const newOutputState = output(rootState, newState, action)\n    const ret = {\n        ...newState,\n        output: {\n            ...newOutputState,\n            table: table(newOutputState?.table ?? {}, action),\n        },\n    }\n\n    return ret\n}\n\nexport const source = (state: SourceState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_SOURCE_TEXT':\n            return {\n                ...state,\n                text: state?.autoFormat ? jsonBeautify(action.source.trim()) : action.source,\n            }\n        case 'UPDATE_AUTOFORMAT_SOURCE':\n            return {\n                ...state,\n                text: action.active ? jsonBeautify(state?.text?.trim()) : state?.text ?? '',\n                autoFormat: action.active,\n            }\n        default:\n            return state\n    }\n}\n\nexport const userSettings = (state: UserSettingsState | undefined = getDefaultUserSettingsState(), action: Action) => {\n    switch (action.type) {\n        case 'SWITCH_GLOBAL_THEME':\n            return { ...state, globalTheme: action.theme }\n        case 'SWITCH_EDITOR_THEME':\n            return { ...state, editorTheme: action.theme }\n        case 'UPDATE_LAYOUTS':\n            return { ...state, layouts: action.layouts }\n        default:\n            return state\n    }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n            return {\n                ...state,\n                text: action.query,\n            }\n        case 'UPDATE_QUERY_MODE':\n            return {\n                ...state,\n                mode: action.mode,\n                text:\n                    action.mode === 'SQL'\n                        ? initialStateJson.query.text\n                        : \"// data is your JSON object\\n// you can use any correct javascript code to query it\\n// in addition of that,\\n// you can use lodash helper functions. see https://lodash.com/docs/\\n// ex: _.chain(data).orderBy('age', 'desc')\\n\\n      data\\n    \",\n            } as const\n        default:\n            return state\n    }\n}\n\nexport const computeOutput = (\n    previousState: OupoutState,\n    sourceString: string,\n    queryString: string,\n    action: Action,\n    mode: QueryMode\n) => {\n    const text = codeEvaluation(sourceString, queryString, mode)\n\n    if (text instanceof Error) {\n        return {\n            selectedTab: 'RawJson',\n            obj: null,\n            objSize: 0,\n            searchTerm: '',\n            match: false,\n            errorMessage: text.message,\n            table: {\n                isArray: false,\n                isModalOpen: false,\n                displayedColumns: [],\n                columns: [],\n                groupBy: [],\n            },\n        } as const\n    }\n\n    let displayedColumns = new Array<string>()\n    const outputObject: itemType[] | object = jsonParseSafe(text)\n    if (Array.isArray(outputObject)) {\n        const keyMap: { [key: string]: string } = {}\n        outputObject.forEach(d => {\n            if (d !== null && d !== undefined && !Object.is(d, {}) && !Array.isArray(d)) {\n                const keysToAdd = d ? (typeof d === 'object' ? Object.keys(d) : [arrayElementName]) : []\n                keysToAdd.forEach(key => (keyMap[key] = key))\n            }\n        })\n        displayedColumns = Object.keys(keyMap)\n            .filter(key => key && typeof key === 'string' && key.trim() !== '')\n            .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n    }\n    const isModalOpen =\n        previousState && previousState.table && action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n            ? previousState && !previousState.table.isModalOpen\n            : previousState && previousState.table\n            ? previousState.table.isModalOpen\n            : false\n\n    let selectedTab: tabType = Array.isArray(outputObject) ? 'Table' : 'RawJson'\n\n    if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n        selectedTab = action.tab\n    }\n    return {\n        selectedTab,\n        obj: outputObject,\n        objSize: text ? text.length : 0,\n        searchTerm: '',\n        match: false,\n        table: {\n            isArray: Array.isArray(outputObject),\n            isModalOpen,\n            displayedColumns,\n            columns: displayedColumns,\n            groupBy: [],\n        },\n    } as const\n}\n\nexport const output = (previousState: AppState, newState: AppState | null, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_QUERY':\n        case 'UPDATE_SOURCE_TEXT':\n        case 'UPDATE_TABLE_COLUMNS':\n        case 'UPDATE_TABLE_GROUP_BY':\n            if (\n                previousState?.source?.text === newState?.source?.text &&\n                previousState?.query?.text === newState?.query?.text\n            ) {\n                return previousState.output\n            }\n            if (newState) {\n                return computeOutput(\n                    newState.output ?? {},\n                    newState.source?.text ? newState.source.text : '',\n                    newState.query?.text ? newState.query.text : '',\n                    action,\n                    newState.query?.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n        case 'TOGGLE_OUTPUT_TABLE_MODAL':\n            return newState\n                ? {\n                      ...newState.output,\n                      table: {\n                          ...(newState.output ? newState.output.table : {}),\n                          isModalOpen: newState.output?.table ? !newState.output.table.isModalOpen : false,\n                      },\n                  }\n                : {}\n        case 'UPDATE_OUTPUT_TAB_SELECTION':\n            if (newState) {\n                return {\n                    ...newState.output,\n                    selectedTab: action.tab,\n                }\n            }\n            break\n        case 'UPDATE_OUTPUT_SEARCH_TERM':\n            if (newState && newState.output) {\n                return {\n                    ...filter(newState.output, action.searchTerm),\n                    searchTerm: action.searchTerm,\n                    selectedTab: 'RawJson',\n                } as const\n            }\n            break\n        default:\n            if (newState?.output) {\n                return computeOutput(\n                    newState.output,\n                    newState.source?.text ? newState.source.text : '',\n                    newState.query?.text ? newState.query.text : '',\n                    action,\n                    newState.query?.mode ? newState.query.mode : 'SQL'\n                )\n            }\n            break\n    }\n    return {}\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n    if (typeof src !== 'string' && typeof src !== 'object') {\n        return { match: false, filteredObj: src }\n    }\n\n    if (typeof src === 'string') {\n        if (containsIgnoreCase(src, searchTerm)) {\n            return { match: true, filteredObj: src }\n        }\n        return { match: false, filteredObj: src }\n    }\n    const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n    const keys = Array.isArray(obj)\n        ? Array.from({ length: obj.length }, (_, k) => k)\n        : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n    let result = false\n\n    for (const propertyName of keys) {\n        const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n        if (propertyNameContains) {\n            result = true\n            continue\n        }\n        const child = obj[propertyName]\n        const { match, filteredObj } = containsTerm(child, searchTerm)\n        if (propertyNameContains || match) {\n            result = true\n            obj[propertyName] = filteredObj\n        } else {\n            if (Array.isArray(obj) && typeof propertyName === 'number') {\n                obj.splice(propertyName, 1)\n            } else {\n                delete obj[propertyName]\n            }\n        }\n    }\n    if (!result) {\n        if (!Array.isArray(obj)) {\n            ;(keys as string[]).forEach((propertyName: string) => delete obj[propertyName])\n        } else {\n            obj.length = 0\n        }\n    }\n    return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n    if (!searchTerm || searchTerm.trim() === '' || !state) {\n        return { ...state, match: false }\n    }\n    const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n    if (match) {\n        return { ...state, obj: filteredObj, match }\n    }\n\n    return state\n}\n\nconst table = (state: OupoutTableState | undefined, action: Action) => {\n    switch (action.type) {\n        case 'UPDATE_TABLE_COLUMNS':\n            let groupByList = state?.groupBy ? state.groupBy : []\n            groupByList.forEach(groupBy => {\n                if (action.columns.indexOf(groupBy) === -1) {\n                    groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n                }\n            })\n            return {\n                ...state,\n                displayedColumns: action.columns,\n                groupBy: groupByList,\n            }\n        case 'UPDATE_TABLE_GROUP_BY':\n            return {\n                ...state,\n                groupBy: action.groupBy\n                    .filter(gb => state && state.displayedColumns && state.displayedColumns.indexOf(gb) !== -1)\n                    .filter(gb => gb !== 'Group by...'),\n            }\n        default:\n            return state\n    }\n}\n\nexport const resetApp = (state = getDefaultAppState(), action: Action) => {\n    if (action.type === 'RESET_EDITOR') {\n        return rootReducer({ ...getDefaultAppState() }, action)\n    }\n    return rootReducer(state, action)\n}\n\nconst perf = (state = getDefaultAppState(), action: Action) => {\n    perfStart(`reduce - action: ${action.type}`)\n    const newState = resetApp(state, action)\n    perfEnd(`reduce - action: ${action.type}`)\n    return newState\n}\n\nconst rootReducers = combineReducers({\n    app: undoable(perf, { undoType: 'APP_UNDO', redoType: 'APP_REDO', limit: configuration.limitUndo }),\n    userSettings,\n})\nexport default rootReducers\n"]},"metadata":{},"sourceType":"module"}