{"ast":null,"code":"/* eslint-disable */\nimport { useEffect, useState } from 'react';\nimport { isClient } from './util';\n\nvar useLocalStorage = function (key, initialValue, options) {\n  if (!isClient) {\n    return [initialValue, function () {}];\n  } // Use provided serializer/deserializer or the default ones\n\n\n  var serializer = options ? options.raw ? String : options.serializer : JSON.stringify;\n  var deserializer = options ? options.raw ? String : options.deserializer : JSON.parse;\n\n  var _a = useState(function () {\n    try {\n      var localStorageValue = localStorage.getItem(key);\n\n      if (localStorageValue !== null) {\n        return deserializer(localStorageValue);\n      } else {\n        initialValue && localStorage.setItem(key, serializer(initialValue));\n        return initialValue;\n      }\n    } catch (_a) {\n      // If user is in private mode or has storage restriction\n      // localStorage can throw. JSON.parse and JSON.stringify\n      // can throw, too.\n      return initialValue;\n    }\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    try {\n      localStorage.setItem(key, serializer(state));\n    } catch (_a) {// If user is in private mode or has storage restriction\n      // localStorage can throw. Also JSON.stringify can throw.\n    }\n  }, [state]);\n  return [state, setState];\n};\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useLocalStorage.js"],"names":["useEffect","useState","isClient","useLocalStorage","key","initialValue","options","serializer","raw","String","JSON","stringify","deserializer","parse","_a","localStorageValue","localStorage","getItem","setItem","state","setState"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,QAAzB;;AACA,IAAIC,eAAe,GAAG,UAAUC,GAAV,EAAeC,YAAf,EAA6BC,OAA7B,EAAsC;AACxD,MAAI,CAACJ,QAAL,EAAe;AACX,WAAO,CAACG,YAAD,EAAe,YAAY,CAAG,CAA9B,CAAP;AACH,GAHuD,CAIxD;;;AACA,MAAIE,UAAU,GAAGD,OAAO,GAAIA,OAAO,CAACE,GAAR,GAAcC,MAAd,GAAuBH,OAAO,CAACC,UAAnC,GAAiDG,IAAI,CAACC,SAA9E;AACA,MAAIC,YAAY,GAAGN,OAAO,GAAIA,OAAO,CAACE,GAAR,GAAcC,MAAd,GAAuBH,OAAO,CAACM,YAAnC,GAAmDF,IAAI,CAACG,KAAlF;;AACA,MAAIC,EAAE,GAAGb,QAAQ,CAAC,YAAY;AAC1B,QAAI;AACA,UAAIc,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqBb,GAArB,CAAxB;;AACA,UAAIW,iBAAiB,KAAK,IAA1B,EAAgC;AAC5B,eAAOH,YAAY,CAACG,iBAAD,CAAnB;AACH,OAFD,MAGK;AACDV,QAAAA,YAAY,IAAIW,YAAY,CAACE,OAAb,CAAqBd,GAArB,EAA0BG,UAAU,CAACF,YAAD,CAApC,CAAhB;AACA,eAAOA,YAAP;AACH;AACJ,KATD,CAUA,OAAOS,EAAP,EAAW;AACP;AACA;AACA;AACA,aAAOT,YAAP;AACH;AACJ,GAjBgB,CAAjB;AAAA,MAiBIc,KAAK,GAAGL,EAAE,CAAC,CAAD,CAjBd;AAAA,MAiBmBM,QAAQ,GAAGN,EAAE,CAAC,CAAD,CAjBhC;;AAkBAd,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI;AACAgB,MAAAA,YAAY,CAACE,OAAb,CAAqBd,GAArB,EAA0BG,UAAU,CAACY,KAAD,CAApC;AACH,KAFD,CAGA,OAAOL,EAAP,EAAW,CACP;AACA;AACH;AACJ,GARQ,EAQN,CAACK,KAAD,CARM,CAAT;AASA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH,CAnCD;;AAoCA,eAAejB,eAAf","sourcesContent":["/* eslint-disable */\nimport { useEffect, useState } from 'react';\nimport { isClient } from './util';\nvar useLocalStorage = function (key, initialValue, options) {\n    if (!isClient) {\n        return [initialValue, function () { }];\n    }\n    // Use provided serializer/deserializer or the default ones\n    var serializer = options ? (options.raw ? String : options.serializer) : JSON.stringify;\n    var deserializer = options ? (options.raw ? String : options.deserializer) : JSON.parse;\n    var _a = useState(function () {\n        try {\n            var localStorageValue = localStorage.getItem(key);\n            if (localStorageValue !== null) {\n                return deserializer(localStorageValue);\n            }\n            else {\n                initialValue && localStorage.setItem(key, serializer(initialValue));\n                return initialValue;\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. JSON.parse and JSON.stringify\n            // can throw, too.\n            return initialValue;\n        }\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        try {\n            localStorage.setItem(key, serializer(state));\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. Also JSON.stringify can throw.\n        }\n    }, [state]);\n    return [state, setState];\n};\nexport default useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}