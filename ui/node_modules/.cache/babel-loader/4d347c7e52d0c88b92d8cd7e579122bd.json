{"ast":null,"code":"ace.define(\"ace/ext/spellcheck\", [\"require\", \"exports\", \"module\", \"ace/lib/event\", \"ace/editor\", \"ace/config\"], function (require, exports, module) {\n  \"use strict\";\n\n  var event = require(\"../lib/event\");\n\n  exports.contextMenuHandler = function (e) {\n    var host = e.target;\n    var text = host.textInput.getElement();\n    if (!host.selection.isEmpty()) return;\n    var c = host.getCursorPosition();\n    var r = host.session.getWordRange(c.row, c.column);\n    var w = host.session.getTextRange(r);\n    host.session.tokenRe.lastIndex = 0;\n    if (!host.session.tokenRe.test(w)) return;\n    var PLACEHOLDER = \"\\x01\\x01\";\n    var value = w + \" \" + PLACEHOLDER;\n    text.value = value;\n    text.setSelectionRange(w.length, w.length + 1);\n    text.setSelectionRange(0, 0);\n    text.setSelectionRange(0, w.length);\n    var afterKeydown = false;\n    event.addListener(text, \"keydown\", function onKeydown() {\n      event.removeListener(text, \"keydown\", onKeydown);\n      afterKeydown = true;\n    });\n    host.textInput.setInputHandler(function (newVal) {\n      if (newVal == value) return '';\n      if (newVal.lastIndexOf(value, 0) === 0) return newVal.slice(value.length);\n      if (newVal.substr(text.selectionEnd) == value) return newVal.slice(0, -value.length);\n\n      if (newVal.slice(-2) == PLACEHOLDER) {\n        var val = newVal.slice(0, -2);\n\n        if (val.slice(-1) == \" \") {\n          if (afterKeydown) return val.substring(0, text.selectionEnd);\n          val = val.slice(0, -1);\n          host.session.replace(r, val);\n          return \"\";\n        }\n      }\n\n      return newVal;\n    });\n  };\n\n  var Editor = require(\"../editor\").Editor;\n\n  require(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    spellcheck: {\n      set: function (val) {\n        var text = this.textInput.getElement();\n        text.spellcheck = !!val;\n        if (!val) this.removeListener(\"nativecontextmenu\", exports.contextMenuHandler);else this.on(\"nativecontextmenu\", exports.contextMenuHandler);\n      },\n      value: true\n    }\n  });\n});\n\n(function () {\n  ace.require([\"ace/ext/spellcheck\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/ext-spellcheck.js"],"names":["ace","define","require","exports","module","event","contextMenuHandler","e","host","target","text","textInput","getElement","selection","isEmpty","c","getCursorPosition","r","session","getWordRange","row","column","w","getTextRange","tokenRe","lastIndex","test","PLACEHOLDER","value","setSelectionRange","length","afterKeydown","addListener","onKeydown","removeListener","setInputHandler","newVal","lastIndexOf","slice","substr","selectionEnd","val","substring","replace","Editor","defineOptions","prototype","spellcheck","set","on","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/ext/spellcheck\",[\"require\",\"exports\",\"module\",\"ace/lib/event\",\"ace/editor\",\"ace/config\"], function(require, exports, module) {\n\"use strict\";\nvar event = require(\"../lib/event\");\n\nexports.contextMenuHandler = function(e){\n    var host = e.target;\n    var text = host.textInput.getElement();\n    if (!host.selection.isEmpty())\n        return;\n    var c = host.getCursorPosition();\n    var r = host.session.getWordRange(c.row, c.column);\n    var w = host.session.getTextRange(r);\n\n    host.session.tokenRe.lastIndex = 0;\n    if (!host.session.tokenRe.test(w))\n        return;\n    var PLACEHOLDER = \"\\x01\\x01\";\n    var value = w + \" \" + PLACEHOLDER;\n    text.value = value;\n    text.setSelectionRange(w.length, w.length + 1);\n    text.setSelectionRange(0, 0);\n    text.setSelectionRange(0, w.length);\n\n    var afterKeydown = false;\n    event.addListener(text, \"keydown\", function onKeydown() {\n        event.removeListener(text, \"keydown\", onKeydown);\n        afterKeydown = true;\n    });\n\n    host.textInput.setInputHandler(function(newVal) {\n        if (newVal == value)\n            return '';\n        if (newVal.lastIndexOf(value, 0) === 0)\n            return newVal.slice(value.length);\n        if (newVal.substr(text.selectionEnd) == value)\n            return newVal.slice(0, -value.length);\n        if (newVal.slice(-2) == PLACEHOLDER) {\n            var val = newVal.slice(0, -2);\n            if (val.slice(-1) == \" \") {\n                if (afterKeydown)\n                    return val.substring(0, text.selectionEnd);\n                val = val.slice(0, -1);\n                host.session.replace(r, val);\n                return \"\";\n            }\n        }\n\n        return newVal;\n    });\n};\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    spellcheck: {\n        set: function(val) {\n            var text = this.textInput.getElement();\n            text.spellcheck = !!val;\n            if (!val)\n                this.removeListener(\"nativecontextmenu\", exports.contextMenuHandler);\n            else\n                this.on(\"nativecontextmenu\", exports.contextMenuHandler);\n        },\n        value: true\n    }\n});\n\n});                (function() {\n                    ace.require([\"ace/ext/spellcheck\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}