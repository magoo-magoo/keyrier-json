{"ast":null,"code":"'use strict';\n\nvar KEBAB_REGEX = /[A-Z]/g;\n\nvar hash = function (str) {\n  var hash = 5381,\n      i = str.length;\n\n  while (i) hash = hash * 33 ^ str.charCodeAt(--i);\n\n  return '_' + (hash >>> 0).toString(36);\n};\n\nexports.create = function (config) {\n  config = config || {};\n  var assign = config.assign || Object.assign;\n  var client = typeof window === 'object'; // Check if we are really in browser environment.\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (client) {\n      if (typeof document !== 'object' || !document.getElementsByTagName('HTML')) {\n        console.error('nano-css detected browser environment because of \"window\" global, but ' + '\"document\" global seems to be defective.');\n      }\n    }\n  }\n\n  var renderer = assign({\n    raw: '',\n    pfx: '_',\n    client: client,\n    assign: assign,\n    stringify: JSON.stringify,\n    kebab: function (prop) {\n      return prop.replace(KEBAB_REGEX, '-$&').toLowerCase();\n    },\n    decl: function (key, value) {\n      key = renderer.kebab(key);\n      return key + ':' + value + ';';\n    },\n    hash: function (obj) {\n      return hash(renderer.stringify(obj));\n    },\n    selector: function (parent, selector) {\n      return parent + (selector[0] === ':' ? '' : ' ') + selector;\n    },\n    putRaw: function (rawCssRule) {\n      renderer.raw += rawCssRule;\n    }\n  }, config);\n\n  if (renderer.client) {\n    if (!renderer.sh) document.head.appendChild(renderer.sh = document.createElement('style'));\n\n    if (process.env.NODE_ENV !== 'production') {\n      renderer.sh.setAttribute('data-nano-css-dev', ''); // Test style sheet used in DEV mode to test if .insetRule() would throw.\n\n      renderer.shTest = document.createElement('style');\n      renderer.shTest.setAttribute('data-nano-css-dev-tests', '');\n      document.head.appendChild(renderer.shTest);\n    }\n\n    renderer.putRaw = function (rawCssRule) {\n      // .insertRule() is faster than .appendChild(), that's why we use it in PROD.\n      // But CSS injected using .insertRule() is not displayed in Chrome Devtools,\n      // that's why we use .appendChild in DEV.\n      if (process.env.NODE_ENV === 'production') {\n        var sheet = renderer.sh.sheet; // Unknown pseudo-selectors will throw, this try/catch swallows all errors.\n\n        try {\n          sheet.insertRule(rawCssRule, sheet.cssRules.length); // eslint-disable-next-line no-empty\n        } catch (error) {}\n      } else {\n        // Test if .insertRule() works in dev mode. Unknown pseudo-selectors will throw when\n        // .insertRule() is used, but .appendChild() will not throw.\n        try {\n          renderer.shTest.sheet.insertRule(rawCssRule, renderer.shTest.sheet.cssRules.length);\n        } catch (error) {\n          if (config.verbose) {\n            console.error(error);\n          }\n        } // Insert pretty-printed CSS for dev mode.\n\n\n        renderer.sh.appendChild(document.createTextNode(rawCssRule));\n      }\n    };\n  }\n\n  renderer.put = function (selector, decls, atrule) {\n    var str = '';\n    var prop, value;\n    var postponed = [];\n\n    for (prop in decls) {\n      value = decls[prop];\n\n      if (value instanceof Object && !(value instanceof Array)) {\n        postponed.push(prop);\n      } else {\n        if (process.env.NODE_ENV !== 'production' && !renderer.sourcemaps) {\n          str += '    ' + renderer.decl(prop, value, selector, atrule) + '\\n';\n        } else {\n          str += renderer.decl(prop, value, selector, atrule);\n        }\n      }\n    }\n\n    if (str) {\n      if (process.env.NODE_ENV !== 'production' && !renderer.sourcemaps) {\n        str = '\\n' + selector + ' {\\n' + str + '}\\n';\n      } else {\n        str = selector + '{' + str + '}';\n      }\n\n      renderer.putRaw(atrule ? atrule + '{' + str + '}' : str);\n    }\n\n    for (var i = 0; i < postponed.length; i++) {\n      prop = postponed[i];\n\n      if (prop[0] === \"@\" && prop !== \"@font-face\") {\n        renderer.putAt(selector, decls[prop], prop);\n      } else {\n        renderer.put(renderer.selector(selector, prop), decls[prop], atrule);\n      }\n    }\n  };\n\n  renderer.putAt = renderer.put;\n  return renderer;\n};","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/nano-css/index.js"],"names":["KEBAB_REGEX","hash","str","i","length","charCodeAt","toString","exports","create","config","assign","Object","client","window","process","env","NODE_ENV","document","getElementsByTagName","console","error","renderer","raw","pfx","stringify","JSON","kebab","prop","replace","toLowerCase","decl","key","value","obj","selector","parent","putRaw","rawCssRule","sh","head","appendChild","createElement","setAttribute","shTest","sheet","insertRule","cssRules","verbose","createTextNode","put","decls","atrule","postponed","Array","push","sourcemaps","putAt"],"mappings":"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","sourcesContent":["'use strict';\n\nvar KEBAB_REGEX = /[A-Z]/g;\n\nvar hash = function (str) {\n    var hash = 5381, i = str.length;\n\n    while (i) hash = (hash * 33) ^ str.charCodeAt(--i);\n\n    return '_' + (hash >>> 0).toString(36);\n};\n\nexports.create = function (config) {\n    config = config || {};\n    var assign = config.assign || Object.assign;\n    var client = typeof window === 'object';\n\n    // Check if we are really in browser environment.\n    if (process.env.NODE_ENV !== 'production') {\n        if (client) {\n            if ((typeof document !== 'object') || !document.getElementsByTagName('HTML')) {\n                console.error(\n                    'nano-css detected browser environment because of \"window\" global, but ' +\n                    '\"document\" global seems to be defective.'\n                );\n            }\n        }\n    }\n\n    var renderer = assign({\n        raw: '',\n        pfx: '_',\n        client: client,\n        assign: assign,\n        stringify: JSON.stringify,\n        kebab: function (prop) {\n            return prop.replace(KEBAB_REGEX, '-$&').toLowerCase();\n        },\n        decl: function (key, value) {\n            key = renderer.kebab(key);\n            return key + ':' + value + ';';\n        },\n        hash: function (obj) {\n            return hash(renderer.stringify(obj));\n        },\n        selector: function (parent, selector) {\n            return parent + (selector[0] === ':' ? ''  : ' ') + selector;\n        },\n        putRaw: function (rawCssRule) {\n            renderer.raw += rawCssRule;\n        },\n    }, config);\n\n    if (renderer.client) {\n        if (!renderer.sh)\n            document.head.appendChild(renderer.sh = document.createElement('style'));\n\n        if (process.env.NODE_ENV !== 'production') {\n            renderer.sh.setAttribute('data-nano-css-dev', '');\n\n            // Test style sheet used in DEV mode to test if .insetRule() would throw.\n            renderer.shTest = document.createElement('style');\n            renderer.shTest.setAttribute('data-nano-css-dev-tests', '');\n            document.head.appendChild(renderer.shTest);\n        }\n\n        renderer.putRaw = function (rawCssRule) {\n            // .insertRule() is faster than .appendChild(), that's why we use it in PROD.\n            // But CSS injected using .insertRule() is not displayed in Chrome Devtools,\n            // that's why we use .appendChild in DEV.\n            if (process.env.NODE_ENV === 'production') {\n                var sheet = renderer.sh.sheet;\n\n                // Unknown pseudo-selectors will throw, this try/catch swallows all errors.\n                try {\n                    sheet.insertRule(rawCssRule, sheet.cssRules.length);\n                // eslint-disable-next-line no-empty\n                } catch (error) {}\n            } else {\n                // Test if .insertRule() works in dev mode. Unknown pseudo-selectors will throw when\n                // .insertRule() is used, but .appendChild() will not throw.\n                try {\n                    renderer.shTest.sheet.insertRule(rawCssRule, renderer.shTest.sheet.cssRules.length);\n                } catch (error) {\n                    if (config.verbose) {\n                        console.error(error);\n                    }\n                }\n\n                // Insert pretty-printed CSS for dev mode.\n                renderer.sh.appendChild(document.createTextNode(rawCssRule));\n            }\n        };\n    }\n\n    renderer.put = function (selector, decls, atrule) {\n        var str = '';\n        var prop, value;\n        var postponed = [];\n\n        for (prop in decls) {\n            value = decls[prop];\n\n            if ((value instanceof Object) && !(value instanceof Array)) {\n                postponed.push(prop);\n            } else {\n                if ((process.env.NODE_ENV !== 'production') && !renderer.sourcemaps) {\n                    str += '    ' + renderer.decl(prop, value, selector, atrule) + '\\n';\n                } else {\n                    str += renderer.decl(prop, value, selector, atrule);\n                }\n            }\n        }\n\n        if (str) {\n            if ((process.env.NODE_ENV !== 'production') && !renderer.sourcemaps) {\n                str = '\\n' + selector + ' {\\n' + str + '}\\n';\n            } else {\n                str = selector + '{' + str + '}';\n            }\n            renderer.putRaw(atrule ? atrule + '{' + str + '}' : str);\n        }\n\n        for (var i = 0; i < postponed.length; i++) {\n            prop = postponed[i];\n\n            if (prop[0] === \"@\" && prop !== \"@font-face\") {\n                renderer.putAt(selector, decls[prop], prop);\n            } else {\n                renderer.put(renderer.selector(selector, prop), decls[prop], atrule);\n            }\n        }\n    };\n\n    renderer.putAt = renderer.put;\n\n    return renderer;\n};\n"]},"metadata":{},"sourceType":"script"}