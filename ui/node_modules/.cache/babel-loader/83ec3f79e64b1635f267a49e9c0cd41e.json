{"ast":null,"code":"import { __assign, __spreadArrays } from \"tslib\";\n/* eslint-disable */\n\nimport { useCallback, useState } from 'react';\nimport useAsync from './useAsync';\n\nvar useAsyncRetry = function (fn, deps) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  var _a = useState(0),\n      attempt = _a[0],\n      setAttempt = _a[1];\n\n  var state = useAsync(fn, __spreadArrays(deps, [attempt]));\n  var stateLoading = state.loading;\n  var retry = useCallback(function () {\n    if (stateLoading) {\n      if (process.env.NODE_ENV === 'development') {\n        console.log('You are calling useAsyncRetry hook retry() method while loading in progress, this is a no-op.');\n      }\n\n      return;\n    }\n\n    setAttempt(function (currentAttempt) {\n      return currentAttempt + 1;\n    });\n  }, __spreadArrays(deps, [stateLoading]));\n  return __assign(__assign({}, state), {\n    retry: retry\n  });\n};\n\nexport default useAsyncRetry;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useAsyncRetry.js"],"names":["__assign","__spreadArrays","useCallback","useState","useAsync","useAsyncRetry","fn","deps","_a","attempt","setAttempt","state","stateLoading","loading","retry","process","env","NODE_ENV","console","log","currentAttempt"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,OAAzC;AACA;;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,IAAIC,aAAa,GAAG,UAAUC,EAAV,EAAcC,IAAd,EAAoB;AACpC,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,IAAAA,IAAI,GAAG,EAAP;AAAY;;AACnC,MAAIC,EAAE,GAAGL,QAAQ,CAAC,CAAD,CAAjB;AAAA,MAAsBM,OAAO,GAAGD,EAAE,CAAC,CAAD,CAAlC;AAAA,MAAuCE,UAAU,GAAGF,EAAE,CAAC,CAAD,CAAtD;;AACA,MAAIG,KAAK,GAAGP,QAAQ,CAACE,EAAD,EAAKL,cAAc,CAACM,IAAD,EAAO,CAACE,OAAD,CAAP,CAAnB,CAApB;AACA,MAAIG,YAAY,GAAGD,KAAK,CAACE,OAAzB;AACA,MAAIC,KAAK,GAAGZ,WAAW,CAAC,YAAY;AAChC,QAAIU,YAAJ,EAAkB;AACd,UAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAY,+FAAZ;AACH;;AACD;AACH;;AACDT,IAAAA,UAAU,CAAC,UAAUU,cAAV,EAA0B;AAAE,aAAOA,cAAc,GAAG,CAAxB;AAA4B,KAAzD,CAAV;AACH,GARsB,EAQpBnB,cAAc,CAACM,IAAD,EAAO,CAACK,YAAD,CAAP,CARM,CAAvB;AASA,SAAOZ,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKW,KAAL,CAAT,EAAsB;AAAEG,IAAAA,KAAK,EAAEA;AAAT,GAAtB,CAAf;AACH,CAfD;;AAgBA,eAAeT,aAAf","sourcesContent":["import { __assign, __spreadArrays } from \"tslib\";\n/* eslint-disable */\nimport { useCallback, useState } from 'react';\nimport useAsync from './useAsync';\nvar useAsyncRetry = function (fn, deps) {\n    if (deps === void 0) { deps = []; }\n    var _a = useState(0), attempt = _a[0], setAttempt = _a[1];\n    var state = useAsync(fn, __spreadArrays(deps, [attempt]));\n    var stateLoading = state.loading;\n    var retry = useCallback(function () {\n        if (stateLoading) {\n            if (process.env.NODE_ENV === 'development') {\n                console.log('You are calling useAsyncRetry hook retry() method while loading in progress, this is a no-op.');\n            }\n            return;\n        }\n        setAttempt(function (currentAttempt) { return currentAttempt + 1; });\n    }, __spreadArrays(deps, [stateLoading]));\n    return __assign(__assign({}, state), { retry: retry });\n};\nexport default useAsyncRetry;\n"]},"metadata":{},"sourceType":"module"}