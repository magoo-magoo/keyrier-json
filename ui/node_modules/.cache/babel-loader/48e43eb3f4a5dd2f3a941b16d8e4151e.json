{"ast":null,"code":"ace.define(\"ace/mode/jack_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var JackHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"string\",\n        regex: '\"',\n        next: \"string2\"\n      }, {\n        token: \"string\",\n        regex: \"'\",\n        next: \"string1\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"-?0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"(?:0|[-+]?[1-9][0-9]*)\\\\b\"\n      }, {\n        token: \"constant.binary\",\n        regex: \"<[0-9A-Fa-f][0-9A-Fa-f](\\\\s+[0-9A-Fa-f][0-9A-Fa-f])*>\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: \"constant.language.null\",\n        regex: \"null\\\\b\"\n      }, {\n        token: \"storage.type\",\n        regex: \"(?:Integer|Boolean|Null|String|Buffer|Tuple|List|Object|Function|Coroutine|Form)\\\\b\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:return|abort|vars|for|delete|in|is|escape|exec|split|and|if|elif|else|while)\\\\b\"\n      }, {\n        token: \"language.builtin\",\n        regex: \"(?:lines|source|parse|read-stream|interval|substr|parseint|write|print|range|rand|inspect|bind|i-values|i-pairs|i-map|i-filter|i-chunk|i-all\\\\?|i-any\\\\?|i-collect|i-zip|i-merge|i-each)\\\\b\"\n      }, {\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"storage.form\",\n        regex: \"@[a-z]+\"\n      }, {\n        token: \"constant.other.symbol\",\n        regex: ':+[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?'\n      }, {\n        token: \"variable\",\n        regex: '[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?'\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\|\\\\||\\\\^\\\\^|&&|!=|==|<=|<|>=|>|\\\\+|-|\\\\*|\\\\/|\\\\^|\\\\%|\\\\#|\\\\!\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"string1\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|['\"\\\\\\/bfnrt])/\n      }, {\n        token: \"string\",\n        regex: \"[^'\\\\\\\\]+\"\n      }, {\n        token: \"string\",\n        regex: \"'\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: \"\",\n        next: \"start\"\n      }],\n      \"string2\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|['\"\\\\\\/bfnrt])/\n      }, {\n        token: \"string\",\n        regex: '[^\"\\\\\\\\]+'\n      }, {\n        token: \"string\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: \"\",\n        next: \"start\"\n      }]\n    };\n  };\n\n  oop.inherits(JackHighlightRules, TextHighlightRules);\n  exports.JackHighlightRules = JackHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/jack\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/jack_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var HighlightRules = require(\"./jack_highlight_rules\").JackHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/jack\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/jack\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-jack.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","JackHighlightRules","$rules","token","regex","next","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","HighlightRules","CstyleBehaviour","CStyleFoldMode","$outdent","$behaviour","foldingRules","lineCommentStart","getNextLineIndent","state","tab","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/jack_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JackHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"string\",\n                regex : '\"',\n                next  : \"string2\"\n            }, {\n                token : \"string\",\n                regex : \"'\",\n                next  : \"string1\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex: \"-?0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"(?:0|[-+]?[1-9][0-9]*)\\\\b\"\n            }, {\n                token : \"constant.binary\",\n                regex : \"<[0-9A-Fa-f][0-9A-Fa-f](\\\\s+[0-9A-Fa-f][0-9A-Fa-f])*>\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : \"constant.language.null\",\n                regex : \"null\\\\b\"\n            }, {\n                token : \"storage.type\",\n                regex: \"(?:Integer|Boolean|Null|String|Buffer|Tuple|List|Object|Function|Coroutine|Form)\\\\b\"\n            }, {\n                token : \"keyword\",\n                regex : \"(?:return|abort|vars|for|delete|in|is|escape|exec|split|and|if|elif|else|while)\\\\b\"\n            }, {\n                token : \"language.builtin\",\n                regex : \"(?:lines|source|parse|read-stream|interval|substr|parseint|write|print|range|rand|inspect|bind|i-values|i-pairs|i-map|i-filter|i-chunk|i-all\\\\?|i-any\\\\?|i-collect|i-zip|i-merge|i-each)\\\\b\"\n            }, {\n                token : \"comment\",\n                regex : \"--.*$\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"storage.form\",\n                regex : \"@[a-z]+\"\n            }, {\n                token : \"constant.other.symbol\",\n                regex : ':+[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?'\n            }, {\n                token : \"variable\",\n                regex : '[a-zA-Z_]([-]?[a-zA-Z0-9_])*[?!]?'\n            }, {\n                token : \"keyword.operator\",\n                regex : \"\\\\|\\\\||\\\\^\\\\^|&&|!=|==|<=|<|>=|>|\\\\+|-|\\\\*|\\\\/|\\\\^|\\\\%|\\\\#|\\\\!\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"string1\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|['\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : \"[^'\\\\\\\\]+\"\n            }, {\n                token : \"string\",\n                regex : \"'\",\n                next  : \"start\"\n            }, {\n                token : \"string\",\n                regex : \"\",\n                next  : \"start\"\n            }\n        ],\n        \"string2\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|['\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : '[^\"\\\\\\\\]+'\n            }, {\n                token : \"string\",\n                regex : '\"',\n                next  : \"start\"\n            }, {\n                token : \"string\",\n                regex : \"\",\n                next  : \"start\"\n            }\n        ]\n    };\n    \n};\n\noop.inherits(JackHighlightRules, TextHighlightRules);\n\nexports.JackHighlightRules = JackHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/jack\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/jack_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HighlightRules = require(\"./jack_highlight_rules\").JackHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"--\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n\n    this.$id = \"ace/mode/jack\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/jack\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}