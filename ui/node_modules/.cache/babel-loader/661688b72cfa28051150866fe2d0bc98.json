{"ast":null,"code":"import lodash from 'lodash';\nexport const codeEvaluation = (sourceString, queryString, mode) => {\n  if (!sourceString || !queryString) {\n    return null;\n  }\n\n  if (sourceString.trim() === '') {\n    return null;\n  }\n\n  if (queryString.trim() === '') {\n    return null;\n  }\n\n  if (mode === 'Javascript') {\n    return jsEvaluation(sourceString, queryString);\n  } else if (mode === 'SQL') {\n    return sqlEvaluation(sourceString, queryString);\n  }\n\n  return new Error('unsupported mode');\n};\n\nconst jsEvaluation = (sourceString, queryString) => {\n  try {\n    window._ = lodash;\n    const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString}) \n      `; // eslint-disable-next-line\n\n    const evaluatedQuery = eval(code); // DANGEROUS\n\n    return evaluatedQuery;\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/ui/src/core/code.ts"],"names":["lodash","codeEvaluation","sourceString","queryString","mode","trim","jsEvaluation","sqlEvaluation","Error","window","_","code","evaluatedQuery","eval","error"],"mappings":"AAEA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,YAAD,EAAuBC,WAAvB,EAA4CC,IAA5C,KAAgE;AAC1F,MAAI,CAACF,YAAD,IAAiB,CAACC,WAAtB,EAAmC;AAC/B,WAAO,IAAP;AACH;;AAED,MAAID,YAAY,CAACG,IAAb,OAAwB,EAA5B,EAAgC;AAC5B,WAAO,IAAP;AACH;;AAED,MAAIF,WAAW,CAACE,IAAZ,OAAuB,EAA3B,EAA+B;AAC3B,WAAO,IAAP;AACH;;AAED,MAAID,IAAI,KAAK,YAAb,EAA2B;AACvB,WAAOE,YAAY,CAACJ,YAAD,EAAeC,WAAf,CAAnB;AACH,GAFD,MAEO,IAAIC,IAAI,KAAK,KAAb,EAAoB;AACvB,WAAOG,aAAa,CAACL,YAAD,EAAeC,WAAf,CAApB;AACH;;AAED,SAAO,IAAIK,KAAJ,CAAU,kBAAV,CAAP;AACH,CApBM;;AAsBP,MAAMF,YAAY,GAAG,CAACJ,YAAD,EAAuBC,WAAvB,KAAsE;AACvF,MAAI;AACAM,IAAAA,MAAM,CAACC,CAAP,GAAWV,MAAX;AACA,UAAMW,IAAI,GAAI;;4BAEMT,YAAa;yBAChBC,WAAY;OAH7B,CAFA,CAOA;;AACA,UAAMS,cAAc,GAAGC,IAAI,CAACF,IAAD,CAA3B,CARA,CAQkC;;AAClC,WAAOC,cAAP;AACH,GAVD,CAUE,OAAOE,KAAP,EAAc;AACZ,WAAOA,KAAP;AACH;AACJ,CAdD","sourcesContent":["import { QueryMode } from '../state/State'\nimport { parsesqlEvaluation } from '@keyrier/core'\nimport lodash from 'lodash'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode) => {\n    if (!sourceString || !queryString) {\n        return null\n    }\n\n    if (sourceString.trim() === '') {\n        return null\n    }\n\n    if (queryString.trim() === '') {\n        return null\n    }\n\n    if (mode === 'Javascript') {\n        return jsEvaluation(sourceString, queryString)\n    } else if (mode === 'SQL') {\n        return sqlEvaluation(sourceString, queryString)\n    }\n\n    return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string): null | string | Error => {\n    try {\n        window._ = lodash\n        const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString}) \n      `\n        // eslint-disable-next-line\n        const evaluatedQuery = eval(code) // DANGEROUS\n        return evaluatedQuery\n    } catch (error) {\n        return error\n    }\n}\n"]},"metadata":{},"sourceType":"module"}