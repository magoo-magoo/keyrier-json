{"ast":null,"code":"import rootReducers from 'reducers/reducers';\nimport { compose, createStore } from 'redux';\nimport persistence from './persistence';\nexport const configureStore = async () => {\n  var _appState$past, _appState$future;\n\n  const appState = await persistence.getAppState();\n  const userSettingsState = await persistence.getUserSettings();\n  const composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n  const store = createStore(rootReducers, {\n    app: {\n      past: (_appState$past = appState.past) !== null && _appState$past !== void 0 ? _appState$past : [],\n      present: appState.present,\n      future: (_appState$future = appState.future) !== null && _appState$future !== void 0 ? _appState$future : []\n    },\n    userSettings: userSettingsState\n  }, composeEnhancers());\n  store.subscribe(() => {\n    persistence.persistAppState(store.getState().app);\n    persistence.persistUserSettings(store.getState().userSettings);\n  });\n  return store;\n};","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/ui/src/store/store.ts"],"names":["rootReducers","compose","createStore","persistence","configureStore","appState","getAppState","userSettingsState","getUserSettings","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","app","past","present","future","userSettings","subscribe","persistAppState","getState","persistUserSettings"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AAAA;;AACtC,QAAMC,QAAQ,GAAG,MAAMF,WAAW,CAACG,WAAZ,EAAvB;AACA,QAAMC,iBAAiB,GAAG,MAAMJ,WAAW,CAACK,eAAZ,EAAhC;AAEA,QAAMC,gBAAgB,GAClB,OAAOC,MAAP,KAAkB,QAAlB,IAA+BA,MAAD,CAAgBC,oCAA9C,GACOD,MAAD,CAAgBC,oCAAhB,CAAqD,EAArD,CADN,GAEMV,OAHV;AAKA,QAAMW,KAAK,GAAGV,WAAW,CACrBF,YADqB,EAErB;AACIa,IAAAA,GAAG,EAAE;AACDC,MAAAA,IAAI,oBAAET,QAAQ,CAACS,IAAX,2DAAmB,EADtB;AAEDC,MAAAA,OAAO,EAAEV,QAAQ,CAACU,OAFjB;AAGDC,MAAAA,MAAM,sBAAEX,QAAQ,CAACW,MAAX,+DAAqB;AAH1B,KADT;AAMIC,IAAAA,YAAY,EAAEV;AANlB,GAFqB,EAUrBE,gBAAgB,EAVK,CAAzB;AAaAG,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AAClBf,IAAAA,WAAW,CAACgB,eAAZ,CAA4BP,KAAK,CAACQ,QAAN,GAAiBP,GAA7C;AACAV,IAAAA,WAAW,CAACkB,mBAAZ,CAAgCT,KAAK,CAACQ,QAAN,GAAiBH,YAAjD;AACH,GAHD;AAKA,SAAOL,KAAP;AACH,CA5BM","sourcesContent":["import rootReducers from 'reducers/reducers'\nimport { compose, createStore } from 'redux'\nimport persistence from './persistence'\n\nexport const configureStore = async () => {\n    const appState = await persistence.getAppState()\n    const userSettingsState = await persistence.getUserSettings()\n\n    const composeEnhancers =\n        typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n            ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n            : compose\n\n    const store = createStore(\n        rootReducers,\n        {\n            app: {\n                past: appState.past ?? [],\n                present: appState.present,\n                future: appState.future ?? [],\n            },\n            userSettings: userSettingsState,\n        },\n        composeEnhancers()\n    )\n\n    store.subscribe(() => {\n        persistence.persistAppState(store.getState().app)\n        persistence.persistUserSettings(store.getState().userSettings)\n    })\n\n    return store\n}\n"]},"metadata":{},"sourceType":"module"}