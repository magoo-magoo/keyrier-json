{"ast":null,"code":"ace.define(\"ace/snippets/r\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippetText = \"snippet #!\\n\\\n\t#!/usr/bin/env Rscript\\n\\\n\\n\\\n# includes\\n\\\nsnippet lib\\n\\\n\tlibrary(${1:package})\\n\\\nsnippet req\\n\\\n\trequire(${1:package})\\n\\\nsnippet source\\n\\\n\tsource('${1:file}')\\n\\\n\\n\\\n# conditionals\\n\\\nsnippet if\\n\\\n\tif (${1:condition}) {\\n\\\n\t\t${2:code}\\n\\\n\t}\\n\\\nsnippet el\\n\\\n\telse {\\n\\\n\t\t${1:code}\\n\\\n\t}\\n\\\nsnippet ei\\n\\\n\telse if (${1:condition}) {\\n\\\n\t\t${2:code}\\n\\\n\t}\\n\\\n\\n\\\n# functions\\n\\\nsnippet fun\\n\\\n\t${1:name} = function (${2:variables}) {\\n\\\n\t\t${3:code}\\n\\\n\t}\\n\\\nsnippet ret\\n\\\n\treturn(${1:code})\\n\\\n\\n\\\n# dataframes, lists, etc\\n\\\nsnippet df\\n\\\n\t${1:name}[${2:rows}, ${3:cols}]\\n\\\nsnippet c\\n\\\n\tc(${1:items})\\n\\\nsnippet li\\n\\\n\tlist(${1:items})\\n\\\nsnippet mat\\n\\\n\tmatrix(${1:data}, nrow=${2:rows}, ncol=${3:cols})\\n\\\n\\n\\\n# apply functions\\n\\\nsnippet apply\\n\\\n\tapply(${1:array}, ${2:margin}, ${3:function})\\n\\\nsnippet lapply\\n\\\n\tlapply(${1:list}, ${2:function})\\n\\\nsnippet sapply\\n\\\n\tsapply(${1:list}, ${2:function})\\n\\\nsnippet vapply\\n\\\n\tvapply(${1:list}, ${2:function}, ${3:type})\\n\\\nsnippet mapply\\n\\\n\tmapply(${1:function}, ${2:...})\\n\\\nsnippet tapply\\n\\\n\ttapply(${1:vector}, ${2:index}, ${3:function})\\n\\\nsnippet rapply\\n\\\n\trapply(${1:list}, ${2:function})\\n\\\n\\n\\\n# plyr functions\\n\\\nsnippet dd\\n\\\n\tddply(${1:frame}, ${2:variables}, ${3:function})\\n\\\nsnippet dl\\n\\\n\tdlply(${1:frame}, ${2:variables}, ${3:function})\\n\\\nsnippet da\\n\\\n\tdaply(${1:frame}, ${2:variables}, ${3:function})\\n\\\nsnippet d_\\n\\\n\td_ply(${1:frame}, ${2:variables}, ${3:function})\\n\\\n\\n\\\nsnippet ad\\n\\\n\tadply(${1:array}, ${2:margin}, ${3:function})\\n\\\nsnippet al\\n\\\n\talply(${1:array}, ${2:margin}, ${3:function})\\n\\\nsnippet aa\\n\\\n\taaply(${1:array}, ${2:margin}, ${3:function})\\n\\\nsnippet a_\\n\\\n\ta_ply(${1:array}, ${2:margin}, ${3:function})\\n\\\n\\n\\\nsnippet ld\\n\\\n\tldply(${1:list}, ${2:function})\\n\\\nsnippet ll\\n\\\n\tllply(${1:list}, ${2:function})\\n\\\nsnippet la\\n\\\n\tlaply(${1:list}, ${2:function})\\n\\\nsnippet l_\\n\\\n\tl_ply(${1:list}, ${2:function})\\n\\\n\\n\\\nsnippet md\\n\\\n\tmdply(${1:matrix}, ${2:function})\\n\\\nsnippet ml\\n\\\n\tmlply(${1:matrix}, ${2:function})\\n\\\nsnippet ma\\n\\\n\tmaply(${1:matrix}, ${2:function})\\n\\\nsnippet m_\\n\\\n\tm_ply(${1:matrix}, ${2:function})\\n\\\n\\n\\\n# plot functions\\n\\\nsnippet pl\\n\\\n\tplot(${1:x}, ${2:y})\\n\\\nsnippet ggp\\n\\\n\tggplot(${1:data}, aes(${2:aesthetics}))\\n\\\nsnippet img\\n\\\n\t${1:(jpeg,bmp,png,tiff)}(filename=\\\"${2:filename}\\\", width=${3}, height=${4}, unit=\\\"${5}\\\")\\n\\\n\t${6:plot}\\n\\\n\tdev.off()\\n\\\n\\n\\\n# statistical test functions\\n\\\nsnippet fis\\n\\\n\tfisher.test(${1:x}, ${2:y})\\n\\\nsnippet chi\\n\\\n\tchisq.test(${1:x}, ${2:y})\\n\\\nsnippet tt\\n\\\n\tt.test(${1:x}, ${2:y})\\n\\\nsnippet wil\\n\\\n\twilcox.test(${1:x}, ${2:y})\\n\\\nsnippet cor\\n\\\n\tcor.test(${1:x}, ${2:y})\\n\\\nsnippet fte\\n\\\n\tvar.test(${1:x}, ${2:y})\\n\\\nsnippet kvt \\n\\\n\tkv.test(${1:x}, ${2:y})\\n\\\n\";\n  exports.scope = \"r\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/r\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/snippets/r.js"],"names":["ace","define","require","exports","module","snippetText","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,gBAAX,EAA4B,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAA5B,EAA4D,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAC/F;;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;AA0HAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,GAAhB;AAEC,CA/HD;;AA+HmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,gBAAD,CAAZ,EAAgC,UAASK,CAAT,EAAY;AACxC,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/r\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\nexports.snippetText = \"snippet #!\\n\\\n\t#!/usr/bin/env Rscript\\n\\\n\\n\\\n# includes\\n\\\nsnippet lib\\n\\\n\tlibrary(${1:package})\\n\\\nsnippet req\\n\\\n\trequire(${1:package})\\n\\\nsnippet source\\n\\\n\tsource('${1:file}')\\n\\\n\\n\\\n# conditionals\\n\\\nsnippet if\\n\\\n\tif (${1:condition}) {\\n\\\n\t\t${2:code}\\n\\\n\t}\\n\\\nsnippet el\\n\\\n\telse {\\n\\\n\t\t${1:code}\\n\\\n\t}\\n\\\nsnippet ei\\n\\\n\telse if (${1:condition}) {\\n\\\n\t\t${2:code}\\n\\\n\t}\\n\\\n\\n\\\n# functions\\n\\\nsnippet fun\\n\\\n\t${1:name} = function (${2:variables}) {\\n\\\n\t\t${3:code}\\n\\\n\t}\\n\\\nsnippet ret\\n\\\n\treturn(${1:code})\\n\\\n\\n\\\n# dataframes, lists, etc\\n\\\nsnippet df\\n\\\n\t${1:name}[${2:rows}, ${3:cols}]\\n\\\nsnippet c\\n\\\n\tc(${1:items})\\n\\\nsnippet li\\n\\\n\tlist(${1:items})\\n\\\nsnippet mat\\n\\\n\tmatrix(${1:data}, nrow=${2:rows}, ncol=${3:cols})\\n\\\n\\n\\\n# apply functions\\n\\\nsnippet apply\\n\\\n\tapply(${1:array}, ${2:margin}, ${3:function})\\n\\\nsnippet lapply\\n\\\n\tlapply(${1:list}, ${2:function})\\n\\\nsnippet sapply\\n\\\n\tsapply(${1:list}, ${2:function})\\n\\\nsnippet vapply\\n\\\n\tvapply(${1:list}, ${2:function}, ${3:type})\\n\\\nsnippet mapply\\n\\\n\tmapply(${1:function}, ${2:...})\\n\\\nsnippet tapply\\n\\\n\ttapply(${1:vector}, ${2:index}, ${3:function})\\n\\\nsnippet rapply\\n\\\n\trapply(${1:list}, ${2:function})\\n\\\n\\n\\\n# plyr functions\\n\\\nsnippet dd\\n\\\n\tddply(${1:frame}, ${2:variables}, ${3:function})\\n\\\nsnippet dl\\n\\\n\tdlply(${1:frame}, ${2:variables}, ${3:function})\\n\\\nsnippet da\\n\\\n\tdaply(${1:frame}, ${2:variables}, ${3:function})\\n\\\nsnippet d_\\n\\\n\td_ply(${1:frame}, ${2:variables}, ${3:function})\\n\\\n\\n\\\nsnippet ad\\n\\\n\tadply(${1:array}, ${2:margin}, ${3:function})\\n\\\nsnippet al\\n\\\n\talply(${1:array}, ${2:margin}, ${3:function})\\n\\\nsnippet aa\\n\\\n\taaply(${1:array}, ${2:margin}, ${3:function})\\n\\\nsnippet a_\\n\\\n\ta_ply(${1:array}, ${2:margin}, ${3:function})\\n\\\n\\n\\\nsnippet ld\\n\\\n\tldply(${1:list}, ${2:function})\\n\\\nsnippet ll\\n\\\n\tllply(${1:list}, ${2:function})\\n\\\nsnippet la\\n\\\n\tlaply(${1:list}, ${2:function})\\n\\\nsnippet l_\\n\\\n\tl_ply(${1:list}, ${2:function})\\n\\\n\\n\\\nsnippet md\\n\\\n\tmdply(${1:matrix}, ${2:function})\\n\\\nsnippet ml\\n\\\n\tmlply(${1:matrix}, ${2:function})\\n\\\nsnippet ma\\n\\\n\tmaply(${1:matrix}, ${2:function})\\n\\\nsnippet m_\\n\\\n\tm_ply(${1:matrix}, ${2:function})\\n\\\n\\n\\\n# plot functions\\n\\\nsnippet pl\\n\\\n\tplot(${1:x}, ${2:y})\\n\\\nsnippet ggp\\n\\\n\tggplot(${1:data}, aes(${2:aesthetics}))\\n\\\nsnippet img\\n\\\n\t${1:(jpeg,bmp,png,tiff)}(filename=\\\"${2:filename}\\\", width=${3}, height=${4}, unit=\\\"${5}\\\")\\n\\\n\t${6:plot}\\n\\\n\tdev.off()\\n\\\n\\n\\\n# statistical test functions\\n\\\nsnippet fis\\n\\\n\tfisher.test(${1:x}, ${2:y})\\n\\\nsnippet chi\\n\\\n\tchisq.test(${1:x}, ${2:y})\\n\\\nsnippet tt\\n\\\n\tt.test(${1:x}, ${2:y})\\n\\\nsnippet wil\\n\\\n\twilcox.test(${1:x}, ${2:y})\\n\\\nsnippet cor\\n\\\n\tcor.test(${1:x}, ${2:y})\\n\\\nsnippet fte\\n\\\n\tvar.test(${1:x}, ${2:y})\\n\\\nsnippet kvt \\n\\\n\tkv.test(${1:x}, ${2:y})\\n\\\n\";\nexports.scope = \"r\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/r\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}