{"ast":null,"code":"ace.define(\"ace/mode/nim_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var NimHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"variable\": \"var|let|const\",\n      \"keyword\": \"assert|parallel|spawn|export|include|from|template|mixin|bind|import|concept|raise|defer|try|finally|except|converter|proc|func|macro|method|and|or|not|xor|shl|shr|div|mod|in|notin|is|isnot|of|static|if|elif|else|case|of|discard|when|return|yield|block|break|while|echo|continue|asm|using|cast|addr|unsafeAddr|type|ref|ptr|do|declared|defined|definedInScope|compiles|sizeOf|is|shallowCopy|getAst|astToStr|spawn|procCall|for|iterator|as\",\n      \"storage.type\": \"newSeq|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|char|bool|string|set|pointer|float32|float64|enum|object|cstring|array|seq|openArray|varargs|UncheckedArray|tuple|set|distinct|void|auto|openarray|range\",\n      \"support.function\": \"lock|ze|toU8|toU16|toU32|ord|low|len|high|add|pop|contains|card|incl|excl|dealloc|inc\",\n      \"constant.language\": \"nil|true|false\"\n    }, \"identifier\");\n    var hexNumber = \"(?:0[xX][\\\\dA-Fa-f][\\\\dA-Fa-f_]*)\";\n    var decNumber = \"(?:[0-9][\\\\d_]*)\";\n    var octNumber = \"(?:0o[0-7][0-7_]*)\";\n    var binNumber = \"(?:0[bB][01][01_]*)\";\n    var intNumber = \"(?:\" + hexNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'?[iIuU](?:8|16|32|64)|u)?\\\\b\";\n    var exponent = \"(?:[eE][+-]?[\\\\d][\\\\d_]*)\";\n    var floatNumber = \"(?:[\\\\d][\\\\d_]*(?:[.][\\\\d](?:[\\\\d_]*)\" + exponent + \"?)|\" + exponent + \")\";\n    var floatNumberExt = \"(?:\" + hexNumber + \"(?:'(?:(?:[fF](?:32|64)?)|[dD])))|(?:\" + floatNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'(?:(?:[fF](?:32|64)?)|[dD]))\";\n    var stringEscape = \"\\\\\\\\([abeprcnlftv\\\\\\\"']|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    var identifier = '[a-zA-Z][a-zA-Z0-9_]*';\n    this.$rules = {\n      \"start\": [{\n        token: [\"identifier\", \"keyword.operator\", \"support.function\"],\n        regex: \"(\" + identifier + \")([.]{1})(\" + identifier + \")(?=\\\\()\"\n      }, {\n        //pragmas\n        token: \"paren.lparen\",\n        regex: \"(\\\\{\\\\.)\",\n        next: [{\n          token: \"paren.rparen\",\n          regex: '(\\\\.\\\\}|\\\\})',\n          next: \"start\"\n        }, {\n          include: \"methods\"\n        }, {\n          token: \"identifier\",\n          regex: identifier\n        }, {\n          token: \"punctuation\",\n          regex: /[,]/\n        }, {\n          token: \"keyword.operator\",\n          regex: /[=:.]/\n        }, {\n          token: \"paren.lparen\",\n          regex: /[[(]/\n        }, {\n          token: \"paren.rparen\",\n          regex: /[\\])]/\n        }, {\n          include: \"math\"\n        }, {\n          include: \"strings\"\n        }, {\n          defaultToken: \"text\"\n        }]\n      }, {\n        token: \"comment.doc.start\",\n        regex: /##\\[(?!])/,\n        push: \"docBlockComment\"\n      }, {\n        token: \"comment.start\",\n        regex: /#\\[(?!])/,\n        push: \"blockComment\"\n      }, {\n        token: \"comment.doc\",\n        regex: '##.*$'\n      }, {\n        token: \"comment\",\n        regex: '#.*$'\n      }, {\n        include: \"strings\"\n      }, {\n        // character\n        token: \"string\",\n        regex: \"'(?:\\\\\\\\(?:[abercnlftv]|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})|.{1})?'\"\n      }, {\n        include: \"methods\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\n      }, {\n        token: [\"keyword.operator\", \"text\", \"storage.type\"],\n        regex: \"([:])(\\\\s+)(\" + identifier + \")(?=$|\\\\)|\\\\[|,|\\\\s+=|;|\\\\s+\\\\{)\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /\\[\\.|{\\||\\(\\.|\\[:|[[({`]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /\\.\\)|\\|}|\\.]|[\\])}]/\n      }, {\n        token: \"keyword.operator\",\n        regex: /[=+\\-*\\/<>@$~&%|!?^.:\\\\]/\n      }, {\n        token: \"punctuation\",\n        regex: /[,;]/\n      }, {\n        include: \"math\"\n      }],\n      blockComment: [{\n        regex: /#\\[]/,\n        token: \"comment\"\n      }, {\n        regex: /#\\[(?!])/,\n        token: \"comment.start\",\n        push: \"blockComment\"\n      }, {\n        regex: /]#/,\n        token: \"comment.end\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      docBlockComment: [{\n        regex: /##\\[]/,\n        token: \"comment.doc\"\n      }, {\n        regex: /##\\[(?!])/,\n        token: \"comment.doc.start\",\n        push: \"docBlockComment\"\n      }, {\n        regex: /]##/,\n        token: \"comment.doc.end\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"comment.doc\"\n      }],\n      math: [{\n        token: \"constant.float\",\n        regex: floatNumberExt\n      }, {\n        token: \"constant.float\",\n        regex: floatNumber\n      }, {\n        token: \"constant.integer\",\n        regex: intNumber\n      }],\n      methods: [{\n        token: \"support.function\",\n        regex: \"(\\\\w+)(?=\\\\()\"\n      }],\n      strings: [{\n        token: \"string\",\n        regex: '(\\\\b' + identifier + ')?\"\"\"',\n        push: [{\n          token: \"string\",\n          regex: '\"\"\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        regex: \"\\\\b\" + identifier + '\"(?=.)',\n        push: [{\n          token: \"string\",\n          regex: '\"|$',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        regex: '\"',\n        push: [{\n          token: \"string\",\n          regex: '\"|$',\n          next: \"pop\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: stringEscape\n        }, {\n          defaultToken: \"string\"\n        }]\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(NimHighlightRules, TextHighlightRules);\n  exports.NimHighlightRules = NimHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/nim\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/nim_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var NimHighlightRules = require(\"./nim_highlight_rules\").NimHighlightRules;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    TextMode.call(this);\n    this.HighlightRules = NimHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = {\n      start: \"#[\",\n      end: \"]#\",\n      nestable: true\n    };\n    this.$id = \"ace/mode/nim\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/nim\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-nim.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","NimHighlightRules","keywordMapper","createKeywordMapper","hexNumber","decNumber","octNumber","binNumber","intNumber","exponent","floatNumber","floatNumberExt","stringEscape","identifier","$rules","token","regex","next","include","defaultToken","push","blockComment","docBlockComment","math","methods","strings","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","CStyleFoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","nestable","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/nim_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar NimHighlightRules = function () {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"variable\": \"var|let|const\",\n        \"keyword\": \"assert|parallel|spawn|export|include|from|template|mixin|bind|import|concept|raise|defer|try|finally|except|converter|proc|func|macro|method|and|or|not|xor|shl|shr|div|mod|in|notin|is|isnot|of|static|if|elif|else|case|of|discard|when|return|yield|block|break|while|echo|continue|asm|using|cast|addr|unsafeAddr|type|ref|ptr|do|declared|defined|definedInScope|compiles|sizeOf|is|shallowCopy|getAst|astToStr|spawn|procCall|for|iterator|as\",\n        \"storage.type\": \"newSeq|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|char|bool|string|set|pointer|float32|float64|enum|object|cstring|array|seq|openArray|varargs|UncheckedArray|tuple|set|distinct|void|auto|openarray|range\",\n        \"support.function\": \"lock|ze|toU8|toU16|toU32|ord|low|len|high|add|pop|contains|card|incl|excl|dealloc|inc\",\n        \"constant.language\": \"nil|true|false\"\n    }, \"identifier\");\n\n    var hexNumber = \"(?:0[xX][\\\\dA-Fa-f][\\\\dA-Fa-f_]*)\";\n    var decNumber = \"(?:[0-9][\\\\d_]*)\";\n    var octNumber = \"(?:0o[0-7][0-7_]*)\";\n    var binNumber = \"(?:0[bB][01][01_]*)\";\n    var intNumber = \"(?:\" + hexNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'?[iIuU](?:8|16|32|64)|u)?\\\\b\";\n    var exponent = \"(?:[eE][+-]?[\\\\d][\\\\d_]*)\";\n    var floatNumber = \"(?:[\\\\d][\\\\d_]*(?:[.][\\\\d](?:[\\\\d_]*)\" + exponent + \"?)|\" + exponent + \")\";\n    var floatNumberExt = \"(?:\" + hexNumber + \"(?:'(?:(?:[fF](?:32|64)?)|[dD])))|(?:\" + floatNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'(?:(?:[fF](?:32|64)?)|[dD]))\";\n    var stringEscape = \"\\\\\\\\([abeprcnlftv\\\\\\\"']|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    var identifier = '[a-zA-Z][a-zA-Z0-9_]*';\n    this.$rules = {\n        \"start\": [{\n            token: [\"identifier\", \"keyword.operator\", \"support.function\"],\n            regex: \"(\" + identifier + \")([.]{1})(\" + identifier + \")(?=\\\\()\"\n        }, {//pragmas\n            token: \"paren.lparen\",\n            regex: \"(\\\\{\\\\.)\",\n            next: [{\n                token: \"paren.rparen\",\n                regex: '(\\\\.\\\\}|\\\\})',\n                next: \"start\"\n            }, {\n                include: \"methods\"\n            }, {\n                token: \"identifier\",\n                regex: identifier\n            }, {\n                token: \"punctuation\",\n                regex: /[,]/\n            }, {\n                token: \"keyword.operator\",\n                regex: /[=:.]/\n            }, {\n                token: \"paren.lparen\",\n                regex: /[[(]/\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])]/\n            }, {\n                include: \"math\"\n            }, {\n                include: \"strings\"\n            }, {\n                defaultToken: \"text\"\n            }]\n        }, {\n            token: \"comment.doc.start\",\n            regex: /##\\[(?!])/,\n            push: \"docBlockComment\"\n        }, {\n            token: \"comment.start\",\n            regex: /#\\[(?!])/,\n            push: \"blockComment\"\n        }, {\n            token: \"comment.doc\",\n            regex: '##.*$'\n        }, {\n            token: \"comment\",\n            regex: '#.*$'\n        }, {\n            include: \"strings\"\n        }, {// character\n            token: \"string\",\n            regex: \"'(?:\\\\\\\\(?:[abercnlftv]|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})|.{1})?'\"\n        }, {\n            include: \"methods\"\n        }, {\n            token: keywordMapper,\n            regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\n        }, {\n            token: [\"keyword.operator\", \"text\", \"storage.type\"],\n            regex: \"([:])(\\\\s+)(\" + identifier + \")(?=$|\\\\)|\\\\[|,|\\\\s+=|;|\\\\s+\\\\{)\"\n        }, {\n            token: \"paren.lparen\",\n            regex: /\\[\\.|{\\||\\(\\.|\\[:|[[({`]/\n        }, {\n            token: \"paren.rparen\",\n            regex: /\\.\\)|\\|}|\\.]|[\\])}]/\n        }, {\n            token: \"keyword.operator\",\n            regex: /[=+\\-*\\/<>@$~&%|!?^.:\\\\]/\n        }, {\n            token: \"punctuation\",\n            regex: /[,;]/\n        }, {\n            include: \"math\"\n        }],\n        blockComment: [{\n            regex: /#\\[]/,\n            token: \"comment\"\n        }, {\n            regex: /#\\[(?!])/,\n            token: \"comment.start\",\n            push: \"blockComment\"\n        }, {\n            regex: /]#/,\n            token: \"comment.end\",\n            next: \"pop\"\n        }, {\n            defaultToken: \"comment\"\n        }],\n        docBlockComment: [{\n            regex: /##\\[]/,\n            token: \"comment.doc\"\n        }, {\n            regex: /##\\[(?!])/,\n            token: \"comment.doc.start\",\n            push: \"docBlockComment\"\n        }, {\n            regex: /]##/,\n            token: \"comment.doc.end\",\n            next: \"pop\"\n        }, {\n            defaultToken: \"comment.doc\"\n        }],\n        math: [{\n            token: \"constant.float\",\n            regex: floatNumberExt\n        }, {\n            token: \"constant.float\",\n            regex: floatNumber\n        }, {\n            token: \"constant.integer\",\n            regex: intNumber\n        }],\n        methods: [{\n            token: \"support.function\",\n            regex: \"(\\\\w+)(?=\\\\()\"\n        }],\n        strings: [{\n            token: \"string\",\n            regex: '(\\\\b' + identifier + ')?\"\"\"',\n            push: [{\n                token: \"string\",\n                regex: '\"\"\"',\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            token: \"string\",\n            regex: \"\\\\b\" + identifier + '\"(?=.)',\n            push: [{\n                token: \"string\",\n                regex: '\"|$',\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            token: \"string\",\n            regex: '\"',\n            push: [{\n                token: \"string\",\n                regex: '\"|$',\n                next: \"pop\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                defaultToken: \"string\"\n            }]\n        }]\n    };\n    this.normalizeRules();\n};\n\n\noop.inherits(NimHighlightRules, TextHighlightRules);\n\nexports.NimHighlightRules = NimHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/nim\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/nim_highlight_rules\",\"ace/mode/folding/cstyle\"], function (require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar NimHighlightRules = require(\"./nim_highlight_rules\").NimHighlightRules;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function () {\n    TextMode.call(this);\n    this.HighlightRules = NimHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\n\noop.inherits(Mode, TextMode);\n\n\n(function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = {start: \"#[\", end: \"]#\", nestable: true};\n\n\n    this.$id = \"ace/mode/nim\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/nim\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}