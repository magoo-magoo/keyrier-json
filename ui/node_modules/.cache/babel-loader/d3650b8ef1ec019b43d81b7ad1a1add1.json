{"ast":null,"code":"ace.define(\"ace/mode/red_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var RedHighlightRules = function () {\n    var compoundKeywords = \"\";\n    this.$rules = {\n      \"start\": [{\n        token: \"keyword.operator\",\n        regex: /\\s([\\-+%/=<>*]|(?:\\*\\*\\|\\/\\/|==|>>>?|<>|<<|=>|<=|=\\?))(\\s|(?=:))/\n      }, {\n        token: \"string.email\",\n        regex: /\\w[-\\w._]*\\@\\w[-\\w._]*/\n      }, {\n        token: \"value.time\",\n        regex: /\\b\\d+:\\d+(:\\d+)?/\n      }, {\n        token: \"string.url\",\n        regex: /\\w[-\\w_]*\\:(\\/\\/)?\\w[-\\w._]*(:\\d+)?/\n      }, {\n        token: \"value.date\",\n        regex: /(\\b\\d{1,4}[-/]\\d{1,2}[-/]\\d{1,2}|\\d{1,2}[-/]\\d{1,2}[-/]\\d{1,4})\\b/\n      }, {\n        token: \"value.tuple\",\n        regex: /\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(\\.\\d{1,3}){0,9}/\n      }, {\n        token: \"value.pair\",\n        regex: /[+-]?\\d+x[-+]?\\d+/\n      }, {\n        token: \"value.binary\",\n        regex: /\\b2#{([01]{8})+}/\n      }, {\n        token: \"value.binary\",\n        regex: /\\b64#{([\\w/=+])+}/\n      }, {\n        token: \"value.binary\",\n        regex: /(16)?#{([\\dabcdefABCDEF][\\dabcdefABCDEF])*}/\n      }, {\n        token: \"value.issue\",\n        regex: /#\\w[-\\w'*.]*/\n      }, {\n        token: \"value.numeric\",\n        regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?e[-+]?\\d{1,3}\\%?(?!\\w)/\n      }, {\n        token: \"invalid.illegal\",\n        regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?[a-zA-Z]/\n      }, {\n        token: \"value.numeric\",\n        regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?(?![a-zA-Z])/\n      }, {\n        token: \"value.character\",\n        regex: /#\"(\\^[-@/_~^\"HKLM\\[]|.)\"/\n      }, {\n        token: \"string.file\",\n        regex: /%[-\\w\\.\\/]+/\n      }, {\n        token: \"string.tag\",\n        regex: /</,\n        next: \"tag\"\n      }, {\n        token: \"string\",\n        regex: /\"/,\n        next: \"string\"\n      }, {\n        token: \"string.other\",\n        regex: \"{\",\n        next: \"string.other\"\n      }, {\n        token: \"comment\",\n        regex: \"comment [{]\",\n        next: \"comment\"\n      }, {\n        token: \"comment\",\n        regex: /;.+$/\n      }, {\n        token: \"paren.map-start\",\n        regex: \"#\\\\(\"\n      }, {\n        token: \"paren.block-start\",\n        regex: \"[\\\\[]\"\n      }, {\n        token: \"paren.block-end\",\n        regex: \"[\\\\]]\"\n      }, {\n        token: \"paren.parens-start\",\n        regex: \"[(]\"\n      }, {\n        token: \"paren.parens-end\",\n        regex: \"\\\\)\"\n      }, {\n        token: \"keyword\",\n        regex: \"/local|/external\"\n      }, {\n        token: \"keyword.preprocessor\",\n        regex: \"#(if|either|\" + \"switch|case|include|do|macrolocal|reset|process|trace)\"\n      }, {\n        token: \"constant.datatype!\",\n        regex: \"(?:datatype|unset|none|logic|block|paren|string|\" + \"file|url|char|integer|float|word|set-word|lit-word|\" + \"get-word|refinement|issue|native|action|op|function|\" + \"path|lit-path|set-path|get-path|routine|bitset|point|\" + \"object|typeset|error|vector|hash|pair|percent|tuple|\" + \"map|binary|time|tag|email|handle|date|image|event|\" + \"series|any-type|number|any-object|scalar|\" + \"any-string|any-word|any-function|any-block|any-list|\" + \"any-path|immediate|all-word|internal|external|default)!(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.function\",\n        regex: \"\\\\b(?:collect|quote|on-parse-event|math|last|source|expand|\" + \"show|context|object|input|quit|dir|make-dir|cause-error|\" + \"error\\\\?|none\\\\?|block\\\\?|any-list\\\\?|word\\\\?|char\\\\?|\" + \"any-string\\\\?|series\\\\?|binary\\\\?|attempt|url\\\\?|\" + \"string\\\\?|suffix\\\\?|file\\\\?|object\\\\?|body-of|first|\" + \"second|third|mod|clean-path|dir\\\\?|to-red-file|\" + \"normalize-dir|list-dir|pad|empty\\\\?|dirize|offset\\\\?|\" + \"what-dir|expand-directives|load|split-path|change-dir|\" + \"to-file|path-thru|save|load-thru|View|float\\\\?|to-float|\" + \"charset|\\\\?|probe|set-word\\\\?|q|words-of|replace|repend|\" + \"react|function\\\\?|spec-of|unset\\\\?|halt|op\\\\?|\" + \"any-function\\\\?|to-paren|tag\\\\?|routine|class-of|\" + \"size-text|draw|handle\\\\?|link-tabs-to-parent|\" + \"link-sub-to-parent|on-face-deep-change*|\" + \"update-font-faces|do-actor|do-safe|do-events|pair\\\\?|\" + \"foreach-face|hex-to-rgb|issue\\\\?|alter|path\\\\?|\" + \"typeset\\\\?|datatype\\\\?|set-flag|layout|extract|image\\\\?|\" + \"get-word\\\\?|to-logic|to-set-word|to-block|center-face|\" + \"dump-face|request-font|request-file|request-dir|rejoin|\" + \"ellipsize-at|any-block\\\\?|any-object\\\\?|map\\\\?|keys-of|\" + \"a-an|also|parse-func-spec|help-string|what|routine\\\\?|\" + \"action\\\\?|native\\\\?|refinement\\\\?|common-substr|\" + \"red-complete-file|red-complete-path|unview|comment|\\\\?\\\\?|\" + \"fourth|fifth|values-of|bitset\\\\?|email\\\\?|get-path\\\\?|\" + \"hash\\\\?|integer\\\\?|lit-path\\\\?|lit-word\\\\?|logic\\\\?|\" + \"paren\\\\?|percent\\\\?|set-path\\\\?|time\\\\?|tuple\\\\?|date\\\\?|\" + \"vector\\\\?|any-path\\\\?|any-word\\\\?|number\\\\?|immediate\\\\?|\" + \"scalar\\\\?|all-word\\\\?|to-bitset|to-binary|to-char|to-email|\" + \"to-get-path|to-get-word|to-hash|to-integer|to-issue|\" + \"to-lit-path|to-lit-word|to-map|to-none|to-pair|to-path|\" + \"to-percent|to-refinement|to-set-path|to-string|to-tag|\" + \"to-time|to-typeset|to-tuple|to-unset|to-url|to-word|\" + \"to-image|to-date|parse-trace|modulo|eval-set-path|\" + \"extract-boot-args|flip-exe-flag|split|do-file|\" + \"exists-thru\\\\?|read-thru|do-thru|cos|sin|tan|acos|asin|\" + \"atan|atan2|sqrt|clear-reactions|dump-reactions|react\\\\?|\" + \"within\\\\?|overlap\\\\?|distance\\\\?|face\\\\?|metrics\\\\?|\" + \"get-scroller|insert-event-func|remove-event-func|\" + \"set-focus|help|fetch-help|about|ls|ll|pwd|cd|\" + \"red-complete-input|matrix)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.action\",\n        regex: \"\\\\b(?:to|remove|copy|insert|change|clear|move|poke|put|\" + \"random|reverse|sort|swap|take|trim|add|subtract|\" + \"divide|multiply|make|reflect|form|mold|modify|\" + \"absolute|negate|power|remainder|round|even\\\\?|odd\\\\?|\" + \"and~|complement|or~|xor~|append|at|back|find|skip|\" + \"tail|head|head\\\\?|index\\\\?|length\\\\?|next|pick|\" + \"select|tail\\\\?|delete|read|write)(?![-_!?\\\\w~])\"\n      }, {\n        token: \"keyword.native\",\n        regex: \"\\\\b(?:not|any|set|uppercase|lowercase|checksum|\" + \"try|catch|browse|throw|all|as|\" + \"remove-each|func|function|does|has|do|reduce|\" + \"compose|get|print|prin|equal\\\\?|not-equal\\\\?|\" + \"strict-equal\\\\?|lesser\\\\?|greater\\\\?|lesser-or-equal\\\\?|\" + \"greater-or-equal\\\\?|same\\\\?|type\\\\?|stats|bind|in|parse|\" + \"union|unique|intersect|difference|exclude|\" + \"complement\\\\?|dehex|negative\\\\?|positive\\\\?|max|min|\" + \"shift|to-hex|sine|cosine|tangent|arcsine|arccosine|\" + \"arctangent|arctangent2|NaN\\\\?|zero\\\\?|log-2|log-10|log-e|\" + \"exp|square-root|construct|value\\\\?|as-pair|\" + \"extend|debase|enbase|to-local-file|\" + \"wait|unset|new-line|new-line\\\\?|context\\\\?|set-env|\" + \"get-env|list-env|now|sign\\\\?|call|size\\\\?)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword\",\n        regex: \"\\\\b(?:Red(?=\\\\s+\\\\[)|object|context|make|self|keep)(?![-!?\\\\w~])\"\n      }, {\n        token: \"variable.language\",\n        regex: \"this\"\n      }, {\n        token: \"keyword.control\",\n        regex: \"(?:while|if|return|case|unless|either|until|loop|repeat|\" + \"forever|foreach|forall|switch|break|continue|exit)(?![-!?\\\\w~])\"\n      }, {\n        token: \"constant.language\",\n        regex: \"\\\\b(?:true|false|on|off|yes|none|no)(?![-!?\\\\w~])\"\n      }, {\n        token: \"constant.numeric\",\n        regex: /\\bpi(?![^-_])/\n      }, {\n        token: \"constant.character\",\n        regex: \"\\\\b(space|tab|newline|cr|lf)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\s(or|and|xor|is)\\s\"\n      }, {\n        token: \"variable.get-path\",\n        regex: /:\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/\n      }, {\n        token: \"variable.set-path\",\n        regex: /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*:/\n      }, {\n        token: \"variable.lit-path\",\n        regex: /'\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/\n      }, {\n        token: \"variable.path\",\n        regex: /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/\n      }, {\n        token: \"variable.refinement\",\n        regex: /\\/\\w[-\\w'*.?!]*/\n      }, {\n        token: \"keyword.view.style\",\n        regex: \"\\\\b(?:window|base|button|text|field|area|check|\" + \"radio|progress|slider|camera|text-list|\" + \"drop-list|drop-down|panel|group-box|\" + \"tab-panel|h1|h2|h3|h4|h5|box|image|init)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.view.event\",\n        regex: \"\\\\b(?:detect|on-detect|time|on-time|drawing|on-drawing|\" + \"scroll|on-scroll|down|on-down|up|on-up|mid-down|\" + \"on-mid-down|mid-up|on-mid-up|alt-down|on-alt-down|\" + \"alt-up|on-alt-up|aux-down|on-aux-down|aux-up|\" + \"on-aux-up|wheel|on-wheel|drag-start|on-drag-start|\" + \"drag|on-drag|drop|on-drop|click|on-click|dbl-click|\" + \"on-dbl-click|over|on-over|key|on-key|key-down|\" + \"on-key-down|key-up|on-key-up|ime|on-ime|focus|\" + \"on-focus|unfocus|on-unfocus|select|on-select|\" + \"change|on-change|enter|on-enter|menu|on-menu|close|\" + \"on-close|move|on-move|resize|on-resize|moving|\" + \"on-moving|resizing|on-resizing|zoom|on-zoom|pan|\" + \"on-pan|rotate|on-rotate|two-tap|on-two-tap|\" + \"press-tap|on-press-tap|create|on-create|created|on-created)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.view.option\",\n        regex: \"\\\\b(?:all-over|center|color|default|disabled|down|\" + \"flags|focus|font|font-color|font-name|\" + \"font-size|hidden|hint|left|loose|name|\" + \"no-border|now|rate|react|select|size|space)(?![-!?\\\\w~])\"\n      }, {\n        token: \"constant.other.colour\",\n        regex: \"\\\\b(?:Red|white|transparent|\" + \"black|gray|aqua|beige|blue|brick|brown|coal|coffee|\" + \"crimson|cyan|forest|gold|green|ivory|khaki|leaf|linen|\" + \"magenta|maroon|mint|navy|oldrab|olive|orange|papaya|\" + \"pewter|pink|purple|reblue|rebolor|sienna|silver|sky|\" + \"snow|tanned|teal|violet|water|wheat|yello|yellow|glass)(?![-!?\\\\w~])\"\n      }, {\n        token: \"variable.get-word\",\n        regex: /\\:\\w[-\\w'*.?!]*/\n      }, {\n        token: \"variable.set-word\",\n        regex: /\\w[-\\w'*.?!]*\\:/\n      }, {\n        token: \"variable.lit-word\",\n        regex: /'\\w[-\\w'*.?!]*/\n      }, {\n        token: \"variable.word\",\n        regex: /\\b\\w+[-\\w'*.!?]*/\n      }, {\n        caseInsensitive: true\n      }],\n      \"string\": [{\n        token: \"string\",\n        regex: /\"/,\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"string.other\": [{\n        token: \"string.other\",\n        regex: /}/,\n        next: \"start\"\n      }, {\n        defaultToken: \"string.other\"\n      }],\n      \"tag\": [{\n        token: \"string.tag\",\n        regex: />/,\n        next: \"start\"\n      }, {\n        defaultToken: \"string.tag\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        regex: /}/,\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n  };\n\n  oop.inherits(RedHighlightRules, TextHighlightRules);\n  exports.RedHighlightRules = RedHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/red\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/red_highlight_rules\", \"ace/mode/folding/cstyle\", \"ace/mode/matching_brace_outdent\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var RedHighlightRules = require(\"./red_highlight_rules\").RedHighlightRules;\n\n  var RedFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var Range = require(\"../range\").Range;\n\n  var Mode = function () {\n    this.HighlightRules = RedHighlightRules;\n    this.foldingRules = new RedFoldMode();\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \";\";\n    this.blockComment = {\n      start: \"comment {\",\n      end: \"}\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\[\\(]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      } else if (state == \"doc-start\") {\n        if (endState == \"start\") {\n          return \"\";\n        }\n\n        var match = line.match(/^\\s*(\\/?)\\*/);\n\n        if (match) {\n          if (match[1]) {\n            indent += \" \";\n          }\n\n          indent += \"* \";\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/red\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/red\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-red.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","RedHighlightRules","compoundKeywords","$rules","token","regex","next","caseInsensitive","defaultToken","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","MatchingBraceOutdent","checkOutdent","input","autoOutdent","doc","column","openBracePos","findMatchingBracket","$getIndent","TextMode","Mode","RedFoldMode","HighlightRules","foldingRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/red_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar RedHighlightRules = function() {\n\n    var compoundKeywords = \"\";        \n\n    this.$rules = {\n        \"start\" : [\n            {token : \"keyword.operator\", \n                regex: /\\s([\\-+%/=<>*]|(?:\\*\\*\\|\\/\\/|==|>>>?|<>|<<|=>|<=|=\\?))(\\s|(?=:))/},\n            {token : \"string.email\", regex : /\\w[-\\w._]*\\@\\w[-\\w._]*/},\n            {token : \"value.time\", regex : /\\b\\d+:\\d+(:\\d+)?/},\n            {token : \"string.url\", regex : /\\w[-\\w_]*\\:(\\/\\/)?\\w[-\\w._]*(:\\d+)?/},\n            {token : \"value.date\", regex : /(\\b\\d{1,4}[-/]\\d{1,2}[-/]\\d{1,2}|\\d{1,2}[-/]\\d{1,2}[-/]\\d{1,4})\\b/},\n            {token : \"value.tuple\", regex : /\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(\\.\\d{1,3}){0,9}/},\n            {token : \"value.pair\", regex: /[+-]?\\d+x[-+]?\\d+/},\n            {token : \"value.binary\", regex : /\\b2#{([01]{8})+}/},\n            {token : \"value.binary\", regex : /\\b64#{([\\w/=+])+}/},\n            {token : \"value.binary\", regex : /(16)?#{([\\dabcdefABCDEF][\\dabcdefABCDEF])*}/},\n            {token : \"value.issue\", regex : /#\\w[-\\w'*.]*/},\n            {token : \"value.numeric\", regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?e[-+]?\\d{1,3}\\%?(?!\\w)/},\n            {token : \"invalid.illegal\", regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?[a-zA-Z]/},\n            {token : \"value.numeric\", regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?(?![a-zA-Z])/},\n            {token : \"value.character\", regex : /#\"(\\^[-@/_~^\"HKLM\\[]|.)\"/},\n            {token : \"string.file\", regex : /%[-\\w\\.\\/]+/},\n            {token : \"string.tag\", regex : /</, next : \"tag\"},\n            {token : \"string\", regex : /\"/, next  : \"string\"},\n            {token : \"string.other\", regex : \"{\", next  : \"string.other\"},\n            {token : \"comment\", regex : \"comment [{]\", next : \"comment\"},\n            {token : \"comment\",  regex : /;.+$/},\n            {token : \"paren.map-start\", regex : \"#\\\\(\"},\n            {token : \"paren.block-start\", regex : \"[\\\\[]\"},\n            {token : \"paren.block-end\", regex : \"[\\\\]]\"},\n            {token : \"paren.parens-start\", regex : \"[(]\"},\n            {token : \"paren.parens-end\", regex : \"\\\\)\"},\n            {token : \"keyword\", regex : \"/local|/external\"},\n            {token : \"keyword.preprocessor\", regex : \"#(if|either|\" +\n                \"switch|case|include|do|macrolocal|reset|process|trace)\"},\n            {token : \"constant.datatype!\", regex : \n                \"(?:datatype|unset|none|logic|block|paren|string|\" +\n                \"file|url|char|integer|float|word|set-word|lit-word|\" +\n                \"get-word|refinement|issue|native|action|op|function|\" +\n                \"path|lit-path|set-path|get-path|routine|bitset|point|\" + \n                \"object|typeset|error|vector|hash|pair|percent|tuple|\" +\n                \"map|binary|time|tag|email|handle|date|image|event|\" +\n                \"series|any-type|number|any-object|scalar|\" +\n                \"any-string|any-word|any-function|any-block|any-list|\" +\n                \"any-path|immediate|all-word|internal|external|default)!(?![-!?\\\\w~])\"},\n            {token : \"keyword.function\", regex : \n                \"\\\\b(?:collect|quote|on-parse-event|math|last|source|expand|\" +\n                \"show|context|object|input|quit|dir|make-dir|cause-error|\" +\n                \"error\\\\?|none\\\\?|block\\\\?|any-list\\\\?|word\\\\?|char\\\\?|\" +\n                \"any-string\\\\?|series\\\\?|binary\\\\?|attempt|url\\\\?|\" +\n                \"string\\\\?|suffix\\\\?|file\\\\?|object\\\\?|body-of|first|\" +\n                \"second|third|mod|clean-path|dir\\\\?|to-red-file|\" +\n                \"normalize-dir|list-dir|pad|empty\\\\?|dirize|offset\\\\?|\" +\n                \"what-dir|expand-directives|load|split-path|change-dir|\" +\n                \"to-file|path-thru|save|load-thru|View|float\\\\?|to-float|\" +\n                \"charset|\\\\?|probe|set-word\\\\?|q|words-of|replace|repend|\" +\n                \"react|function\\\\?|spec-of|unset\\\\?|halt|op\\\\?|\" +\n                \"any-function\\\\?|to-paren|tag\\\\?|routine|class-of|\" +\n                \"size-text|draw|handle\\\\?|link-tabs-to-parent|\" +\n                \"link-sub-to-parent|on-face-deep-change*|\" +\n                \"update-font-faces|do-actor|do-safe|do-events|pair\\\\?|\" +\n                \"foreach-face|hex-to-rgb|issue\\\\?|alter|path\\\\?|\" +\n                \"typeset\\\\?|datatype\\\\?|set-flag|layout|extract|image\\\\?|\" +\n                \"get-word\\\\?|to-logic|to-set-word|to-block|center-face|\" +\n                \"dump-face|request-font|request-file|request-dir|rejoin|\" +\n                \"ellipsize-at|any-block\\\\?|any-object\\\\?|map\\\\?|keys-of|\" +\n                \"a-an|also|parse-func-spec|help-string|what|routine\\\\?|\" +\n                \"action\\\\?|native\\\\?|refinement\\\\?|common-substr|\" +\n                \"red-complete-file|red-complete-path|unview|comment|\\\\?\\\\?|\" +\n                \"fourth|fifth|values-of|bitset\\\\?|email\\\\?|get-path\\\\?|\" +\n                \"hash\\\\?|integer\\\\?|lit-path\\\\?|lit-word\\\\?|logic\\\\?|\" +\n                \"paren\\\\?|percent\\\\?|set-path\\\\?|time\\\\?|tuple\\\\?|date\\\\?|\" +\n                \"vector\\\\?|any-path\\\\?|any-word\\\\?|number\\\\?|immediate\\\\?|\" +\n                \"scalar\\\\?|all-word\\\\?|to-bitset|to-binary|to-char|to-email|\" +\n                \"to-get-path|to-get-word|to-hash|to-integer|to-issue|\" +\n                \"to-lit-path|to-lit-word|to-map|to-none|to-pair|to-path|\" +\n                \"to-percent|to-refinement|to-set-path|to-string|to-tag|\" +\n                \"to-time|to-typeset|to-tuple|to-unset|to-url|to-word|\" +\n                \"to-image|to-date|parse-trace|modulo|eval-set-path|\" +\n                \"extract-boot-args|flip-exe-flag|split|do-file|\" +\n                \"exists-thru\\\\?|read-thru|do-thru|cos|sin|tan|acos|asin|\" +\n                \"atan|atan2|sqrt|clear-reactions|dump-reactions|react\\\\?|\" +\n                \"within\\\\?|overlap\\\\?|distance\\\\?|face\\\\?|metrics\\\\?|\" +\n                \"get-scroller|insert-event-func|remove-event-func|\" +\n                \"set-focus|help|fetch-help|about|ls|ll|pwd|cd|\" +\n                \"red-complete-input|matrix)(?![-!?\\\\w~])\"},\n            {token : \"keyword.action\", regex : \n                \"\\\\b(?:to|remove|copy|insert|change|clear|move|poke|put|\" +\n                \"random|reverse|sort|swap|take|trim|add|subtract|\" +\n                \"divide|multiply|make|reflect|form|mold|modify|\" +\n                \"absolute|negate|power|remainder|round|even\\\\?|odd\\\\?|\" +\n                \"and~|complement|or~|xor~|append|at|back|find|skip|\" +\n                \"tail|head|head\\\\?|index\\\\?|length\\\\?|next|pick|\" +\n                \"select|tail\\\\?|delete|read|write)(?![-_!?\\\\w~])\"\n            },\n            {token : \"keyword.native\", regex : \n                \"\\\\b(?:not|any|set|uppercase|lowercase|checksum|\" +\n                \"try|catch|browse|throw|all|as|\" +\n                \"remove-each|func|function|does|has|do|reduce|\" +\n                \"compose|get|print|prin|equal\\\\?|not-equal\\\\?|\" +\n                \"strict-equal\\\\?|lesser\\\\?|greater\\\\?|lesser-or-equal\\\\?|\" +\n                \"greater-or-equal\\\\?|same\\\\?|type\\\\?|stats|bind|in|parse|\" +\n                \"union|unique|intersect|difference|exclude|\" +\n                \"complement\\\\?|dehex|negative\\\\?|positive\\\\?|max|min|\" +\n                \"shift|to-hex|sine|cosine|tangent|arcsine|arccosine|\" +\n                \"arctangent|arctangent2|NaN\\\\?|zero\\\\?|log-2|log-10|log-e|\" +\n                \"exp|square-root|construct|value\\\\?|as-pair|\" +\n                \"extend|debase|enbase|to-local-file|\" +\n                \"wait|unset|new-line|new-line\\\\?|context\\\\?|set-env|\" +\n                \"get-env|list-env|now|sign\\\\?|call|size\\\\?)(?![-!?\\\\w~])\"\n            },\n            {token : \"keyword\", regex : \n                \"\\\\b(?:Red(?=\\\\s+\\\\[)|object|context|make|self|keep)(?![-!?\\\\w~])\"\n            },\n            {token: \"variable.language\", regex : \"this\"},\n            {token: \"keyword.control\", regex : \n                \"(?:while|if|return|case|unless|either|until|loop|repeat|\" +\n                \"forever|foreach|forall|switch|break|continue|exit)(?![-!?\\\\w~])\"},\n            {token: \"constant.language\", regex : \n                \"\\\\b(?:true|false|on|off|yes|none|no)(?![-!?\\\\w~])\"},\n            {token: \"constant.numeric\", regex : /\\bpi(?![^-_])/},\n            {token: \"constant.character\", regex : \"\\\\b(space|tab|newline|cr|lf)(?![-!?\\\\w~])\"},\n            {token: \"keyword.operator\", regex : \"\\s(or|and|xor|is)\\s\"},\n            {token : \"variable.get-path\", regex : /:\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/},\n            {token : \"variable.set-path\", regex : /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*:/},\n            {token : \"variable.lit-path\", regex : /'\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/},\n            {token : \"variable.path\", regex : /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/},\n            {token : \"variable.refinement\", regex : /\\/\\w[-\\w'*.?!]*/}, \n            {token : \"keyword.view.style\", regex : \n                \"\\\\b(?:window|base|button|text|field|area|check|\" +\n                \"radio|progress|slider|camera|text-list|\" +\n                \"drop-list|drop-down|panel|group-box|\" +\n                \"tab-panel|h1|h2|h3|h4|h5|box|image|init)(?![-!?\\\\w~])\"},\n            {token : \"keyword.view.event\", regex : \n                \"\\\\b(?:detect|on-detect|time|on-time|drawing|on-drawing|\" +\n                \"scroll|on-scroll|down|on-down|up|on-up|mid-down|\" +\n                \"on-mid-down|mid-up|on-mid-up|alt-down|on-alt-down|\" +\n                \"alt-up|on-alt-up|aux-down|on-aux-down|aux-up|\" +\n                \"on-aux-up|wheel|on-wheel|drag-start|on-drag-start|\" +\n                \"drag|on-drag|drop|on-drop|click|on-click|dbl-click|\" +\n                \"on-dbl-click|over|on-over|key|on-key|key-down|\" +\n                \"on-key-down|key-up|on-key-up|ime|on-ime|focus|\" +\n                \"on-focus|unfocus|on-unfocus|select|on-select|\" +\n                \"change|on-change|enter|on-enter|menu|on-menu|close|\" +\n                \"on-close|move|on-move|resize|on-resize|moving|\" +\n                \"on-moving|resizing|on-resizing|zoom|on-zoom|pan|\" +\n                \"on-pan|rotate|on-rotate|two-tap|on-two-tap|\" +\n                \"press-tap|on-press-tap|create|on-create|created|on-created)(?![-!?\\\\w~])\"},\n            {token : \"keyword.view.option\", regex : \n                \"\\\\b(?:all-over|center|color|default|disabled|down|\" +\n                \"flags|focus|font|font-color|font-name|\" +\n                \"font-size|hidden|hint|left|loose|name|\" +\n                \"no-border|now|rate|react|select|size|space)(?![-!?\\\\w~])\"},\n            {token : \"constant.other.colour\", regex : \"\\\\b(?:Red|white|transparent|\" +\n                \"black|gray|aqua|beige|blue|brick|brown|coal|coffee|\" +\n                \"crimson|cyan|forest|gold|green|ivory|khaki|leaf|linen|\" +\n                \"magenta|maroon|mint|navy|oldrab|olive|orange|papaya|\" +\n                \"pewter|pink|purple|reblue|rebolor|sienna|silver|sky|\" +\n                \"snow|tanned|teal|violet|water|wheat|yello|yellow|glass)(?![-!?\\\\w~])\"},\n            {token : \"variable.get-word\", regex : /\\:\\w[-\\w'*.?!]*/}, \n            {token : \"variable.set-word\", regex : /\\w[-\\w'*.?!]*\\:/}, \n            {token : \"variable.lit-word\", regex : /'\\w[-\\w'*.?!]*/},\n            {token : \"variable.word\", regex : /\\b\\w+[-\\w'*.!?]*/},\n            {caseInsensitive: true}\n        ],\n        \"string\" : [\n            {token : \"string\", regex : /\"/, next : \"start\"},\n            {defaultToken : \"string\"}\n        ],\n        \"string.other\" : [\n            {token : \"string.other\", regex : /}/, next : \"start\"},\n            {defaultToken : \"string.other\"}\n        ],\n        \"tag\" : [\n            {token : \"string.tag\", regex : />/, next : \"start\"},\n            {defaultToken : \"string.tag\"}\n        ],\n        \"comment\" : [\n            {token : \"comment\", regex : /}/, next : \"start\"},\n            {defaultToken : \"comment\"}\n        ]\n    };\n};\noop.inherits(RedHighlightRules, TextHighlightRules);\n\nexports.RedHighlightRules = RedHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/red\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/red_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/mode/matching_brace_outdent\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RedHighlightRules = require(\"./red_highlight_rules\").RedHighlightRules;\nvar RedFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = require(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = RedHighlightRules;\n    this.foldingRules = new RedFoldMode();\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \";\";\n    this.blockComment = { start: \"comment {\", end: \"}\" };\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\[\\(]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        } else if (state == \"doc-start\") {\n            if (endState == \"start\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/red\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/red\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}