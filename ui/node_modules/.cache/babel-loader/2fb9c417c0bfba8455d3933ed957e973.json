{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ParserDefinitionErrorType } from \"../parser/parser\";\nimport { forEach, values } from \"../../utils/utils\";\nimport { GAstVisitor } from \"./gast/gast_visitor_public\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n  var refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n  refResolver.resolveRefs();\n  return refResolver.errors;\n}\n\nvar GastRefResolverVisitor =\n/** @class */\nfunction (_super) {\n  __extends(GastRefResolverVisitor, _super);\n\n  function GastRefResolverVisitor(nameToTopRule, errMsgProvider) {\n    var _this = _super.call(this) || this;\n\n    _this.nameToTopRule = nameToTopRule;\n    _this.errMsgProvider = errMsgProvider;\n    _this.errors = [];\n    return _this;\n  }\n\n  GastRefResolverVisitor.prototype.resolveRefs = function () {\n    var _this = this;\n\n    forEach(values(this.nameToTopRule), function (prod) {\n      _this.currTopLevel = prod;\n      prod.accept(_this);\n    });\n  };\n\n  GastRefResolverVisitor.prototype.visitNonTerminal = function (node) {\n    var ref = this.nameToTopRule[node.nonTerminalName];\n\n    if (!ref) {\n      var msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n      this.errors.push({\n        message: msg,\n        type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n        ruleName: this.currTopLevel.name,\n        unresolvedRefName: node.nonTerminalName\n      });\n    } else {\n      node.referencedRule = ref;\n    }\n  };\n\n  return GastRefResolverVisitor;\n}(GAstVisitor);\n\nexport { GastRefResolverVisitor };","map":{"version":3,"sources":["../../../../src/parse/grammar/resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAEE,yBAFF,QAGO,kBAHP;AAIA,SAAS,OAAT,EAAkB,MAAlB,QAAgC,mBAAhC;AAEA,SAAS,WAAT,QAA4B,4BAA5B;AAMA,OAAM,SAAU,cAAV,CACJ,SADI,EAEJ,cAFI,EAEgD;AAEpD,MAAI,WAAW,GAAG,IAAI,sBAAJ,CAA2B,SAA3B,EAAsC,cAAtC,CAAlB;AACA,EAAA,WAAW,CAAC,WAAZ;AACA,SAAO,WAAW,CAAC,MAAnB;AACD;;AAED,IAAA,sBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4C,EAAA,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA;;AAI1C,WAAA,sBAAA,CACU,aADV,EAEU,cAFV,EAE8D;AAF9D,QAAA,KAAA,GAIE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAJT;;AACU,IAAA,KAAA,CAAA,aAAA,GAAA,aAAA;AACA,IAAA,KAAA,CAAA,cAAA,GAAA,cAAA;AALH,IAAA,KAAA,CAAA,MAAA,GAAgD,EAAhD;;AAQN;;AAEM,EAAA,sBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,IAAA,OAAO,CAAC,MAAM,CAAC,KAAK,aAAN,CAAP,EAA6B,UAAC,IAAD,EAAK;AACvC,MAAA,KAAI,CAAC,YAAL,GAAoB,IAApB;AACA,MAAA,IAAI,CAAC,MAAL,CAAY,KAAZ;AACD,KAHM,CAAP;AAID,GALM;;AAOA,EAAA,sBAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,UAAwB,IAAxB,EAAyC;AACvC,QAAI,GAAG,GAAG,KAAK,aAAL,CAAmB,IAAI,CAAC,eAAxB,CAAV;;AAEA,QAAI,CAAC,GAAL,EAAU;AACR,UAAI,GAAG,GAAG,KAAK,cAAL,CAAoB,sBAApB,CACR,KAAK,YADG,EAER,IAFQ,CAAV;AAIA,WAAK,MAAL,CAAY,IAAZ,CAAiB;AACf,QAAA,OAAO,EAAE,GADM;AAEf,QAAA,IAAI,EAAE,yBAAyB,CAAC,sBAFjB;AAGf,QAAA,QAAQ,EAAE,KAAK,YAAL,CAAkB,IAHb;AAIf,QAAA,iBAAiB,EAAE,IAAI,CAAC;AAJT,OAAjB;AAMD,KAXD,MAWO;AACL,MAAA,IAAI,CAAC,cAAL,GAAsB,GAAtB;AACD;AACF,GAjBM;;AAkBT,SAAA,sBAAA;AAAC,CApCD,CAA4C,WAA5C,CAAA","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ParserDefinitionErrorType } from \"../parser/parser\";\nimport { forEach, values } from \"../../utils/utils\";\nimport { GAstVisitor } from \"./gast/gast_visitor_public\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    var refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nvar GastRefResolverVisitor = /** @class */ (function (_super) {\n    __extends(GastRefResolverVisitor, _super);\n    function GastRefResolverVisitor(nameToTopRule, errMsgProvider) {\n        var _this = _super.call(this) || this;\n        _this.nameToTopRule = nameToTopRule;\n        _this.errMsgProvider = errMsgProvider;\n        _this.errors = [];\n        return _this;\n    }\n    GastRefResolverVisitor.prototype.resolveRefs = function () {\n        var _this = this;\n        forEach(values(this.nameToTopRule), function (prod) {\n            _this.currTopLevel = prod;\n            prod.accept(_this);\n        });\n    };\n    GastRefResolverVisitor.prototype.visitNonTerminal = function (node) {\n        var ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            var msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    };\n    return GastRefResolverVisitor;\n}(GAstVisitor));\nexport { GastRefResolverVisitor };\n//# sourceMappingURL=resolver.js.map"]},"metadata":{},"sourceType":"module"}