{"ast":null,"code":"ace.define(\"ace/mode/vbscript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var VBScriptHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.control.asp\": \"If|Then|Else|ElseIf|End|While|Wend|For|To|Each|Case|Select|Return\" + \"|Continue|Do|Until|Loop|Next|With|Exit|Function|Property|Type|Enum|Sub|IIf|Class\",\n      \"storage.type.asp\": \"Dim|Call|Const|Redim|Set|Let|Get|New|Randomize|Option|Explicit\",\n      \"storage.modifier.asp\": \"Private|Public|Default\",\n      \"keyword.operator.asp\": \"Mod|And|Not|Or|Xor|as\",\n      \"constant.language.asp\": \"Empty|False|Nothing|Null|True\",\n      \"support.class.asp\": \"Application|ObjectContext|Request|Response|Server|Session\",\n      \"support.class.collection.asp\": \"Contents|StaticObjects|ClientCertificate|Cookies|Form|QueryString|ServerVariables\",\n      \"support.constant.asp\": \"TotalBytes|Buffer|CacheControl|Charset|ContentType|Expires|ExpiresAbsolute\" + \"|IsClientConnected|PICS|Status|ScriptTimeout|CodePage|LCID|SessionID|Timeout\",\n      \"support.function.asp\": \"Lock|Unlock|SetAbort|SetComplete|BinaryRead|AddHeader|AppendToLog\" + \"|BinaryWrite|Clear|Flush|Redirect|Write|CreateObject|HTMLEncode|MapPath|URLEncode|Abandon|Convert|Regex\",\n      \"support.function.event.asp\": \"Application_OnEnd|Application_OnStart\" + \"|OnTransactionAbort|OnTransactionCommit|Session_OnEnd|Session_OnStart\",\n      \"support.function.vb.asp\": \"Array|Add|Asc|Atn|CBool|CByte|CCur|CDate|CDbl|Chr|CInt|CLng\" + \"|Conversions|Cos|CreateObject|CSng|CStr|Date|DateAdd|DateDiff|DatePart|DateSerial\" + \"|DateValue|Day|Derived|Math|Escape|Eval|Exists|Exp|Filter|FormatCurrency\" + \"|FormatDateTime|FormatNumber|FormatPercent|GetLocale|GetObject|GetRef|Hex\" + \"|Hour|InputBox|InStr|InStrRev|Int|Fix|IsArray|IsDate|IsEmpty|IsNull|IsNumeric\" + \"|IsObject|Item|Items|Join|Keys|LBound|LCase|Left|Len|LoadPicture|Log|LTrim|RTrim\" + \"|Trim|Maths|Mid|Minute|Month|MonthName|MsgBox|Now|Oct|Remove|RemoveAll|Replace\" + \"|RGB|Right|Rnd|Round|ScriptEngine|ScriptEngineBuildVersion|ScriptEngineMajorVersion\" + \"|ScriptEngineMinorVersion|Second|SetLocale|Sgn|Sin|Space|Split|Sqr|StrComp|String|StrReverse\" + \"|Tan|Time|Timer|TimeSerial|TimeValue|TypeName|UBound|UCase|Unescape|VarType|Weekday|WeekdayName|Year\",\n      \"support.type.vb.asp\": \"vbtrue|vbfalse|vbcr|vbcrlf|vbformfeed|vblf|vbnewline|vbnullchar|vbnullstring|\" + \"int32|vbtab|vbverticaltab|vbbinarycompare|vbtextcomparevbsunday|vbmonday|vbtuesday|vbwednesday\" + \"|vbthursday|vbfriday|vbsaturday|vbusesystemdayofweek|vbfirstjan1|vbfirstfourdays|vbfirstfullweek\" + \"|vbgeneraldate|vblongdate|vbshortdate|vblongtime|vbshorttime|vbobjecterror|vbEmpty|vbNull|vbInteger\" + \"|vbLong|vbSingle|vbDouble|vbCurrency|vbDate|vbString|vbObject|vbError|vbBoolean|vbVariant\" + \"|vbDataObject|vbDecimal|vbByte|vbArray\"\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: [\"meta.ending-space\"],\n        regex: \"$\"\n      }, {\n        token: [null],\n        regex: \"^(?=\\\\t)\",\n        next: \"state_3\"\n      }, {\n        token: [null],\n        regex: \"^(?= )\",\n        next: \"state_4\"\n      }, {\n        token: [\"text\", \"storage.type.function.asp\", \"text\", \"entity.name.function.asp\", \"text\", \"punctuation.definition.parameters.asp\", \"variable.parameter.function.asp\", \"punctuation.definition.parameters.asp\"],\n        regex: \"^(\\\\s*)(Function|Sub)(\\\\s+)([a-zA-Z_]\\\\w*)(\\\\s*)(\\\\()([^)]*)(\\\\))\"\n      }, {\n        token: \"punctuation.definition.comment.asp\",\n        regex: \"'|REM(?=\\\\s|$)\",\n        next: \"comment\",\n        caseInsensitive: true\n      }, {\n        token: \"storage.type.asp\",\n        regex: \"On Error Resume Next|On Error GoTo\",\n        caseInsensitive: true\n      }, {\n        token: \"punctuation.definition.string.begin.asp\",\n        regex: '\"',\n        next: \"string\"\n      }, {\n        token: [\"punctuation.definition.variable.asp\"],\n        regex: \"(\\\\$)[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b\\\\s*\"\n      }, {\n        token: \"constant.numeric.asp\",\n        regex: \"-?\\\\b(?:(?:0(?:x|X)[0-9a-fA-F]*)|(?:(?:[0-9]+\\\\.?[0-9]*)|(?:\\\\.[0-9]+))(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?\\\\b\"\n      }, {\n        regex: \"\\\\w+\",\n        token: keywordMapper\n      }, {\n        token: [\"entity.name.function.asp\"],\n        regex: \"(?:(\\\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b)(?=\\\\(\\\\)?))\"\n      }, {\n        token: [\"keyword.operator.asp\"],\n        regex: \"\\\\-|\\\\+|\\\\*\\\\/|\\\\>|\\\\<|\\\\=|\\\\&\"\n      }],\n      \"state_3\": [{\n        token: [\"meta.odd-tab.tabs\", \"meta.even-tab.tabs\"],\n        regex: \"(\\\\t)(\\\\t)?\"\n      }, {\n        token: \"meta.leading-space\",\n        regex: \"(?=[^\\\\t])\",\n        next: \"start\"\n      }, {\n        token: \"meta.leading-space\",\n        regex: \".\",\n        next: \"state_3\"\n      }],\n      \"state_4\": [{\n        token: [\"meta.odd-tab.spaces\", \"meta.even-tab.spaces\"],\n        regex: \"(  )(  )?\"\n      }, {\n        token: \"meta.leading-space\",\n        regex: \"(?=[^ ])\",\n        next: \"start\"\n      }, {\n        defaultToken: \"meta.leading-space\"\n      }],\n      \"comment\": [{\n        token: \"comment.line.apostrophe.asp\",\n        regex: \"$|(?=(?:%>))\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.line.apostrophe.asp\"\n      }],\n      \"string\": [{\n        token: \"constant.character.escape.apostrophe.asp\",\n        regex: '\"\"'\n      }, {\n        token: \"string.quoted.double.asp\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        defaultToken: \"string.quoted.double.asp\"\n      }]\n    };\n  };\n\n  oop.inherits(VBScriptHighlightRules, TextHighlightRules);\n  exports.VBScriptHighlightRules = VBScriptHighlightRules;\n});\nace.define(\"ace/mode/folding/vbscript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var Range = require(\"../../range\").Range;\n\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.indentKeywords = {\n      \"class\": 1,\n      \"function\": 1,\n      \"sub\": 1,\n      \"if\": 1,\n      \"select\": 1,\n      \"do\": 1,\n      \"for\": 1,\n      \"while\": 1,\n      \"with\": 1,\n      \"property\": 1,\n      \"else\": 1,\n      \"elseif\": 1,\n      \"end\": -1,\n      \"loop\": -1,\n      \"next\": -1,\n      \"wend\": -1\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = /(\\w+)\\b/i.exec(line);\n      var keyword = match && match[1].toLowerCase();\n\n      if (keyword && this.indentKeywords.hasOwnProperty(keyword)) {\n        return this.vbsBlock(session, row, match.index + 1);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = /^\\s*(\\w+)\\b/i.exec(line);\n      var keyword = match && match[1].toLowerCase();\n\n      if (keyword && this.indentKeywords.hasOwnProperty(keyword)) {\n        if (this.indentKeywords[keyword] == -1) return \"\";\n        if (keyword == \"if\" && !/then\\s*$/i.test(line)) return \"\";\n        return \"start\";\n      }\n\n      return \"\";\n    };\n\n    this.vbsBlock = function (session, row, column, tokenRange) {\n      var stream = new TokenIterator(session, row, column);\n      var endOpenings = {\n        \"class\": 1,\n        \"function\": 1,\n        \"sub\": 1,\n        \"if\": 1,\n        \"select\": 1,\n        \"with\": 1,\n        \"property\": 1,\n        \"else\": 1,\n        \"elseif\": 1\n      };\n      var token = stream.getCurrentToken();\n      if (!token || token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\") return;\n      var startTokenValue = token.value.toLowerCase();\n      var val = token.value.toLowerCase();\n      var stack = [val];\n      var dir = this.indentKeywords[val];\n      if (!dir) return;\n      var firstRange = stream.getCurrentTokenRange();\n      var modifiers = '';\n\n      switch (val) {\n        case \"property\":\n        case \"sub\":\n        case \"function\":\n          modifiers = \"(?:(?:Private|Public(?:\\\\s+Default)?)\\\\s+)?\";\n\n        case \"if\":\n        case \"select\":\n        case \"do\":\n        case \"for\":\n        case \"class\":\n        case \"while\":\n        case \"with\":\n          var line = session.getLine(row);\n          var singleLineCondition = /^\\s*(If)\\s+(.)*\\s+Then\\s+(\\S)+/i.test(line);\n          if (singleLineCondition) return;\n          var checkToken = new RegExp(\"^\\\\s*\" + modifiers + val, \"i\");\n          var endTest = /^\\s*End\\s(If|Sub|Select|Function|Class|With|Property)\\s*/i.test(line);\n\n          if (!checkToken.test(line) && !endTest) {\n            return;\n          }\n\n          if (endTest) {\n            var tokenRange = stream.getCurrentTokenRange();\n            stream.step = stream.stepBackward;\n            stream.step();\n            stream.step();\n            token = stream.getCurrentToken();\n\n            if (token) {\n              val = token.value.toLowerCase();\n\n              if (val == \"end\") {\n                firstRange = stream.getCurrentTokenRange();\n                firstRange = new Range(firstRange.start.row, firstRange.start.column, tokenRange.start.row, tokenRange.end.column);\n              }\n            }\n\n            dir = -1;\n          }\n\n          break;\n\n        case \"end\":\n          var tokenPos = stream.getCurrentTokenPosition();\n          firstRange = stream.getCurrentTokenRange();\n          stream.step = stream.stepForward;\n          stream.step();\n          stream.step();\n          token = stream.getCurrentToken();\n\n          if (token) {\n            val = token.value.toLowerCase();\n\n            if (val in endOpenings) {\n              startTokenValue = val;\n              var nextTokenPos = stream.getCurrentTokenPosition();\n              var endColumn = nextTokenPos.column + val.length;\n              firstRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n            }\n          }\n\n          stream.step = stream.stepBackward;\n          stream.step();\n          stream.step();\n          break;\n      }\n\n      var startColumn = dir === -1 ? session.getLine(row - 1).length : session.getLine(row).length;\n      var startRow = row;\n      var ranges = [];\n      ranges.push(firstRange);\n      stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n\n      while (token = stream.step()) {\n        modifiers = '';\n        var outputRange = null;\n        var ignore = false;\n        if (token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\") continue;\n        val = token.value.toLowerCase();\n        var level = dir * this.indentKeywords[val];\n\n        switch (val) {\n          case \"property\":\n          case \"sub\":\n          case \"function\":\n            modifiers = \"(?:(?:Private|Public(?:\\\\sDefault)?)\\\\s+)?\";\n\n          case \"if\":\n          case \"select\":\n          case \"do\":\n          case \"for\":\n          case \"class\":\n          case \"while\":\n          case \"with\":\n            var line = session.getLine(stream.getCurrentTokenRow());\n            var singleLineCondition = /^\\s*(If)\\s+(.)*\\s+Then\\s+(\\S)+/i.test(line);\n\n            if (singleLineCondition) {\n              level = 0;\n              ignore = true;\n            }\n\n            var checkToken = new RegExp(\"^\\\\s*\" + modifiers + val, \"i\");\n\n            if (!checkToken.test(line)) {\n              level = 0;\n              ignore = true;\n            }\n\n            break;\n\n          case \"elseif\":\n          case \"else\":\n            level = 0;\n\n            if (startTokenValue != \"elseif\") {\n              ignore = true;\n            }\n\n            break;\n        }\n\n        if (level > 0) {\n          stack.unshift(val);\n        } else if (level <= 0 && ignore === false) {\n          stack.shift();\n\n          if (!stack.length) {\n            switch (val) {\n              case \"end\":\n                var tokenPos = stream.getCurrentTokenPosition();\n                outputRange = stream.getCurrentTokenRange();\n                stream.step();\n                stream.step();\n                token = stream.getCurrentToken();\n\n                if (token) {\n                  val = token.value.toLowerCase();\n\n                  if (val in endOpenings) {\n                    if (startTokenValue == \"else\" || startTokenValue == \"elseif\") {\n                      if (val !== \"if\") {\n                        ranges.shift();\n                      }\n                    } else {\n                      if (val != startTokenValue) ranges.shift();\n                    }\n\n                    var nextTokenPos = stream.getCurrentTokenPosition();\n                    var endColumn = nextTokenPos.column + val.length;\n                    outputRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n                  } else {\n                    ranges.shift();\n                  }\n                } else {\n                  ranges.shift();\n                }\n\n                stream.step = stream.stepBackward;\n                stream.step();\n                stream.step();\n                token = stream.getCurrentToken();\n                val = token.value.toLowerCase();\n                break;\n\n              case \"select\":\n              case \"sub\":\n              case \"if\":\n              case \"function\":\n              case \"class\":\n              case \"with\":\n              case \"property\":\n                if (val != startTokenValue) ranges.shift();\n                break;\n\n              case \"do\":\n                if (startTokenValue != \"loop\") ranges.shift();\n                break;\n\n              case \"loop\":\n                if (startTokenValue != \"do\") ranges.shift();\n                break;\n\n              case \"for\":\n                if (startTokenValue != \"next\") ranges.shift();\n                break;\n\n              case \"next\":\n                if (startTokenValue != \"for\") ranges.shift();\n                break;\n\n              case \"while\":\n                if (startTokenValue != \"wend\") ranges.shift();\n                break;\n\n              case \"wend\":\n                if (startTokenValue != \"while\") ranges.shift();\n                break;\n            }\n\n            break;\n          }\n\n          if (level === 0) {\n            stack.unshift(val);\n          }\n        }\n      }\n\n      if (!token) return null;\n\n      if (tokenRange) {\n        if (!outputRange) {\n          ranges.push(stream.getCurrentTokenRange());\n        } else {\n          ranges.push(outputRange);\n        }\n\n        return ranges;\n      }\n\n      var row = stream.getCurrentTokenRow();\n\n      if (dir === -1) {\n        var endColumn = session.getLine(row).length;\n        return new Range(row, endColumn, startRow - 1, startColumn);\n      } else return new Range(startRow, startColumn, row - 1, session.getLine(row - 1).length);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/vbscript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/vbscript_highlight_rules\", \"ace/mode/folding/vbscript\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var VBScriptHighlightRules = require(\"./vbscript_highlight_rules\").VBScriptHighlightRules;\n\n  var FoldMode = require(\"./folding/vbscript\").FoldMode;\n\n  var Range = require(\"../range\").Range;\n\n  var Mode = function () {\n    this.HighlightRules = VBScriptHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n    this.indentKeywords = this.foldingRules.indentKeywords;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\"'\", \"REM\"];\n    var outdentKeywords = [\"else\", \"elseif\", \"end\", \"loop\", \"next\", \"wend\"];\n\n    function getNetIndentLevel(tokens, line, indentKeywords) {\n      var level = 0;\n      var modifiers = '';\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n\n        if (token.type == \"keyword.control.asp\" || token.type == \"storage.type.function.asp\") {\n          var val = token.value.toLowerCase();\n\n          if (val in indentKeywords) {\n            switch (val) {\n              case \"property\":\n              case \"sub\":\n              case \"function\":\n                modifiers = \"(?:(?:Private|Public(?:\\\\s+Default)?)\\\\s+)?\";\n\n              case \"select\":\n              case \"do\":\n              case \"for\":\n              case \"class\":\n              case \"while\":\n              case \"with\":\n                var checkToken = new RegExp(\"^\\\\s*\" + modifiers + val, \"i\");\n\n                if (checkToken.test(line)) {\n                  level += indentKeywords[val];\n                }\n\n                break;\n\n              case \"if\":\n                var singleLineCondition = /^\\s*(If)\\s+(.)*\\s+Then\\s+(\\S)+/i.test(line);\n                if (!singleLineCondition) level += indentKeywords[val];\n                break;\n\n              default:\n                level += indentKeywords[val];\n                break;\n            }\n          }\n        }\n      }\n\n      if (level < 0) {\n        return -1;\n      } else if (level > 0) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var level = 0;\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (state == \"start\") {\n        level = getNetIndentLevel(tokens, line, this.indentKeywords);\n      }\n\n      if (level > 0) {\n        return indent + tab;\n      } else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n        if (!this.checkOutdent(state, line, \"\\n\")) {\n          return indent.substr(0, indent.length - tab.length);\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\") return false;\n      var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n      if (!tokens || !tokens.length) return false;\n      var val = tokens[0].value.toLowerCase();\n      return (tokens[0].type == \"keyword.control.asp\" || tokens[0].type == \"storage.type.function.asp\") && outdentKeywords.indexOf(val) != -1;\n    };\n\n    this.getMatching = function (session, row, column, tokenRange) {\n      if (row == undefined) {\n        var pos = session.selection.lead;\n        column = pos.column;\n        row = pos.row;\n      }\n\n      if (tokenRange == undefined) tokenRange = true;\n      var startToken = session.getTokenAt(row, column);\n\n      if (startToken) {\n        var val = startToken.value.toLowerCase();\n        if (val in this.indentKeywords) return this.foldingRules.vbsBlock(session, row, column, tokenRange);\n      }\n    };\n\n    this.autoOutdent = function (state, session, row) {\n      var line = session.getLine(row);\n      var column = line.match(/^\\s*/)[0].length;\n      if (!column || !row) return;\n      var startRange = this.getMatching(session, row, column + 1, false);\n      if (!startRange || startRange.start.row == row) return;\n      var indent = this.$getIndent(session.getLine(startRange.start.row));\n\n      if (indent.length != column) {\n        session.replace(new Range(row, 0, row, column), indent);\n        session.outdentRows(new Range(row + 1, 0, row + 1, 0));\n      }\n    };\n\n    this.$id = \"ace/mode/vbscript\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/vbscript\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-vbscript.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","VBScriptHighlightRules","keywordMapper","createKeywordMapper","$rules","token","regex","next","caseInsensitive","defaultToken","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","indentKeywords","getFoldWidgetRange","session","foldStyle","row","line","getLine","match","exec","keyword","toLowerCase","hasOwnProperty","vbsBlock","index","getFoldWidget","test","column","tokenRange","stream","endOpenings","getCurrentToken","type","startTokenValue","value","val","stack","dir","firstRange","getCurrentTokenRange","modifiers","singleLineCondition","checkToken","RegExp","endTest","step","stepBackward","start","end","tokenPos","getCurrentTokenPosition","stepForward","nextTokenPos","endColumn","length","startColumn","startRow","ranges","push","outputRange","ignore","level","getCurrentTokenRow","unshift","shift","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","outdentKeywords","getNetIndentLevel","tokens","i","getNextLineIndent","state","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","substr","checkOutdent","input","trim","indexOf","getMatching","undefined","pos","selection","lead","startToken","getTokenAt","autoOutdent","startRange","replace","outdentRows","$id","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/vbscript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar VBScriptHighlightRules = function() {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control.asp\":  \"If|Then|Else|ElseIf|End|While|Wend|For|To|Each|Case|Select|Return\"\n            + \"|Continue|Do|Until|Loop|Next|With|Exit|Function|Property|Type|Enum|Sub|IIf|Class\",\n        \"storage.type.asp\": \"Dim|Call|Const|Redim|Set|Let|Get|New|Randomize|Option|Explicit\",\n        \"storage.modifier.asp\": \"Private|Public|Default\",\n        \"keyword.operator.asp\": \"Mod|And|Not|Or|Xor|as\",\n        \"constant.language.asp\": \"Empty|False|Nothing|Null|True\",\n        \"support.class.asp\": \"Application|ObjectContext|Request|Response|Server|Session\",\n        \"support.class.collection.asp\": \"Contents|StaticObjects|ClientCertificate|Cookies|Form|QueryString|ServerVariables\",\n        \"support.constant.asp\": \"TotalBytes|Buffer|CacheControl|Charset|ContentType|Expires|ExpiresAbsolute\"\n            + \"|IsClientConnected|PICS|Status|ScriptTimeout|CodePage|LCID|SessionID|Timeout\",\n        \"support.function.asp\": \"Lock|Unlock|SetAbort|SetComplete|BinaryRead|AddHeader|AppendToLog\"\n            + \"|BinaryWrite|Clear|Flush|Redirect|Write|CreateObject|HTMLEncode|MapPath|URLEncode|Abandon|Convert|Regex\",\n        \"support.function.event.asp\": \"Application_OnEnd|Application_OnStart\"\n            + \"|OnTransactionAbort|OnTransactionCommit|Session_OnEnd|Session_OnStart\",\n        \"support.function.vb.asp\": \"Array|Add|Asc|Atn|CBool|CByte|CCur|CDate|CDbl|Chr|CInt|CLng\"\n            + \"|Conversions|Cos|CreateObject|CSng|CStr|Date|DateAdd|DateDiff|DatePart|DateSerial\"\n            + \"|DateValue|Day|Derived|Math|Escape|Eval|Exists|Exp|Filter|FormatCurrency\"\n            + \"|FormatDateTime|FormatNumber|FormatPercent|GetLocale|GetObject|GetRef|Hex\"\n            + \"|Hour|InputBox|InStr|InStrRev|Int|Fix|IsArray|IsDate|IsEmpty|IsNull|IsNumeric\"\n            + \"|IsObject|Item|Items|Join|Keys|LBound|LCase|Left|Len|LoadPicture|Log|LTrim|RTrim\"\n            + \"|Trim|Maths|Mid|Minute|Month|MonthName|MsgBox|Now|Oct|Remove|RemoveAll|Replace\"\n            + \"|RGB|Right|Rnd|Round|ScriptEngine|ScriptEngineBuildVersion|ScriptEngineMajorVersion\"\n            + \"|ScriptEngineMinorVersion|Second|SetLocale|Sgn|Sin|Space|Split|Sqr|StrComp|String|StrReverse\"\n            + \"|Tan|Time|Timer|TimeSerial|TimeValue|TypeName|UBound|UCase|Unescape|VarType|Weekday|WeekdayName|Year\",\n        \"support.type.vb.asp\": \"vbtrue|vbfalse|vbcr|vbcrlf|vbformfeed|vblf|vbnewline|vbnullchar|vbnullstring|\"\n            + \"int32|vbtab|vbverticaltab|vbbinarycompare|vbtextcomparevbsunday|vbmonday|vbtuesday|vbwednesday\"\n            + \"|vbthursday|vbfriday|vbsaturday|vbusesystemdayofweek|vbfirstjan1|vbfirstfourdays|vbfirstfullweek\"\n            + \"|vbgeneraldate|vblongdate|vbshortdate|vblongtime|vbshorttime|vbobjecterror|vbEmpty|vbNull|vbInteger\"\n            + \"|vbLong|vbSingle|vbDouble|vbCurrency|vbDate|vbString|vbObject|vbError|vbBoolean|vbVariant\"\n            + \"|vbDataObject|vbDecimal|vbByte|vbArray\"\n    }, \"identifier\", true);\n\n    this.$rules = {\n    \"start\": [\n        {\n            token: [\n                \"meta.ending-space\"\n            ],\n            regex: \"$\"\n        },\n        {\n            token: [null],\n            regex: \"^(?=\\\\t)\",\n            next: \"state_3\"\n        },\n        {\n            token: [null],\n            regex: \"^(?= )\",\n            next: \"state_4\"\n        },\n        {\n            token: [\n                \"text\",\n                \"storage.type.function.asp\",\n                \"text\",\n                \"entity.name.function.asp\",\n                \"text\",\n                \"punctuation.definition.parameters.asp\",\n                \"variable.parameter.function.asp\",\n                \"punctuation.definition.parameters.asp\"\n            ],\n            regex: \"^(\\\\s*)(Function|Sub)(\\\\s+)([a-zA-Z_]\\\\w*)(\\\\s*)(\\\\()([^)]*)(\\\\))\"\n        },\n        {\n            token: \"punctuation.definition.comment.asp\",\n            regex: \"'|REM(?=\\\\s|$)\",\n            next: \"comment\",\n            caseInsensitive: true\n        },\n        {\n            token: \"storage.type.asp\",\n            regex: \"On Error Resume Next|On Error GoTo\",\n            caseInsensitive: true\n        },\n        {\n            token: \"punctuation.definition.string.begin.asp\",\n            regex: '\"',\n            next: \"string\"\n        },\n        {\n            token: [\n                \"punctuation.definition.variable.asp\"\n            ],\n            regex: \"(\\\\$)[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b\\\\s*\"\n        },\n        {\n            token: \"constant.numeric.asp\",\n            regex: \"-?\\\\b(?:(?:0(?:x|X)[0-9a-fA-F]*)|(?:(?:[0-9]+\\\\.?[0-9]*)|(?:\\\\.[0-9]+))(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?\\\\b\"\n        },\n        {\n            regex: \"\\\\w+\",\n            token: keywordMapper\n        },\n        {\n            token: [\"entity.name.function.asp\"],\n            regex: \"(?:(\\\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b)(?=\\\\(\\\\)?))\"\n        },\n        {\n            token: [\"keyword.operator.asp\"],\n            regex: \"\\\\-|\\\\+|\\\\*\\\\/|\\\\>|\\\\<|\\\\=|\\\\&\"\n        }\n    ],\n    \"state_3\": [\n        {\n            token: [\n                \"meta.odd-tab.tabs\",\n                \"meta.even-tab.tabs\"\n            ],\n            regex: \"(\\\\t)(\\\\t)?\"\n        },\n        {\n            token: \"meta.leading-space\",\n            regex: \"(?=[^\\\\t])\",\n            next: \"start\"\n        },\n        {\n            token: \"meta.leading-space\",\n            regex: \".\",\n            next: \"state_3\"\n        }\n    ],\n    \"state_4\": [\n        {\n            token: [\"meta.odd-tab.spaces\", \"meta.even-tab.spaces\"],\n            regex: \"(  )(  )?\"\n        },\n        {\n            token: \"meta.leading-space\",\n            regex: \"(?=[^ ])\",\n            next: \"start\"\n        },\n        {\n            defaultToken: \"meta.leading-space\"\n        }\n    ],\n    \"comment\": [\n        {\n            token: \"comment.line.apostrophe.asp\",\n            regex: \"$|(?=(?:%>))\",\n            next: \"start\"\n        },\n        {\n            defaultToken: \"comment.line.apostrophe.asp\"\n        }\n    ],\n    \"string\": [\n        {\n            token: \"constant.character.escape.apostrophe.asp\",\n            regex: '\"\"'\n        },\n        {\n            token: \"string.quoted.double.asp\",\n            regex: '\"',\n            next: \"start\"\n        },\n        {\n            defaultToken: \"string.quoted.double.asp\"\n        }\n    ]\n};\n\n};\n\noop.inherits(VBScriptHighlightRules, TextHighlightRules);\n\nexports.VBScriptHighlightRules = VBScriptHighlightRules;\n});\n\nace.define(\"ace/mode/folding/vbscript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\n\n\nvar FoldMode = exports.FoldMode = function() {};\n\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.indentKeywords = {\n        \"class\": 1,\n        \"function\": 1,\n        \"sub\": 1,\n        \"if\": 1,\n        \"select\": 1,\n        \"do\": 1,\n        \"for\": 1,\n        \"while\": 1,\n        \"with\": 1,\n        \"property\": 1,\n        \"else\": 1,\n        \"elseif\": 1,\n        \"end\": -1,\n        \"loop\": -1,\n        \"next\": -1,\n        \"wend\": -1\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var match = /(\\w+)\\b/i.exec(line);\n        var keyword = match && match[1].toLowerCase();\n\n        if (keyword && this.indentKeywords.hasOwnProperty(keyword)) {\n            return this.vbsBlock(session, row, match.index + 1);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var match = /^\\s*(\\w+)\\b/i.exec(line);\n        var keyword = match && match[1].toLowerCase();\n\n        if (keyword && this.indentKeywords.hasOwnProperty(keyword)) {\n            if (this.indentKeywords[keyword] == -1)\n                return \"\";\n            if (keyword == \"if\" && !/then\\s*$/i.test(line))\n                return \"\";\n            return \"start\";\n        }\n\n        return \"\";\n    };\n\n    this.vbsBlock = function(session, row, column, tokenRange) {\n        var stream = new TokenIterator(session, row, column);\n\n        var endOpenings = {\n            \"class\": 1,\n            \"function\": 1,\n            \"sub\": 1,\n            \"if\": 1,\n            \"select\": 1,\n            \"with\": 1,\n            \"property\": 1,\n            \"else\": 1,\n            \"elseif\": 1\n        };\n\n        var token = stream.getCurrentToken();\n        if (!token || (token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\"))\n            return;\n\n        var startTokenValue = token.value.toLowerCase();\n        var val = token.value.toLowerCase();\n\n        var stack = [val];\n        var dir = this.indentKeywords[val];\n\n        if (!dir)\n            return;\n\n        var firstRange = stream.getCurrentTokenRange();\n        var modifiers = '';\n        switch (val) {\n            case \"property\":\n            case \"sub\":\n            case \"function\":\n                modifiers = \"(?:(?:Private|Public(?:\\\\s+Default)?)\\\\s+)?\";\n            case \"if\":\n            case \"select\":\n            case \"do\":\n            case \"for\":\n            case \"class\":\n            case \"while\":\n            case \"with\":\n                var line = session.getLine(row);\n                var singleLineCondition = /^\\s*(If)\\s+(.)*\\s+Then\\s+(\\S)+/i.test(line);\n                if (singleLineCondition)\n                    return;\n                var checkToken = new RegExp(\"^\\\\s*\"+ modifiers + val, \"i\");\n                var endTest = /^\\s*End\\s(If|Sub|Select|Function|Class|With|Property)\\s*/i.test(line);\n                if (!checkToken.test(line) && !endTest) {\n                    return;\n                }\n                if (endTest) {\n                    var tokenRange = stream.getCurrentTokenRange();\n                    stream.step = stream.stepBackward;\n                    stream.step();\n                    stream.step();\n                    token = stream.getCurrentToken();\n                    if (token) {\n                        val = token.value.toLowerCase();\n                        if (val == \"end\") {\n                            firstRange = stream.getCurrentTokenRange();\n                            firstRange = new Range(firstRange.start.row, firstRange.start.column, tokenRange.start.row, tokenRange.end.column);\n                        }\n                    }\n                    dir = -1;\n                }\n                break;\n            case \"end\":\n                var tokenPos = stream.getCurrentTokenPosition();\n                firstRange = stream.getCurrentTokenRange();\n                stream.step = stream.stepForward;\n                stream.step();\n                stream.step();\n                token = stream.getCurrentToken();\n                if (token) {\n                    val = token.value.toLowerCase();\n                    if (val in endOpenings) {\n                        startTokenValue = val;\n                        var nextTokenPos = stream.getCurrentTokenPosition();\n                        var endColumn = nextTokenPos.column + val.length;\n                        firstRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n                    }\n                }\n                stream.step = stream.stepBackward;\n                stream.step();\n                stream.step();\n                break;\n        }\n        var startColumn = dir === -1 ? session.getLine(row - 1).length : session.getLine(row).length;\n        var startRow = row;\n        var ranges = [];\n        ranges.push(firstRange);\n\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while(token = stream.step()) {\n            modifiers = '';\n            var outputRange = null;\n            var ignore = false;\n            if (token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\")\n                continue;\n            val = token.value.toLowerCase();\n            var level = dir * this.indentKeywords[val];\n\n            switch (val) {\n                case \"property\":\n                case \"sub\":\n                case \"function\":\n                    modifiers = \"(?:(?:Private|Public(?:\\\\sDefault)?)\\\\s+)?\";\n                case \"if\":\n                case \"select\":\n                case \"do\":\n                case \"for\":\n                case \"class\":\n                case \"while\":\n                case \"with\":\n                    var line = session.getLine(stream.getCurrentTokenRow());\n                    var singleLineCondition = /^\\s*(If)\\s+(.)*\\s+Then\\s+(\\S)+/i.test(line);\n                    if (singleLineCondition) {\n                        level = 0;\n                        ignore = true;\n                    }\n                    var checkToken = new RegExp(\"^\\\\s*\" + modifiers + val, \"i\");\n                    if (!checkToken.test(line)) {\n                        level = 0;\n                        ignore = true;\n                    }\n                    break;\n                case \"elseif\":\n                case \"else\":\n                    level = 0;\n                    if (startTokenValue != \"elseif\") {\n                        ignore = true;\n                    }\n                    break;\n            }\n\n            if (level > 0) {\n                stack.unshift(val);\n            } else if (level <= 0 && ignore === false) {\n                stack.shift();\n                if (!stack.length) {\n                        switch (val) {\n                            case \"end\":\n                                var tokenPos = stream.getCurrentTokenPosition();\n                                outputRange = stream.getCurrentTokenRange();\n                                stream.step();\n                                stream.step();\n                                token = stream.getCurrentToken();\n                                if (token) {\n                                    val = token.value.toLowerCase();\n                                    if (val in endOpenings) {\n                                        if ((startTokenValue == \"else\" || startTokenValue == \"elseif\")) {\n                                            if (val !== \"if\") {\n                                                ranges.shift();\n                                            }\n                                        } else {\n                                            if (val != startTokenValue)\n                                                ranges.shift();\n                                        }\n                                        var nextTokenPos = stream.getCurrentTokenPosition();\n                                        var endColumn = nextTokenPos.column + val.length;\n                                        outputRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n                                    } else {\n                                        ranges.shift();\n                                    }\n                                } else {\n                                    ranges.shift();\n                                }\n                                stream.step = stream.stepBackward;\n                                stream.step();\n                                stream.step();\n                                token = stream.getCurrentToken();\n                                val = token.value.toLowerCase();\n                                break;\n                            case \"select\":\n                            case \"sub\":\n                            case \"if\":\n                            case \"function\":\n                            case \"class\":\n                            case \"with\":\n                            case \"property\":\n                                if (val != startTokenValue)\n                                    ranges.shift();\n                                break;\n                            case \"do\":\n                                if (startTokenValue != \"loop\")\n                                    ranges.shift();\n                                break;\n                            case \"loop\":\n                                if (startTokenValue != \"do\")\n                                    ranges.shift();\n                                break;\n                            case \"for\":\n                                if (startTokenValue != \"next\")\n                                    ranges.shift();\n                                break;\n                            case \"next\":\n                                if (startTokenValue != \"for\")\n                                    ranges.shift();\n                                break;\n                            case \"while\":\n                                if (startTokenValue != \"wend\")\n                                    ranges.shift();\n                                break;\n                            case \"wend\":\n                                if (startTokenValue != \"while\")\n                                    ranges.shift();\n                                break;\n                        }\n                        break;\n                }\n\n                if (level === 0){\n                    stack.unshift(val);\n                }\n            }\n        }\n\n        if (!token)\n            return null;\n\n        if (tokenRange) {\n            if (!outputRange) {\n                ranges.push(stream.getCurrentTokenRange());\n            } else {\n                ranges.push(outputRange);\n            }\n            return ranges;\n        }\n\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1) {\n            var endColumn = session.getLine(row).length;\n            return new Range(row, endColumn, startRow - 1, startColumn);\n        } else\n            return new Range(startRow, startColumn, row - 1, session.getLine(row - 1).length);\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/vbscript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/vbscript_highlight_rules\",\"ace/mode/folding/vbscript\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar VBScriptHighlightRules = require(\"./vbscript_highlight_rules\").VBScriptHighlightRules;\nvar FoldMode = require(\"./folding/vbscript\").FoldMode;\nvar Range = require(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = VBScriptHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n    this.indentKeywords = this.foldingRules.indentKeywords;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = [\"'\", \"REM\"];\n\n    var outdentKeywords = [\n        \"else\",\n        \"elseif\",\n        \"end\",\n        \"loop\",\n        \"next\",\n        \"wend\"\n    ];\n\n    function getNetIndentLevel(tokens, line, indentKeywords) {\n        var level = 0;\n        var modifiers = '';\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (token.type == \"keyword.control.asp\" || token.type == \"storage.type.function.asp\") {\n                var val = token.value.toLowerCase();\n                if (val in indentKeywords) {\n                    switch (val) {\n                        case \"property\":\n                        case \"sub\":\n                        case \"function\":\n                            modifiers = \"(?:(?:Private|Public(?:\\\\s+Default)?)\\\\s+)?\";\n                        case \"select\":\n                        case \"do\":\n                        case \"for\":\n                        case \"class\":\n                        case \"while\":\n                        case \"with\":\n                            var checkToken = new RegExp(\"^\\\\s*\" + modifiers + val,\"i\");\n                            if (checkToken.test(line)) {\n                                level += indentKeywords[val];\n                            }\n                            break;\n                        case \"if\":\n                            var singleLineCondition = /^\\s*(If)\\s+(.)*\\s+Then\\s+(\\S)+/i.test(line);\n                            if (!singleLineCondition)\n                                level += indentKeywords[val];\n                            break;\n                        default:\n                            level += indentKeywords[val];\n                            break;\n                    }\n                }\n            }\n        }\n        if (level < 0) {\n            return -1;\n        } else if (level > 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var level = 0;\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (state == \"start\") {\n            level = getNetIndentLevel(tokens, line, this.indentKeywords);\n        }\n        if (level > 0) {\n            return indent + tab;\n        } else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n            if (!this.checkOutdent(state, line, \"\\n\")) {\n                return indent.substr(0, indent.length - tab.length);\n            }\n        }\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\")\n            return false;\n\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n\n        if (!tokens || !tokens.length)\n            return false;\n        var val = tokens[0].value.toLowerCase();\n        return ((tokens[0].type == \"keyword.control.asp\" || tokens[0].type == \"storage.type.function.asp\") && outdentKeywords.indexOf(val) != -1);\n    };\n\n    this.getMatching = function(session, row, column, tokenRange) {\n        if (row == undefined) {\n            var pos = session.selection.lead;\n            column = pos.column;\n            row = pos.row;\n        }\n        if (tokenRange == undefined)\n            tokenRange = true;\n\n        var startToken = session.getTokenAt(row, column);\n        if (startToken) {\n            var val = startToken.value.toLowerCase();\n            if (val in this.indentKeywords)\n                return this.foldingRules.vbsBlock(session, row, column, tokenRange);\n        }\n    };\n\n    this.autoOutdent = function(state, session, row) {\n        var line = session.getLine(row);\n        var column = line.match(/^\\s*/)[0].length;\n        if (!column || !row) return;\n\n        var startRange = this.getMatching(session, row, column + 1, false);\n        if (!startRange || startRange.start.row == row)\n            return;\n        var indent = this.$getIndent(session.getLine(startRange.start.row));\n        if (indent.length != column) {\n            session.replace(new Range(row, 0, row, column), indent);\n            session.outdentRows(new Range(row + 1, 0, row + 1, 0));\n        }\n    };\n\n    this.$id = \"ace/mode/vbscript\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/vbscript\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}