{"ast":null,"code":"ace.define(\"ace/mode/sh_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var reservedKeywords = exports.reservedKeywords = '!|{|}|case|do|done|elif|else|' + 'esac|fi|for|if|in|then|until|while|' + '&|;|export|local|read|typeset|unset|' + 'elif|select|set|function|declare|readonly';\n  var languageConstructs = exports.languageConstructs = '[|]|alias|bg|bind|break|builtin|' + 'cd|command|compgen|complete|continue|' + 'dirs|disown|echo|enable|eval|exec|' + 'exit|fc|fg|getopts|hash|help|history|' + 'jobs|kill|let|logout|popd|printf|pushd|' + 'pwd|return|set|shift|shopt|source|' + 'suspend|test|times|trap|type|ulimit|' + 'umask|unalias|wait';\n\n  var ShHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": reservedKeywords,\n      \"support.function.builtin\": languageConstructs,\n      \"invalid.deprecated\": \"debugger\"\n    }, \"identifier\");\n    var integer = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var fileDescriptor = \"(?:&\" + intPart + \")\";\n    var variableName = \"[a-zA-Z_][a-zA-Z0-9_]*\";\n    var variable = \"(?:\" + variableName + \"(?==))\";\n    var builtinVariable = \"(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))\";\n    var func = \"(?:\" + variableName + \"\\\\s*\\\\(\\\\))\";\n    this.$rules = {\n      \"start\": [{\n        token: \"constant\",\n        regex: /\\\\./\n      }, {\n        token: [\"text\", \"comment\"],\n        regex: /(^|\\s)(#.*)$/\n      }, {\n        token: \"string.start\",\n        regex: '\"',\n        push: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[$`\"\\\\]|$)/\n        }, {\n          include: \"variables\"\n        }, {\n          token: \"keyword.operator\",\n          regex: /`/ // TODO highlight `\n\n        }, {\n          token: \"string.end\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        regex: \"\\\\$'\",\n        push: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/\n        }, {\n          token: \"string\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        regex: \"<<<\",\n        token: \"keyword.operator\"\n      }, {\n        stateName: \"heredoc\",\n        regex: \"(<<-?)(\\\\s*)(['\\\"`]?)([\\\\w\\\\-]+)(['\\\"`]?)\",\n        onMatch: function (value, currentState, stack) {\n          var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n          var tokens = value.split(this.splitRegex);\n          stack.push(next, tokens[4]);\n          return [{\n            type: \"constant\",\n            value: tokens[1]\n          }, {\n            type: \"text\",\n            value: tokens[2]\n          }, {\n            type: \"string\",\n            value: tokens[3]\n          }, {\n            type: \"support.class\",\n            value: tokens[4]\n          }, {\n            type: \"string\",\n            value: tokens[5]\n          }];\n        },\n        rules: {\n          heredoc: [{\n            onMatch: function (value, currentState, stack) {\n              if (value === stack[1]) {\n                stack.shift();\n                stack.shift();\n                this.next = stack[0] || \"start\";\n                return \"support.class\";\n              }\n\n              this.next = \"\";\n              return \"string\";\n            },\n            regex: \".*$\",\n            next: \"start\"\n          }],\n          indentedHeredoc: [{\n            token: \"string\",\n            regex: \"^\\t+\"\n          }, {\n            onMatch: function (value, currentState, stack) {\n              if (value === stack[1]) {\n                stack.shift();\n                stack.shift();\n                this.next = stack[0] || \"start\";\n                return \"support.class\";\n              }\n\n              this.next = \"\";\n              return \"string\";\n            },\n            regex: \".*$\",\n            next: \"start\"\n          }]\n        }\n      }, {\n        regex: \"$\",\n        token: \"empty\",\n        next: function (currentState, stack) {\n          if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\") return stack[0];\n          return currentState;\n        }\n      }, {\n        token: [\"keyword\", \"text\", \"text\", \"text\", \"variable\"],\n        regex: /(declare|local|readonly)(\\s+)(?:(-[fixar]+)(\\s+))?([a-zA-Z_][a-zA-Z0-9_]*\\b)/\n      }, {\n        token: \"variable.language\",\n        regex: builtinVariable\n      }, {\n        token: \"variable\",\n        regex: variable\n      }, {\n        include: \"variables\"\n      }, {\n        token: \"support.function\",\n        regex: func\n      }, {\n        token: \"support.function\",\n        regex: fileDescriptor\n      }, {\n        token: \"string\",\n        // ' string\n        start: \"'\",\n        end: \"'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!=|[%&|`]\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \";\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\)\\\\}]\",\n        next: \"pop\"\n      }],\n      variables: [{\n        token: \"variable\",\n        regex: /(\\$)(\\w+)/\n      }, {\n        token: [\"variable\", \"paren.lparen\"],\n        regex: /(\\$)(\\()/,\n        push: \"start\"\n      }, {\n        token: [\"variable\", \"paren.lparen\", \"keyword.operator\", \"variable\", \"keyword.operator\"],\n        regex: /(\\$)(\\{)([#!]?)(\\w+|[*@#?\\-$!0_])(:[?+\\-=]?|##?|%%?|,,?\\/|\\^\\^?)?/,\n        push: \"start\"\n      }, {\n        token: \"variable\",\n        regex: /\\$[*@#?\\-$!0_]/\n      }, {\n        token: [\"variable\", \"paren.lparen\"],\n        regex: /(\\$)(\\{)/,\n        push: \"start\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(ShHighlightRules, TextHighlightRules);\n  exports.ShHighlightRules = ShHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/sh\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/sh_highlight_rules\", \"ace/range\", \"ace/mode/folding/cstyle\", \"ace/mode/behaviour/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var ShHighlightRules = require(\"./sh_highlight_rules\").ShHighlightRules;\n\n  var Range = require(\"../range\").Range;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\n\n  var Mode = function () {\n    this.HighlightRules = ShHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = new CstyleBehaviour();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    var outdents = {\n      \"pass\": 1,\n      \"return\": 1,\n      \"raise\": 1,\n      \"break\": 1,\n      \"continue\": 1\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\") return false;\n      var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n      if (!tokens) return false;\n\n      do {\n        var last = tokens.pop();\n      } while (last && (last.type == \"comment\" || last.type == \"text\" && last.value.match(/^\\s+$/)));\n\n      if (!last) return false;\n      return last.type == \"keyword\" && outdents[last.value];\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      row += 1;\n      var indent = this.$getIndent(doc.getLine(row));\n      var tab = doc.getTabString();\n      if (indent.slice(-tab.length) == tab) doc.remove(new Range(row, indent.length - tab.length, row, indent.length));\n    };\n\n    this.$id = \"ace/mode/sh\";\n    this.snippetFileId = \"ace/snippets/sh\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/sh\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-sh.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","reservedKeywords","languageConstructs","ShHighlightRules","keywordMapper","createKeywordMapper","integer","fraction","intPart","pointFloat","exponentFloat","floatNumber","fileDescriptor","variableName","variable","builtinVariable","func","$rules","token","regex","push","include","next","defaultToken","stateName","onMatch","value","currentState","stack","tokens","split","splitRegex","type","rules","heredoc","shift","indentedHeredoc","start","end","variables","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","CStyleFoldMode","CstyleBehaviour","HighlightRules","foldingRules","$behaviour","lineCommentStart","getNextLineIndent","state","tab","$getIndent","tokenizedLine","getTokenizer","getLineTokens","outdents","checkOutdent","input","trim","last","pop","autoOutdent","doc","getTabString","slice","remove","$id","snippetFileId"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/sh_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar reservedKeywords = exports.reservedKeywords = (\n        '!|{|}|case|do|done|elif|else|'+\n        'esac|fi|for|if|in|then|until|while|'+\n        '&|;|export|local|read|typeset|unset|'+\n        'elif|select|set|function|declare|readonly'\n    );\n\nvar languageConstructs = exports.languageConstructs = (\n    '[|]|alias|bg|bind|break|builtin|'+\n     'cd|command|compgen|complete|continue|'+\n     'dirs|disown|echo|enable|eval|exec|'+\n     'exit|fc|fg|getopts|hash|help|history|'+\n     'jobs|kill|let|logout|popd|printf|pushd|'+\n     'pwd|return|set|shift|shopt|source|'+\n     'suspend|test|times|trap|type|ulimit|'+\n     'umask|unalias|wait'\n);\n\nvar ShHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": reservedKeywords,\n        \"support.function.builtin\": languageConstructs,\n        \"invalid.deprecated\": \"debugger\"\n    }, \"identifier\");\n\n    var integer = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" +  intPart + \")\" + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var fileDescriptor = \"(?:&\" + intPart + \")\";\n\n    var variableName = \"[a-zA-Z_][a-zA-Z0-9_]*\";\n    var variable = \"(?:\" + variableName + \"(?==))\";\n\n    var builtinVariable = \"(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))\";\n\n    var func = \"(?:\" + variableName + \"\\\\s*\\\\(\\\\))\";\n\n    this.$rules = {\n        \"start\" : [{\n            token : \"constant\",\n            regex : /\\\\./\n        }, {\n            token : [\"text\", \"comment\"],\n            regex : /(^|\\s)(#.*)$/\n        }, {\n            token : \"string.start\",\n            regex : '\"',\n            push : [{\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:[$`\"\\\\]|$)/\n            }, {\n                include : \"variables\"\n            }, {\n                token : \"keyword.operator\",\n                regex : /`/ // TODO highlight `\n            }, {\n                token : \"string.end\",\n                regex : '\"',\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            token : \"string\",\n            regex : \"\\\\$'\",\n            push : [{\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/\n            }, {\n                token : \"string\",\n                regex : \"'\",\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            regex : \"<<<\",\n            token : \"keyword.operator\"\n        }, {\n            stateName: \"heredoc\",\n            regex : \"(<<-?)(\\\\s*)(['\\\"`]?)([\\\\w\\\\-]+)(['\\\"`]?)\",\n            onMatch : function(value, currentState, stack) {\n                var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n                var tokens = value.split(this.splitRegex);\n                stack.push(next, tokens[4]);\n                return [\n                    {type:\"constant\", value: tokens[1]},\n                    {type:\"text\", value: tokens[2]},\n                    {type:\"string\", value: tokens[3]},\n                    {type:\"support.class\", value: tokens[4]},\n                    {type:\"string\", value: tokens[5]}\n                ];\n            },\n            rules: {\n                heredoc: [{\n                    onMatch:  function(value, currentState, stack) {\n                        if (value === stack[1]) {\n                            stack.shift();\n                            stack.shift();\n                            this.next = stack[0] || \"start\";\n                            return \"support.class\";\n                        }\n                        this.next = \"\";\n                        return \"string\";\n                    },\n                    regex: \".*$\",\n                    next: \"start\"\n                }],\n                indentedHeredoc: [{\n                    token: \"string\",\n                    regex: \"^\\t+\"\n                }, {\n                    onMatch:  function(value, currentState, stack) {\n                        if (value === stack[1]) {\n                            stack.shift();\n                            stack.shift();\n                            this.next = stack[0] || \"start\";\n                            return \"support.class\";\n                        }\n                        this.next = \"\";\n                        return \"string\";\n                    },\n                    regex: \".*$\",\n                    next: \"start\"\n                }]\n            }\n        }, {\n            regex : \"$\",\n            token : \"empty\",\n            next : function(currentState, stack) {\n                if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\")\n                    return stack[0];\n                return currentState;\n            }\n        }, {\n            token : [\"keyword\", \"text\", \"text\", \"text\", \"variable\"],\n            regex : /(declare|local|readonly)(\\s+)(?:(-[fixar]+)(\\s+))?([a-zA-Z_][a-zA-Z0-9_]*\\b)/\n        }, {\n            token : \"variable.language\",\n            regex : builtinVariable\n        }, {\n            token : \"variable\",\n            regex : variable\n        }, {\n            include : \"variables\"\n        }, {\n            token : \"support.function\",\n            regex : func\n        }, {\n            token : \"support.function\",\n            regex : fileDescriptor\n        }, {\n            token : \"string\",           // ' string\n            start : \"'\", end : \"'\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : floatNumber\n        }, {\n            token : \"constant.numeric\", // integer\n            regex : integer + \"\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!=|[%&|`]\"\n        }, {\n            token : \"punctuation.operator\",\n            regex : \";\"\n        }, {\n            token : \"paren.lparen\",\n            regex : \"[\\\\[\\\\(\\\\{]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\]]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\)\\\\}]\",\n            next : \"pop\"\n        }],\n        variables: [{\n            token : \"variable\",\n            regex : /(\\$)(\\w+)/\n        }, {\n            token : [\"variable\", \"paren.lparen\"],\n            regex : /(\\$)(\\()/,\n            push : \"start\"\n        }, {\n            token : [\"variable\", \"paren.lparen\", \"keyword.operator\", \"variable\", \"keyword.operator\"],\n            regex : /(\\$)(\\{)([#!]?)(\\w+|[*@#?\\-$!0_])(:[?+\\-=]?|##?|%%?|,,?\\/|\\^\\^?)?/,\n            push : \"start\"\n        }, {\n            token : \"variable\",\n            regex : /\\$[*@#?\\-$!0_]/\n        }, {\n            token : [\"variable\", \"paren.lparen\"],\n            regex : /(\\$)(\\{)/,\n            push : \"start\"\n        }]\n    };\n    \n    this.normalizeRules();\n};\n\noop.inherits(ShHighlightRules, TextHighlightRules);\n\nexports.ShHighlightRules = ShHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/sh\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/sh_highlight_rules\",\"ace/range\",\"ace/mode/folding/cstyle\",\"ace/mode/behaviour/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar ShHighlightRules = require(\"./sh_highlight_rules\").ShHighlightRules;\nvar Range = require(\"../range\").Range;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\n\nvar Mode = function() {\n    this.HighlightRules = ShHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = new CstyleBehaviour();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n   \n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    var outdents = {\n        \"pass\": 1,\n        \"return\": 1,\n        \"raise\": 1,\n        \"break\": 1,\n        \"continue\": 1\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\")\n            return false;\n\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n\n        if (!tokens)\n            return false;\n        do {\n            var last = tokens.pop();\n        } while (last && (last.type == \"comment\" || (last.type == \"text\" && last.value.match(/^\\s+$/))));\n\n        if (!last)\n            return false;\n\n        return (last.type == \"keyword\" && outdents[last.value]);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n\n        row += 1;\n        var indent = this.$getIndent(doc.getLine(row));\n        var tab = doc.getTabString();\n        if (indent.slice(-tab.length) == tab)\n            doc.remove(new Range(row, indent.length-tab.length, row, indent.length));\n    };\n\n    this.$id = \"ace/mode/sh\";\n    this.snippetFileId = \"ace/snippets/sh\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/sh\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}