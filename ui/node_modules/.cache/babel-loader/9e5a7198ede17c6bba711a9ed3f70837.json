{"ast":null,"code":"ace.define(\"ace/mode/hjson_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var HjsonHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        include: \"#comments\"\n      }, {\n        include: \"#rootObject\"\n      }, {\n        include: \"#value\"\n      }],\n      \"#array\": [{\n        token: \"paren.lparen\",\n        regex: /\\[/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\]/,\n          next: \"pop\"\n        }, {\n          include: \"#value\"\n        }, {\n          include: \"#comments\"\n        }, {\n          token: \"text\",\n          regex: /,|$/\n        }, {\n          token: \"invalid.illegal\",\n          regex: /[^\\s\\]]/\n        }, {\n          defaultToken: \"array\"\n        }]\n      }],\n      \"#comments\": [{\n        token: [\"comment.punctuation\", \"comment.line\"],\n        regex: /(#)(.*$)/\n      }, {\n        token: \"comment.punctuation\",\n        regex: /\\/\\*/,\n        push: [{\n          token: \"comment.punctuation\",\n          regex: /\\*\\//,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block\"\n        }]\n      }, {\n        token: [\"comment.punctuation\", \"comment.line\"],\n        regex: /(\\/\\/)(.*$)/\n      }],\n      \"#constant\": [{\n        token: \"constant\",\n        regex: /\\b(?:true|false|null)\\b/\n      }],\n      \"#keyname\": [{\n        token: \"keyword\",\n        regex: /(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*(?=:)/\n      }],\n      \"#mstring\": [{\n        token: \"string\",\n        regex: /'''/,\n        push: [{\n          token: \"string\",\n          regex: /'''/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      \"#number\": [{\n        token: \"constant.numeric\",\n        regex: /-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/,\n        comment: \"handles integer and decimal numbers\"\n      }],\n      \"#object\": [{\n        token: \"paren.lparen\",\n        regex: /\\{/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\}/,\n          next: \"pop\"\n        }, {\n          include: \"#keyname\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"text\",\n          regex: /:/\n        }, {\n          token: \"text\",\n          regex: /,/\n        }, {\n          defaultToken: \"paren\"\n        }]\n      }],\n      \"#rootObject\": [{\n        token: \"paren\",\n        regex: /(?=\\s*(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*:)/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /---none---/,\n          next: \"pop\"\n        }, {\n          include: \"#keyname\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"text\",\n          regex: /:/\n        }, {\n          token: \"text\",\n          regex: /,/\n        }, {\n          defaultToken: \"paren\"\n        }]\n      }],\n      \"#string\": [{\n        token: \"string\",\n        regex: /\"/,\n        push: [{\n          token: \"string\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/\n        }, {\n          token: \"invalid.illegal\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      \"#ustring\": [{\n        token: \"string\",\n        regex: /\\b[^:,0-9\\-\\{\\[\\}\\]\\s].*$/\n      }],\n      \"#value\": [{\n        include: \"#constant\"\n      }, {\n        include: \"#number\"\n      }, {\n        include: \"#string\"\n      }, {\n        include: \"#array\"\n      }, {\n        include: \"#object\"\n      }, {\n        include: \"#comments\"\n      }, {\n        include: \"#mstring\"\n      }, {\n        include: \"#ustring\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  HjsonHighlightRules.metaData = {\n    fileTypes: [\"hjson\"],\n    foldingStartMarker: \"(?x:     # turn on extended mode\\n              ^    # a line beginning with\\n              \\\\s*    # some optional space\\n              [{\\\\[]  # the start of an object or array\\n              (?!    # but not followed by\\n              .*   # whatever\\n              [}\\\\]]  # and the close of an object or array\\n              ,?   # an optional comma\\n              \\\\s*  # some optional space\\n              $    # at the end of the line\\n              )\\n              |    # ...or...\\n              [{\\\\[]  # the start of an object or array\\n              \\\\s*    # some optional space\\n              $    # at the end of the line\\n            )\",\n    foldingStopMarker: \"(?x:   # turn on extended mode\\n             ^    # a line beginning with\\n             \\\\s*  # some optional space\\n             [}\\\\]]  # and the close of an object or array\\n             )\",\n    keyEquivalent: \"^~J\",\n    name: \"Hjson\",\n    scopeName: \"source.hjson\"\n  };\n  oop.inherits(HjsonHighlightRules, TextHighlightRules);\n  exports.HjsonHighlightRules = HjsonHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/hjson\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/hjson_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var HjsonHighlightRules = require(\"./hjson_highlight_rules\").HjsonHighlightRules;\n\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = HjsonHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/hjson\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/hjson\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-hjson.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","HjsonHighlightRules","$rules","start","include","token","regex","push","next","defaultToken","comment","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","lineCommentStart","blockComment","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/hjson_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar HjsonHighlightRules = function() {\n\n    this.$rules = {\n        start: [{\n            include: \"#comments\"\n        }, {\n            include: \"#rootObject\"\n        }, {\n            include: \"#value\"\n        }],\n        \"#array\": [{\n            token: \"paren.lparen\",\n            regex: /\\[/,\n            push: [{\n                token: \"paren.rparen\",\n                regex: /\\]/,\n                next: \"pop\"\n            }, {\n                include: \"#value\"\n            }, {\n                include: \"#comments\"\n            }, {\n                token: \"text\",\n                regex: /,|$/\n            }, {\n                token: \"invalid.illegal\",\n                regex: /[^\\s\\]]/\n            }, {\n                defaultToken: \"array\"\n            }]\n        }],\n        \"#comments\": [{\n            token: [\n                \"comment.punctuation\",\n                \"comment.line\"\n            ],\n            regex: /(#)(.*$)/\n        }, {\n            token: \"comment.punctuation\",\n            regex: /\\/\\*/,\n            push: [{\n                token: \"comment.punctuation\",\n                regex: /\\*\\//,\n                next: \"pop\"\n            }, {\n                defaultToken: \"comment.block\"\n            }]\n        }, {\n            token: [\n                \"comment.punctuation\",\n                \"comment.line\"\n            ],\n            regex: /(\\/\\/)(.*$)/\n        }],\n        \"#constant\": [{\n            token: \"constant\",\n            regex: /\\b(?:true|false|null)\\b/\n        }],\n        \"#keyname\": [{\n            token: \"keyword\",\n            regex: /(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*(?=:)/\n        }],\n        \"#mstring\": [{\n            token: \"string\",\n            regex: /'''/,\n            push: [{\n                token: \"string\",\n                regex: /'''/,\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }],\n        \"#number\": [{\n            token: \"constant.numeric\",\n            regex: /-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/,\n            comment: \"handles integer and decimal numbers\"\n        }],\n        \"#object\": [{\n            token: \"paren.lparen\",\n            regex: /\\{/,\n            push: [{\n                token: \"paren.rparen\",\n                regex: /\\}/,\n                next: \"pop\"\n            }, {\n                include: \"#keyname\"\n            }, {\n                include: \"#value\"\n            }, {\n                token: \"text\",\n                regex: /:/\n            }, {\n                token: \"text\",\n                regex: /,/\n            }, {\n                defaultToken: \"paren\"\n            }]\n        }],\n        \"#rootObject\": [{\n            token: \"paren\",\n            regex: /(?=\\s*(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*:)/,\n            push: [{\n                token: \"paren.rparen\",\n                regex: /---none---/,\n                next: \"pop\"\n            }, {\n                include: \"#keyname\"\n            }, {\n                include: \"#value\"\n            }, {\n                token: \"text\",\n                regex: /:/\n            }, {\n                token: \"text\",\n                regex: /,/\n            }, {\n                defaultToken: \"paren\"\n            }]\n        }],\n        \"#string\": [{\n            token: \"string\",\n            regex: /\"/,\n            push: [{\n                token: \"string\",\n                regex: /\"/,\n                next: \"pop\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/\n            }, {\n                token: \"invalid.illegal\",\n                regex: /\\\\./\n            }, {\n                defaultToken: \"string\"\n            }]\n        }],\n        \"#ustring\": [{\n            token: \"string\",\n            regex: /\\b[^:,0-9\\-\\{\\[\\}\\]\\s].*$/\n        }],\n        \"#value\": [{\n            include: \"#constant\"\n        }, {\n            include: \"#number\"\n        }, {\n            include: \"#string\"\n        }, {\n            include: \"#array\"\n        }, {\n            include: \"#object\"\n        }, {\n            include: \"#comments\"\n        }, {\n            include: \"#mstring\"\n        }, {\n            include: \"#ustring\"\n        }]\n    };\n\n    this.normalizeRules();\n};\n\nHjsonHighlightRules.metaData = {\n    fileTypes: [\"hjson\"],\n    foldingStartMarker: \"(?x:     # turn on extended mode\\n              ^    # a line beginning with\\n              \\\\s*    # some optional space\\n              [{\\\\[]  # the start of an object or array\\n              (?!    # but not followed by\\n              .*   # whatever\\n              [}\\\\]]  # and the close of an object or array\\n              ,?   # an optional comma\\n              \\\\s*  # some optional space\\n              $    # at the end of the line\\n              )\\n              |    # ...or...\\n              [{\\\\[]  # the start of an object or array\\n              \\\\s*    # some optional space\\n              $    # at the end of the line\\n            )\",\n    foldingStopMarker: \"(?x:   # turn on extended mode\\n             ^    # a line beginning with\\n             \\\\s*  # some optional space\\n             [}\\\\]]  # and the close of an object or array\\n             )\",\n    keyEquivalent: \"^~J\",\n    name: \"Hjson\",\n    scopeName: \"source.hjson\"\n};\n\n\noop.inherits(HjsonHighlightRules, TextHighlightRules);\n\nexports.HjsonHighlightRules = HjsonHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/hjson\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/hjson_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HjsonHighlightRules = require(\"./hjson_highlight_rules\").HjsonHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = HjsonHighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.$id = \"ace/mode/hjson\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/hjson\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}