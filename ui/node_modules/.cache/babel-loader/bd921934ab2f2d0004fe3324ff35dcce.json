{"ast":null,"code":"ace.define(\"ace/snippets/django\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippetText = \"# Model Fields\\n\\\n\\n\\\n# Note: Optional arguments are using defaults that match what Django will use\\n\\\n# as a default, e.g. with max_length fields.  Doing this as a form of self\\n\\\n# documentation and to make it easy to know whether you should override the\\n\\\n# default or not.\\n\\\n\\n\\\n# Note: Optional arguments that are booleans will use the opposite since you\\n\\\n# can either not specify them, or override them, e.g. auto_now_add=False.\\n\\\n\\n\\\nsnippet auto\\n\\\n\t${1:FIELDNAME} = models.AutoField(${2})\\n\\\nsnippet bool\\n\\\n\t${1:FIELDNAME} = models.BooleanField(${2:default=True})\\n\\\nsnippet char\\n\\\n\t${1:FIELDNAME} = models.CharField(max_length=${2}${3:, blank=True})\\n\\\nsnippet comma\\n\\\n\t${1:FIELDNAME} = models.CommaSeparatedIntegerField(max_length=${2}${3:, blank=True})\\n\\\nsnippet date\\n\\\n\t${1:FIELDNAME} = models.DateField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})\\n\\\nsnippet datetime\\n\\\n\t${1:FIELDNAME} = models.DateTimeField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})\\n\\\nsnippet decimal\\n\\\n\t${1:FIELDNAME} = models.DecimalField(max_digits=${2}, decimal_places=${3})\\n\\\nsnippet email\\n\\\n\t${1:FIELDNAME} = models.EmailField(max_length=${2:75}${3:, blank=True})\\n\\\nsnippet file\\n\\\n\t${1:FIELDNAME} = models.FileField(upload_to=${2:path/for/upload}${3:, max_length=100})\\n\\\nsnippet filepath\\n\\\n\t${1:FIELDNAME} = models.FilePathField(path=${2:\\\"/abs/path/to/dir\\\"}${3:, max_length=100}${4:, match=\\\"*.ext\\\"}${5:, recursive=True}${6:, blank=True, })\\n\\\nsnippet float\\n\\\n\t${1:FIELDNAME} = models.FloatField(${2})\\n\\\nsnippet image\\n\\\n\t${1:FIELDNAME} = models.ImageField(upload_to=${2:path/for/upload}${3:, height_field=height, width_field=width}${4:, max_length=100})\\n\\\nsnippet int\\n\\\n\t${1:FIELDNAME} = models.IntegerField(${2})\\n\\\nsnippet ip\\n\\\n\t${1:FIELDNAME} = models.IPAddressField(${2})\\n\\\nsnippet nullbool\\n\\\n\t${1:FIELDNAME} = models.NullBooleanField(${2})\\n\\\nsnippet posint\\n\\\n\t${1:FIELDNAME} = models.PositiveIntegerField(${2})\\n\\\nsnippet possmallint\\n\\\n\t${1:FIELDNAME} = models.PositiveSmallIntegerField(${2})\\n\\\nsnippet slug\\n\\\n\t${1:FIELDNAME} = models.SlugField(max_length=${2:50}${3:, blank=True})\\n\\\nsnippet smallint\\n\\\n\t${1:FIELDNAME} = models.SmallIntegerField(${2})\\n\\\nsnippet text\\n\\\n\t${1:FIELDNAME} = models.TextField(${2:blank=True})\\n\\\nsnippet time\\n\\\n\t${1:FIELDNAME} = models.TimeField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})\\n\\\nsnippet url\\n\\\n\t${1:FIELDNAME} = models.URLField(${2:verify_exists=False}${3:, max_length=200}${4:, blank=True})\\n\\\nsnippet xml\\n\\\n\t${1:FIELDNAME} = models.XMLField(schema_path=${2:None}${3:, blank=True})\\n\\\n# Relational Fields\\n\\\nsnippet fk\\n\\\n\t${1:FIELDNAME} = models.ForeignKey(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, to_field=''})\\n\\\nsnippet m2m\\n\\\n\t${1:FIELDNAME} = models.ManyToManyField(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, symmetrical=False}${6:, through=''}${7:, db_table=''})\\n\\\nsnippet o2o\\n\\\n\t${1:FIELDNAME} = models.OneToOneField(${2:OtherModel}${3:, parent_link=True}${4:, related_name=''}${5:, limit_choices_to=}${6:, to_field=''})\\n\\\n\\n\\\n# Code Skeletons\\n\\\n\\n\\\nsnippet form\\n\\\n\tclass ${1:FormName}(forms.Form):\\n\\\n\t\t\\\"\\\"\\\"${2:docstring}\\\"\\\"\\\"\\n\\\n\t\t${3}\\n\\\n\\n\\\nsnippet model\\n\\\n\tclass ${1:ModelName}(models.Model):\\n\\\n\t\t\\\"\\\"\\\"${2:docstring}\\\"\\\"\\\"\\n\\\n\t\t${3}\\n\\\n\t\t\\n\\\n\t\tclass Meta:\\n\\\n\t\t\t${4}\\n\\\n\t\t\\n\\\n\t\tdef __unicode__(self):\\n\\\n\t\t\t${5}\\n\\\n\t\t\\n\\\n\t\tdef save(self, force_insert=False, force_update=False):\\n\\\n\t\t\t${6}\\n\\\n\t\t\\n\\\n\t\t@models.permalink\\n\\\n\t\tdef get_absolute_url(self):\\n\\\n\t\t\treturn ('${7:view_or_url_name}' ${8})\\n\\\n\\n\\\nsnippet modeladmin\\n\\\n\tclass ${1:ModelName}Admin(admin.ModelAdmin):\\n\\\n\t\t${2}\\n\\\n\t\\n\\\n\tadmin.site.register($1, $1Admin)\\n\\\n\t\\n\\\nsnippet tabularinline\\n\\\n\tclass ${1:ModelName}Inline(admin.TabularInline):\\n\\\n\t\tmodel = $1\\n\\\n\\n\\\nsnippet stackedinline\\n\\\n\tclass ${1:ModelName}Inline(admin.StackedInline):\\n\\\n\t\tmodel = $1\\n\\\n\\n\\\nsnippet r2r\\n\\\n\treturn render_to_response('${1:template.html}', {\\n\\\n\t\t\t${2}\\n\\\n\t\t}${3:, context_instance=RequestContext(request)}\\n\\\n\t)\\n\\\n\";\n  exports.scope = \"django\";\n});\n\n(function () {\n  ace.require([\"ace/snippets/django\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/snippets/django.js"],"names":["ace","define","require","exports","module","snippetText","scope","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,qBAAX,EAAiC,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,CAAjC,EAAiE,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AACpG;;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;AA6GAF,EAAAA,OAAO,CAACG,KAAR,GAAgB,QAAhB;AAEC,CAlHD;;AAkHmB,CAAC,YAAW;AACXN,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,qBAAD,CAAZ,EAAqC,UAASK,CAAT,EAAY;AAC7C,QAAI,OAAOH,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/snippets/django\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\nexports.snippetText = \"# Model Fields\\n\\\n\\n\\\n# Note: Optional arguments are using defaults that match what Django will use\\n\\\n# as a default, e.g. with max_length fields.  Doing this as a form of self\\n\\\n# documentation and to make it easy to know whether you should override the\\n\\\n# default or not.\\n\\\n\\n\\\n# Note: Optional arguments that are booleans will use the opposite since you\\n\\\n# can either not specify them, or override them, e.g. auto_now_add=False.\\n\\\n\\n\\\nsnippet auto\\n\\\n\t${1:FIELDNAME} = models.AutoField(${2})\\n\\\nsnippet bool\\n\\\n\t${1:FIELDNAME} = models.BooleanField(${2:default=True})\\n\\\nsnippet char\\n\\\n\t${1:FIELDNAME} = models.CharField(max_length=${2}${3:, blank=True})\\n\\\nsnippet comma\\n\\\n\t${1:FIELDNAME} = models.CommaSeparatedIntegerField(max_length=${2}${3:, blank=True})\\n\\\nsnippet date\\n\\\n\t${1:FIELDNAME} = models.DateField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})\\n\\\nsnippet datetime\\n\\\n\t${1:FIELDNAME} = models.DateTimeField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})\\n\\\nsnippet decimal\\n\\\n\t${1:FIELDNAME} = models.DecimalField(max_digits=${2}, decimal_places=${3})\\n\\\nsnippet email\\n\\\n\t${1:FIELDNAME} = models.EmailField(max_length=${2:75}${3:, blank=True})\\n\\\nsnippet file\\n\\\n\t${1:FIELDNAME} = models.FileField(upload_to=${2:path/for/upload}${3:, max_length=100})\\n\\\nsnippet filepath\\n\\\n\t${1:FIELDNAME} = models.FilePathField(path=${2:\\\"/abs/path/to/dir\\\"}${3:, max_length=100}${4:, match=\\\"*.ext\\\"}${5:, recursive=True}${6:, blank=True, })\\n\\\nsnippet float\\n\\\n\t${1:FIELDNAME} = models.FloatField(${2})\\n\\\nsnippet image\\n\\\n\t${1:FIELDNAME} = models.ImageField(upload_to=${2:path/for/upload}${3:, height_field=height, width_field=width}${4:, max_length=100})\\n\\\nsnippet int\\n\\\n\t${1:FIELDNAME} = models.IntegerField(${2})\\n\\\nsnippet ip\\n\\\n\t${1:FIELDNAME} = models.IPAddressField(${2})\\n\\\nsnippet nullbool\\n\\\n\t${1:FIELDNAME} = models.NullBooleanField(${2})\\n\\\nsnippet posint\\n\\\n\t${1:FIELDNAME} = models.PositiveIntegerField(${2})\\n\\\nsnippet possmallint\\n\\\n\t${1:FIELDNAME} = models.PositiveSmallIntegerField(${2})\\n\\\nsnippet slug\\n\\\n\t${1:FIELDNAME} = models.SlugField(max_length=${2:50}${3:, blank=True})\\n\\\nsnippet smallint\\n\\\n\t${1:FIELDNAME} = models.SmallIntegerField(${2})\\n\\\nsnippet text\\n\\\n\t${1:FIELDNAME} = models.TextField(${2:blank=True})\\n\\\nsnippet time\\n\\\n\t${1:FIELDNAME} = models.TimeField(${2:auto_now_add=True, auto_now=True}${3:, blank=True, null=True})\\n\\\nsnippet url\\n\\\n\t${1:FIELDNAME} = models.URLField(${2:verify_exists=False}${3:, max_length=200}${4:, blank=True})\\n\\\nsnippet xml\\n\\\n\t${1:FIELDNAME} = models.XMLField(schema_path=${2:None}${3:, blank=True})\\n\\\n# Relational Fields\\n\\\nsnippet fk\\n\\\n\t${1:FIELDNAME} = models.ForeignKey(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, to_field=''})\\n\\\nsnippet m2m\\n\\\n\t${1:FIELDNAME} = models.ManyToManyField(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, symmetrical=False}${6:, through=''}${7:, db_table=''})\\n\\\nsnippet o2o\\n\\\n\t${1:FIELDNAME} = models.OneToOneField(${2:OtherModel}${3:, parent_link=True}${4:, related_name=''}${5:, limit_choices_to=}${6:, to_field=''})\\n\\\n\\n\\\n# Code Skeletons\\n\\\n\\n\\\nsnippet form\\n\\\n\tclass ${1:FormName}(forms.Form):\\n\\\n\t\t\\\"\\\"\\\"${2:docstring}\\\"\\\"\\\"\\n\\\n\t\t${3}\\n\\\n\\n\\\nsnippet model\\n\\\n\tclass ${1:ModelName}(models.Model):\\n\\\n\t\t\\\"\\\"\\\"${2:docstring}\\\"\\\"\\\"\\n\\\n\t\t${3}\\n\\\n\t\t\\n\\\n\t\tclass Meta:\\n\\\n\t\t\t${4}\\n\\\n\t\t\\n\\\n\t\tdef __unicode__(self):\\n\\\n\t\t\t${5}\\n\\\n\t\t\\n\\\n\t\tdef save(self, force_insert=False, force_update=False):\\n\\\n\t\t\t${6}\\n\\\n\t\t\\n\\\n\t\t@models.permalink\\n\\\n\t\tdef get_absolute_url(self):\\n\\\n\t\t\treturn ('${7:view_or_url_name}' ${8})\\n\\\n\\n\\\nsnippet modeladmin\\n\\\n\tclass ${1:ModelName}Admin(admin.ModelAdmin):\\n\\\n\t\t${2}\\n\\\n\t\\n\\\n\tadmin.site.register($1, $1Admin)\\n\\\n\t\\n\\\nsnippet tabularinline\\n\\\n\tclass ${1:ModelName}Inline(admin.TabularInline):\\n\\\n\t\tmodel = $1\\n\\\n\\n\\\nsnippet stackedinline\\n\\\n\tclass ${1:ModelName}Inline(admin.StackedInline):\\n\\\n\t\tmodel = $1\\n\\\n\\n\\\nsnippet r2r\\n\\\n\treturn render_to_response('${1:template.html}', {\\n\\\n\t\t\t${2}\\n\\\n\t\t}${3:, context_instance=RequestContext(request)}\\n\\\n\t)\\n\\\n\";\nexports.scope = \"django\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/django\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}