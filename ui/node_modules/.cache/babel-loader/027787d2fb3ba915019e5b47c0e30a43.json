{"ast":null,"code":"/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.localforage = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) s(r[o]);\n\n    return s;\n  }({\n    1: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        var Mutation = global.MutationObserver || global.WebKitMutationObserver;\n        var scheduleDrain;\n        {\n          if (Mutation) {\n            var called = 0;\n            var observer = new Mutation(nextTick);\n            var element = global.document.createTextNode('');\n            observer.observe(element, {\n              characterData: true\n            });\n\n            scheduleDrain = function () {\n              element.data = called = ++called % 2;\n            };\n          } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n            var channel = new global.MessageChannel();\n            channel.port1.onmessage = nextTick;\n\n            scheduleDrain = function () {\n              channel.port2.postMessage(0);\n            };\n          } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n            scheduleDrain = function () {\n              // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n              // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n              var scriptEl = global.document.createElement('script');\n\n              scriptEl.onreadystatechange = function () {\n                nextTick();\n                scriptEl.onreadystatechange = null;\n                scriptEl.parentNode.removeChild(scriptEl);\n                scriptEl = null;\n              };\n\n              global.document.documentElement.appendChild(scriptEl);\n            };\n          } else {\n            scheduleDrain = function () {\n              setTimeout(nextTick, 0);\n            };\n          }\n        }\n        var draining;\n        var queue = []; //named nextTick for less confusing stack traces\n\n        function nextTick() {\n          draining = true;\n          var i, oldQueue;\n          var len = queue.length;\n\n          while (len) {\n            oldQueue = queue;\n            queue = [];\n            i = -1;\n\n            while (++i < len) {\n              oldQueue[i]();\n            }\n\n            len = queue.length;\n          }\n\n          draining = false;\n        }\n\n        module.exports = immediate;\n\n        function immediate(task) {\n          if (queue.push(task) === 1 && !draining) {\n            scheduleDrain();\n          }\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {}],\n    2: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var immediate = _dereq_(1);\n      /* istanbul ignore next */\n\n\n      function INTERNAL() {}\n\n      var handlers = {};\n      var REJECTED = ['REJECTED'];\n      var FULFILLED = ['FULFILLED'];\n      var PENDING = ['PENDING'];\n      module.exports = Promise;\n\n      function Promise(resolver) {\n        if (typeof resolver !== 'function') {\n          throw new TypeError('resolver must be a function');\n        }\n\n        this.state = PENDING;\n        this.queue = [];\n        this.outcome = void 0;\n\n        if (resolver !== INTERNAL) {\n          safelyResolveThenable(this, resolver);\n        }\n      }\n\n      Promise.prototype[\"catch\"] = function (onRejected) {\n        return this.then(null, onRejected);\n      };\n\n      Promise.prototype.then = function (onFulfilled, onRejected) {\n        if (typeof onFulfilled !== 'function' && this.state === FULFILLED || typeof onRejected !== 'function' && this.state === REJECTED) {\n          return this;\n        }\n\n        var promise = new this.constructor(INTERNAL);\n\n        if (this.state !== PENDING) {\n          var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n          unwrap(promise, resolver, this.outcome);\n        } else {\n          this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n        }\n\n        return promise;\n      };\n\n      function QueueItem(promise, onFulfilled, onRejected) {\n        this.promise = promise;\n\n        if (typeof onFulfilled === 'function') {\n          this.onFulfilled = onFulfilled;\n          this.callFulfilled = this.otherCallFulfilled;\n        }\n\n        if (typeof onRejected === 'function') {\n          this.onRejected = onRejected;\n          this.callRejected = this.otherCallRejected;\n        }\n      }\n\n      QueueItem.prototype.callFulfilled = function (value) {\n        handlers.resolve(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallFulfilled = function (value) {\n        unwrap(this.promise, this.onFulfilled, value);\n      };\n\n      QueueItem.prototype.callRejected = function (value) {\n        handlers.reject(this.promise, value);\n      };\n\n      QueueItem.prototype.otherCallRejected = function (value) {\n        unwrap(this.promise, this.onRejected, value);\n      };\n\n      function unwrap(promise, func, value) {\n        immediate(function () {\n          var returnValue;\n\n          try {\n            returnValue = func(value);\n          } catch (e) {\n            return handlers.reject(promise, e);\n          }\n\n          if (returnValue === promise) {\n            handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n          } else {\n            handlers.resolve(promise, returnValue);\n          }\n        });\n      }\n\n      handlers.resolve = function (self, value) {\n        var result = tryCatch(getThen, value);\n\n        if (result.status === 'error') {\n          return handlers.reject(self, result.value);\n        }\n\n        var thenable = result.value;\n\n        if (thenable) {\n          safelyResolveThenable(self, thenable);\n        } else {\n          self.state = FULFILLED;\n          self.outcome = value;\n          var i = -1;\n          var len = self.queue.length;\n\n          while (++i < len) {\n            self.queue[i].callFulfilled(value);\n          }\n        }\n\n        return self;\n      };\n\n      handlers.reject = function (self, error) {\n        self.state = REJECTED;\n        self.outcome = error;\n        var i = -1;\n        var len = self.queue.length;\n\n        while (++i < len) {\n          self.queue[i].callRejected(error);\n        }\n\n        return self;\n      };\n\n      function getThen(obj) {\n        // Make sure we only access the accessor once as required by the spec\n        var then = obj && obj.then;\n\n        if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n          return function appyThen() {\n            then.apply(obj, arguments);\n          };\n        }\n      }\n\n      function safelyResolveThenable(self, thenable) {\n        // Either fulfill, reject or reject with error\n        var called = false;\n\n        function onError(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.reject(self, value);\n        }\n\n        function onSuccess(value) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          handlers.resolve(self, value);\n        }\n\n        function tryToUnwrap() {\n          thenable(onSuccess, onError);\n        }\n\n        var result = tryCatch(tryToUnwrap);\n\n        if (result.status === 'error') {\n          onError(result.value);\n        }\n      }\n\n      function tryCatch(func, value) {\n        var out = {};\n\n        try {\n          out.value = func(value);\n          out.status = 'success';\n        } catch (e) {\n          out.status = 'error';\n          out.value = e;\n        }\n\n        return out;\n      }\n\n      Promise.resolve = resolve;\n\n      function resolve(value) {\n        if (value instanceof this) {\n          return value;\n        }\n\n        return handlers.resolve(new this(INTERNAL), value);\n      }\n\n      Promise.reject = reject;\n\n      function reject(reason) {\n        var promise = new this(INTERNAL);\n        return handlers.reject(promise, reason);\n      }\n\n      Promise.all = all;\n\n      function all(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var values = new Array(len);\n        var resolved = 0;\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          allResolver(iterable[i], i);\n        }\n\n        return promise;\n\n        function allResolver(value, i) {\n          self.resolve(value).then(resolveFromAll, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n\n          function resolveFromAll(outValue) {\n            values[i] = outValue;\n\n            if (++resolved === len && !called) {\n              called = true;\n              handlers.resolve(promise, values);\n            }\n          }\n        }\n      }\n\n      Promise.race = race;\n\n      function race(iterable) {\n        var self = this;\n\n        if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n          return this.reject(new TypeError('must be an array'));\n        }\n\n        var len = iterable.length;\n        var called = false;\n\n        if (!len) {\n          return this.resolve([]);\n        }\n\n        var i = -1;\n        var promise = new this(INTERNAL);\n\n        while (++i < len) {\n          resolver(iterable[i]);\n        }\n\n        return promise;\n\n        function resolver(value) {\n          self.resolve(value).then(function (response) {\n            if (!called) {\n              called = true;\n              handlers.resolve(promise, response);\n            }\n          }, function (error) {\n            if (!called) {\n              called = true;\n              handlers.reject(promise, error);\n            }\n          });\n        }\n      }\n    }, {\n      \"1\": 1\n    }],\n    3: [function (_dereq_, module, exports) {\n      (function (global) {\n        'use strict';\n\n        if (typeof global.Promise !== 'function') {\n          global.Promise = _dereq_(2);\n        }\n      }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n    }, {\n      \"2\": 2\n    }],\n    4: [function (_dereq_, module, exports) {\n      'use strict';\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function getIDB() {\n        /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n        try {\n          if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n          }\n\n          if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n          }\n\n          if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n          }\n\n          if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n          }\n\n          if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n          }\n        } catch (e) {\n          return;\n        }\n      }\n\n      var idb = getIDB();\n\n      function isIndexedDBValid() {\n        try {\n          // Initialize IndexedDB; fall back to vendor-prefixed versions\n          // if needed.\n          if (!idb) {\n            return false;\n          } // We mimic PouchDB here;\n          //\n          // We test for openDatabase because IE Mobile identifies itself\n          // as Safari. Oh the lulz...\n\n\n          var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n          var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1; // Safari <10.1 does not meet our requirements for IDB support (#5572)\n          // since Safari 10.1 shipped with fetch, we can use that to detect it\n\n          return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' && // some outdated implementations of IDB that appear on Samsung\n          // and HTC Android devices <4.4 are missing IDBKeyRange\n          // See: https://github.com/mozilla/localForage/issues/128\n          // See: https://github.com/mozilla/localForage/issues/272\n          typeof IDBKeyRange !== 'undefined';\n        } catch (e) {\n          return false;\n        }\n      } // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n      // Abstracts constructing a Blob object, so it also works in older\n      // browsers that don't support the native Blob constructor. (i.e.\n      // old QtWebKit versions, at least).\n\n\n      function createBlob(parts, properties) {\n        /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n        parts = parts || [];\n        properties = properties || {};\n\n        try {\n          return new Blob(parts, properties);\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n\n          var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n          var builder = new Builder();\n\n          for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n          }\n\n          return builder.getBlob(properties.type);\n        }\n      } // This is CommonJS because lie is an external dependency, so Rollup\n      // can just ignore it.\n\n\n      if (typeof Promise === 'undefined') {\n        // In the \"nopromises\" build this will just throw if you don't have\n        // a global promise object, but it would throw anyway later.\n        _dereq_(3);\n      }\n\n      var Promise$1 = Promise;\n\n      function executeCallback(promise, callback) {\n        if (callback) {\n          promise.then(function (result) {\n            callback(null, result);\n          }, function (error) {\n            callback(error);\n          });\n        }\n      }\n\n      function executeTwoCallbacks(promise, callback, errorCallback) {\n        if (typeof callback === 'function') {\n          promise.then(callback);\n        }\n\n        if (typeof errorCallback === 'function') {\n          promise[\"catch\"](errorCallback);\n        }\n      }\n\n      function normalizeKey(key) {\n        // Cast the key to a string, as that's all we can set as a key.\n        if (typeof key !== 'string') {\n          console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        return key;\n      }\n\n      function getCallback() {\n        if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n          return arguments[arguments.length - 1];\n        }\n      } // Some code originally from async_storage.js in\n      // [Gaia](https://github.com/mozilla-b2g/gaia).\n\n\n      var DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n      var supportsBlobs = void 0;\n      var dbContexts = {};\n      var toString = Object.prototype.toString; // Transaction Modes\n\n      var READ_ONLY = 'readonly';\n      var READ_WRITE = 'readwrite'; // Transform a binary string to an array buffer, because otherwise\n      // weird stuff happens when you try to work with the binary string directly.\n      // It is known.\n      // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n      // encode-decode-image-with-base64-breaks-image (2013-04-21)\n\n      function _binStringToArrayBuffer(bin) {\n        var length = bin.length;\n        var buf = new ArrayBuffer(length);\n        var arr = new Uint8Array(buf);\n\n        for (var i = 0; i < length; i++) {\n          arr[i] = bin.charCodeAt(i);\n        }\n\n        return buf;\n      } //\n      // Blobs are not supported in all versions of IndexedDB, notably\n      // Chrome <37 and Android <5. In those versions, storing a blob will throw.\n      //\n      // Various other blob bugs exist in Chrome v37-42 (inclusive).\n      // Detecting them is expensive and confusing to users, and Chrome 37-42\n      // is at very low usage worldwide, so we do a hacky userAgent check instead.\n      //\n      // content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n      // 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n      // FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n      //\n      // Code borrowed from PouchDB. See:\n      // https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n      //\n\n\n      function _checkBlobSupportWithoutCaching(idb) {\n        return new Promise$1(function (resolve) {\n          var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n          var blob = createBlob(['']);\n          txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n          txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n          };\n\n          txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//); // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n          };\n        })[\"catch\"](function () {\n          return false; // error, so assume unsupported\n        });\n      }\n\n      function _checkBlobSupport(idb) {\n        if (typeof supportsBlobs === 'boolean') {\n          return Promise$1.resolve(supportsBlobs);\n        }\n\n        return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n          supportsBlobs = value;\n          return supportsBlobs;\n        });\n      }\n\n      function _deferReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Create a deferred object representing the current database operation.\n\n        var deferredOperation = {};\n        deferredOperation.promise = new Promise$1(function (resolve, reject) {\n          deferredOperation.resolve = resolve;\n          deferredOperation.reject = reject;\n        }); // Enqueue the deferred operation.\n\n        dbContext.deferredOperations.push(deferredOperation); // Chain its promise to the database readiness.\n\n        if (!dbContext.dbReady) {\n          dbContext.dbReady = deferredOperation.promise;\n        } else {\n          dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n          });\n        }\n      }\n\n      function _advanceReadiness(dbInfo) {\n        var dbContext = dbContexts[dbInfo.name]; // Dequeue a deferred operation.\n\n        var deferredOperation = dbContext.deferredOperations.pop(); // Resolve its promise (which is part of the database readiness\n        // chain of promises).\n\n        if (deferredOperation) {\n          deferredOperation.resolve();\n          return deferredOperation.promise;\n        }\n      }\n\n      function _rejectReadiness(dbInfo, err) {\n        var dbContext = dbContexts[dbInfo.name]; // Dequeue a deferred operation.\n\n        var deferredOperation = dbContext.deferredOperations.pop(); // Reject its promise (which is part of the database readiness\n        // chain of promises).\n\n        if (deferredOperation) {\n          deferredOperation.reject(err);\n          return deferredOperation.promise;\n        }\n      }\n\n      function _getConnection(dbInfo, upgradeNeeded) {\n        return new Promise$1(function (resolve, reject) {\n          dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n          if (dbInfo.db) {\n            if (upgradeNeeded) {\n              _deferReadiness(dbInfo);\n\n              dbInfo.db.close();\n            } else {\n              return resolve(dbInfo.db);\n            }\n          }\n\n          var dbArgs = [dbInfo.name];\n\n          if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n          }\n\n          var openreq = idb.open.apply(idb, dbArgs);\n\n          if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n              var db = openreq.result;\n\n              try {\n                db.createObjectStore(dbInfo.storeName);\n\n                if (e.oldVersion <= 1) {\n                  // Added when support for blob shims was added\n                  db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                }\n              } catch (ex) {\n                if (ex.name === 'ConstraintError') {\n                  console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                } else {\n                  throw ex;\n                }\n              }\n            };\n          }\n\n          openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n          };\n\n          openreq.onsuccess = function () {\n            resolve(openreq.result);\n\n            _advanceReadiness(dbInfo);\n          };\n        });\n      }\n\n      function _getOriginalConnection(dbInfo) {\n        return _getConnection(dbInfo, false);\n      }\n\n      function _getUpgradedConnection(dbInfo) {\n        return _getConnection(dbInfo, true);\n      }\n\n      function _isUpgradeNeeded(dbInfo, defaultVersion) {\n        if (!dbInfo.db) {\n          return true;\n        }\n\n        var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n        var isDowngrade = dbInfo.version < dbInfo.db.version;\n        var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n        if (isDowngrade) {\n          // If the version is not the default one\n          // then warn for impossible downgrade.\n          if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n          } // Align the versions to prevent errors.\n\n\n          dbInfo.version = dbInfo.db.version;\n        }\n\n        if (isUpgrade || isNewStore) {\n          // If the store is new then increment the version (if needed).\n          // This will trigger an \"upgradeneeded\" event which is required\n          // for creating a store.\n          if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n\n            if (incVersion > dbInfo.version) {\n              dbInfo.version = incVersion;\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      } // encode a blob for indexeddb engines that don't support blobs\n\n\n      function _encodeBlob(blob) {\n        return new Promise$1(function (resolve, reject) {\n          var reader = new FileReader();\n          reader.onerror = reject;\n\n          reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n              __local_forage_encoded_blob: true,\n              data: base64,\n              type: blob.type\n            });\n          };\n\n          reader.readAsBinaryString(blob);\n        });\n      } // decode an encoded blob\n\n\n      function _decodeBlob(encodedBlob) {\n        var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n\n        return createBlob([arrayBuff], {\n          type: encodedBlob.type\n        });\n      } // is this one of our fancy encoded blobs?\n\n\n      function _isEncodedBlob(value) {\n        return value && value.__local_forage_encoded_blob;\n      } // Specialize the default `ready()` function by making it dependent\n      // on the current database operations. Thus, the driver will be actually\n      // ready when it's been initialized (default) *and* there are no pending\n      // operations on the database (initiated by some other instances).\n\n\n      function _fullyReady(callback) {\n        var self = this;\n\n        var promise = self._initReady().then(function () {\n          var dbContext = dbContexts[self._dbInfo.name];\n\n          if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n          }\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n      } // Try to establish a new db connection to replace the\n      // current one which is broken (i.e. experiencing\n      // InvalidStateError while creating a transaction).\n\n\n      function _tryReconnect(dbInfo) {\n        _deferReadiness(dbInfo);\n\n        var dbContext = dbContexts[dbInfo.name];\n        var forages = dbContext.forages;\n\n        for (var i = 0; i < forages.length; i++) {\n          var forage = forages[i];\n\n          if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n\n            forage._dbInfo.db = null;\n          }\n        }\n\n        dbInfo.db = null;\n        return _getOriginalConnection(dbInfo).then(function (db) {\n          dbInfo.db = db;\n\n          if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n\n          return db;\n        }).then(function (db) {\n          // store the latest db reference\n          // in case the db was upgraded\n          dbInfo.db = dbContext.db = db;\n\n          for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n          }\n        })[\"catch\"](function (err) {\n          _rejectReadiness(dbInfo, err);\n\n          throw err;\n        });\n      } // FF doesn't like Promises (micro-tasks) and IDDB store operations,\n      // so we have to do it with callbacks\n\n\n      function createTransaction(dbInfo, mode, callback, retries) {\n        if (retries === undefined) {\n          retries = 1;\n        }\n\n        try {\n          var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n          callback(null, tx);\n        } catch (err) {\n          if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n              if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                // increase the db version, to create the new ObjectStore\n                if (dbInfo.db) {\n                  dbInfo.version = dbInfo.db.version + 1;\n                } // Reopen the database for upgrading.\n\n\n                return _getUpgradedConnection(dbInfo);\n              }\n            }).then(function () {\n              return _tryReconnect(dbInfo).then(function () {\n                createTransaction(dbInfo, mode, callback, retries - 1);\n              });\n            })[\"catch\"](callback);\n          }\n\n          callback(err);\n        }\n      }\n\n      function createDbContext() {\n        return {\n          // Running localForages sharing a database.\n          forages: [],\n          // Shared database.\n          db: null,\n          // Database readiness (promise).\n          dbReady: null,\n          // Deferred operations on the database.\n          deferredOperations: []\n        };\n      } // Open the IndexedDB database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n\n      function _initStorage(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        } // Get the current context of the database;\n\n\n        var dbContext = dbContexts[dbInfo.name]; // ...or create a new context.\n\n        if (!dbContext) {\n          dbContext = createDbContext(); // Register the new context in the global container.\n\n          dbContexts[dbInfo.name] = dbContext;\n        } // Register itself as a running localForage in the current context.\n\n\n        dbContext.forages.push(self); // Replace the default `ready()` function with the specialized one.\n\n        if (!self._initReady) {\n          self._initReady = self.ready;\n          self.ready = _fullyReady;\n        } // Create an array of initialization states of the related localForages.\n\n\n        var initPromises = [];\n\n        function ignoreErrors() {\n          // Don't handle errors here,\n          // just makes sure related localForages aren't pending.\n          return Promise$1.resolve();\n        }\n\n        for (var j = 0; j < dbContext.forages.length; j++) {\n          var forage = dbContext.forages[j];\n\n          if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n          }\n        } // Take a snapshot of the related localForages.\n\n\n        var forages = dbContext.forages.slice(0); // Initialize the connection process only when\n        // all the related localForages aren't pending.\n\n        return Promise$1.all(initPromises).then(function () {\n          dbInfo.db = dbContext.db; // Get the connection or open a new one without upgrade.\n\n          return _getOriginalConnection(dbInfo);\n        }).then(function (db) {\n          dbInfo.db = db;\n\n          if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n          }\n\n          return db;\n        }).then(function (db) {\n          dbInfo.db = dbContext.db = db;\n          self._dbInfo = dbInfo; // Share the final connection amongst related localForages.\n\n          for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n\n            if (forage !== self) {\n              // Self is already up-to-date.\n              forage._dbInfo.db = dbInfo.db;\n              forage._dbInfo.version = dbInfo.version;\n            }\n          }\n        });\n      }\n\n      function getItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.get(key);\n\n                req.onsuccess = function () {\n                  var value = req.result;\n\n                  if (value === undefined) {\n                    value = null;\n                  }\n\n                  if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                  }\n\n                  resolve(value);\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items stored in database.\n\n\n      function iterate(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openCursor();\n                var iterationNumber = 1;\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (cursor) {\n                    var value = cursor.value;\n\n                    if (_isEncodedBlob(value)) {\n                      value = _decodeBlob(value);\n                    }\n\n                    var result = iterator(value, cursor.key, iterationNumber++); // when the iterator callback retuns any\n                    // (non-`undefined`) value, then we stop\n                    // the iteration immediately\n\n                    if (result !== void 0) {\n                      resolve(result);\n                    } else {\n                      cursor[\"continue\"]();\n                    }\n                  } else {\n                    resolve();\n                  }\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          var dbInfo;\n          self.ready().then(function () {\n            dbInfo = self._dbInfo;\n\n            if (toString.call(value) === '[object Blob]') {\n              return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                if (blobSupport) {\n                  return value;\n                }\n\n                return _encodeBlob(value);\n              });\n            }\n\n            return value;\n          }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName); // The reason we don't _save_ null is because IE 10 does\n                // not support saving the `null` type in IndexedDB. How\n                // ironic, given the bug below!\n                // See: https://github.com/mozilla/localForage/issues/161\n\n                if (value === null) {\n                  value = undefined;\n                }\n\n                var req = store.put(value, key);\n\n                transaction.oncomplete = function () {\n                  // Cast to undefined so the value passed to\n                  // callback/promise is the same as what one would get out\n                  // of `getItem()` later. This leads to some weirdness\n                  // (setItem('foo', undefined) will return `null`), but\n                  // it's not my fault localStorage is our baseline and that\n                  // it's weird.\n                  if (value === undefined) {\n                    value = null;\n                  }\n\n                  resolve(value);\n                };\n\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function removeItem(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName); // We use a Grunt task to make this safe for IE and some\n                // versions of Android (including those used by Cordova).\n                // Normally IE won't like `.delete()` and will insist on\n                // using `['delete']()`, but we have a build step that\n                // fixes this for us now.\n\n                var req = store[\"delete\"](key);\n\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n\n                transaction.onerror = function () {\n                  reject(req.error);\n                }; // The request will be also be aborted if we've exceeded our storage\n                // space.\n\n\n                transaction.onabort = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function clear(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.clear();\n\n                transaction.oncomplete = function () {\n                  resolve();\n                };\n\n                transaction.onabort = transaction.onerror = function () {\n                  var err = req.error ? req.error : req.transaction.error;\n                  reject(err);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function length(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.count();\n\n                req.onsuccess = function () {\n                  resolve(req.result);\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function key(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          if (n < 0) {\n            resolve(null);\n            return;\n          }\n\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var advanced = false;\n                var req = store.openCursor();\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n                    return;\n                  }\n\n                  if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                  } else {\n                    if (!advanced) {\n                      // Otherwise, ask the cursor to skip ahead n\n                      // records.\n                      advanced = true;\n                      cursor.advance(n);\n                    } else {\n                      // When we get here, we've got the nth key.\n                      resolve(cursor.key);\n                    }\n                  }\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n              if (err) {\n                return reject(err);\n              }\n\n              try {\n                var store = transaction.objectStore(self._dbInfo.storeName);\n                var req = store.openCursor();\n                var keys = [];\n\n                req.onsuccess = function () {\n                  var cursor = req.result;\n\n                  if (!cursor) {\n                    resolve(keys);\n                    return;\n                  }\n\n                  keys.push(cursor.key);\n                  cursor[\"continue\"]();\n                };\n\n                req.onerror = function () {\n                  reject(req.error);\n                };\n              } catch (e) {\n                reject(e);\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function dropInstance(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n          var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n\n            for (var i = 0; i < forages.length; i++) {\n              forages[i]._dbInfo.db = db;\n            }\n\n            return db;\n          });\n\n          if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n              _deferReadiness(options);\n\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n              }\n\n              var dropDBPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.deleteDatabase(options.name);\n\n                req.onerror = req.onblocked = function (err) {\n                  var db = req.result;\n\n                  if (db) {\n                    db.close();\n                  }\n\n                  reject(err);\n                };\n\n                req.onsuccess = function () {\n                  var db = req.result;\n\n                  if (db) {\n                    db.close();\n                  }\n\n                  resolve(db);\n                };\n              });\n              return dropDBPromise.then(function (db) {\n                dbContext.db = db;\n\n                for (var i = 0; i < forages.length; i++) {\n                  var _forage = forages[i];\n\n                  _advanceReadiness(_forage._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          } else {\n            promise = dbPromise.then(function (db) {\n              if (!db.objectStoreNames.contains(options.storeName)) {\n                return;\n              }\n\n              var newVersion = db.version + 1;\n\n              _deferReadiness(options);\n\n              var dbContext = dbContexts[options.name];\n              var forages = dbContext.forages;\n              db.close();\n\n              for (var i = 0; i < forages.length; i++) {\n                var forage = forages[i];\n                forage._dbInfo.db = null;\n                forage._dbInfo.version = newVersion;\n              }\n\n              var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                var req = idb.open(options.name, newVersion);\n\n                req.onerror = function (err) {\n                  var db = req.result;\n                  db.close();\n                  reject(err);\n                };\n\n                req.onupgradeneeded = function () {\n                  var db = req.result;\n                  db.deleteObjectStore(options.storeName);\n                };\n\n                req.onsuccess = function () {\n                  var db = req.result;\n                  db.close();\n                  resolve(db);\n                };\n              });\n              return dropObjectPromise.then(function (db) {\n                dbContext.db = db;\n\n                for (var j = 0; j < forages.length; j++) {\n                  var _forage2 = forages[j];\n                  _forage2._dbInfo.db = db;\n\n                  _advanceReadiness(_forage2._dbInfo);\n                }\n              })[\"catch\"](function (err) {\n                (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                throw err;\n              });\n            });\n          }\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var asyncStorage = {\n        _driver: 'asyncStorage',\n        _initStorage: _initStorage,\n        _support: isIndexedDBValid(),\n        iterate: iterate,\n        getItem: getItem,\n        setItem: setItem,\n        removeItem: removeItem,\n        clear: clear,\n        length: length,\n        key: key,\n        keys: keys,\n        dropInstance: dropInstance\n      };\n\n      function isWebSQLValid() {\n        return typeof openDatabase === 'function';\n      } // Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n      // it to Base64, so this is how we store it to prevent very strange errors with less\n      // verbose ways of binary <-> string data storage.\n\n\n      var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n      var BLOB_TYPE_PREFIX = '~~local_forage_type~';\n      var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n      var SERIALIZED_MARKER = '__lfsc__:';\n      var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length; // OMG the serializations!\n\n      var TYPE_ARRAYBUFFER = 'arbf';\n      var TYPE_BLOB = 'blob';\n      var TYPE_INT8ARRAY = 'si08';\n      var TYPE_UINT8ARRAY = 'ui08';\n      var TYPE_UINT8CLAMPEDARRAY = 'uic8';\n      var TYPE_INT16ARRAY = 'si16';\n      var TYPE_INT32ARRAY = 'si32';\n      var TYPE_UINT16ARRAY = 'ur16';\n      var TYPE_UINT32ARRAY = 'ui32';\n      var TYPE_FLOAT32ARRAY = 'fl32';\n      var TYPE_FLOAT64ARRAY = 'fl64';\n      var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n      var toString$1 = Object.prototype.toString;\n\n      function stringToBuffer(serializedString) {\n        // Fill the string into a ArrayBuffer.\n        var bufferLength = serializedString.length * 0.75;\n        var len = serializedString.length;\n        var i;\n        var p = 0;\n        var encoded1, encoded2, encoded3, encoded4;\n\n        if (serializedString[serializedString.length - 1] === '=') {\n          bufferLength--;\n\n          if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n          }\n        }\n\n        var buffer = new ArrayBuffer(bufferLength);\n        var bytes = new Uint8Array(buffer);\n\n        for (i = 0; i < len; i += 4) {\n          encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n          encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n          encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n          encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n          /*jslint bitwise: true */\n\n          bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n          bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n          bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n        }\n\n        return buffer;\n      } // Converts a buffer to a string to store, serialized, in the backend\n      // storage library.\n\n\n      function bufferToString(buffer) {\n        // base64-arraybuffer\n        var bytes = new Uint8Array(buffer);\n        var base64String = '';\n        var i;\n\n        for (i = 0; i < bytes.length; i += 3) {\n          /*jslint bitwise: true */\n          base64String += BASE_CHARS[bytes[i] >> 2];\n          base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n          base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n          base64String += BASE_CHARS[bytes[i + 2] & 63];\n        }\n\n        if (bytes.length % 3 === 2) {\n          base64String = base64String.substring(0, base64String.length - 1) + '=';\n        } else if (bytes.length % 3 === 1) {\n          base64String = base64String.substring(0, base64String.length - 2) + '==';\n        }\n\n        return base64String;\n      } // Serialize a value, afterwards executing a callback (which usually\n      // instructs the `setItem()` callback/promise to be executed). This is how\n      // we store binary data with localStorage.\n\n\n      function serialize(value, callback) {\n        var valueType = '';\n\n        if (value) {\n          valueType = toString$1.call(value);\n        } // Cannot use `value instanceof ArrayBuffer` or such here, as these\n        // checks fail when running the tests using casper.js...\n        //\n        // TODO: See why those tests fail and use a better solution.\n\n\n        if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n          // Convert binary arrays to a string and prefix the string with\n          // a special marker.\n          var buffer;\n          var marker = SERIALIZED_MARKER;\n\n          if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n          } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n              marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n              marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n              marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n              marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n              marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n              marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n              marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n              marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n              marker += TYPE_FLOAT64ARRAY;\n            } else {\n              callback(new Error('Failed to get type for BinaryArray'));\n            }\n          }\n\n          callback(marker + bufferToString(buffer));\n        } else if (valueType === '[object Blob]') {\n          // Conver the blob to a binaryArray and then to a string.\n          var fileReader = new FileReader();\n\n          fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n          };\n\n          fileReader.readAsArrayBuffer(value);\n        } else {\n          try {\n            callback(JSON.stringify(value));\n          } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n            callback(null, e);\n          }\n        }\n      } // Deserialize data we've inserted into a value column/field. We place\n      // special markers into our strings to mark them as encoded; this isn't\n      // as nice as a meta field, but it's the only sane thing we can do whilst\n      // keeping localStorage support intact.\n      //\n      // Oftentimes this will just deserialize JSON content, but if we have a\n      // special marker (SERIALIZED_MARKER, defined above), we will extract\n      // some kind of arraybuffer/binary data/typed array out of the string.\n\n\n      function deserialize(value) {\n        // If we haven't marked this string as being specially serialized (i.e.\n        // something other than serialized JSON), we can just return it and be\n        // done with it.\n        if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n          return JSON.parse(value);\n        } // The following code deals with deserializing some kind of Blob or\n        // TypedArray. First we separate out the type of data we're dealing\n        // with from the data itself.\n\n\n        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n        var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n        var blobType; // Backwards-compatible blob type serialization strategy.\n        // DBs created with older versions of localForage will simply not have the blob type.\n\n        if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n          var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n          blobType = matcher[1];\n          serializedString = serializedString.substring(matcher[0].length);\n        }\n\n        var buffer = stringToBuffer(serializedString); // Return the right type based on the code/type set during\n        // serialization.\n\n        switch (type) {\n          case TYPE_ARRAYBUFFER:\n            return buffer;\n\n          case TYPE_BLOB:\n            return createBlob([buffer], {\n              type: blobType\n            });\n\n          case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n\n          case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n\n          case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n\n          case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n\n          case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n\n          case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n\n          case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n\n          case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n\n          case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n\n          default:\n            throw new Error('Unkown type: ' + type);\n        }\n      }\n\n      var localforageSerializer = {\n        serialize: serialize,\n        deserialize: deserialize,\n        stringToBuffer: stringToBuffer,\n        bufferToString: bufferToString\n      };\n      /*\n       * Includes code from:\n       *\n       * base64-arraybuffer\n       * https://github.com/niklasvh/base64-arraybuffer\n       *\n       * Copyright (c) 2012 Niklas von Hertzen\n       * Licensed under the MIT license.\n       */\n\n      function createDbTable(t, dbInfo, callback, errorCallback) {\n        t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n      } // Open the WebSQL database (automatically creates one if one didn't\n      // previously exist), using any options set in the config.\n\n\n      function _initStorage$1(options) {\n        var self = this;\n        var dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n          }\n        }\n\n        var dbInfoPromise = new Promise$1(function (resolve, reject) {\n          // Open the database; the openDatabase API will automatically\n          // create it for us if it doesn't exist.\n          try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n          } catch (e) {\n            return reject(e);\n          } // Create our key/value table if it doesn't exist.\n\n\n          dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n              self._dbInfo = dbInfo;\n              resolve();\n            }, function (t, error) {\n              reject(error);\n            });\n          }, reject);\n        });\n        dbInfo.serializer = localforageSerializer;\n        return dbInfoPromise;\n      }\n\n      function tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n        t.executeSql(sqlStatement, args, callback, function (t, error) {\n          if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n              if (!results.rows.length) {\n                // if the table is missing (was deleted)\n                // re-create it table and retry\n                createDbTable(t, dbInfo, function () {\n                  t.executeSql(sqlStatement, args, callback, errorCallback);\n                }, errorCallback);\n              } else {\n                errorCallback(t, error);\n              }\n            }, errorCallback);\n          } else {\n            errorCallback(t, error);\n          }\n        }, errorCallback);\n      }\n\n      function getItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).value : null; // Check to see if this is serialized content we need to\n                // unpack.\n\n                if (result) {\n                  result = dbInfo.serializer.deserialize(result);\n                }\n\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function iterate$1(iterator, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                var rows = results.rows;\n                var length = rows.length;\n\n                for (var i = 0; i < length; i++) {\n                  var item = rows.item(i);\n                  var result = item.value; // Check to see if this is serialized content\n                  // we need to unpack.\n\n                  if (result) {\n                    result = dbInfo.serializer.deserialize(result);\n                  }\n\n                  result = iterator(result, item.key, i + 1); // void(0) prevents problems with redefinition\n                  // of `undefined`.\n\n                  if (result !== void 0) {\n                    resolve(result);\n                    return;\n                  }\n                }\n\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function _setItem(key, value, callback, retriesLeft) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n              value = null;\n            } // Save the original value to pass to the callback.\n\n\n            var originalValue = value;\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                dbInfo.db.transaction(function (t) {\n                  tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                    resolve(originalValue);\n                  }, function (t, error) {\n                    reject(error);\n                  });\n                }, function (sqlError) {\n                  // The transaction failed; check\n                  // to see if it's a quota error.\n                  if (sqlError.code === sqlError.QUOTA_ERR) {\n                    // We reject the callback outright for now, but\n                    // it's worth trying to re-run the transaction.\n                    // Even if the user accepts the prompt to use\n                    // more storage on Safari, this error will\n                    // be called.\n                    //\n                    // Try to re-run the transaction.\n                    if (retriesLeft > 0) {\n                      resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                      return;\n                    }\n\n                    reject(sqlError);\n                  }\n                });\n              }\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function setItem$1(key, value, callback) {\n        return _setItem.apply(this, [key, value, callback, 1]);\n      }\n\n      function removeItem$1(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Deletes every item in the table.\n      // TODO: Find out if this resets the AUTO_INCREMENT number.\n\n\n      function clear$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Does a simple `COUNT(key)` to get the number of items stored in\n      // localForage.\n\n\n      function length$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              // Ahhh, SQL makes this one soooooo easy.\n              tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                var result = results.rows.item(0).c;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Return the key located at key index X; essentially gets the key from a\n      // `WHERE id = ?`. This is the most efficient way I can think to implement\n      // this rarely-used (in my experience) part of the API, but it can seem\n      // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n      // the ID of each key will change every time it's updated. Perhaps a stored\n      // procedure for the `setItem()` SQL would solve this problem?\n      // TODO: Don't change ID on `setItem()`.\n\n\n      function key$1(n, callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                var result = results.rows.length ? results.rows.item(0).key : null;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$1(callback) {\n        var self = this;\n        var promise = new Promise$1(function (resolve, reject) {\n          self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n              tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                var keys = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                  keys.push(results.rows.item(i).key);\n                }\n\n                resolve(keys);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })[\"catch\"](reject);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // https://www.w3.org/TR/webdatabase/#databases\n      // > There is no way to enumerate or delete the databases available for an origin from this API.\n\n\n      function getAllStoreNames(db) {\n        return new Promise$1(function (resolve, reject) {\n          db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n              var storeNames = [];\n\n              for (var i = 0; i < results.rows.length; i++) {\n                storeNames.push(results.rows.item(i).name);\n              }\n\n              resolve({\n                db: db,\n                storeNames: storeNames\n              });\n            }, function (t, error) {\n              reject(error);\n            });\n          }, function (sqlError) {\n            reject(sqlError);\n          });\n        });\n      }\n\n      function dropInstance$1(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        var currentConfig = this.config();\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            var db;\n\n            if (options.name === currentConfig.name) {\n              // use the db reference of the current instance\n              db = self._dbInfo.db;\n            } else {\n              db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n              // drop all database tables\n              resolve(getAllStoreNames(db));\n            } else {\n              resolve({\n                db: db,\n                storeNames: [options.storeName]\n              });\n            }\n          }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n              operationInfo.db.transaction(function (t) {\n                function dropTable(storeName) {\n                  return new Promise$1(function (resolve, reject) {\n                    t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                      resolve();\n                    }, function (t, error) {\n                      reject(error);\n                    });\n                  });\n                }\n\n                var operations = [];\n\n                for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                  operations.push(dropTable(operationInfo.storeNames[i]));\n                }\n\n                Promise$1.all(operations).then(function () {\n                  resolve();\n                })[\"catch\"](function (e) {\n                  reject(e);\n                });\n              }, function (sqlError) {\n                reject(sqlError);\n              });\n            });\n          });\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var webSQLStorage = {\n        _driver: 'webSQLStorage',\n        _initStorage: _initStorage$1,\n        _support: isWebSQLValid(),\n        iterate: iterate$1,\n        getItem: getItem$1,\n        setItem: setItem$1,\n        removeItem: removeItem$1,\n        clear: clear$1,\n        length: length$1,\n        key: key$1,\n        keys: keys$1,\n        dropInstance: dropInstance$1\n      };\n\n      function isLocalStorageValid() {\n        try {\n          return typeof localStorage !== 'undefined' && 'setItem' in localStorage && // in IE8 typeof localStorage.setItem === 'object'\n          !!localStorage.setItem;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      function _getKeyPrefix(options, defaultConfig) {\n        var keyPrefix = options.name + '/';\n\n        if (options.storeName !== defaultConfig.storeName) {\n          keyPrefix += options.storeName + '/';\n        }\n\n        return keyPrefix;\n      } // Check if localStorage throws when saving an item\n\n\n      function checkIfLocalStorageThrows() {\n        var localStorageTestKey = '_localforage_support_test';\n\n        try {\n          localStorage.setItem(localStorageTestKey, true);\n          localStorage.removeItem(localStorageTestKey);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      } // Check if localStorage is usable and allows to save an item\n      // This method checks if localStorage is usable in Safari Private Browsing\n      // mode, or in any other case where the available quota for localStorage\n      // is 0 and there wasn't any saved items yet.\n\n\n      function _isLocalStorageUsable() {\n        return !checkIfLocalStorageThrows() || localStorage.length > 0;\n      } // Config the localStorage backend, using options set in the config.\n\n\n      function _initStorage$2(options) {\n        var self = this;\n        var dbInfo = {};\n\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        }\n\n        dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n        if (!_isLocalStorageUsable()) {\n          return Promise$1.reject();\n        }\n\n        self._dbInfo = dbInfo;\n        dbInfo.serializer = localforageSerializer;\n        return Promise$1.resolve();\n      } // Remove all keys from the datastore, effectively destroying all data in\n      // the app's key/value store!\n\n\n      function clear$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var keyPrefix = self._dbInfo.keyPrefix;\n\n          for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n              localStorage.removeItem(key);\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Retrieve an item from the store. Unlike the original async_storage\n      // library in Gaia, we don't modify return values at all. If a key's value\n      // is `undefined`, we pass that value to the callback function.\n\n\n      function getItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result = localStorage.getItem(dbInfo.keyPrefix + key); // If a result was found, parse it from the serialized\n          // string into a JS object. If result isn't truthy, the key\n          // is likely undefined and we'll pass it straight to the\n          // callback.\n\n          if (result) {\n            result = dbInfo.serializer.deserialize(result);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Iterate over all items in the store.\n\n\n      function iterate$2(iterator, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var keyPrefix = dbInfo.keyPrefix;\n          var keyPrefixLength = keyPrefix.length;\n          var length = localStorage.length; // We use a dedicated iterator instead of the `i` variable below\n          // so other keys we fetch in localStorage aren't counted in\n          // the `iterationNumber` argument passed to the `iterate()`\n          // callback.\n          //\n          // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n\n          var iterationNumber = 1;\n\n          for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) !== 0) {\n              continue;\n            }\n\n            var value = localStorage.getItem(key); // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n\n            if (value) {\n              value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n              return value;\n            }\n          }\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Same as localStorage's key() method, except takes a callback.\n\n\n      function key$2(n, callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var result;\n\n          try {\n            result = localStorage.key(n);\n          } catch (error) {\n            result = null;\n          } // Remove the prefix from the key, if a key is found.\n\n\n          if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n          }\n\n          return result;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys$2(callback) {\n        var self = this;\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          var length = localStorage.length;\n          var keys = [];\n\n          for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n              keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n          }\n\n          return keys;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Supply the number of keys in the datastore to the callback function.\n\n\n      function length$2(callback) {\n        var self = this;\n        var promise = self.keys().then(function (keys) {\n          return keys.length;\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Remove an item from the store, nice and simple.\n\n\n      function removeItem$2(key, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          var dbInfo = self._dbInfo;\n          localStorage.removeItem(dbInfo.keyPrefix + key);\n        });\n        executeCallback(promise, callback);\n        return promise;\n      } // Set a key's value and run an optional callback once the value is set.\n      // Unlike Gaia's implementation, the callback function is passed the value,\n      // in case you want to operate on that value only after you're sure it\n      // saved, or something like that.\n\n\n      function setItem$2(key, value, callback) {\n        var self = this;\n        key = normalizeKey(key);\n        var promise = self.ready().then(function () {\n          // Convert undefined values to null.\n          // https://github.com/mozilla/localForage/pull/42\n          if (value === undefined) {\n            value = null;\n          } // Save the original value to pass to the callback.\n\n\n          var originalValue = value;\n          return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                try {\n                  localStorage.setItem(dbInfo.keyPrefix + key, value);\n                  resolve(originalValue);\n                } catch (e) {\n                  // localStorage capacity exceeded.\n                  // TODO: Make this a specific error/event.\n                  if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    reject(e);\n                  }\n\n                  reject(e);\n                }\n              }\n            });\n          });\n        });\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function dropInstance$2(options, callback) {\n        callback = getCallback.apply(this, arguments);\n        options = typeof options !== 'function' && options || {};\n\n        if (!options.name) {\n          var currentConfig = this.config();\n          options.name = options.name || currentConfig.name;\n          options.storeName = options.storeName || currentConfig.storeName;\n        }\n\n        var self = this;\n        var promise;\n\n        if (!options.name) {\n          promise = Promise$1.reject('Invalid arguments');\n        } else {\n          promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n              resolve(options.name + '/');\n            } else {\n              resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n          }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n              var key = localStorage.key(i);\n\n              if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n              }\n            }\n          });\n        }\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      var localStorageWrapper = {\n        _driver: 'localStorageWrapper',\n        _initStorage: _initStorage$2,\n        _support: isLocalStorageValid(),\n        iterate: iterate$2,\n        getItem: getItem$2,\n        setItem: setItem$2,\n        removeItem: removeItem$2,\n        clear: clear$2,\n        length: length$2,\n        key: key$2,\n        keys: keys$2,\n        dropInstance: dropInstance$2\n      };\n\n      var sameValue = function sameValue(x, y) {\n        return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n      };\n\n      var includes = function includes(array, searchElement) {\n        var len = array.length;\n        var i = 0;\n\n        while (i < len) {\n          if (sameValue(array[i], searchElement)) {\n            return true;\n          }\n\n          i++;\n        }\n\n        return false;\n      };\n\n      var isArray = Array.isArray || function (arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n      }; // Drivers are stored here when `defineDriver()` is called.\n      // They are shared across all instances of localForage.\n\n\n      var DefinedDrivers = {};\n      var DriverSupport = {};\n      var DefaultDrivers = {\n        INDEXEDDB: asyncStorage,\n        WEBSQL: webSQLStorage,\n        LOCALSTORAGE: localStorageWrapper\n      };\n      var DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n      var OptionalDriverMethods = ['dropInstance'];\n      var LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n      var DefaultConfig = {\n        description: '',\n        driver: DefaultDriverOrder.slice(),\n        name: 'localforage',\n        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n        // we can use without a prompt.\n        size: 4980736,\n        storeName: 'keyvaluepairs',\n        version: 1.0\n      };\n\n      function callWhenReady(localForageInstance, libraryMethod) {\n        localForageInstance[libraryMethod] = function () {\n          var _args = arguments;\n          return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n          });\n        };\n      }\n\n      function extend() {\n        for (var i = 1; i < arguments.length; i++) {\n          var arg = arguments[i];\n\n          if (arg) {\n            for (var _key in arg) {\n              if (arg.hasOwnProperty(_key)) {\n                if (isArray(arg[_key])) {\n                  arguments[0][_key] = arg[_key].slice();\n                } else {\n                  arguments[0][_key] = arg[_key];\n                }\n              }\n            }\n          }\n        }\n\n        return arguments[0];\n      }\n\n      var LocalForage = function () {\n        function LocalForage(options) {\n          _classCallCheck(this, LocalForage);\n\n          for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n              var driver = DefaultDrivers[driverTypeKey];\n              var driverName = driver._driver;\n              this[driverTypeKey] = driverName;\n\n              if (!DefinedDrivers[driverName]) {\n                // we don't need to wait for the promise,\n                // since the default drivers can be defined\n                // in a blocking manner\n                this.defineDriver(driver);\n              }\n            }\n          }\n\n          this._defaultConfig = extend({}, DefaultConfig);\n          this._config = extend({}, this._defaultConfig, options);\n          this._driverSet = null;\n          this._initDriver = null;\n          this._ready = false;\n          this._dbInfo = null;\n\n          this._wrapLibraryMethodsWithReady();\n\n          this.setDriver(this._config.driver)[\"catch\"](function () {});\n        } // Set any config values for localForage; can be called anytime before\n        // the first API call (e.g. `getItem`, `setItem`).\n        // We loop through options so we don't overwrite existing config\n        // values.\n\n\n        LocalForage.prototype.config = function config(options) {\n          // If the options argument is an object, we use it to set values.\n          // Otherwise, we return either a specified config value or all\n          // config values.\n          if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n              return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n              if (i === 'storeName') {\n                options[i] = options[i].replace(/\\W/g, '_');\n              }\n\n              if (i === 'version' && typeof options[i] !== 'number') {\n                return new Error('Database version must be a number.');\n              }\n\n              this._config[i] = options[i];\n            } // after all config options are set and\n            // the driver option is used, try setting it\n\n\n            if ('driver' in options && options.driver) {\n              return this.setDriver(this._config.driver);\n            }\n\n            return true;\n          } else if (typeof options === 'string') {\n            return this._config[options];\n          } else {\n            return this._config;\n          }\n        }; // Used to define a custom driver, shared across all instances of\n        // localForage.\n\n\n        LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n          var promise = new Promise$1(function (resolve, reject) {\n            try {\n              var driverName = driverObject._driver;\n              var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver'); // A driver name should be defined and not overlap with the\n              // library-defined, default drivers.\n\n              if (!driverObject._driver) {\n                reject(complianceError);\n                return;\n              }\n\n              var driverMethods = LibraryMethods.concat('_initStorage');\n\n              for (var i = 0, len = driverMethods.length; i < len; i++) {\n                var driverMethodName = driverMethods[i]; // when the property is there,\n                // it should be a method even when optional\n\n                var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n\n                if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                  reject(complianceError);\n                  return;\n                }\n              }\n\n              var configureMissingMethods = function configureMissingMethods() {\n                var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                  return function () {\n                    var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                    var promise = Promise$1.reject(error);\n                    executeCallback(promise, arguments[arguments.length - 1]);\n                    return promise;\n                  };\n                };\n\n                for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                  var optionalDriverMethod = OptionalDriverMethods[_i];\n\n                  if (!driverObject[optionalDriverMethod]) {\n                    driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                  }\n                }\n              };\n\n              configureMissingMethods();\n\n              var setDriverSupport = function setDriverSupport(support) {\n                if (DefinedDrivers[driverName]) {\n                  console.info('Redefining LocalForage driver: ' + driverName);\n                }\n\n                DefinedDrivers[driverName] = driverObject;\n                DriverSupport[driverName] = support; // don't use a then, so that we can define\n                // drivers that have simple _support methods\n                // in a blocking manner\n\n                resolve();\n              };\n\n              if ('_support' in driverObject) {\n                if (driverObject._support && typeof driverObject._support === 'function') {\n                  driverObject._support().then(setDriverSupport, reject);\n                } else {\n                  setDriverSupport(!!driverObject._support);\n                }\n              } else {\n                setDriverSupport(true);\n              }\n            } catch (e) {\n              reject(e);\n            }\n          });\n          executeTwoCallbacks(promise, callback, errorCallback);\n          return promise;\n        };\n\n        LocalForage.prototype.driver = function driver() {\n          return this._driver || null;\n        };\n\n        LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n          var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n          executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n          return getDriverPromise;\n        };\n\n        LocalForage.prototype.getSerializer = function getSerializer(callback) {\n          var serializerPromise = Promise$1.resolve(localforageSerializer);\n          executeTwoCallbacks(serializerPromise, callback);\n          return serializerPromise;\n        };\n\n        LocalForage.prototype.ready = function ready(callback) {\n          var self = this;\n\n          var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n              self._ready = self._initDriver();\n            }\n\n            return self._ready;\n          });\n\n          executeTwoCallbacks(promise, callback, callback);\n          return promise;\n        };\n\n        LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n          var self = this;\n\n          if (!isArray(drivers)) {\n            drivers = [drivers];\n          }\n\n          var supportedDrivers = this._getSupportedDrivers(drivers);\n\n          function setDriverToConfig() {\n            self._config.driver = self.driver();\n          }\n\n          function extendSelfWithDriver(driver) {\n            self._extend(driver);\n\n            setDriverToConfig();\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n          }\n\n          function initDriver(supportedDrivers) {\n            return function () {\n              var currentDriverIndex = 0;\n\n              function driverPromiseLoop() {\n                while (currentDriverIndex < supportedDrivers.length) {\n                  var driverName = supportedDrivers[currentDriverIndex];\n                  currentDriverIndex++;\n                  self._dbInfo = null;\n                  self._ready = null;\n                  return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                }\n\n                setDriverToConfig();\n                var error = new Error('No available storage method found.');\n                self._driverSet = Promise$1.reject(error);\n                return self._driverSet;\n              }\n\n              return driverPromiseLoop();\n            };\n          } // There might be a driver initialization in progress\n          // so wait for it to finish in order to avoid a possible\n          // race condition to set _dbInfo\n\n\n          var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n          }) : Promise$1.resolve();\n          this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n            return self.getDriver(driverName).then(function (driver) {\n              self._driver = driver._driver;\n              setDriverToConfig();\n\n              self._wrapLibraryMethodsWithReady();\n\n              self._initDriver = initDriver(supportedDrivers);\n            });\n          })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n          });\n          executeTwoCallbacks(this._driverSet, callback, errorCallback);\n          return this._driverSet;\n        };\n\n        LocalForage.prototype.supports = function supports(driverName) {\n          return !!DriverSupport[driverName];\n        };\n\n        LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n          extend(this, libraryMethodsAndProperties);\n        };\n\n        LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n          var supportedDrivers = [];\n\n          for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n\n            if (this.supports(driverName)) {\n              supportedDrivers.push(driverName);\n            }\n          }\n\n          return supportedDrivers;\n        };\n\n        LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n          // Add a stub for each driver API method that delays the call to the\n          // corresponding driver method until localForage is ready. These stubs\n          // will be replaced by the driver methods as soon as the driver is\n          // loaded, so there is no performance impact.\n          for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n          }\n        };\n\n        LocalForage.prototype.createInstance = function createInstance(options) {\n          return new LocalForage(options);\n        };\n\n        return LocalForage;\n      }(); // The actual localForage object that we expose as a module or via a\n      // global. It's extended by pulling in one of our other libraries.\n\n\n      var localforage_js = new LocalForage();\n      module.exports = localforage_js;\n    }, {\n      \"3\": 3\n    }]\n  }, {}, [4])(4);\n});","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/localforage/dist/localforage.js"],"names":["f","exports","module","define","amd","g","window","global","self","localforage","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","_dereq_","Mutation","MutationObserver","WebKitMutationObserver","scheduleDrain","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","channel","port1","onmessage","port2","postMessage","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","draining","queue","oldQueue","len","immediate","task","push","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","prototype","onRejected","then","onFulfilled","promise","constructor","unwrap","QueueItem","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","value","resolve","reject","func","returnValue","result","tryCatch","getThen","status","thenable","error","obj","appyThen","apply","arguments","onError","onSuccess","tryToUnwrap","out","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","race","response","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","target","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","store","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropDBPromise","deleteDatabase","onblocked","_forage","dropObjectPromise","deleteObjectStore","_forage2","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","p","encoded1","encoded2","encoded3","encoded4","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js"],"mappings":"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","sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"]},"metadata":{},"sourceType":"script"}