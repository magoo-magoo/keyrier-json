{"ast":null,"code":"ace.define(\"ace/ext/menu_tools/overlay_page\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\"], function (require, exports, module) {\n  'use strict';\n\n  var dom = require(\"../../lib/dom\");\n\n  var cssText = \"#ace_settingsmenu, #kbshortcutmenu {\\\nbackground-color: #F7F7F7;\\\ncolor: black;\\\nbox-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\\npadding: 1em 0.5em 2em 1em;\\\noverflow: auto;\\\nposition: absolute;\\\nmargin: 0;\\\nbottom: 0;\\\nright: 0;\\\ntop: 0;\\\nz-index: 9991;\\\ncursor: default;\\\n}\\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\\nbox-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\\nbackground-color: rgba(255, 255, 255, 0.6);\\\ncolor: black;\\\n}\\\n.ace_optionsMenuEntry:hover {\\\nbackground-color: rgba(100, 100, 100, 0.1);\\\ntransition: all 0.3s\\\n}\\\n.ace_closeButton {\\\nbackground: rgba(245, 146, 146, 0.5);\\\nborder: 1px solid #F48A8A;\\\nborder-radius: 50%;\\\npadding: 7px;\\\nposition: absolute;\\\nright: -8px;\\\ntop: -8px;\\\nz-index: 100000;\\\n}\\\n.ace_closeButton{\\\nbackground: rgba(245, 146, 146, 0.9);\\\n}\\\n.ace_optionsMenuKey {\\\ncolor: darkslateblue;\\\nfont-weight: bold;\\\n}\\\n.ace_optionsMenuCommand {\\\ncolor: darkcyan;\\\nfont-weight: normal;\\\n}\\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\\nvertical-align: middle;\\\n}\\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\\nbackground: #e7e7e7;\\\nbox-shadow: 1px 0px 2px 0px #adadad inset;\\\nborder-color: #adadad;\\\n}\\\n.ace_optionsMenuEntry button {\\\nbackground: white;\\\nborder: 1px solid lightgray;\\\nmargin: 0px;\\\n}\\\n.ace_optionsMenuEntry button:hover{\\\nbackground: #f0f0f0;\\\n}\";\n  dom.importCssString(cssText);\n\n  module.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n\n    function documentEscListener(e) {\n      if (e.keyCode === 27) {\n        close();\n      }\n    }\n\n    function close() {\n      if (!closer) return;\n      document.removeEventListener('keydown', documentEscListener);\n      closer.parentNode.removeChild(closer);\n\n      if (editor) {\n        editor.focus();\n      }\n\n      closer = null;\n      callback && callback();\n    }\n\n    function setIgnoreFocusOut(ignore) {\n      ignoreFocusOut = ignore;\n\n      if (ignore) {\n        closer.style.pointerEvents = \"none\";\n        contentElement.style.pointerEvents = \"auto\";\n      }\n    }\n\n    closer.style.cssText = 'margin: 0; padding: 0; ' + 'position: fixed; top:0; bottom:0; left:0; right:0;' + 'z-index: 9990; ' + (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function (e) {\n      if (!ignoreFocusOut) {\n        close();\n      }\n    });\n    document.addEventListener('keydown', documentEscListener);\n    contentElement.addEventListener('click', function (e) {\n      e.stopPropagation();\n    });\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n\n    if (editor) {\n      editor.blur();\n    }\n\n    return {\n      close: close,\n      setIgnoreFocusOut: setIgnoreFocusOut\n    };\n  };\n});\nace.define(\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\", [\"require\", \"exports\", \"module\", \"ace/lib/keys\"], function (require, exports, module) {\n  \"use strict\";\n\n  var keys = require(\"../../lib/keys\");\n\n  module.exports.getEditorKeybordShortcuts = function (editor) {\n    var KEY_MODS = keys.KEY_MODS;\n    var keybindings = [];\n    var commandMap = {};\n    editor.keyBinding.$handlers.forEach(function (handler) {\n      var ckb = handler.commandKeyBinding;\n\n      for (var i in ckb) {\n        var key = i.replace(/(^|-)\\w/g, function (x) {\n          return x.toUpperCase();\n        });\n        var commands = ckb[i];\n        if (!Array.isArray(commands)) commands = [commands];\n        commands.forEach(function (command) {\n          if (typeof command != \"string\") command = command.name;\n\n          if (commandMap[command]) {\n            commandMap[command].key += \"|\" + key;\n          } else {\n            commandMap[command] = {\n              key: key,\n              command: command\n            };\n            keybindings.push(commandMap[command]);\n          }\n        });\n      }\n    });\n    return keybindings;\n  };\n});\nace.define(\"ace/ext/keybinding_menu\", [\"require\", \"exports\", \"module\", \"ace/editor\", \"ace/ext/menu_tools/overlay_page\", \"ace/ext/menu_tools/get_editor_keyboard_shortcuts\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Editor = require(\"../editor\").Editor;\n\n  function showKeyboardShortcuts(editor) {\n    if (!document.getElementById('kbshortcutmenu')) {\n      var overlayPage = require('./menu_tools/overlay_page').overlayPage;\n\n      var getEditorKeybordShortcuts = require('./menu_tools/get_editor_keyboard_shortcuts').getEditorKeybordShortcuts;\n\n      var kb = getEditorKeybordShortcuts(editor);\n      var el = document.createElement('div');\n      var commands = kb.reduce(function (previous, current) {\n        return previous + '<div class=\"ace_optionsMenuEntry\"><span class=\"ace_optionsMenuCommand\">' + current.command + '</span> : ' + '<span class=\"ace_optionsMenuKey\">' + current.key + '</span></div>';\n      }, '');\n      el.id = 'kbshortcutmenu';\n      el.innerHTML = '<h1>Keyboard Shortcuts</h1>' + commands + '</div>';\n      overlayPage(editor, el);\n    }\n  }\n\n  module.exports.init = function (editor) {\n    Editor.prototype.showKeyboardShortcuts = function () {\n      showKeyboardShortcuts(this);\n    };\n\n    editor.commands.addCommands([{\n      name: \"showKeyboardShortcuts\",\n      bindKey: {\n        win: \"Ctrl-Alt-h\",\n        mac: \"Command-Alt-h\"\n      },\n      exec: function (editor, line) {\n        editor.showKeyboardShortcuts();\n      }\n    }]);\n  };\n});\n\n(function () {\n  ace.require([\"ace/ext/keybinding_menu\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/ext-keybinding_menu.js"],"names":["ace","define","require","exports","module","dom","cssText","importCssString","overlayPage","editor","contentElement","callback","closer","document","createElement","ignoreFocusOut","documentEscListener","e","keyCode","close","removeEventListener","parentNode","removeChild","focus","setIgnoreFocusOut","ignore","style","pointerEvents","addEventListener","stopPropagation","appendChild","body","blur","keys","getEditorKeybordShortcuts","KEY_MODS","keybindings","commandMap","keyBinding","$handlers","forEach","handler","ckb","commandKeyBinding","i","key","replace","x","toUpperCase","commands","Array","isArray","command","name","push","Editor","showKeyboardShortcuts","getElementById","kb","el","reduce","previous","current","id","innerHTML","init","prototype","addCommands","bindKey","win","mac","exec","line","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/ext/menu_tools/overlay_page\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\"], function(require, exports, module) {\n'use strict';\nvar dom = require(\"../../lib/dom\");\nvar cssText = \"#ace_settingsmenu, #kbshortcutmenu {\\\nbackground-color: #F7F7F7;\\\ncolor: black;\\\nbox-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\\npadding: 1em 0.5em 2em 1em;\\\noverflow: auto;\\\nposition: absolute;\\\nmargin: 0;\\\nbottom: 0;\\\nright: 0;\\\ntop: 0;\\\nz-index: 9991;\\\ncursor: default;\\\n}\\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\\nbox-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\\nbackground-color: rgba(255, 255, 255, 0.6);\\\ncolor: black;\\\n}\\\n.ace_optionsMenuEntry:hover {\\\nbackground-color: rgba(100, 100, 100, 0.1);\\\ntransition: all 0.3s\\\n}\\\n.ace_closeButton {\\\nbackground: rgba(245, 146, 146, 0.5);\\\nborder: 1px solid #F48A8A;\\\nborder-radius: 50%;\\\npadding: 7px;\\\nposition: absolute;\\\nright: -8px;\\\ntop: -8px;\\\nz-index: 100000;\\\n}\\\n.ace_closeButton{\\\nbackground: rgba(245, 146, 146, 0.9);\\\n}\\\n.ace_optionsMenuKey {\\\ncolor: darkslateblue;\\\nfont-weight: bold;\\\n}\\\n.ace_optionsMenuCommand {\\\ncolor: darkcyan;\\\nfont-weight: normal;\\\n}\\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\\nvertical-align: middle;\\\n}\\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\\nbackground: #e7e7e7;\\\nbox-shadow: 1px 0px 2px 0px #adadad inset;\\\nborder-color: #adadad;\\\n}\\\n.ace_optionsMenuEntry button {\\\nbackground: white;\\\nborder: 1px solid lightgray;\\\nmargin: 0px;\\\n}\\\n.ace_optionsMenuEntry button:hover{\\\nbackground: #f0f0f0;\\\n}\";\ndom.importCssString(cssText);\n\nmodule.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n\n    function documentEscListener(e) {\n        if (e.keyCode === 27) {\n            close();\n        }\n    }\n\n    function close() {\n        if (!closer) return;\n        document.removeEventListener('keydown', documentEscListener);\n        closer.parentNode.removeChild(closer);\n        if (editor) {\n            editor.focus();\n        }\n        closer = null;\n        callback && callback();\n    }\n    function setIgnoreFocusOut(ignore) {\n        ignoreFocusOut = ignore;\n        if (ignore) {\n            closer.style.pointerEvents = \"none\";\n            contentElement.style.pointerEvents = \"auto\";\n        }\n    }\n\n    closer.style.cssText = 'margin: 0; padding: 0; ' +\n        'position: fixed; top:0; bottom:0; left:0; right:0;' +\n        'z-index: 9990; ' +\n        (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function(e) {\n        if (!ignoreFocusOut) {\n            close();\n        }\n    });\n    document.addEventListener('keydown', documentEscListener);\n\n    contentElement.addEventListener('click', function (e) {\n        e.stopPropagation();\n    });\n\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n    if (editor) {\n        editor.blur();\n    }\n    return {\n        close: close,\n        setIgnoreFocusOut: setIgnoreFocusOut\n    };\n};\n\n});\n\nace.define(\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\",[\"require\",\"exports\",\"module\",\"ace/lib/keys\"], function(require, exports, module) {\n\"use strict\";\nvar keys = require(\"../../lib/keys\");\nmodule.exports.getEditorKeybordShortcuts = function(editor) {\n    var KEY_MODS = keys.KEY_MODS;\n    var keybindings = [];\n    var commandMap = {};\n    editor.keyBinding.$handlers.forEach(function(handler) {\n        var ckb = handler.commandKeyBinding;\n        for (var i in ckb) {\n            var key = i.replace(/(^|-)\\w/g, function(x) { return x.toUpperCase(); });\n            var commands = ckb[i];\n            if (!Array.isArray(commands))\n                commands = [commands];\n            commands.forEach(function(command) {\n                if (typeof command != \"string\")\n                    command  = command.name;\n                if (commandMap[command]) {\n                    commandMap[command].key += \"|\" + key;\n                } else {\n                    commandMap[command] = {key: key, command: command};\n                    keybindings.push(commandMap[command]);\n                }         \n            });\n        }\n    });\n    return keybindings;\n};\n\n});\n\nace.define(\"ace/ext/keybinding_menu\",[\"require\",\"exports\",\"module\",\"ace/editor\",\"ace/ext/menu_tools/overlay_page\",\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\"], function(require, exports, module) {\n    \"use strict\";\n    var Editor = require(\"../editor\").Editor;\n    function showKeyboardShortcuts (editor) {\n        if(!document.getElementById('kbshortcutmenu')) {\n            var overlayPage = require('./menu_tools/overlay_page').overlayPage;\n            var getEditorKeybordShortcuts = require('./menu_tools/get_editor_keyboard_shortcuts').getEditorKeybordShortcuts;\n            var kb = getEditorKeybordShortcuts(editor);\n            var el = document.createElement('div');\n            var commands = kb.reduce(function(previous, current) {\n                return previous + '<div class=\"ace_optionsMenuEntry\"><span class=\"ace_optionsMenuCommand\">' \n                    + current.command + '</span> : '\n                    + '<span class=\"ace_optionsMenuKey\">' + current.key + '</span></div>';\n            }, '');\n\n            el.id = 'kbshortcutmenu';\n            el.innerHTML = '<h1>Keyboard Shortcuts</h1>' + commands + '</div>';\n            overlayPage(editor, el);\n        }\n    }\n    module.exports.init = function(editor) {\n        Editor.prototype.showKeyboardShortcuts = function() {\n            showKeyboardShortcuts(this);\n        };\n        editor.commands.addCommands([{\n            name: \"showKeyboardShortcuts\",\n            bindKey: {win: \"Ctrl-Alt-h\", mac: \"Command-Alt-h\"},\n            exec: function(editor, line) {\n                editor.showKeyboardShortcuts();\n            }\n        }]);\n    };\n\n});                (function() {\n                    ace.require([\"ace/ext/keybinding_menu\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}