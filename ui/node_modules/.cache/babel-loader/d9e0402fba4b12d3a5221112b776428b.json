{"ast":null,"code":"import { isUndefined } from \"../utils/utils\";\nexport function classNameFromInstance(instance) {\n  return functionName(instance.constructor);\n}\nvar FUNC_NAME_REGEXP = /^\\s*function\\s*(\\S*)\\s*\\(/;\nvar NAME = \"name\";\n/* istanbul ignore next too many hacks for IE/old versions of node.js here*/\n\nexport function functionName(func) {\n  // Engines that support Function.prototype.name OR the nth (n>1) time after\n  // the name has been computed in the following else block.\n  var existingNameProp = func.name;\n\n  if (existingNameProp) {\n    return existingNameProp;\n  } // hack for IE and engines that do not support Object.defineProperty on function.name (Node.js 0.10 && 0.12)\n\n\n  var computedName = func.toString().match(FUNC_NAME_REGEXP)[1];\n  return computedName;\n}\n/**\n * @returns {boolean} - has the property been successfully defined\n */\n\nexport function defineNameProp(obj, nameValue) {\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);\n  /* istanbul ignore else -> will only run in old versions of node.js */\n\n  if (isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {\n    Object.defineProperty(obj, NAME, {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: nameValue\n    });\n    return true;\n  }\n  /* istanbul ignore next -> will only run in old versions of node.js */\n\n\n  return false;\n}","map":{"version":3,"sources":["../../../src/lang/lang_extensions.ts"],"names":[],"mappings":"AACA,SAAS,WAAT,QAA4B,gBAA5B;AAEA,OAAM,SAAU,qBAAV,CAAgC,QAAhC,EAA6C;AACjD,SAAO,YAAY,CAAC,QAAQ,CAAC,WAAV,CAAnB;AACD;AAED,IAAM,gBAAgB,GAAG,2BAAzB;AACA,IAAM,IAAI,GAAG,MAAb;AAEA;;AACA,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAAsC;AAC1C;AACA;AACA,MAAI,gBAAgB,GAAS,IAAK,CAAC,IAAnC;;AACA,MAAI,gBAAJ,EAAsB;AACpB,WAAO,gBAAP;AACD,GANyC,CAQ1C;;;AACA,MAAI,YAAY,GAAG,IAAI,CAAC,QAAL,GAAgB,KAAhB,CAAsB,gBAAtB,EAAwC,CAAxC,CAAnB;AAEA,SAAO,YAAP;AACD;AAED;;;;AAGA,OAAM,SAAU,cAAV,CAAyB,GAAzB,EAA8B,SAA9B,EAAuC;AAC3C,MAAI,kBAAkB,GAAG,MAAM,CAAC,wBAAP,CAAgC,GAAhC,EAAqC,IAArC,CAAzB;AACA;;AACA,MAAI,WAAW,CAAC,kBAAD,CAAX,IAAmC,kBAAkB,CAAC,YAA1D,EAAwE;AACtE,IAAA,MAAM,CAAC,cAAP,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAC/B,MAAA,UAAU,EAAE,KADmB;AAE/B,MAAA,YAAY,EAAE,IAFiB;AAG/B,MAAA,QAAQ,EAAE,KAHqB;AAI/B,MAAA,KAAK,EAAE;AAJwB,KAAjC;AAOA,WAAO,IAAP;AACD;AACD;;;AACA,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { isUndefined } from \"../utils/utils\";\nexport function classNameFromInstance(instance) {\n    return functionName(instance.constructor);\n}\nvar FUNC_NAME_REGEXP = /^\\s*function\\s*(\\S*)\\s*\\(/;\nvar NAME = \"name\";\n/* istanbul ignore next too many hacks for IE/old versions of node.js here*/\nexport function functionName(func) {\n    // Engines that support Function.prototype.name OR the nth (n>1) time after\n    // the name has been computed in the following else block.\n    var existingNameProp = func.name;\n    if (existingNameProp) {\n        return existingNameProp;\n    }\n    // hack for IE and engines that do not support Object.defineProperty on function.name (Node.js 0.10 && 0.12)\n    var computedName = func.toString().match(FUNC_NAME_REGEXP)[1];\n    return computedName;\n}\n/**\n * @returns {boolean} - has the property been successfully defined\n */\nexport function defineNameProp(obj, nameValue) {\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);\n    /* istanbul ignore else -> will only run in old versions of node.js */\n    if (isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {\n        Object.defineProperty(obj, NAME, {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: nameValue\n        });\n        return true;\n    }\n    /* istanbul ignore next -> will only run in old versions of node.js */\n    return false;\n}\n//# sourceMappingURL=lang_extensions.js.map"]},"metadata":{},"sourceType":"module"}