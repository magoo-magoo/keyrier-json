{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/d_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DHighlightRules = function () {\n    var keywords = \"this|super|import|module|body|mixin|__traits|invariant|alias|asm|delete|\" + \"typeof|typeid|sizeof|cast|new|in|is|typedef|__vector|__parameters\";\n    var keywordControls = \"break|case|continue|default|do|else|for|foreach|foreach_reverse|goto|if|\" + \"return|switch|while|catch|try|throw|finally|version|assert|unittest|with\";\n    var types = \"auto|bool|char|dchar|wchar|byte|ubyte|float|double|real|\" + \"cfloat|creal|cdouble|cent|ifloat|ireal|idouble|\" + \"int|long|short|void|uint|ulong|ushort|ucent|\" + \"function|delegate|string|wstring|dstring|size_t|ptrdiff_t|hash_t|Object\";\n    var modifiers = \"abstract|align|debug|deprecated|export|extern|const|final|in|inout|out|\" + \"ref|immutable|lazy|nothrow|override|package|pragma|private|protected|\" + \"public|pure|scope|shared|__gshared|synchronized|static|volatile\";\n    var storages = \"class|struct|union|template|interface|enum|macro\";\n    var stringEscapesSeq = {\n      token: \"constant.language.escape\",\n      regex: \"\\\\\\\\(?:(?:x[0-9A-F]{2})|(?:[0-7]{1,3})|(?:['\\\"\\\\?0abfnrtv\\\\\\\\])|\" + \"(?:u[0-9a-fA-F]{4})|(?:U[0-9a-fA-F]{8}))\"\n    };\n    var builtinConstants = \"null|true|false|\" + \"__DATE__|__EOF__|__TIME__|__TIMESTAMP__|__VENDOR__|__VERSION__|\" + \"__FILE__|__MODULE__|__LINE__|__FUNCTION__|__PRETTY_FUNCTION__\";\n    var operators = \"/|/\\\\=|&|&\\\\=|&&|\\\\|\\\\|\\\\=|\\\\|\\\\||\\\\-|\\\\-\\\\=|\\\\-\\\\-|\\\\+|\" + \"\\\\+\\\\=|\\\\+\\\\+|\\\\<|\\\\<\\\\=|\\\\<\\\\<|\\\\<\\\\<\\\\=|\\\\<\\\\>|\\\\<\\\\>\\\\=|\\\\>|\\\\>\\\\=|\\\\>\\\\>\\\\=|\" + \"\\\\>\\\\>\\\\>\\\\=|\\\\>\\\\>|\\\\>\\\\>\\\\>|\\\\!|\\\\!\\\\=|\\\\!\\\\<\\\\>|\\\\!\\\\<\\\\>\\\\=|\\\\!\\\\<|\\\\!\\\\<\\\\=|\" + \"\\\\!\\\\>|\\\\!\\\\>\\\\=|\\\\?|\\\\$|\\\\=|\\\\=\\\\=|\\\\*|\\\\*\\\\=|%|%\\\\=|\" + \"\\\\^|\\\\^\\\\=|\\\\^\\\\^|\\\\^\\\\^\\\\=|~|~\\\\=|\\\\=\\\\>|#\";\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n      \"keyword.modifier\": modifiers,\n      \"keyword.control\": keywordControls,\n      \"keyword.type\": types,\n      \"keyword\": keywords,\n      \"keyword.storage\": storages,\n      \"punctation\": \"\\\\.|\\\\,|;|\\\\.\\\\.|\\\\.\\\\.\\\\.\",\n      \"keyword.operator\": operators,\n      \"constant.language\": builtinConstants\n    }, \"identifier\");\n    var identifierRe = \"[a-zA-Z_\\u00a1-\\uffff][a-zA-Z\\\\d_\\u00a1-\\uffff]*\\\\b\";\n    this.$rules = {\n      \"start\": [{\n        //-------------------------------------------------------- COMMENTS\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"star-comment\"\n      }, {\n        token: \"comment.shebang\",\n        regex: \"^\\\\s*#!.*\"\n      }, {\n        token: \"comment\",\n        regex: \"\\\\/\\\\+\",\n        next: \"plus-comment\"\n      }, {\n        //-------------------------------------------------------- STRINGS\n        onMatch: function (value, currentState, state) {\n          state.unshift(this.next, value.substr(2));\n          return \"string\";\n        },\n        regex: 'q\"(?:[\\\\[\\\\(\\\\{\\\\<]+)',\n        next: 'operator-heredoc-string'\n      }, {\n        onMatch: function (value, currentState, state) {\n          state.unshift(this.next, value.substr(2));\n          return \"string\";\n        },\n        regex: 'q\"(?:[a-zA-Z_]+)$',\n        next: 'identifier-heredoc-string'\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[xr]?\"',\n        next: \"quote-string\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[xr]?`',\n        next: \"backtick-string\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"[xr]?['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?['][cdw]?\"\n      }, {\n        //-------------------------------------------------------- RULES\n        token: [\"keyword\", \"text\", \"paren.lparen\"],\n        regex: /(asm)(\\s*)({)/,\n        next: \"d-asm\"\n      }, {\n        token: [\"keyword\", \"text\", \"paren.lparen\", \"constant.language\"],\n        regex: \"(__traits)(\\\\s*)(\\\\()(\" + identifierRe + \")\"\n      }, {\n        // import|module abc\n        token: [\"keyword\", \"text\", \"variable.module\"],\n        regex: \"(import|module)(\\\\s+)((?:\" + identifierRe + \"\\\\.?)*)\"\n      }, {\n        // storage Name\n        token: [\"keyword.storage\", \"text\", \"entity.name.type\"],\n        regex: \"(\" + storages + \")(\\\\s*)(\" + identifierRe + \")\"\n      }, {\n        // alias|typedef foo bar;\n        token: [\"keyword\", \"text\", \"variable.storage\", \"text\"],\n        regex: \"(alias|typedef)(\\\\s*)(\" + identifierRe + \")(\\\\s*)\"\n      }, {\n        //-------------------------------------------------------- OTHERS\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F_]+(l|ul|u|f|F|L|U|UL)?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d[\\\\d_]*(?:(?:\\\\.[\\\\d_]*)?(?:[eE][+-]?[\\\\d_]+)?)?(l|ul|u|f|F|L|U|UL)?\\\\b\"\n      }, {\n        token: \"entity.other.attribute-name\",\n        regex: \"@\" + identifierRe\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: operators\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.|\\\\:\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"star-comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: 'comment'\n      }],\n      \"plus-comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\+\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: 'comment'\n      }],\n      \"quote-string\": [stringEscapesSeq, {\n        token: \"string\",\n        regex: '\"[cdw]?',\n        next: \"start\"\n      }, {\n        defaultToken: 'string'\n      }],\n      \"backtick-string\": [stringEscapesSeq, {\n        token: \"string\",\n        regex: '`[cdw]?',\n        next: \"start\"\n      }, {\n        defaultToken: 'string'\n      }],\n      \"operator-heredoc-string\": [{\n        onMatch: function (value, currentState, state) {\n          value = value.substring(value.length - 2, value.length - 1);\n          var map = {\n            '>': '<',\n            ']': '[',\n            ')': '(',\n            '}': '{'\n          };\n          if (Object.keys(map).indexOf(value) != -1) value = map[value];\n          if (value != state[1]) return \"string\";\n          state.shift();\n          state.shift();\n          return \"string\";\n        },\n        regex: '(?:[\\\\]\\\\)}>]+)\"',\n        next: 'start'\n      }, {\n        token: 'string',\n        regex: '[^\\\\]\\\\)}>]+'\n      }],\n      \"identifier-heredoc-string\": [{\n        onMatch: function (value, currentState, state) {\n          value = value.substring(0, value.length - 1);\n          if (value != state[1]) return \"string\";\n          state.shift();\n          state.shift();\n          return \"string\";\n        },\n        regex: '^(?:[A-Za-z_][a-zA-Z0-9]+)\"',\n        next: 'start'\n      }, {\n        token: 'string',\n        regex: '[^\\\\]\\\\)}>]+'\n      }],\n      \"d-asm\": [{\n        token: \"paren.rparen\",\n        regex: \"\\\\}\",\n        next: \"start\"\n      }, {\n        token: 'keyword.instruction',\n        regex: '[a-zA-Z]+',\n        next: 'd-asm-instruction'\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      'd-asm-instruction': [{\n        token: 'constant.language',\n        regex: /AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI/i\n      }, {\n        token: 'identifier',\n        regex: '[a-zA-Z]+'\n      }, {\n        token: 'string',\n        regex: '\".*\"'\n      }, {\n        token: 'comment',\n        regex: '//.*$'\n      }, {\n        token: 'constant.numeric',\n        regex: '[0-9.xA-F]+'\n      }, {\n        token: 'punctuation.operator',\n        regex: '\\\\,'\n      }, {\n        token: 'punctuation.operator',\n        regex: ';',\n        next: 'd-asm'\n      }, {\n        token: 'text',\n        regex: '\\\\s+'\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n  };\n\n  DHighlightRules.metaData = {\n    comment: 'D language',\n    fileTypes: ['d', 'di'],\n    firstLineMatch: '^#!.*\\\\b[glr]?dmd\\\\b.',\n    foldingStartMarker: '(?x)/\\\\*\\\\*(?!\\\\*)|^(?![^{]*?//|[^{]*?/\\\\*(?!.*?\\\\*/.*?\\\\{)).*?\\\\{\\\\s*($|//|/\\\\*(?!.*?\\\\*/.*\\\\S))',\n    foldingStopMarker: '(?<!\\\\*)\\\\*\\\\*/|^\\\\s*\\\\}',\n    keyEquivalent: '^~D',\n    name: 'D',\n    scopeName: 'source.d'\n  };\n  oop.inherits(DHighlightRules, TextHighlightRules);\n  exports.DHighlightRules = DHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/d\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/d_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var DHighlightRules = require(\"./d_highlight_rules\").DHighlightRules;\n\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = DHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/d\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/d\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-d.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","DHighlightRules","keywords","keywordControls","types","modifiers","storages","stringEscapesSeq","builtinConstants","operators","keywordMapper","$keywords","createKeywordMapper","identifierRe","onMatch","value","currentState","state","unshift","substr","substring","length","map","Object","keys","indexOf","shift","embedRules","metaData","comment","fileTypes","firstLineMatch","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/d_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DHighlightRules = function() {\n\n    var keywords = (\n        \"this|super|import|module|body|mixin|__traits|invariant|alias|asm|delete|\"+\n        \"typeof|typeid|sizeof|cast|new|in|is|typedef|__vector|__parameters\"\n    );\n\n    var keywordControls = (\n        \"break|case|continue|default|do|else|for|foreach|foreach_reverse|goto|if|\" +\n        \"return|switch|while|catch|try|throw|finally|version|assert|unittest|with\"\n    );\n    \n    var types = (\n        \"auto|bool|char|dchar|wchar|byte|ubyte|float|double|real|\" +\n        \"cfloat|creal|cdouble|cent|ifloat|ireal|idouble|\" +\n        \"int|long|short|void|uint|ulong|ushort|ucent|\" +\n        \"function|delegate|string|wstring|dstring|size_t|ptrdiff_t|hash_t|Object\"\n    );\n\n    var modifiers = (\n        \"abstract|align|debug|deprecated|export|extern|const|final|in|inout|out|\" +\n        \"ref|immutable|lazy|nothrow|override|package|pragma|private|protected|\" +\n        \"public|pure|scope|shared|__gshared|synchronized|static|volatile\"\n    );\n    \n    var storages = (\n        \"class|struct|union|template|interface|enum|macro\"\n    );\n    \n    var stringEscapesSeq =  {\n        token: \"constant.language.escape\",\n        regex: \"\\\\\\\\(?:(?:x[0-9A-F]{2})|(?:[0-7]{1,3})|(?:['\\\"\\\\?0abfnrtv\\\\\\\\])|\" +\n            \"(?:u[0-9a-fA-F]{4})|(?:U[0-9a-fA-F]{8}))\"\n    };\n\n    var builtinConstants = (\n        \"null|true|false|\"+\n        \"__DATE__|__EOF__|__TIME__|__TIMESTAMP__|__VENDOR__|__VERSION__|\"+\n        \"__FILE__|__MODULE__|__LINE__|__FUNCTION__|__PRETTY_FUNCTION__\"\n    );\n    \n    var operators = (\n        \"/|/\\\\=|&|&\\\\=|&&|\\\\|\\\\|\\\\=|\\\\|\\\\||\\\\-|\\\\-\\\\=|\\\\-\\\\-|\\\\+|\" +\n        \"\\\\+\\\\=|\\\\+\\\\+|\\\\<|\\\\<\\\\=|\\\\<\\\\<|\\\\<\\\\<\\\\=|\\\\<\\\\>|\\\\<\\\\>\\\\=|\\\\>|\\\\>\\\\=|\\\\>\\\\>\\\\=|\" +\n        \"\\\\>\\\\>\\\\>\\\\=|\\\\>\\\\>|\\\\>\\\\>\\\\>|\\\\!|\\\\!\\\\=|\\\\!\\\\<\\\\>|\\\\!\\\\<\\\\>\\\\=|\\\\!\\\\<|\\\\!\\\\<\\\\=|\" +\n        \"\\\\!\\\\>|\\\\!\\\\>\\\\=|\\\\?|\\\\$|\\\\=|\\\\=\\\\=|\\\\*|\\\\*\\\\=|%|%\\\\=|\" +\n        \"\\\\^|\\\\^\\\\=|\\\\^\\\\^|\\\\^\\\\^\\\\=|~|~\\\\=|\\\\=\\\\>|#\"\n    );\n\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n        \"keyword.modifier\" : modifiers,\n        \"keyword.control\" :  keywordControls,\n        \"keyword.type\" :     types,\n        \"keyword\":           keywords,\n        \"keyword.storage\":   storages,\n        \"punctation\": \"\\\\.|\\\\,|;|\\\\.\\\\.|\\\\.\\\\.\\\\.\",\n        \"keyword.operator\" : operators,\n        \"constant.language\": builtinConstants\n    }, \"identifier\");\n    \n    var identifierRe = \"[a-zA-Z_\\u00a1-\\uffff][a-zA-Z\\\\d_\\u00a1-\\uffff]*\\\\b\";\n\n    this.$rules = {\n        \"start\" : [\n            {     //-------------------------------------------------------- COMMENTS\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"star-comment\"\n            }, {\n                token: \"comment.shebang\",\n                regex: \"^\\\\s*#!.*\"\n            }, {\n                token : \"comment\",\n                regex : \"\\\\/\\\\+\",\n                next: \"plus-comment\"\n            }, {  //-------------------------------------------------------- STRINGS\n                onMatch: function(value, currentState, state) {\n                    state.unshift(this.next, value.substr(2));\n                    return \"string\";\n                },\n                regex: 'q\"(?:[\\\\[\\\\(\\\\{\\\\<]+)',\n                next: 'operator-heredoc-string'\n            }, {\n                onMatch: function(value, currentState, state) {\n                    state.unshift(this.next, value.substr(2));\n                    return \"string\";\n                },\n                regex: 'q\"(?:[a-zA-Z_]+)$',\n                next: 'identifier-heredoc-string'\n            }, {\n                token : \"string\", // multi line string start\n                regex : '[xr]?\"',\n                next : \"quote-string\"\n            }, {\n                token : \"string\", // multi line string start\n                regex : '[xr]?`',\n                next : \"backtick-string\"\n            }, {\n                token : \"string\", // single line\n                regex : \"[xr]?['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?['][cdw]?\"\n            }, {  //-------------------------------------------------------- RULES\n                token: [\"keyword\", \"text\", \"paren.lparen\"],\n                regex: /(asm)(\\s*)({)/,\n                next: \"d-asm\"\n            }, {\n                token: [\"keyword\", \"text\", \"paren.lparen\", \"constant.language\"],\n                regex: \"(__traits)(\\\\s*)(\\\\()(\"+identifierRe+\")\"\n            }, { // import|module abc\n                token: [\"keyword\", \"text\", \"variable.module\"],\n                regex: \"(import|module)(\\\\s+)((?:\"+identifierRe+\"\\\\.?)*)\"\n            }, { // storage Name\n                token: [\"keyword.storage\", \"text\", \"entity.name.type\"],\n                regex: \"(\"+storages+\")(\\\\s*)(\"+identifierRe+\")\"\n            }, { // alias|typedef foo bar;\n                token: [\"keyword\", \"text\", \"variable.storage\", \"text\"],\n                regex: \"(alias|typedef)(\\\\s*)(\"+identifierRe+\")(\\\\s*)\"\n            }, {  //-------------------------------------------------------- OTHERS\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F_]+(l|ul|u|f|F|L|U|UL)?\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d[\\\\d_]*(?:(?:\\\\.[\\\\d_]*)?(?:[eE][+-]?[\\\\d_]+)?)?(l|ul|u|f|F|L|U|UL)?\\\\b\"\n            }, {\n                token: \"entity.other.attribute-name\",\n                regex: \"@\"+identifierRe\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n            }, {\n                token : \"keyword.operator\",\n                regex : operators\n            }, {\n                token : \"punctuation.operator\",\n                regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.|\\\\:\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"star-comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken: 'comment'\n            }\n        ],\n        \"plus-comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\+\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken: 'comment'\n            }\n        ],\n        \n        \"quote-string\" : [\n           stringEscapesSeq,\n           {\n                token : \"string\",\n                regex : '\"[cdw]?',\n                next : \"start\"\n            }, {\n                defaultToken: 'string'\n            }\n        ],\n        \n        \"backtick-string\" : [\n           stringEscapesSeq,\n           {\n                token : \"string\",\n                regex : '`[cdw]?',\n                next : \"start\"\n            }, {\n                defaultToken: 'string'\n            }\n        ],\n        \n        \"operator-heredoc-string\": [\n            {\n                onMatch: function(value, currentState, state) {\n                    value = value.substring(value.length-2, value.length-1);\n                    var map = {'>':'<',']':'[',')':'(','}':'{'};\n                    if(Object.keys(map).indexOf(value) != -1)\n                        value = map[value];\n                    if(value != state[1]) return \"string\";\n                    state.shift();\n                    state.shift();\n                    \n                    return \"string\";\n                },\n                regex: '(?:[\\\\]\\\\)}>]+)\"',\n                next: 'start'\n            }, {\n                token: 'string',\n                regex: '[^\\\\]\\\\)}>]+'\n            }\n        ],\n        \n        \"identifier-heredoc-string\": [\n            {\n                onMatch: function(value, currentState, state) {\n                    value = value.substring(0, value.length-1);\n                    if(value != state[1]) return \"string\";\n                    state.shift();\n                    state.shift();\n                    \n                    return \"string\";\n                },\n                regex: '^(?:[A-Za-z_][a-zA-Z0-9]+)\"',\n                next: 'start'\n            }, {\n                token: 'string',\n                regex: '[^\\\\]\\\\)}>]+'\n            }\n        ],\n        \n        \"d-asm\": [\n            {\n                token: \"paren.rparen\",\n                regex: \"\\\\}\",\n                next: \"start\"\n            }, {\n                token: 'keyword.instruction',\n                regex: '[a-zA-Z]+',\n                next: 'd-asm-instruction' \n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        'd-asm-instruction': [\n            {\n                token: 'constant.language',\n                regex: /AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI/i\n            }, {\n                token: 'identifier',\n                regex: '[a-zA-Z]+'\n            }, {\n                token: 'string',\n                regex: '\".*\"'\n            }, {\n                token: 'comment',\n                regex: '//.*$'\n            }, {\n                token: 'constant.numeric',\n                regex: '[0-9.xA-F]+'\n            }, {\n                token: 'punctuation.operator',\n                regex: '\\\\,'\n            }, {\n                token: 'punctuation.operator',\n                regex: ';',\n                next: 'd-asm'\n            }, {\n                token: 'text',\n                regex: '\\\\s+'\n            }\n        ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n};\n\nDHighlightRules.metaData = {\n      comment: 'D language',\n      fileTypes: [ 'd', 'di' ],\n      firstLineMatch: '^#!.*\\\\b[glr]?dmd\\\\b.',\n      foldingStartMarker: '(?x)/\\\\*\\\\*(?!\\\\*)|^(?![^{]*?//|[^{]*?/\\\\*(?!.*?\\\\*/.*?\\\\{)).*?\\\\{\\\\s*($|//|/\\\\*(?!.*?\\\\*/.*\\\\S))',\n      foldingStopMarker: '(?<!\\\\*)\\\\*\\\\*/|^\\\\s*\\\\}',\n      keyEquivalent: '^~D',\n      name: 'D',\n      scopeName: 'source.d'\n};\noop.inherits(DHighlightRules, TextHighlightRules);\n\nexports.DHighlightRules = DHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/d\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/d_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar DHighlightRules = require(\"./d_highlight_rules\").DHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = DHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    this.$id = \"ace/mode/d\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/d\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}