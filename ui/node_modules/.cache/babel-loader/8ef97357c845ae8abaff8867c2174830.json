{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { off, on } from './util';\n\nvar noop = function () {};\n\nvar useMediaDevices = function () {\n  var _a = useState({}),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var onChange = function () {\n      navigator.mediaDevices.enumerateDevices().then(function (devices) {\n        if (mounted) {\n          setState({\n            devices: devices.map(function (_a) {\n              var deviceId = _a.deviceId,\n                  groupId = _a.groupId,\n                  kind = _a.kind,\n                  label = _a.label;\n              return {\n                deviceId: deviceId,\n                groupId: groupId,\n                kind: kind,\n                label: label\n              };\n            })\n          });\n        }\n      }).catch(noop);\n    };\n\n    on(navigator.mediaDevices, 'devicechange', onChange);\n    onChange();\n    return function () {\n      mounted = false;\n      off(navigator.mediaDevices, 'devicechange', onChange);\n    };\n  }, []);\n  return state;\n};\n\nvar useMediaDevicesMock = function () {\n  return {};\n};\n\nexport default typeof navigator === 'object' && !!navigator.mediaDevices ? useMediaDevices : useMediaDevicesMock;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useMediaDevices.js"],"names":["useEffect","useState","off","on","noop","useMediaDevices","_a","state","setState","mounted","onChange","navigator","mediaDevices","enumerateDevices","then","devices","map","deviceId","groupId","kind","label","catch","useMediaDevicesMock"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,EAAd,QAAwB,QAAxB;;AACA,IAAIC,IAAI,GAAG,YAAY,CAAG,CAA1B;;AACA,IAAIC,eAAe,GAAG,YAAY;AAC9B,MAAIC,EAAE,GAAGL,QAAQ,CAAC,EAAD,CAAjB;AAAA,MAAuBM,KAAK,GAAGD,EAAE,CAAC,CAAD,CAAjC;AAAA,MAAsCE,QAAQ,GAAGF,EAAE,CAAC,CAAD,CAAnD;;AACAN,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIS,OAAO,GAAG,IAAd;;AACA,QAAIC,QAAQ,GAAG,YAAY;AACvBC,MAAAA,SAAS,CAACC,YAAV,CACKC,gBADL,GAEKC,IAFL,CAEU,UAAUC,OAAV,EAAmB;AACzB,YAAIN,OAAJ,EAAa;AACTD,UAAAA,QAAQ,CAAC;AACLO,YAAAA,OAAO,EAAEA,OAAO,CAACC,GAAR,CAAY,UAAUV,EAAV,EAAc;AAC/B,kBAAIW,QAAQ,GAAGX,EAAE,CAACW,QAAlB;AAAA,kBAA4BC,OAAO,GAAGZ,EAAE,CAACY,OAAzC;AAAA,kBAAkDC,IAAI,GAAGb,EAAE,CAACa,IAA5D;AAAA,kBAAkEC,KAAK,GAAGd,EAAE,CAACc,KAA7E;AACA,qBAAQ;AAAEH,gBAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,gBAAAA,OAAO,EAAEA,OAA/B;AAAwCC,gBAAAA,IAAI,EAAEA,IAA9C;AAAoDC,gBAAAA,KAAK,EAAEA;AAA3D,eAAR;AACH,aAHQ;AADJ,WAAD,CAAR;AAMH;AACJ,OAXD,EAYKC,KAZL,CAYWjB,IAZX;AAaH,KAdD;;AAeAD,IAAAA,EAAE,CAACQ,SAAS,CAACC,YAAX,EAAyB,cAAzB,EAAyCF,QAAzC,CAAF;AACAA,IAAAA,QAAQ;AACR,WAAO,YAAY;AACfD,MAAAA,OAAO,GAAG,KAAV;AACAP,MAAAA,GAAG,CAACS,SAAS,CAACC,YAAX,EAAyB,cAAzB,EAAyCF,QAAzC,CAAH;AACH,KAHD;AAIH,GAvBQ,EAuBN,EAvBM,CAAT;AAwBA,SAAOH,KAAP;AACH,CA3BD;;AA4BA,IAAIe,mBAAmB,GAAG,YAAY;AAAE,SAAQ,EAAR;AAAc,CAAtD;;AACA,eAAe,OAAOX,SAAP,KAAqB,QAArB,IAAiC,CAAC,CAACA,SAAS,CAACC,YAA7C,GAA4DP,eAA5D,GAA8EiB,mBAA7F","sourcesContent":["import { useEffect, useState } from 'react';\nimport { off, on } from './util';\nvar noop = function () { };\nvar useMediaDevices = function () {\n    var _a = useState({}), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var mounted = true;\n        var onChange = function () {\n            navigator.mediaDevices\n                .enumerateDevices()\n                .then(function (devices) {\n                if (mounted) {\n                    setState({\n                        devices: devices.map(function (_a) {\n                            var deviceId = _a.deviceId, groupId = _a.groupId, kind = _a.kind, label = _a.label;\n                            return ({ deviceId: deviceId, groupId: groupId, kind: kind, label: label });\n                        }),\n                    });\n                }\n            })\n                .catch(noop);\n        };\n        on(navigator.mediaDevices, 'devicechange', onChange);\n        onChange();\n        return function () {\n            mounted = false;\n            off(navigator.mediaDevices, 'devicechange', onChange);\n        };\n    }, []);\n    return state;\n};\nvar useMediaDevicesMock = function () { return ({}); };\nexport default typeof navigator === 'object' && !!navigator.mediaDevices ? useMediaDevices : useMediaDevicesMock;\n"]},"metadata":{},"sourceType":"module"}