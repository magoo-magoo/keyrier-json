{"ast":null,"code":"ace.define(\"ace/mode/fsharp_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var FSharpHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"variable\": \"this\",\n      \"keyword\": 'abstract|assert|base|begin|class|default|delegate|done|downcast|downto|elif\\\n|else|exception|extern|false|finally|function|global|inherit|inline|interface|internal|lazy|match\\\n|member|module|mutable|namespace|open|or|override|private|public|rec|return|return!|select|static\\\n|struct|then|to|true|try|typeof|upcast|use|use!|val|void|when|while|with|yield|yield!|__SOURCE_DIRECTORY__\\\n|as|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue\\\n|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall\\\n|trait|virtual|volatile|and|do|end|for|fun|if|in|let|let!|new|not|null|of|endif',\n      \"constant\": \"true|false\"\n    }, \"identifier\");\n    var floatNumber = \"(?:(?:(?:(?:(?:(?:\\\\d+)?(?:\\\\.\\\\d+))|(?:(?:\\\\d+)\\\\.))|(?:\\\\d+))(?:[eE][+-]?\\\\d+))|(?:(?:(?:\\\\d+)?(?:\\\\.\\\\d+))|(?:(?:\\\\d+)\\\\.)))\";\n    this.$rules = {\n      \"start\": [{\n        token: \"variable.classes\",\n        regex: '\\\\[\\\\<[.]*\\\\>\\\\]'\n      }, {\n        token: \"comment\",\n        regex: '//.*$'\n      }, {\n        token: \"comment.start\",\n        regex: /\\(\\*(?!\\))/,\n        push: \"blockComment\"\n      }, {\n        token: \"string\",\n        regex: \"'.'\"\n      }, {\n        token: \"string\",\n        regex: '\"\"\"',\n        next: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\./,\n          next: \"qqstring\"\n        }, {\n          token: \"string\",\n          regex: '\"\"\"',\n          next: \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        regex: '\"',\n        next: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\./,\n          next: \"qqstring\"\n        }, {\n          token: \"string\",\n          regex: '\"',\n          next: \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: [\"verbatim.string\", \"string\"],\n        regex: '(@?)(\")',\n        stateName: \"qqstring\",\n        next: [{\n          token: \"constant.language.escape\",\n          regex: '\"\"'\n        }, {\n          token: \"string\",\n          regex: '\"',\n          next: \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"constant.float\",\n        regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n      }, {\n        token: \"constant.float\",\n        regex: floatNumber\n      }, {\n        token: \"constant.integer\",\n        regex: \"(?:(?:(?:[1-9]\\\\d*)|(?:0))|(?:0[oO]?[0-7]+)|(?:0[xX][\\\\dA-Fa-f]+)|(?:0[bB][01]+))\\\\b\"\n      }, {\n        token: [\"keyword.type\", \"variable\"],\n        regex: \"(type\\\\s)([a-zA-Z0-9_$\\-]*\\\\b)\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+\\\\.|\\\\-\\\\.|\\\\*\\\\.|\\\\/\\\\.|#|;;|\\\\+|\\\\-|\\\\*|\\\\*\\\\*\\\\/|\\\\/\\\\/|%|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|<-|=|\\\\(\\\\*\\\\)\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }],\n      blockComment: [{\n        regex: /\\(\\*\\)/,\n        token: \"comment\"\n      }, {\n        regex: /\\(\\*(?!\\))/,\n        token: \"comment.start\",\n        push: \"blockComment\"\n      }, {\n        regex: /\\*\\)/,\n        token: \"comment.end\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(FSharpHighlightRules, TextHighlightRules);\n  exports.FSharpHighlightRules = FSharpHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/fsharp\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/fsharp_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var FSharpHighlightRules = require(\"./fsharp_highlight_rules\").FSharpHighlightRules;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    TextMode.call(this);\n    this.HighlightRules = FSharpHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"(*\",\n      end: \"*)\",\n      nestable: true\n    };\n    this.$id = \"ace/mode/fsharp\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/fsharp\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-fsharp.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","FSharpHighlightRules","keywordMapper","createKeywordMapper","floatNumber","$rules","token","regex","push","next","defaultToken","stateName","blockComment","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","CStyleFoldMode","HighlightRules","foldingRules","lineCommentStart","nestable","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/fsharp_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar FSharpHighlightRules = function () {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"variable\": \"this\",\n        \"keyword\": 'abstract|assert|base|begin|class|default|delegate|done|downcast|downto|elif\\\n|else|exception|extern|false|finally|function|global|inherit|inline|interface|internal|lazy|match\\\n|member|module|mutable|namespace|open|or|override|private|public|rec|return|return!|select|static\\\n|struct|then|to|true|try|typeof|upcast|use|use!|val|void|when|while|with|yield|yield!|__SOURCE_DIRECTORY__\\\n|as|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue\\\n|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall\\\n|trait|virtual|volatile|and|do|end|for|fun|if|in|let|let!|new|not|null|of|endif',\n        \"constant\": \"true|false\"\n    }, \"identifier\");\n\n    var floatNumber = \"(?:(?:(?:(?:(?:(?:\\\\d+)?(?:\\\\.\\\\d+))|(?:(?:\\\\d+)\\\\.))|(?:\\\\d+))(?:[eE][+-]?\\\\d+))|(?:(?:(?:\\\\d+)?(?:\\\\.\\\\d+))|(?:(?:\\\\d+)\\\\.)))\";\n\n    this.$rules = {\n        \"start\": [\n            {\n              token: \"variable.classes\",\n              regex: '\\\\[\\\\<[.]*\\\\>\\\\]'\n            },\n            {\n                token: \"comment\",\n                regex: '//.*$'\n            },\n            {\n                token: \"comment.start\",\n                regex: /\\(\\*(?!\\))/,\n                push: \"blockComment\"\n            },\n            {\n                token: \"string\",\n                regex: \"'.'\"\n            },\n            {\n                token: \"string\",\n                regex: '\"\"\"',\n                next  : [{\n                    token : \"constant.language.escape\",\n                    regex : /\\\\./,\n                    next  : \"qqstring\"\n                }, {\n                    token : \"string\",\n                    regex : '\"\"\"',\n                    next  : \"start\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n            },\n            {\n                token: \"string\",\n                regex: '\"',\n                next  : [{\n                    token : \"constant.language.escape\",\n                    regex : /\\\\./,\n                    next  : \"qqstring\"\n                }, {\n                    token : \"string\",\n                    regex : '\"',\n                    next  : \"start\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n            },\n            {\n                token: [\"verbatim.string\", \"string\"],\n                regex: '(@?)(\")',\n                stateName : \"qqstring\",\n                next  : [{\n                    token : \"constant.language.escape\",\n                    regex : '\"\"'\n                }, {\n                    token : \"string\",\n                    regex : '\"',\n                    next  : \"start\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n            },\n            {\n                token: \"constant.float\",\n                regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n            },\n            {\n                token: \"constant.float\",\n                regex: floatNumber\n            },\n            {\n                token: \"constant.integer\",\n                regex: \"(?:(?:(?:[1-9]\\\\d*)|(?:0))|(?:0[oO]?[0-7]+)|(?:0[xX][\\\\dA-Fa-f]+)|(?:0[bB][01]+))\\\\b\"\n            },\n            {\n                token: [\"keyword.type\", \"variable\"],\n                regex: \"(type\\\\s)([a-zA-Z0-9_$\\-]*\\\\b)\"\n            },\n            {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            },\n            {\n                token: \"keyword.operator\",\n                regex: \"\\\\+\\\\.|\\\\-\\\\.|\\\\*\\\\.|\\\\/\\\\.|#|;;|\\\\+|\\\\-|\\\\*|\\\\*\\\\*\\\\/|\\\\/\\\\/|%|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|<-|=|\\\\(\\\\*\\\\)\"\n            },\n            {\n                token: \"paren.lparen\",\n                regex: \"[[({]\"\n            },\n            {\n                token: \"paren.rparen\",\n                regex: \"[\\\\])}]\"\n            }\n        ],\n        blockComment: [{\n            regex: /\\(\\*\\)/,\n            token: \"comment\"\n        }, {\n            regex: /\\(\\*(?!\\))/,\n            token: \"comment.start\",\n            push: \"blockComment\"\n        }, {\n            regex: /\\*\\)/,\n            token: \"comment.end\",\n            next: \"pop\"\n        }, {\n            defaultToken: \"comment\"\n        }]\n    };\n    this.normalizeRules();\n};\n\n\noop.inherits(FSharpHighlightRules, TextHighlightRules);\n\nexports.FSharpHighlightRules = FSharpHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/fsharp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/fsharp_highlight_rules\",\"ace/mode/folding/cstyle\"], function (require, exports, module) {\n    \"use strict\";\n\n    var oop = require(\"../lib/oop\");\n    var TextMode = require(\"./text\").Mode;\n    var FSharpHighlightRules = require(\"./fsharp_highlight_rules\").FSharpHighlightRules;\n    var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n    var Mode = function () {\n        TextMode.call(this);\n        this.HighlightRules = FSharpHighlightRules;\n        this.foldingRules = new CStyleFoldMode();\n    };\n\n    oop.inherits(Mode, TextMode);\n\n\n    (function () {\n        this.lineCommentStart = \"//\";\n        this.blockComment = {start: \"(*\", end: \"*)\", nestable: true};\n\n\n        this.$id = \"ace/mode/fsharp\";\n    }).call(Mode.prototype);\n\n    exports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/fsharp\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}