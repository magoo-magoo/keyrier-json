{"ast":null,"code":"ace.define(\"ace/ext/code_lens\", [\"require\", \"exports\", \"module\", \"ace/line_widgets\", \"ace/lib/event\", \"ace/lib/lang\", \"ace/lib/dom\", \"ace/editor\", \"ace/config\"], function (require, exports, module) {\n  \"use strict\";\n\n  var LineWidgets = require(\"../line_widgets\").LineWidgets;\n\n  var event = require(\"../lib/event\");\n\n  var lang = require(\"../lib/lang\");\n\n  var dom = require(\"../lib/dom\");\n\n  function clearLensElements(renderer) {\n    var textLayer = renderer.$textLayer;\n    var lensElements = textLayer.$lenses;\n    if (lensElements) lensElements.forEach(function (el) {\n      el.remove();\n    });\n    textLayer.$lenses = null;\n  }\n\n  function renderWidgets(changes, renderer) {\n    var changed = changes & renderer.CHANGE_LINES || changes & renderer.CHANGE_FULL || changes & renderer.CHANGE_SCROLL || changes & renderer.CHANGE_TEXT;\n    if (!changed) return;\n    var session = renderer.session;\n    var lineWidgets = renderer.session.lineWidgets;\n    var textLayer = renderer.$textLayer;\n    var lensElements = textLayer.$lenses;\n\n    if (!lineWidgets) {\n      if (lensElements) clearLensElements(renderer);\n      return;\n    }\n\n    var textCells = renderer.$textLayer.$lines.cells;\n    var config = renderer.layerConfig;\n    var padding = renderer.$padding;\n    if (!lensElements) lensElements = textLayer.$lenses = [];\n    var index = 0;\n\n    for (var i = 0; i < textCells.length; i++) {\n      var row = textCells[i].row;\n      var widget = lineWidgets[row];\n      var lenses = widget && widget.lenses;\n      if (!lenses || !lenses.length) continue;\n      var lensContainer = lensElements[index];\n\n      if (!lensContainer) {\n        lensContainer = lensElements[index] = dom.buildDom([\"div\", {\n          class: \"ace_codeLens\"\n        }], renderer.container);\n      }\n\n      lensContainer.style.height = config.lineHeight + \"px\";\n      index++;\n\n      for (var j = 0; j < lenses.length; j++) {\n        var el = lensContainer.childNodes[2 * j];\n\n        if (!el) {\n          if (j != 0) lensContainer.appendChild(dom.createTextNode(\"\\xa0|\\xa0\"));\n          el = dom.buildDom([\"a\"], lensContainer);\n        }\n\n        el.textContent = lenses[j].title;\n        el.lensCommand = lenses[j];\n      }\n\n      while (lensContainer.childNodes.length > 2 * j - 1) lensContainer.lastChild.remove();\n\n      var top = renderer.$cursorLayer.getPixelPosition({\n        row: row,\n        column: 0\n      }, true).top - config.lineHeight * widget.rowsAbove - config.offset;\n      lensContainer.style.top = top + \"px\";\n      var left = renderer.gutterWidth;\n      var indent = session.getLine(row).search(/\\S|$/);\n      if (indent == -1) indent = 0;\n      left += indent * config.characterWidth;\n      left -= renderer.scrollLeft;\n      lensContainer.style.paddingLeft = padding + left + \"px\";\n    }\n\n    while (index < lensElements.length) lensElements.pop().remove();\n  }\n\n  function clearCodeLensWidgets(session) {\n    if (!session.lineWidgets) return;\n    var widgetManager = session.widgetManager;\n    session.lineWidgets.forEach(function (widget) {\n      if (widget && widget.lenses) widgetManager.removeLineWidget(widget);\n    });\n  }\n\n  exports.setLenses = function (session, lenses) {\n    var firstRow = Number.MAX_VALUE;\n    clearCodeLensWidgets(session);\n    lenses && lenses.forEach(function (lens) {\n      var row = lens.start.row;\n      var column = lens.start.column;\n      var widget = session.lineWidgets && session.lineWidgets[row];\n\n      if (!widget || !widget.lenses) {\n        widget = session.widgetManager.$registerLineWidget({\n          rowCount: 1,\n          rowsAbove: 1,\n          row: row,\n          column: column,\n          lenses: []\n        });\n      }\n\n      widget.lenses.push(lens.command);\n      if (row < firstRow) firstRow = row;\n    });\n\n    session._emit(\"changeFold\", {\n      data: {\n        start: {\n          row: firstRow\n        }\n      }\n    });\n  };\n\n  function attachToEditor(editor) {\n    editor.codeLensProviders = [];\n    editor.renderer.on(\"afterRender\", renderWidgets);\n\n    if (!editor.$codeLensClickHandler) {\n      editor.$codeLensClickHandler = function (e) {\n        var command = e.target.lensCommand;\n        if (command) editor.execCommand(command.id, command.arguments);\n      };\n\n      event.addListener(editor.container, \"click\", editor.$codeLensClickHandler, editor);\n    }\n\n    editor.$updateLenses = function () {\n      var session = editor.session;\n      if (!session) return;\n\n      if (!session.widgetManager) {\n        session.widgetManager = new LineWidgets(session);\n        session.widgetManager.attach(editor);\n      }\n\n      var providersToWaitNum = editor.codeLensProviders.length;\n      var lenses = [];\n      editor.codeLensProviders.forEach(function (provider) {\n        provider.provideCodeLenses(session, function (err, payload) {\n          if (err) return;\n          payload.forEach(function (lens) {\n            lenses.push(lens);\n          });\n          providersToWaitNum--;\n\n          if (providersToWaitNum == 0) {\n            applyLenses();\n          }\n        });\n      });\n\n      function applyLenses() {\n        var cursor = session.selection.cursor;\n        var oldRow = session.documentToScreenRow(cursor);\n        exports.setLenses(session, lenses);\n        var lastDelta = session.$undoManager && session.$undoManager.$lastDelta;\n        if (lastDelta && lastDelta.action == \"remove\" && lastDelta.lines.length > 1) return;\n        var row = session.documentToScreenRow(cursor);\n        var lineHeight = editor.renderer.layerConfig.lineHeight;\n        var top = session.getScrollTop() + (row - oldRow) * lineHeight;\n        session.setScrollTop(top);\n      }\n    };\n\n    var updateLenses = lang.delayedCall(editor.$updateLenses);\n\n    editor.$updateLensesOnInput = function () {\n      updateLenses.delay(250);\n    };\n\n    editor.on(\"input\", editor.$updateLensesOnInput);\n  }\n\n  function detachFromEditor(editor) {\n    editor.off(\"input\", editor.$updateLensesOnInput);\n    editor.renderer.off(\"afterRender\", renderWidgets);\n    if (editor.$codeLensClickHandler) editor.container.removeEventListener(\"click\", editor.$codeLensClickHandler);\n  }\n\n  exports.registerCodeLensProvider = function (editor, codeLensProvider) {\n    editor.setOption(\"enableCodeLens\", true);\n    editor.codeLensProviders.push(codeLensProvider);\n    editor.$updateLensesOnInput();\n  };\n\n  exports.clear = function (session) {\n    exports.setLenses(session, null);\n  };\n\n  var Editor = require(\"../editor\").Editor;\n\n  require(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    enableCodeLens: {\n      set: function (val) {\n        if (val) {\n          attachToEditor(this);\n        } else {\n          detachFromEditor(this);\n        }\n      }\n    }\n  });\n\n  dom.importCssString(\"\\\n.ace_codeLens {\\\n    position: absolute;\\\n    color: #aaa;\\\n    font-size: 88%;\\\n    background: inherit;\\\n    width: 100%;\\\n    display: flex;\\\n    align-items: flex-end;\\\n    pointer-events: none;\\\n}\\\n.ace_codeLens > a {\\\n    cursor: pointer;\\\n    pointer-events: auto;\\\n}\\\n.ace_codeLens > a:hover {\\\n    color: #0000ff;\\\n    text-decoration: underline;\\\n}\\\n.ace_dark > .ace_codeLens > a:hover {\\\n    color: #4e94ce;\\\n}\\\n\", \"\");\n});\n\n(function () {\n  ace.require([\"ace/ext/code_lens\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/ext-code_lens.js"],"names":["ace","define","require","exports","module","LineWidgets","event","lang","dom","clearLensElements","renderer","textLayer","$textLayer","lensElements","$lenses","forEach","el","remove","renderWidgets","changes","changed","CHANGE_LINES","CHANGE_FULL","CHANGE_SCROLL","CHANGE_TEXT","session","lineWidgets","textCells","$lines","cells","config","layerConfig","padding","$padding","index","i","length","row","widget","lenses","lensContainer","buildDom","class","container","style","height","lineHeight","j","childNodes","appendChild","createTextNode","textContent","title","lensCommand","lastChild","top","$cursorLayer","getPixelPosition","column","rowsAbove","offset","left","gutterWidth","indent","getLine","search","characterWidth","scrollLeft","paddingLeft","pop","clearCodeLensWidgets","widgetManager","removeLineWidget","setLenses","firstRow","Number","MAX_VALUE","lens","start","$registerLineWidget","rowCount","push","command","_emit","data","attachToEditor","editor","codeLensProviders","on","$codeLensClickHandler","e","target","execCommand","id","arguments","addListener","$updateLenses","attach","providersToWaitNum","provider","provideCodeLenses","err","payload","applyLenses","cursor","selection","oldRow","documentToScreenRow","lastDelta","$undoManager","$lastDelta","action","lines","getScrollTop","setScrollTop","updateLenses","delayedCall","$updateLensesOnInput","delay","detachFromEditor","off","removeEventListener","registerCodeLensProvider","codeLensProvider","setOption","clear","Editor","defineOptions","prototype","enableCodeLens","set","val","importCssString","m"],"mappings":"AAAAA,GAAG,CAACC,MAAJ,CAAW,mBAAX,EAA+B,CAAC,SAAD,EAAW,SAAX,EAAqB,QAArB,EAA8B,kBAA9B,EAAiD,eAAjD,EAAiE,cAAjE,EAAgF,aAAhF,EAA8F,YAA9F,EAA2G,YAA3G,CAA/B,EAAyJ,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmC;AAC5L;;AACA,MAAIC,WAAW,GAAGH,OAAO,CAAC,iBAAD,CAAP,CAA2BG,WAA7C;;AACA,MAAIC,KAAK,GAAGJ,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAIK,IAAI,GAAGL,OAAO,CAAC,aAAD,CAAlB;;AACA,MAAIM,GAAG,GAAGN,OAAO,CAAC,YAAD,CAAjB;;AAEA,WAASO,iBAAT,CAA2BC,QAA3B,EAAqC;AACjC,QAAIC,SAAS,GAAGD,QAAQ,CAACE,UAAzB;AACA,QAAIC,YAAY,GAAGF,SAAS,CAACG,OAA7B;AACA,QAAID,YAAJ,EACIA,YAAY,CAACE,OAAb,CAAqB,UAASC,EAAT,EAAa;AAACA,MAAAA,EAAE,CAACC,MAAH;AAAc,KAAjD;AACJN,IAAAA,SAAS,CAACG,OAAV,GAAoB,IAApB;AACH;;AAED,WAASI,aAAT,CAAuBC,OAAvB,EAAgCT,QAAhC,EAA0C;AACtC,QAAIU,OAAO,GAAGD,OAAO,GAAGT,QAAQ,CAACW,YAAnB,IACPF,OAAO,GAAGT,QAAQ,CAACY,WADZ,IAEPH,OAAO,GAAGT,QAAQ,CAACa,aAFZ,IAGPJ,OAAO,GAAGT,QAAQ,CAACc,WAH1B;AAIA,QAAI,CAACJ,OAAL,EACI;AAEJ,QAAIK,OAAO,GAAGf,QAAQ,CAACe,OAAvB;AACA,QAAIC,WAAW,GAAGhB,QAAQ,CAACe,OAAT,CAAiBC,WAAnC;AACA,QAAIf,SAAS,GAAGD,QAAQ,CAACE,UAAzB;AACA,QAAIC,YAAY,GAAGF,SAAS,CAACG,OAA7B;;AACA,QAAI,CAACY,WAAL,EAAkB;AACd,UAAIb,YAAJ,EACIJ,iBAAiB,CAACC,QAAD,CAAjB;AACJ;AACH;;AAED,QAAIiB,SAAS,GAAGjB,QAAQ,CAACE,UAAT,CAAoBgB,MAApB,CAA2BC,KAA3C;AACA,QAAIC,MAAM,GAAGpB,QAAQ,CAACqB,WAAtB;AACA,QAAIC,OAAO,GAAGtB,QAAQ,CAACuB,QAAvB;AAEA,QAAI,CAACpB,YAAL,EACIA,YAAY,GAAGF,SAAS,CAACG,OAAV,GAAoB,EAAnC;AAGJ,QAAIoB,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAAS,CAACS,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIE,GAAG,GAAGV,SAAS,CAACQ,CAAD,CAAT,CAAaE,GAAvB;AACA,UAAIC,MAAM,GAAGZ,WAAW,CAACW,GAAD,CAAxB;AACA,UAAIE,MAAM,GAAGD,MAAM,IAAIA,MAAM,CAACC,MAA9B;AAEA,UAAI,CAACA,MAAD,IAAW,CAACA,MAAM,CAACH,MAAvB,EAA+B;AAE/B,UAAII,aAAa,GAAG3B,YAAY,CAACqB,KAAD,CAAhC;;AACA,UAAI,CAACM,aAAL,EAAoB;AAChBA,QAAAA,aAAa,GAAG3B,YAAY,CAACqB,KAAD,CAAZ,GACV1B,GAAG,CAACiC,QAAJ,CAAa,CAAC,KAAD,EAAQ;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAR,CAAb,EAA+ChC,QAAQ,CAACiC,SAAxD,CADN;AAEH;;AACDH,MAAAA,aAAa,CAACI,KAAd,CAAoBC,MAApB,GAA6Bf,MAAM,CAACgB,UAAP,GAAoB,IAAjD;AACAZ,MAAAA,KAAK;;AAEL,WAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAAM,CAACH,MAA3B,EAAmCW,CAAC,EAApC,EAAwC;AACpC,YAAI/B,EAAE,GAAGwB,aAAa,CAACQ,UAAd,CAAyB,IAAID,CAA7B,CAAT;;AACA,YAAI,CAAC/B,EAAL,EAAS;AACL,cAAI+B,CAAC,IAAI,CAAT,EAAYP,aAAa,CAACS,WAAd,CAA0BzC,GAAG,CAAC0C,cAAJ,CAAmB,WAAnB,CAA1B;AACZlC,UAAAA,EAAE,GAAGR,GAAG,CAACiC,QAAJ,CAAa,CAAC,GAAD,CAAb,EAAoBD,aAApB,CAAL;AACH;;AACDxB,QAAAA,EAAE,CAACmC,WAAH,GAAiBZ,MAAM,CAACQ,CAAD,CAAN,CAAUK,KAA3B;AACApC,QAAAA,EAAE,CAACqC,WAAH,GAAiBd,MAAM,CAACQ,CAAD,CAAvB;AACH;;AACD,aAAOP,aAAa,CAACQ,UAAd,CAAyBZ,MAAzB,GAAkC,IAAIW,CAAJ,GAAQ,CAAjD,EACIP,aAAa,CAACc,SAAd,CAAwBrC,MAAxB;;AAEJ,UAAIsC,GAAG,GAAG7C,QAAQ,CAAC8C,YAAT,CAAsBC,gBAAtB,CAAuC;AAC7CpB,QAAAA,GAAG,EAAEA,GADwC;AAE7CqB,QAAAA,MAAM,EAAE;AAFqC,OAAvC,EAGP,IAHO,EAGDH,GAHC,GAGKzB,MAAM,CAACgB,UAAP,GAAoBR,MAAM,CAACqB,SAHhC,GAG4C7B,MAAM,CAAC8B,MAH7D;AAIApB,MAAAA,aAAa,CAACI,KAAd,CAAoBW,GAApB,GAA0BA,GAAG,GAAG,IAAhC;AAEA,UAAIM,IAAI,GAAGnD,QAAQ,CAACoD,WAApB;AACA,UAAIC,MAAM,GAAGtC,OAAO,CAACuC,OAAR,CAAgB3B,GAAhB,EAAqB4B,MAArB,CAA4B,MAA5B,CAAb;AACA,UAAIF,MAAM,IAAI,CAAC,CAAf,EACIA,MAAM,GAAG,CAAT;AACJF,MAAAA,IAAI,IAAIE,MAAM,GAAGjC,MAAM,CAACoC,cAAxB;AACAL,MAAAA,IAAI,IAAInD,QAAQ,CAACyD,UAAjB;AACA3B,MAAAA,aAAa,CAACI,KAAd,CAAoBwB,WAApB,GAAkCpC,OAAO,GAAG6B,IAAV,GAAiB,IAAnD;AACH;;AACD,WAAO3B,KAAK,GAAGrB,YAAY,CAACuB,MAA5B,EACIvB,YAAY,CAACwD,GAAb,GAAmBpD,MAAnB;AACP;;AAED,WAASqD,oBAAT,CAA8B7C,OAA9B,EAAuC;AACnC,QAAI,CAACA,OAAO,CAACC,WAAb,EAA0B;AAC1B,QAAI6C,aAAa,GAAG9C,OAAO,CAAC8C,aAA5B;AACA9C,IAAAA,OAAO,CAACC,WAAR,CAAoBX,OAApB,CAA4B,UAASuB,MAAT,EAAiB;AACzC,UAAIA,MAAM,IAAIA,MAAM,CAACC,MAArB,EACIgC,aAAa,CAACC,gBAAd,CAA+BlC,MAA/B;AACP,KAHD;AAIH;;AAEDnC,EAAAA,OAAO,CAACsE,SAAR,GAAoB,UAAShD,OAAT,EAAkBc,MAAlB,EAA0B;AAC1C,QAAImC,QAAQ,GAAGC,MAAM,CAACC,SAAtB;AAEAN,IAAAA,oBAAoB,CAAC7C,OAAD,CAApB;AACAc,IAAAA,MAAM,IAAIA,MAAM,CAACxB,OAAP,CAAe,UAAS8D,IAAT,EAAe;AACpC,UAAIxC,GAAG,GAAGwC,IAAI,CAACC,KAAL,CAAWzC,GAArB;AACA,UAAIqB,MAAM,GAAGmB,IAAI,CAACC,KAAL,CAAWpB,MAAxB;AACA,UAAIpB,MAAM,GAAGb,OAAO,CAACC,WAAR,IAAuBD,OAAO,CAACC,WAAR,CAAoBW,GAApB,CAApC;;AACA,UAAI,CAACC,MAAD,IAAW,CAACA,MAAM,CAACC,MAAvB,EAA+B;AAC3BD,QAAAA,MAAM,GAAGb,OAAO,CAAC8C,aAAR,CAAsBQ,mBAAtB,CAA0C;AAC/CC,UAAAA,QAAQ,EAAE,CADqC;AAE/CrB,UAAAA,SAAS,EAAE,CAFoC;AAG/CtB,UAAAA,GAAG,EAAEA,GAH0C;AAI/CqB,UAAAA,MAAM,EAAEA,MAJuC;AAK/CnB,UAAAA,MAAM,EAAE;AALuC,SAA1C,CAAT;AAOH;;AACDD,MAAAA,MAAM,CAACC,MAAP,CAAc0C,IAAd,CAAmBJ,IAAI,CAACK,OAAxB;AACA,UAAI7C,GAAG,GAAGqC,QAAV,EACIA,QAAQ,GAAGrC,GAAX;AACP,KAhBS,CAAV;;AAiBAZ,IAAAA,OAAO,CAAC0D,KAAR,CAAc,YAAd,EAA4B;AAACC,MAAAA,IAAI,EAAE;AAACN,QAAAA,KAAK,EAAE;AAACzC,UAAAA,GAAG,EAAEqC;AAAN;AAAR;AAAP,KAA5B;AACH,GAtBD;;AAwBA,WAASW,cAAT,CAAwBC,MAAxB,EAAgC;AAC5BA,IAAAA,MAAM,CAACC,iBAAP,GAA2B,EAA3B;AACAD,IAAAA,MAAM,CAAC5E,QAAP,CAAgB8E,EAAhB,CAAmB,aAAnB,EAAkCtE,aAAlC;;AACA,QAAI,CAACoE,MAAM,CAACG,qBAAZ,EAAmC;AAC/BH,MAAAA,MAAM,CAACG,qBAAP,GAA+B,UAASC,CAAT,EAAY;AACvC,YAAIR,OAAO,GAAGQ,CAAC,CAACC,MAAF,CAAStC,WAAvB;AACA,YAAI6B,OAAJ,EACII,MAAM,CAACM,WAAP,CAAmBV,OAAO,CAACW,EAA3B,EAA+BX,OAAO,CAACY,SAAvC;AACP,OAJD;;AAKAxF,MAAAA,KAAK,CAACyF,WAAN,CAAkBT,MAAM,CAAC3C,SAAzB,EAAoC,OAApC,EAA6C2C,MAAM,CAACG,qBAApD,EAA2EH,MAA3E;AACH;;AACDA,IAAAA,MAAM,CAACU,aAAP,GAAuB,YAAW;AAC9B,UAAIvE,OAAO,GAAG6D,MAAM,CAAC7D,OAArB;AACA,UAAI,CAACA,OAAL,EAAc;;AAEd,UAAI,CAACA,OAAO,CAAC8C,aAAb,EAA4B;AACxB9C,QAAAA,OAAO,CAAC8C,aAAR,GAAwB,IAAIlE,WAAJ,CAAgBoB,OAAhB,CAAxB;AACAA,QAAAA,OAAO,CAAC8C,aAAR,CAAsB0B,MAAtB,CAA6BX,MAA7B;AACH;;AAED,UAAIY,kBAAkB,GAAGZ,MAAM,CAACC,iBAAP,CAAyBnD,MAAlD;AACA,UAAIG,MAAM,GAAG,EAAb;AACA+C,MAAAA,MAAM,CAACC,iBAAP,CAAyBxE,OAAzB,CAAiC,UAASoF,QAAT,EAAmB;AAChDA,QAAAA,QAAQ,CAACC,iBAAT,CAA2B3E,OAA3B,EAAoC,UAAS4E,GAAT,EAAcC,OAAd,EAAuB;AACvD,cAAID,GAAJ,EAAS;AACTC,UAAAA,OAAO,CAACvF,OAAR,CAAgB,UAAS8D,IAAT,EAAe;AAC3BtC,YAAAA,MAAM,CAAC0C,IAAP,CAAYJ,IAAZ;AACH,WAFD;AAGAqB,UAAAA,kBAAkB;;AAClB,cAAIA,kBAAkB,IAAI,CAA1B,EAA6B;AACzBK,YAAAA,WAAW;AACd;AACJ,SATD;AAUH,OAXD;;AAaA,eAASA,WAAT,GAAuB;AACnB,YAAIC,MAAM,GAAG/E,OAAO,CAACgF,SAAR,CAAkBD,MAA/B;AACA,YAAIE,MAAM,GAAGjF,OAAO,CAACkF,mBAAR,CAA4BH,MAA5B,CAAb;AACArG,QAAAA,OAAO,CAACsE,SAAR,CAAkBhD,OAAlB,EAA2Bc,MAA3B;AAEA,YAAIqE,SAAS,GAAGnF,OAAO,CAACoF,YAAR,IAAwBpF,OAAO,CAACoF,YAAR,CAAqBC,UAA7D;AACA,YAAIF,SAAS,IAAIA,SAAS,CAACG,MAAV,IAAoB,QAAjC,IAA6CH,SAAS,CAACI,KAAV,CAAgB5E,MAAhB,GAAyB,CAA1E,EACI;AACJ,YAAIC,GAAG,GAAGZ,OAAO,CAACkF,mBAAR,CAA4BH,MAA5B,CAAV;AACA,YAAI1D,UAAU,GAAGwC,MAAM,CAAC5E,QAAP,CAAgBqB,WAAhB,CAA4Be,UAA7C;AACA,YAAIS,GAAG,GAAG9B,OAAO,CAACwF,YAAR,KAAyB,CAAC5E,GAAG,GAAGqE,MAAP,IAAiB5D,UAApD;AACArB,QAAAA,OAAO,CAACyF,YAAR,CAAqB3D,GAArB;AACH;AACJ,KArCD;;AAsCA,QAAI4D,YAAY,GAAG5G,IAAI,CAAC6G,WAAL,CAAiB9B,MAAM,CAACU,aAAxB,CAAnB;;AACAV,IAAAA,MAAM,CAAC+B,oBAAP,GAA8B,YAAW;AACrCF,MAAAA,YAAY,CAACG,KAAb,CAAmB,GAAnB;AACH,KAFD;;AAGAhC,IAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmBF,MAAM,CAAC+B,oBAA1B;AACH;;AAED,WAASE,gBAAT,CAA0BjC,MAA1B,EAAkC;AAC9BA,IAAAA,MAAM,CAACkC,GAAP,CAAW,OAAX,EAAoBlC,MAAM,CAAC+B,oBAA3B;AACA/B,IAAAA,MAAM,CAAC5E,QAAP,CAAgB8G,GAAhB,CAAoB,aAApB,EAAmCtG,aAAnC;AACA,QAAIoE,MAAM,CAACG,qBAAX,EACIH,MAAM,CAAC3C,SAAP,CAAiB8E,mBAAjB,CAAqC,OAArC,EAA8CnC,MAAM,CAACG,qBAArD;AACP;;AAEDtF,EAAAA,OAAO,CAACuH,wBAAR,GAAmC,UAASpC,MAAT,EAAiBqC,gBAAjB,EAAmC;AAClErC,IAAAA,MAAM,CAACsC,SAAP,CAAiB,gBAAjB,EAAmC,IAAnC;AACAtC,IAAAA,MAAM,CAACC,iBAAP,CAAyBN,IAAzB,CAA8B0C,gBAA9B;AACArC,IAAAA,MAAM,CAAC+B,oBAAP;AACH,GAJD;;AAMAlH,EAAAA,OAAO,CAAC0H,KAAR,GAAgB,UAASpG,OAAT,EAAkB;AAC9BtB,IAAAA,OAAO,CAACsE,SAAR,CAAkBhD,OAAlB,EAA2B,IAA3B;AACH,GAFD;;AAIA,MAAIqG,MAAM,GAAG5H,OAAO,CAAC,WAAD,CAAP,CAAqB4H,MAAlC;;AACA5H,EAAAA,OAAO,CAAC,WAAD,CAAP,CAAqB6H,aAArB,CAAmCD,MAAM,CAACE,SAA1C,EAAqD,QAArD,EAA+D;AAC3DC,IAAAA,cAAc,EAAE;AACZC,MAAAA,GAAG,EAAE,UAASC,GAAT,EAAc;AACf,YAAIA,GAAJ,EAAS;AACL9C,UAAAA,cAAc,CAAC,IAAD,CAAd;AACH,SAFD,MAEO;AACHkC,UAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;AACJ;AAPW;AAD2C,GAA/D;;AAYA/G,EAAAA,GAAG,CAAC4H,eAAJ,CAAoB;;;;;;;;;;;;;;;;;;;;;;CAApB,EAsBG,EAtBH;AAwBC,CAtOD;;AAsOmB,CAAC,YAAW;AACXpI,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAAC,mBAAD,CAAZ,EAAmC,UAASmI,CAAT,EAAY;AAC3C,QAAI,OAAOjI,MAAP,IAAiB,QAAjB,IAA6B,OAAOD,OAAP,IAAkB,QAA/C,IAA2DC,MAA/D,EAAuE;AACnEA,MAAAA,MAAM,CAACD,OAAP,GAAiBkI,CAAjB;AACH;AACJ,GAJD;AAKH,CANE","sourcesContent":["ace.define(\"ace/ext/code_lens\",[\"require\",\"exports\",\"module\",\"ace/line_widgets\",\"ace/lib/event\",\"ace/lib/lang\",\"ace/lib/dom\",\"ace/editor\",\"ace/config\"], function(require, exports, module) {\n\"use strict\";\nvar LineWidgets = require(\"../line_widgets\").LineWidgets;\nvar event = require(\"../lib/event\");\nvar lang = require(\"../lib/lang\");\nvar dom = require(\"../lib/dom\");\n\nfunction clearLensElements(renderer) {\n    var textLayer = renderer.$textLayer;\n    var lensElements = textLayer.$lenses;\n    if (lensElements)\n        lensElements.forEach(function(el) {el.remove(); });\n    textLayer.$lenses = null;\n}\n\nfunction renderWidgets(changes, renderer) {\n    var changed = changes & renderer.CHANGE_LINES\n        || changes & renderer.CHANGE_FULL\n        || changes & renderer.CHANGE_SCROLL\n        || changes & renderer.CHANGE_TEXT;\n    if (!changed)\n        return;\n\n    var session = renderer.session;\n    var lineWidgets = renderer.session.lineWidgets;\n    var textLayer = renderer.$textLayer;\n    var lensElements = textLayer.$lenses;\n    if (!lineWidgets) {\n        if (lensElements)\n            clearLensElements(renderer);\n        return;\n    }\n\n    var textCells = renderer.$textLayer.$lines.cells;\n    var config = renderer.layerConfig;\n    var padding = renderer.$padding;\n\n    if (!lensElements)\n        lensElements = textLayer.$lenses = [];\n\n\n    var index = 0;\n    for (var i = 0; i < textCells.length; i++) {\n        var row = textCells[i].row;\n        var widget = lineWidgets[row];\n        var lenses = widget && widget.lenses;\n\n        if (!lenses || !lenses.length) continue;\n\n        var lensContainer = lensElements[index];\n        if (!lensContainer) {\n            lensContainer = lensElements[index]\n                = dom.buildDom([\"div\", {class: \"ace_codeLens\"}], renderer.container);\n        }\n        lensContainer.style.height = config.lineHeight + \"px\";\n        index++;\n\n        for (var j = 0; j < lenses.length; j++) {\n            var el = lensContainer.childNodes[2 * j];\n            if (!el) {\n                if (j != 0) lensContainer.appendChild(dom.createTextNode(\"\\xa0|\\xa0\"));\n                el = dom.buildDom([\"a\"], lensContainer);\n            }\n            el.textContent = lenses[j].title;\n            el.lensCommand = lenses[j];\n        }\n        while (lensContainer.childNodes.length > 2 * j - 1)\n            lensContainer.lastChild.remove();\n\n        var top = renderer.$cursorLayer.getPixelPosition({\n            row: row,\n            column: 0\n        }, true).top - config.lineHeight * widget.rowsAbove - config.offset;\n        lensContainer.style.top = top + \"px\";\n\n        var left = renderer.gutterWidth;\n        var indent = session.getLine(row).search(/\\S|$/);\n        if (indent == -1)\n            indent = 0;\n        left += indent * config.characterWidth;\n        left -= renderer.scrollLeft;\n        lensContainer.style.paddingLeft = padding + left + \"px\";\n    }\n    while (index < lensElements.length)\n        lensElements.pop().remove();\n}\n\nfunction clearCodeLensWidgets(session) {\n    if (!session.lineWidgets) return;\n    var widgetManager = session.widgetManager;\n    session.lineWidgets.forEach(function(widget) {\n        if (widget && widget.lenses)\n            widgetManager.removeLineWidget(widget);\n    });\n}\n\nexports.setLenses = function(session, lenses) {\n    var firstRow = Number.MAX_VALUE;\n\n    clearCodeLensWidgets(session);\n    lenses && lenses.forEach(function(lens) {\n        var row = lens.start.row;\n        var column = lens.start.column;\n        var widget = session.lineWidgets && session.lineWidgets[row];\n        if (!widget || !widget.lenses) {\n            widget = session.widgetManager.$registerLineWidget({\n                rowCount: 1,\n                rowsAbove: 1,\n                row: row,\n                column: column,\n                lenses: []\n            });\n        }\n        widget.lenses.push(lens.command);\n        if (row < firstRow)\n            firstRow = row;\n    });\n    session._emit(\"changeFold\", {data: {start: {row: firstRow}}});\n};\n\nfunction attachToEditor(editor) {\n    editor.codeLensProviders = [];\n    editor.renderer.on(\"afterRender\", renderWidgets);\n    if (!editor.$codeLensClickHandler) {\n        editor.$codeLensClickHandler = function(e) {\n            var command = e.target.lensCommand;\n            if (command)\n                editor.execCommand(command.id, command.arguments);\n        };\n        event.addListener(editor.container, \"click\", editor.$codeLensClickHandler, editor);\n    }\n    editor.$updateLenses = function() {\n        var session = editor.session;\n        if (!session) return;\n\n        if (!session.widgetManager) {\n            session.widgetManager = new LineWidgets(session);\n            session.widgetManager.attach(editor);\n        }\n\n        var providersToWaitNum = editor.codeLensProviders.length;\n        var lenses = [];\n        editor.codeLensProviders.forEach(function(provider) {\n            provider.provideCodeLenses(session, function(err, payload) {\n                if (err) return;\n                payload.forEach(function(lens) {\n                    lenses.push(lens);\n                });\n                providersToWaitNum--;\n                if (providersToWaitNum == 0) {\n                    applyLenses();\n                }\n            });\n        });\n\n        function applyLenses() {\n            var cursor = session.selection.cursor;\n            var oldRow = session.documentToScreenRow(cursor);\n            exports.setLenses(session, lenses);\n\n            var lastDelta = session.$undoManager && session.$undoManager.$lastDelta;\n            if (lastDelta && lastDelta.action == \"remove\" && lastDelta.lines.length > 1)\n                return;\n            var row = session.documentToScreenRow(cursor);\n            var lineHeight = editor.renderer.layerConfig.lineHeight;\n            var top = session.getScrollTop() + (row - oldRow) * lineHeight;\n            session.setScrollTop(top);\n        }\n    };\n    var updateLenses = lang.delayedCall(editor.$updateLenses);\n    editor.$updateLensesOnInput = function() {\n        updateLenses.delay(250);\n    };\n    editor.on(\"input\", editor.$updateLensesOnInput);\n}\n\nfunction detachFromEditor(editor) {\n    editor.off(\"input\", editor.$updateLensesOnInput);\n    editor.renderer.off(\"afterRender\", renderWidgets);\n    if (editor.$codeLensClickHandler)\n        editor.container.removeEventListener(\"click\", editor.$codeLensClickHandler);\n}\n\nexports.registerCodeLensProvider = function(editor, codeLensProvider) {\n    editor.setOption(\"enableCodeLens\", true);\n    editor.codeLensProviders.push(codeLensProvider);\n    editor.$updateLensesOnInput();\n};\n\nexports.clear = function(session) {\n    exports.setLenses(session, null);\n};\n\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    enableCodeLens: {\n        set: function(val) {\n            if (val) {\n                attachToEditor(this);\n            } else {\n                detachFromEditor(this);\n            }\n        }\n    }\n});\n\ndom.importCssString(\"\\\n.ace_codeLens {\\\n    position: absolute;\\\n    color: #aaa;\\\n    font-size: 88%;\\\n    background: inherit;\\\n    width: 100%;\\\n    display: flex;\\\n    align-items: flex-end;\\\n    pointer-events: none;\\\n}\\\n.ace_codeLens > a {\\\n    cursor: pointer;\\\n    pointer-events: auto;\\\n}\\\n.ace_codeLens > a:hover {\\\n    color: #0000ff;\\\n    text-decoration: underline;\\\n}\\\n.ace_dark > .ace_codeLens > a:hover {\\\n    color: #4e94ce;\\\n}\\\n\", \"\");\n\n});                (function() {\n                    ace.require([\"ace/ext/code_lens\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}