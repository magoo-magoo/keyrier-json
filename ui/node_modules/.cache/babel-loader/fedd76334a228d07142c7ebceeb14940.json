{"ast":null,"code":"import { configuration } from 'config';\nimport initialStateJson from './default-state.json';\nexport const getDefaultAppState = () => initialStateJson;\nexport const defaultAppState = initialStateJson;\nexport const getDefaultUserSettingsState = () => ({\n  globalTheme: 'pulse',\n  editorTheme: 'github',\n  debugMode: false,\n  layouts: {\n    lg: [{\n      i: configuration.layout.keys.lateralMenuKey,\n      x: 18,\n      y: 0,\n      w: 3,\n      h: 20,\n      minW: 3,\n      minH: 20\n    }, {\n      i: configuration.layout.keys.sourceEditorKey,\n      x: 3,\n      y: 0,\n      w: 7,\n      h: 15,\n      minW: 5,\n      minH: 10\n    }, {\n      i: configuration.layout.keys.queryEditorKey,\n      x: 10,\n      y: 0,\n      w: 7,\n      h: 15,\n      minW: 5,\n      minH: 10\n    }, {\n      i: configuration.layout.keys.outputKey,\n      x: 3,\n      y: 15,\n      w: 14,\n      h: 30,\n      minW: 12,\n      minH: 15\n    }]\n  }\n});\nexport const emptyState = {\n  source: {\n    text: '',\n    autoFormat: true\n  },\n  query: {\n    text: '',\n    mode: 'SQL'\n  },\n  output: {\n    match: false,\n    obj: {},\n    objSize: 2,\n    searchTerm: '',\n    selectedTab: 'RawJson',\n    table: {\n      isArray: false,\n      columns: [],\n      displayedColumns: [],\n      isModalOpen: false,\n      groupBy: []\n    }\n  }\n};","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/ui/src/state/State.ts"],"names":["configuration","initialStateJson","getDefaultAppState","defaultAppState","getDefaultUserSettingsState","globalTheme","editorTheme","debugMode","layouts","lg","i","layout","keys","lateralMenuKey","x","y","w","h","minW","minH","sourceEditorKey","queryEditorKey","outputKey","emptyState","source","text","autoFormat","query","mode","output","match","obj","objSize","searchTerm","selectedTab","table","isArray","columns","displayedColumns","isModalOpen","groupBy"],"mappings":"AAAA,SAASA,aAAT,QAA8B,QAA9B;AAIA,OAAOC,gBAAP,MAA6B,sBAA7B;AAiDA,OAAO,MAAMC,kBAAkB,GAAG,MAAMD,gBAAjC;AACP,OAAO,MAAME,eAAe,GAAGF,gBAAxB;AACP,OAAO,MAAMG,2BAA2B,GAAG,OACtC;AACGC,EAAAA,WAAW,EAAE,OADhB;AAEGC,EAAAA,WAAW,EAAE,QAFhB;AAGGC,EAAAA,SAAS,EAAE,KAHd;AAIGC,EAAAA,OAAO,EAAE;AACLC,IAAAA,EAAE,EAAE,CACA;AAAEC,MAAAA,CAAC,EAAEV,aAAa,CAACW,MAAd,CAAqBC,IAArB,CAA0BC,cAA/B;AAA+CC,MAAAA,CAAC,EAAE,EAAlD;AAAsDC,MAAAA,CAAC,EAAE,CAAzD;AAA4DC,MAAAA,CAAC,EAAE,CAA/D;AAAkEC,MAAAA,CAAC,EAAE,EAArE;AAAyEC,MAAAA,IAAI,EAAE,CAA/E;AAAkFC,MAAAA,IAAI,EAAE;AAAxF,KADA,EAEA;AAAET,MAAAA,CAAC,EAAEV,aAAa,CAACW,MAAd,CAAqBC,IAArB,CAA0BQ,eAA/B;AAAgDN,MAAAA,CAAC,EAAE,CAAnD;AAAsDC,MAAAA,CAAC,EAAE,CAAzD;AAA4DC,MAAAA,CAAC,EAAE,CAA/D;AAAkEC,MAAAA,CAAC,EAAE,EAArE;AAAyEC,MAAAA,IAAI,EAAE,CAA/E;AAAkFC,MAAAA,IAAI,EAAE;AAAxF,KAFA,EAGA;AAAET,MAAAA,CAAC,EAAEV,aAAa,CAACW,MAAd,CAAqBC,IAArB,CAA0BS,cAA/B;AAA+CP,MAAAA,CAAC,EAAE,EAAlD;AAAsDC,MAAAA,CAAC,EAAE,CAAzD;AAA4DC,MAAAA,CAAC,EAAE,CAA/D;AAAkEC,MAAAA,CAAC,EAAE,EAArE;AAAyEC,MAAAA,IAAI,EAAE,CAA/E;AAAkFC,MAAAA,IAAI,EAAE;AAAxF,KAHA,EAIA;AAAET,MAAAA,CAAC,EAAEV,aAAa,CAACW,MAAd,CAAqBC,IAArB,CAA0BU,SAA/B;AAA0CR,MAAAA,CAAC,EAAE,CAA7C;AAAgDC,MAAAA,CAAC,EAAE,EAAnD;AAAuDC,MAAAA,CAAC,EAAE,EAA1D;AAA8DC,MAAAA,CAAC,EAAE,EAAjE;AAAqEC,MAAAA,IAAI,EAAE,EAA3E;AAA+EC,MAAAA,IAAI,EAAE;AAArF,KAJA;AADC;AAJZ,CADsC,CAApC;AAeP,OAAO,MAAMI,UAAU,GAAG;AACtBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,UAAU,EAAE;AAAxB,GADc;AAEtBC,EAAAA,KAAK,EAAE;AAAEF,IAAAA,IAAI,EAAE,EAAR;AAAYG,IAAAA,IAAI,EAAE;AAAlB,GAFe;AAGtBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,GAAG,EAAE,EAFD;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,UAAU,EAAE,EAJR;AAKJC,IAAAA,WAAW,EAAE,SALT;AAMJC,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAE,KADN;AAEHC,MAAAA,OAAO,EAAE,EAFN;AAGHC,MAAAA,gBAAgB,EAAE,EAHf;AAIHC,MAAAA,WAAW,EAAE,KAJV;AAKHC,MAAAA,OAAO,EAAE;AALN;AANH;AAHc,CAAnB","sourcesContent":["import { configuration } from 'config'\nimport { StateWithHistory } from 'redux-undo'\nimport { EditorTheme, GeneralTheme } from 'themes/themes'\nimport { DeepReadonly } from 'utility-types'\nimport initialStateJson from './default-state.json'\n\nexport type itemType = any\n\nexport type AppState = DeepReadonly<{\n    source?: SourceState\n    query?: QueryState\n    output?: OupoutState\n    error?: Error\n}>\nexport type QueryState = DeepReadonly<{\n    text?: string\n    mode?: QueryMode\n}>\nexport type SourceState = DeepReadonly<{\n    text?: string\n    autoFormat?: boolean\n}>\nexport type OupoutState = DeepReadonly<{\n    searchTerm?: string\n    match?: boolean\n    selectedTab?: tabType\n    obj?: object | null\n    objSize?: number\n    errorMessage?: string\n    table?: OupoutTableState\n}>\nexport type OupoutTableState = DeepReadonly<{\n    isArray?: boolean\n    isModalOpen?: boolean\n    displayedColumns?: readonly string[]\n    columns?: readonly string[]\n    groupBy?: readonly string[]\n}>\nexport type UserSettingsState = DeepReadonly<{\n    globalTheme?: GeneralTheme\n    editorTheme?: EditorTheme\n    debugMode?: boolean\n    layouts: ReactGridLayout.Layouts\n}>\n\nexport type tabType = 'RawJson' | 'Table'\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type RootState = DeepReadonly<{\n    app?: StateWithHistory<AppState>\n    userSettings?: UserSettingsState\n}>\n\nexport const getDefaultAppState = () => initialStateJson as AppState\nexport const defaultAppState = initialStateJson as AppState\nexport const getDefaultUserSettingsState = () =>\n    ({\n        globalTheme: 'pulse',\n        editorTheme: 'github',\n        debugMode: false,\n        layouts: {\n            lg: [\n                { i: configuration.layout.keys.lateralMenuKey, x: 18, y: 0, w: 3, h: 20, minW: 3, minH: 20 },\n                { i: configuration.layout.keys.sourceEditorKey, x: 3, y: 0, w: 7, h: 15, minW: 5, minH: 10 },\n                { i: configuration.layout.keys.queryEditorKey, x: 10, y: 0, w: 7, h: 15, minW: 5, minH: 10 },\n                { i: configuration.layout.keys.outputKey, x: 3, y: 15, w: 14, h: 30, minW: 12, minH: 15 },\n            ],\n        },\n    } as const)\n\nexport const emptyState = {\n    source: { text: '', autoFormat: true },\n    query: { text: '', mode: 'SQL' },\n    output: {\n        match: false,\n        obj: {},\n        objSize: 2,\n        searchTerm: '',\n        selectedTab: 'RawJson',\n        table: {\n            isArray: false,\n            columns: [],\n            displayedColumns: [],\n            isModalOpen: false,\n            groupBy: [],\n        },\n    },\n} as const\n"]},"metadata":{},"sourceType":"module"}