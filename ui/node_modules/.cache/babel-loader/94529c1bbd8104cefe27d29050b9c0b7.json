{"ast":null,"code":"import { defaults, forEach } from \"../../../utils/utils\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider } from \"../../errors_public\";\nimport { DslMethodsCollectorVisitor } from \"./gast\";\nexport function resolveGrammar(options) {\n  options = defaults(options, {\n    errMsgProvider: defaultGrammarResolverErrorProvider\n  });\n  var topRulesTable = {};\n  forEach(options.rules, function (rule) {\n    topRulesTable[rule.name] = rule;\n  });\n  return orgResolveGrammar(topRulesTable, options.errMsgProvider);\n}\nexport function validateGrammar(options) {\n  options = defaults(options, {\n    errMsgProvider: defaultGrammarValidatorErrorProvider\n  });\n  return orgValidateGrammar(options.rules, options.maxLookahead, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\nexport function assignOccurrenceIndices(options) {\n  forEach(options.rules, function (currRule) {\n    var methodsCollector = new DslMethodsCollectorVisitor();\n    currRule.accept(methodsCollector);\n    forEach(methodsCollector.dslMethods, function (methods) {\n      forEach(methods, function (currMethod, arrIdx) {\n        currMethod.idx = arrIdx + 1;\n      });\n    });\n  });\n}","map":{"version":3,"sources":["../../../../../src/parse/grammar/gast/gast_resolver_public.ts"],"names":[],"mappings":"AAEA,SAAS,QAAT,EAAmB,OAAnB,QAAkC,sBAAlC;AACA,SAAS,cAAc,IAAI,iBAA3B,QAAoD,aAApD;AACA,SAAS,eAAe,IAAI,kBAA5B,QAAsD,WAAtD;AACA,SACE,mCADF,EAEE,oCAFF,QAGO,qBAHP;AAIA,SAAS,0BAAT,QAA2C,QAA3C;AASA,OAAM,SAAU,cAAV,CAAyB,OAAzB,EAGL;AACC,EAAA,OAAO,GAAG,QAAQ,CAAC,OAAD,EAAU;AAC1B,IAAA,cAAc,EAAE;AADU,GAAV,CAAlB;AAIA,MAAM,aAAa,GAAG,EAAtB;AACA,EAAA,OAAO,CAAC,OAAO,CAAC,KAAT,EAAgB,UAAC,IAAD,EAAK;AAC1B,IAAA,aAAa,CAAC,IAAI,CAAC,IAAN,CAAb,GAA2B,IAA3B;AACD,GAFM,CAAP;AAGA,SAAO,iBAAiB,CAAC,aAAD,EAAgB,OAAO,CAAC,cAAxB,CAAxB;AACD;AAED,OAAM,SAAU,eAAV,CAA0B,OAA1B,EAML;AACC,EAAA,OAAO,GAAG,QAAQ,CAAC,OAAD,EAAU;AAC1B,IAAA,cAAc,EAAE;AADU,GAAV,CAAlB;AAIA,SAAO,kBAAkB,CACvB,OAAO,CAAC,KADe,EAEvB,OAAO,CAAC,YAFe,EAGvB,OAAO,CAAC,UAHe,EAIvB,OAAO,CAAC,cAJe,EAKvB,OAAO,CAAC,WALe,CAAzB;AAOD;AAED,OAAM,SAAU,uBAAV,CAAkC,OAAlC,EAA4D;AAChE,EAAA,OAAO,CAAC,OAAO,CAAC,KAAT,EAAgB,UAAC,QAAD,EAAS;AAC9B,QAAM,gBAAgB,GAAG,IAAI,0BAAJ,EAAzB;AACA,IAAA,QAAQ,CAAC,MAAT,CAAgB,gBAAhB;AACA,IAAA,OAAO,CAAC,gBAAgB,CAAC,UAAlB,EAA8B,UAAC,OAAD,EAAQ;AAC3C,MAAA,OAAO,CAAC,OAAD,EAAU,UAAC,UAAD,EAAwC,MAAxC,EAA8C;AAC7D,QAAA,UAAU,CAAC,GAAX,GAAiB,MAAM,GAAG,CAA1B;AACD,OAFM,CAAP;AAGD,KAJM,CAAP;AAKD,GARM,CAAP;AASD","sourceRoot":"","sourcesContent":["import { defaults, forEach } from \"../../../utils/utils\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider } from \"../../errors_public\";\nimport { DslMethodsCollectorVisitor } from \"./gast\";\nexport function resolveGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider\n    });\n    var topRulesTable = {};\n    forEach(options.rules, function (rule) {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, options.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider\n    });\n    return orgValidateGrammar(options.rules, options.maxLookahead, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\nexport function assignOccurrenceIndices(options) {\n    forEach(options.rules, function (currRule) {\n        var methodsCollector = new DslMethodsCollectorVisitor();\n        currRule.accept(methodsCollector);\n        forEach(methodsCollector.dslMethods, function (methods) {\n            forEach(methods, function (currMethod, arrIdx) {\n                currMethod.idx = arrIdx + 1;\n            });\n        });\n    });\n}\n//# sourceMappingURL=gast_resolver_public.js.map"]},"metadata":{},"sourceType":"module"}