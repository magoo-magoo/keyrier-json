{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar split_1 = require(\"./split\");\n\nvar DiffMatchPatch = require(\"diff-match-patch\");\n\nvar DiffComponent =\n/** @class */\nfunction (_super) {\n  __extends(DiffComponent, _super);\n\n  function DiffComponent(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      value: _this.props.value\n    };\n    _this.onChange = _this.onChange.bind(_this);\n    _this.diff = _this.diff.bind(_this);\n    return _this;\n  }\n\n  DiffComponent.prototype.componentDidUpdate = function () {\n    var value = this.props.value;\n\n    if (value !== this.state.value) {\n      this.setState({\n        value: value\n      });\n    }\n  };\n\n  DiffComponent.prototype.onChange = function (value) {\n    this.setState({\n      value: value\n    });\n\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  };\n\n  DiffComponent.prototype.diff = function () {\n    var dmp = new DiffMatchPatch();\n    var lhString = this.state.value[0];\n    var rhString = this.state.value[1];\n\n    if (lhString.length === 0 && rhString.length === 0) {\n      return [];\n    }\n\n    var diff = dmp.diff_main(lhString, rhString);\n    dmp.diff_cleanupSemantic(diff);\n    var diffedLines = this.generateDiffedLines(diff);\n    var codeEditorSettings = this.setCodeMarkers(diffedLines);\n    return codeEditorSettings;\n  };\n\n  DiffComponent.prototype.generateDiffedLines = function (diff) {\n    var C = {\n      DIFF_EQUAL: 0,\n      DIFF_DELETE: -1,\n      DIFF_INSERT: 1\n    };\n    var diffedLines = {\n      left: [],\n      right: []\n    };\n    var cursor = {\n      left: 1,\n      right: 1\n    };\n    diff.forEach(function (chunk) {\n      var chunkType = chunk[0];\n      var text = chunk[1];\n      var lines = text.split(\"\\n\").length - 1; // diff-match-patch sometimes returns empty strings at random\n\n      if (text.length === 0) {\n        return;\n      }\n\n      var firstChar = text[0];\n      var lastChar = text[text.length - 1];\n      var linesToHighlight = 0;\n\n      switch (chunkType) {\n        case C.DIFF_EQUAL:\n          cursor.left += lines;\n          cursor.right += lines;\n          break;\n\n        case C.DIFF_DELETE:\n          // If the deletion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.left++;\n            lines--;\n          }\n\n          linesToHighlight = lines; // If the deletion does not include a newline, highlight the same line on the right\n\n          if (linesToHighlight === 0) {\n            diffedLines.right.push({\n              startLine: cursor.right,\n              endLine: cursor.right\n            });\n          } // If the last character is a newline, we don't want to highlight that line\n\n\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.left.push({\n            startLine: cursor.left,\n            endLine: cursor.left + linesToHighlight\n          });\n          cursor.left += lines;\n          break;\n\n        case C.DIFF_INSERT:\n          // If the insertion starts with a newline, push the cursor down to that line\n          if (firstChar === \"\\n\") {\n            cursor.right++;\n            lines--;\n          }\n\n          linesToHighlight = lines; // If the insertion does not include a newline, highlight the same line on the left\n\n          if (linesToHighlight === 0) {\n            diffedLines.left.push({\n              startLine: cursor.left,\n              endLine: cursor.left\n            });\n          } // If the last character is a newline, we don't want to highlight that line\n\n\n          if (lastChar === \"\\n\") {\n            linesToHighlight -= 1;\n          }\n\n          diffedLines.right.push({\n            startLine: cursor.right,\n            endLine: cursor.right + linesToHighlight\n          });\n          cursor.right += lines;\n          break;\n\n        default:\n          throw new Error(\"Diff type was not defined.\");\n      }\n    });\n    return diffedLines;\n  }; // Receives a collection of line numbers and iterates through them to highlight appropriately\n  // Returns an object that tells the render() method how to display the code editors\n\n\n  DiffComponent.prototype.setCodeMarkers = function (diffedLines) {\n    if (diffedLines === void 0) {\n      diffedLines = {\n        left: [],\n        right: []\n      };\n    }\n\n    var codeEditorSettings = [];\n    var newMarkerSet = {\n      left: [],\n      right: []\n    };\n\n    for (var i = 0; i < diffedLines.left.length; i++) {\n      var markerObj = {\n        startRow: diffedLines.left[i].startLine - 1,\n        endRow: diffedLines.left[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.left.push(markerObj);\n    }\n\n    for (var i = 0; i < diffedLines.right.length; i++) {\n      var markerObj = {\n        startRow: diffedLines.right[i].startLine - 1,\n        endRow: diffedLines.right[i].endLine,\n        type: \"text\",\n        className: \"codeMarker\"\n      };\n      newMarkerSet.right.push(markerObj);\n    }\n\n    codeEditorSettings[0] = newMarkerSet.left;\n    codeEditorSettings[1] = newMarkerSet.right;\n    return codeEditorSettings;\n  };\n\n  DiffComponent.prototype.render = function () {\n    var markers = this.diff();\n    return React.createElement(split_1.default, {\n      name: this.props.name,\n      className: this.props.className,\n      focus: this.props.focus,\n      orientation: this.props.orientation,\n      splits: this.props.splits,\n      mode: this.props.mode,\n      theme: this.props.theme,\n      height: this.props.height,\n      width: this.props.width,\n      fontSize: this.props.fontSize,\n      showGutter: this.props.showGutter,\n      onChange: this.onChange,\n      onPaste: this.props.onPaste,\n      onLoad: this.props.onLoad,\n      onScroll: this.props.onScroll,\n      minLines: this.props.minLines,\n      maxLines: this.props.maxLines,\n      readOnly: this.props.readOnly,\n      highlightActiveLine: this.props.highlightActiveLine,\n      showPrintMargin: this.props.showPrintMargin,\n      tabSize: this.props.tabSize,\n      cursorStart: this.props.cursorStart,\n      editorProps: this.props.editorProps,\n      style: this.props.style,\n      scrollMargin: this.props.scrollMargin,\n      setOptions: this.props.setOptions,\n      wrapEnabled: this.props.wrapEnabled,\n      enableBasicAutocompletion: this.props.enableBasicAutocompletion,\n      enableLiveAutocompletion: this.props.enableLiveAutocompletion,\n      value: this.state.value,\n      markers: markers\n    });\n  };\n\n  DiffComponent.propTypes = {\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    enableBasicAutocompletion: PropTypes.bool,\n    enableLiveAutocompletion: PropTypes.bool,\n    focus: PropTypes.bool,\n    fontSize: PropTypes.number,\n    height: PropTypes.string,\n    highlightActiveLine: PropTypes.bool,\n    maxLines: PropTypes.number,\n    minLines: PropTypes.number,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    onChange: PropTypes.func,\n    orientation: PropTypes.string,\n    readOnly: PropTypes.bool,\n    scrollMargin: PropTypes.array,\n    setOptions: PropTypes.object,\n    showGutter: PropTypes.bool,\n    showPrintMargin: PropTypes.bool,\n    splits: PropTypes.number,\n    style: PropTypes.object,\n    tabSize: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.array,\n    width: PropTypes.string,\n    wrapEnabled: PropTypes.bool\n  };\n  DiffComponent.defaultProps = {\n    cursorStart: 1,\n    editorProps: {},\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    focus: false,\n    fontSize: 12,\n    height: \"500px\",\n    highlightActiveLine: true,\n    maxLines: null,\n    minLines: null,\n    mode: \"\",\n    name: \"ace-editor\",\n    onLoad: null,\n    onScroll: null,\n    onPaste: null,\n    onChange: null,\n    orientation: \"beside\",\n    readOnly: false,\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    showGutter: true,\n    showPrintMargin: true,\n    splits: 2,\n    style: {},\n    tabSize: 4,\n    theme: \"github\",\n    value: [\"\", \"\"],\n    width: \"500px\",\n    wrapEnabled: true\n  };\n  return DiffComponent;\n}(React.Component);\n\nexports.default = DiffComponent;","map":{"version":3,"sources":["../src/diff.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar split_1 = require(\"./split\");\nvar DiffMatchPatch = require(\"diff-match-patch\");\nvar DiffComponent = /** @class */ (function (_super) {\n    __extends(DiffComponent, _super);\n    function DiffComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            value: _this.props.value\n        };\n        _this.onChange = _this.onChange.bind(_this);\n        _this.diff = _this.diff.bind(_this);\n        return _this;\n    }\n    DiffComponent.prototype.componentDidUpdate = function () {\n        var value = this.props.value;\n        if (value !== this.state.value) {\n            this.setState({ value: value });\n        }\n    };\n    DiffComponent.prototype.onChange = function (value) {\n        this.setState({\n            value: value\n        });\n        if (this.props.onChange) {\n            this.props.onChange(value);\n        }\n    };\n    DiffComponent.prototype.diff = function () {\n        var dmp = new DiffMatchPatch();\n        var lhString = this.state.value[0];\n        var rhString = this.state.value[1];\n        if (lhString.length === 0 && rhString.length === 0) {\n            return [];\n        }\n        var diff = dmp.diff_main(lhString, rhString);\n        dmp.diff_cleanupSemantic(diff);\n        var diffedLines = this.generateDiffedLines(diff);\n        var codeEditorSettings = this.setCodeMarkers(diffedLines);\n        return codeEditorSettings;\n    };\n    DiffComponent.prototype.generateDiffedLines = function (diff) {\n        var C = {\n            DIFF_EQUAL: 0,\n            DIFF_DELETE: -1,\n            DIFF_INSERT: 1\n        };\n        var diffedLines = {\n            left: [],\n            right: []\n        };\n        var cursor = {\n            left: 1,\n            right: 1\n        };\n        diff.forEach(function (chunk) {\n            var chunkType = chunk[0];\n            var text = chunk[1];\n            var lines = text.split(\"\\n\").length - 1;\n            // diff-match-patch sometimes returns empty strings at random\n            if (text.length === 0) {\n                return;\n            }\n            var firstChar = text[0];\n            var lastChar = text[text.length - 1];\n            var linesToHighlight = 0;\n            switch (chunkType) {\n                case C.DIFF_EQUAL:\n                    cursor.left += lines;\n                    cursor.right += lines;\n                    break;\n                case C.DIFF_DELETE:\n                    // If the deletion starts with a newline, push the cursor down to that line\n                    if (firstChar === \"\\n\") {\n                        cursor.left++;\n                        lines--;\n                    }\n                    linesToHighlight = lines;\n                    // If the deletion does not include a newline, highlight the same line on the right\n                    if (linesToHighlight === 0) {\n                        diffedLines.right.push({\n                            startLine: cursor.right,\n                            endLine: cursor.right\n                        });\n                    }\n                    // If the last character is a newline, we don't want to highlight that line\n                    if (lastChar === \"\\n\") {\n                        linesToHighlight -= 1;\n                    }\n                    diffedLines.left.push({\n                        startLine: cursor.left,\n                        endLine: cursor.left + linesToHighlight\n                    });\n                    cursor.left += lines;\n                    break;\n                case C.DIFF_INSERT:\n                    // If the insertion starts with a newline, push the cursor down to that line\n                    if (firstChar === \"\\n\") {\n                        cursor.right++;\n                        lines--;\n                    }\n                    linesToHighlight = lines;\n                    // If the insertion does not include a newline, highlight the same line on the left\n                    if (linesToHighlight === 0) {\n                        diffedLines.left.push({\n                            startLine: cursor.left,\n                            endLine: cursor.left\n                        });\n                    }\n                    // If the last character is a newline, we don't want to highlight that line\n                    if (lastChar === \"\\n\") {\n                        linesToHighlight -= 1;\n                    }\n                    diffedLines.right.push({\n                        startLine: cursor.right,\n                        endLine: cursor.right + linesToHighlight\n                    });\n                    cursor.right += lines;\n                    break;\n                default:\n                    throw new Error(\"Diff type was not defined.\");\n            }\n        });\n        return diffedLines;\n    };\n    // Receives a collection of line numbers and iterates through them to highlight appropriately\n    // Returns an object that tells the render() method how to display the code editors\n    DiffComponent.prototype.setCodeMarkers = function (diffedLines) {\n        if (diffedLines === void 0) { diffedLines = { left: [], right: [] }; }\n        var codeEditorSettings = [];\n        var newMarkerSet = {\n            left: [],\n            right: []\n        };\n        for (var i = 0; i < diffedLines.left.length; i++) {\n            var markerObj = {\n                startRow: diffedLines.left[i].startLine - 1,\n                endRow: diffedLines.left[i].endLine,\n                type: \"text\",\n                className: \"codeMarker\"\n            };\n            newMarkerSet.left.push(markerObj);\n        }\n        for (var i = 0; i < diffedLines.right.length; i++) {\n            var markerObj = {\n                startRow: diffedLines.right[i].startLine - 1,\n                endRow: diffedLines.right[i].endLine,\n                type: \"text\",\n                className: \"codeMarker\"\n            };\n            newMarkerSet.right.push(markerObj);\n        }\n        codeEditorSettings[0] = newMarkerSet.left;\n        codeEditorSettings[1] = newMarkerSet.right;\n        return codeEditorSettings;\n    };\n    DiffComponent.prototype.render = function () {\n        var markers = this.diff();\n        return (React.createElement(split_1.default, { name: this.props.name, className: this.props.className, focus: this.props.focus, orientation: this.props.orientation, splits: this.props.splits, mode: this.props.mode, theme: this.props.theme, height: this.props.height, width: this.props.width, fontSize: this.props.fontSize, showGutter: this.props.showGutter, onChange: this.onChange, onPaste: this.props.onPaste, onLoad: this.props.onLoad, onScroll: this.props.onScroll, minLines: this.props.minLines, maxLines: this.props.maxLines, readOnly: this.props.readOnly, highlightActiveLine: this.props.highlightActiveLine, showPrintMargin: this.props.showPrintMargin, tabSize: this.props.tabSize, cursorStart: this.props.cursorStart, editorProps: this.props.editorProps, style: this.props.style, scrollMargin: this.props.scrollMargin, setOptions: this.props.setOptions, wrapEnabled: this.props.wrapEnabled, enableBasicAutocompletion: this.props.enableBasicAutocompletion, enableLiveAutocompletion: this.props.enableLiveAutocompletion, value: this.state.value, markers: markers }));\n    };\n    DiffComponent.propTypes = {\n        cursorStart: PropTypes.number,\n        editorProps: PropTypes.object,\n        enableBasicAutocompletion: PropTypes.bool,\n        enableLiveAutocompletion: PropTypes.bool,\n        focus: PropTypes.bool,\n        fontSize: PropTypes.number,\n        height: PropTypes.string,\n        highlightActiveLine: PropTypes.bool,\n        maxLines: PropTypes.number,\n        minLines: PropTypes.number,\n        mode: PropTypes.string,\n        name: PropTypes.string,\n        className: PropTypes.string,\n        onLoad: PropTypes.func,\n        onPaste: PropTypes.func,\n        onScroll: PropTypes.func,\n        onChange: PropTypes.func,\n        orientation: PropTypes.string,\n        readOnly: PropTypes.bool,\n        scrollMargin: PropTypes.array,\n        setOptions: PropTypes.object,\n        showGutter: PropTypes.bool,\n        showPrintMargin: PropTypes.bool,\n        splits: PropTypes.number,\n        style: PropTypes.object,\n        tabSize: PropTypes.number,\n        theme: PropTypes.string,\n        value: PropTypes.array,\n        width: PropTypes.string,\n        wrapEnabled: PropTypes.bool\n    };\n    DiffComponent.defaultProps = {\n        cursorStart: 1,\n        editorProps: {},\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false,\n        focus: false,\n        fontSize: 12,\n        height: \"500px\",\n        highlightActiveLine: true,\n        maxLines: null,\n        minLines: null,\n        mode: \"\",\n        name: \"ace-editor\",\n        onLoad: null,\n        onScroll: null,\n        onPaste: null,\n        onChange: null,\n        orientation: \"beside\",\n        readOnly: false,\n        scrollMargin: [0, 0, 0, 0],\n        setOptions: {},\n        showGutter: true,\n        showPrintMargin: true,\n        splits: 2,\n        style: {},\n        tabSize: 4,\n        theme: \"github\",\n        value: [\"\", \"\"],\n        width: \"500px\",\n        wrapEnabled: true\n    };\n    return DiffComponent;\n}(React.Component));\nexports.default = DiffComponent;\n//# sourceMappingURL=diff.js.map"]},"metadata":{},"sourceType":"script"}