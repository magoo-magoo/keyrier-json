{"ast":null,"code":"var t = function () {\n  function t(t) {\n    var i = this;\n\n    if (void 0 === t && (t = {}), this.config = {\n      cumulativeLayoutShift: !1,\n      dataConsumption: !1,\n      resourceTiming: !1,\n      analyticsTracker: function (t) {},\n      logPrefix: \"Perfume.js:\",\n      logging: !0,\n      maxMeasureTime: 15e3\n    }, this.t = \"Â© 2020 Leonardo Zizzamia\", this.version = \"4.8.1\", this.c = window.console, this.i = 0, this.d = document, this.s = !1, this.h = 0, this.o = \"Recording already\", this.u = {}, this.m = {}, this.v = {\n      beacon: 0,\n      css: 0,\n      fetch: 0,\n      img: 0,\n      other: 0,\n      script: 0,\n      total: 0,\n      xmlhttprequest: 0\n    }, this.w = window, this.l = window.performance, this.p = window.navigator, this.g = \"4g\", this.T = !1, this.k = function () {\n      i.d.hidden && (i.s = i.d.hidden);\n    }, this.config = Object.assign({}, this.config, t), this._()) {\n      if (this.N()) try {\n        this.I();\n      } catch (t) {\n        this.config.logging && this.c.warn(this.config.logPrefix, t);\n      }\n      this.L(), this.P(\"navigationTiming\", this.j()), this.P(\"networkInformation\", this.C());\n    }\n  }\n\n  return Object.defineProperty(t.prototype, \"isLowEndDevice\", {\n    get: function () {\n      return !!(this.p.hardwareConcurrency && this.p.hardwareConcurrency <= 4) || !!(this.p.deviceMemory && this.p.deviceMemory <= 4);\n    },\n    O: !0,\n    S: !0\n  }), Object.defineProperty(t.prototype, \"isLowEndExperience\", {\n    get: function () {\n      return !!this.isLowEndDevice || !![\"slow-2g\", \"2g\", \"3g\"].includes(this.g) || !!this.T;\n    },\n    O: !0,\n    S: !0\n  }), t.prototype.start = function (t) {\n    this._() && (this.u[t] ? this.D(this.o + \" started.\") : (this.u[t] = !0, this.l.mark(\"mark_\" + t + \"_start\"), this.s = !1));\n  }, t.prototype.end = function (t, i) {\n    var s = this;\n    if (void 0 === i && (i = {}), this._()) if (this.u[t]) {\n      this.l.mark(\"mark_\" + t + \"_end\");\n      var n = this.F(t),\n          e = parseFloat(n.toFixed(2));\n      delete this.u[t], this.q(function () {\n        var n = s.M();\n        n.isLowEndDevice = s.isLowEndDevice, n.isLowEndExperience = s.isLowEndExperience;\n        var r = {\n          W: t,\n          data: e,\n          duration: e,\n          B: i,\n          R: n\n        };\n        s.log(r), s.Z(r);\n      });\n    } else this.D(this.o + \" stopped.\");\n  }, t.prototype.endPaint = function (t, i) {\n    var s = this;\n    setTimeout(function () {\n      s.end(t, i);\n    });\n  }, t.prototype.clear = function (t) {\n    this.l.clearMarks(\"mark_\" + t + \"_start\"), this.l.clearMarks(\"mark_\" + t + \"_end\"), delete this.u[t];\n  }, t.prototype.A = function (t) {\n    this.G({\n      H: t,\n      W: \"firstInputDelay\",\n      J: \"duration\"\n    }), this.K(), this.U();\n  }, t.prototype.U = function () {\n    this.V && (clearTimeout(this.V), this.V = void 0, this.P(\"dataConsumption\", this.v));\n  }, t.prototype.K = function () {\n    this.m.X && this.h && (this.Y(this.h, \"largestContentfulPaint\"), this.m.X.disconnect()), this.m.$ && this.i > 0 && (this.m.$.takeRecords(), this.Y(this.i, \"cumulativeLayoutShiftScore\", \"\"), this.m.$.disconnect());\n  }, t.prototype.tt = function () {\n    this.m.it = this.st(\"first-input\", this.A.bind(this));\n  }, t.prototype.nt = function () {\n    var t = this;\n    this.m.et = this.st(\"paint\", function (i) {\n      t.G({\n        H: i,\n        rt: \"first-paint\",\n        W: \"firstPaint\",\n        J: \"startTime\"\n      }), t.G({\n        H: i,\n        rt: \"first-contentful-paint\",\n        W: \"firstContentfulPaint\",\n        J: \"startTime\"\n      });\n    });\n  }, t.prototype.ht = function () {\n    var t = this;\n    this.m.X = this.st(\"largest-contentful-paint\", function (i) {\n      var s = i.pop();\n      s && (t.h = s.renderTime || s.loadTime);\n    });\n  }, t.prototype.at = function () {\n    var t = this;\n    this.m.$ = this.st(\"layout-shift\", function (i) {\n      var s = i.pop();\n      s && !s.ot && s.value && (t.i += s.value);\n    });\n  }, t.prototype.I = function () {\n    this.nt(), this.tt(), this.ht(), (this.config.resourceTiming || this.config.dataConsumption) && this.ut(), this.at();\n  }, t.prototype.ut = function () {\n    var t = this;\n    this.st(\"resource\", function (i) {\n      t.ft({\n        H: i\n      });\n    }), this.V = setTimeout(function () {\n      t.U();\n    }, 15e3);\n  }, t.prototype._ = function () {\n    return this.l && !!this.l.getEntriesByType && !!this.l.now && !!this.l.mark;\n  }, t.prototype.N = function () {\n    return this.w.chrome && \"PerformanceObserver\" in this.w;\n  }, t.prototype.ct = function (t) {\n    var i = this.l.getEntriesByName(t),\n        s = i[i.length - 1];\n    return s && \"measure\" === s.entryType ? s.duration : -1;\n  }, t.prototype.M = function () {\n    return this.p ? {\n      deviceMemory: this.p.deviceMemory ? this.p.deviceMemory : 0,\n      hardwareConcurrency: this.p.hardwareConcurrency ? this.p.hardwareConcurrency : 0,\n      serviceWorkerStatus: \"serviceWorker\" in this.p ? this.p.serviceWorker.controller ? \"controlled\" : \"supported\" : \"unsupported\"\n    } : {};\n  }, t.prototype.j = function () {\n    if (!this._()) return {};\n    var t = performance.getEntriesByType(\"navigation\")[0];\n    if (!t) return {};\n    var i = t.responseStart,\n        s = t.responseEnd;\n    return {\n      fetchTime: s - t.fetchStart,\n      workerTime: t.workerStart > 0 ? s - t.workerStart : 0,\n      totalTime: s - t.requestStart,\n      downloadTime: s - i,\n      timeToFirstByte: i - t.requestStart,\n      headerSize: t.transferSize - t.encodedBodySize || 0,\n      dnsLookupTime: t.domainLookupEnd - t.domainLookupStart\n    };\n  }, t.prototype.C = function () {\n    if (\"connection\" in this.p) {\n      var t = this.p.connection;\n      return \"object\" != typeof t ? {} : (this.g = t.effectiveType, this.T = !!t.saveData, {\n        downlink: t.downlink,\n        effectiveType: t.effectiveType,\n        rtt: t.rtt,\n        saveData: !!t.saveData\n      });\n    }\n\n    return {};\n  }, t.prototype.P = function (t, i) {\n    var s = this;\n    Object.keys(i).forEach(function (t) {\n      \"number\" == typeof i[t] && (i[t] = parseFloat(i[t].toFixed(2)));\n    });\n    var n = this.M();\n    n.isLowEndDevice = this.isLowEndDevice, n.isLowEndExperience = this.isLowEndExperience, this.q(function () {\n      s.log({\n        W: t,\n        data: i,\n        R: n\n      }), s.Z({\n        W: t,\n        data: i,\n        R: n\n      });\n    });\n  }, t.prototype.Y = function (t, i, s) {\n    var n = this;\n    void 0 === s && (s = \"ms\");\n    var e = parseFloat(t.toFixed(2));\n\n    if (!(e > this.config.maxMeasureTime || e <= 0)) {\n      var r = this.M();\n      r.isLowEndDevice = this.isLowEndDevice, r.isLowEndExperience = this.isLowEndExperience, this.q(function () {\n        n.log({\n          W: i,\n          data: e + \" \" + s,\n          R: r\n        }), n.Z({\n          W: i,\n          duration: e,\n          R: r\n        });\n      });\n    }\n  }, t.prototype.log = function (t) {\n    if (!this.s && this.config.logging) {\n      this.c.log(\"%c \" + this.config.logPrefix + \" \" + t.W + \" \", \"color:#ff6d00;font-size:11px;\", t.data, t.R);\n    }\n  }, t.prototype.D = function (t) {\n    this.config.logging && this.c.warn(this.config.logPrefix, t);\n  }, t.prototype.L = function () {\n    void 0 !== this.d.hidden && this.d.addEventListener(\"visibilitychange\", this.k);\n  }, t.prototype.F = function (t) {\n    var i = \"mark_\" + t + \"_start\",\n        s = \"mark_\" + t + \"_end\";\n    return this.l.measure(t, i, s), this.ct(t);\n  }, t.prototype.st = function (t, i) {\n    return this.vt = new PerformanceObserver(function (t) {\n      var s = t.getEntries();\n      i(s);\n    }), this.vt.observe({\n      type: t,\n      buffered: !0\n    }), this.vt;\n  }, t.prototype.G = function (t) {\n    var i = this;\n    t.H.forEach(function (s) {\n      (!t.rt || t.rt && s.name === t.rt) && i.Y(s[t.J], t.W), i.m.et && \"first-contentful-paint\" === s.name && i.m.et.disconnect();\n    }), this.m.it && \"firstInputDelay\" === t.W && this.m.it.disconnect();\n  }, t.prototype.ft = function (t) {\n    var i = this;\n    t.H.forEach(function (t) {\n      if (i.config.resourceTiming && i.P(\"resourceTiming\", t), i.config.dataConsumption && t.decodedBodySize && t.initiatorType) {\n        var s = t.decodedBodySize / 1e3;\n        i.v[t.initiatorType] += s, i.v.total += s;\n      }\n    });\n  }, t.prototype.q = function (t) {\n    \"requestIdleCallback\" in this.w ? this.w.requestIdleCallback(t, {\n      timeout: 3e3\n    }) : t();\n  }, t.prototype.Z = function (t) {\n    if (!this.s) {\n      var i = t.W,\n          s = t.data,\n          n = t.duration,\n          e = t.B,\n          r = t.R,\n          h = e || {};\n      this.config.analyticsTracker({\n        metricName: i,\n        data: s,\n        duration: n,\n        eventProperties: h,\n        navigatorInformation: r\n      });\n    }\n  }, t;\n}();\n\nexport default t;","map":{"version":3,"sources":["../src/perfume.ts"],"names":["this","cumulativeLayoutShift","dataConsumption","resourceTiming","analyticsTracker","logPrefix","logging","maxMeasureTime","window","console","document","beacon","css","fetch","img","other","script","total","xmlhttprequest","performance","navigator","Object","Perfume","wn","hardwareConcurrency","deviceMemory","isLowEndDevice","includes","et","sd","options","config","assign","isPerformanceSupported","isPerformanceObserverSupported","initPerformanceObserver","e","c","warn","onVisibilityChange","logData","getNavigationTiming","getNetworkInformation","markName","metrics","logWarn","logPrefixRecording","wp","mark","isHidden","customProperties","durationByMetric","performanceMeasure","duration2Decimal","parseFloat","toFixed","pushTask","navigatorInfo","_this","getNavigatorInfo","isLowEndExperience","W","data","duration","B","R","log","sendTiming","setTimeout","end","clearMarks","d","hidden","performanceEntries","performanceObserverCb","H","J","disconnectPerfObservers","disconnectDataConsumption","dataConsumptionTimeout","clearTimeout","undefined","perfResourceTiming","perfObservers","lcp","lcpDuration","logMetric","disconnect","cls","cumulativeLayoutShiftScore","takeRecords","fid","performanceObserver","digestFirstInputDelayEntries","bind","fcp","rt","lastEntry","pop","renderTime","loadTime","hadRecentInput","value","initFirstPaint","initFirstInputDelay","initLargestContentfulPaint","initResourceTiming","initLayoutShift","performanceObserverResourceCb","getEntriesByType","now","w","chrome","measureName","getEntriesByName","entry","length","entryType","serviceWorkerStatus","serviceWorker","controller","n","responseStart","responseEnd","fetchTime","fetchStart","workerTime","workerStart","totalTime","requestStart","downloadTime","timeToFirstByte","headerSize","transferSize","encodedBodySize","dnsLookupTime","domainLookupEnd","domainLookupStart","dataConnection","connection","effectiveType","saveData","downlink","rtt","keys","forEach","key","suffix","message","addEventListener","didVisibilityChange","startMark","endMark","measure","getDurationByMetric","eventType","cb","perfObserver","PerformanceObserver","entryList","getEntries","observe","type","buffered","performanceEntry","entryName","name","valueLog","decodedBodySize","initiatorType","bodySize","requestIdleCallback","timeout","eventProperties","metricName","navigatorInformation"],"mappings":"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","sourcesContent":["/*!\n * Perfume.js v4.8.1 (http://zizzamia.github.io/perfume)\n * Copyright 2020 Leonardo Zizzamia (https://github.com/Zizzamia/perfume.js/graphs/contributors)\n * Licensed under MIT (https://github.com/Zizzamia/perfume.js/blob/master/LICENSE)\n * @license\n */\nexport interface IAnalyticsTrackerOptions {\n  metricName: string;\n  data?: any;\n  duration?: number;\n  eventProperties?: object;\n  navigatorInformation?: INavigatorInfo;\n}\n\nexport interface IPerfumeConfig {\n  // Metrics\n  cumulativeLayoutShift: boolean;\n  dataConsumption: boolean;\n  resourceTiming: boolean;\n  // Analytics\n  analyticsTracker: (options: IAnalyticsTrackerOptions) => void;\n  // Logging\n  logPrefix: string;\n  logging: boolean;\n  maxMeasureTime: number;\n}\n\nexport interface IPerfumeOptions {\n  // Metrics\n  dataConsumption?: boolean;\n  resourceTiming?: boolean;\n  // Analytics\n  analyticsTracker?: (options: IAnalyticsTrackerOptions) => void;\n  // Logging\n  logPrefix?: string;\n  logging?: boolean;\n  maxMeasureTime?: number;\n}\n\nexport interface ILogOptions {\n  measureName: string;\n  data?: any;\n  customProperties?: object;\n  navigatorInfo?: INavigatorInfo;\n}\n\nexport interface IMetricMap {\n  [measureName: string]: boolean;\n}\n\nexport interface INavigatorInfo {\n  deviceMemory?: number;\n  hardwareConcurrency?: number;\n  isLowEndDevice?: boolean;\n  isLowEndExperience?: boolean;\n  serviceWorkerStatus?: 'controlled' | 'supported' | 'unsupported';\n}\n\nexport interface IPerfObservers {\n  [measureName: string]: any;\n}\n\nexport interface ISendTimingOptions {\n  measureName: string;\n  data?: any;\n  duration?: number;\n  customProperties?: object;\n  navigatorInfo: INavigatorInfo;\n}\n\nexport type IPerfumeMetrics =\n  | 'firstContentfulPaint'\n  | 'firstPaint'\n  | 'firstInputDelay';\n\nexport type IPerformanceObserverType =\n  | 'first-input'\n  | 'largest-contentful-paint'\n  | 'layout-shift'\n  | 'longtask'\n  | 'measure'\n  | 'navigation'\n  | 'paint'\n  | 'resource';\n\nexport type IPerformanceEntryInitiatorType =\n  | 'beacon'\n  | 'css'\n  | 'fetch'\n  | 'img'\n  | 'other'\n  | 'script'\n  | 'xmlhttprequest';\n\nexport declare interface IPerformanceEntry {\n  decodedBodySize?: number;\n  duration: number;\n  entryType: IPerformanceObserverType;\n  initiatorType?: IPerformanceEntryInitiatorType;\n  loadTime: number;\n  name: string;\n  renderTime: number;\n  startTime: number;\n  hadRecentInput?: boolean;\n  value?: number;\n}\n\nexport interface IPerformancePaintTiming {\n  name: string;\n  entryType: string;\n  startTime: number;\n  duration: number;\n}\n\ndeclare const PerformanceObserver: any;\n\ndeclare interface IPerformanceObserverEntryList {\n  getEntries: any;\n  getEntriesByName: any;\n  getEntriesByType: any;\n}\n\nexport interface IPerformanceObserver {\n  observer: () => void;\n  disconnect: () => void;\n}\n\nexport interface IPerfumeNavigationTiming {\n  fetchTime?: number;\n  workerTime?: number;\n  totalTime?: number;\n  downloadTime?: number;\n  timeToFirstByte?: number;\n  headerSize?: number;\n  dnsLookupTime?: number;\n}\n\ntype EffectiveConnectionType = '2g' | '3g' | '4g' | 'slow-2g';\n\nexport interface IPerfumeNetworkInformation {\n  downlink?: number;\n  effectiveType?: EffectiveConnectionType;\n  onchange?: () => void;\n  rtt?: number;\n  saveData?: boolean;\n}\n\nexport interface IPerfumeDataConsumption {\n  beacon: number;\n  css: number;\n  fetch: number;\n  img: number;\n  other: number;\n  script: number;\n  total: number;\n  xmlhttprequest: number;\n}\n\nexport default class Perfume {\n  config: IPerfumeConfig = {\n    // Metrics\n    cumulativeLayoutShift: false,\n    dataConsumption: false,\n    resourceTiming: false,\n    // Analytics\n    analyticsTracker: options => {},\n    // Logging\n    logPrefix: 'Perfume.js:',\n    logging: true,\n    maxMeasureTime: 15000,\n  };\n  copyright = 'Â© 2020 Leonardo Zizzamia';\n  version = '4.8.1';\n  private c = window.console;\n  private cumulativeLayoutShiftScore = 0;\n  private d = document;\n  private dataConsumptionTimeout: any;\n  private isHidden: boolean = false;\n  private lcpDuration: number = 0;\n  private logPrefixRecording = 'Recording already';\n  private metrics: IMetricMap = {};\n  private perfObserver: any;\n  private perfObservers: IPerfObservers = {};\n  private perfResourceTiming: IPerfumeDataConsumption = {\n    beacon: 0,\n    css: 0,\n    fetch: 0,\n    img: 0,\n    other: 0,\n    script: 0,\n    total: 0,\n    xmlhttprequest: 0,\n  };\n  private w = window;\n  private wp = window.performance;\n  private wn = window.navigator;\n  private et = '4g';\n  private sd = false;\n\n  get isLowEndDevice(): boolean {\n    // If number of logical processors available to run threads <= 4\n    if (\n      (this.wn as any).hardwareConcurrency &&\n      (this.wn as any).hardwareConcurrency <= 4\n    ) {\n      return true;\n    }\n    // If the approximate amount of RAM client device has <= 4\n    if ((this.wn as any).deviceMemory && (this.wn as any).deviceMemory <= 4) {\n      return true;\n    }\n    return false;\n  }\n\n  get isLowEndExperience(): boolean {\n    if (this.isLowEndDevice) {\n      return true;\n    }\n    // If the effective type of the connection meaning\n    // one of 'slow-2g', '2g', '3g', or '4g' is !== 4g\n    if (['slow-2g', '2g', '3g'].includes(this.et)) {\n      return true;\n    }\n    // Data Saver preference\n    if (this.sd) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(options: IPerfumeOptions = {}) {\n    // Extend default config with external options\n    this.config = Object.assign({}, this.config, options) as IPerfumeConfig;\n\n    // Exit from Perfume when basic Web Performance APIs aren't supported\n    if (!this.isPerformanceSupported()) {\n      return;\n    }\n\n    // Checks if use Performance or the EmulatedPerformance instance\n    if (this.isPerformanceObserverSupported()) {\n      try {\n        this.initPerformanceObserver();\n      } catch (e) {\n        if (this.config.logging) {\n          this.c.warn(this.config.logPrefix, e);\n        }\n      }\n    }\n\n    // Init visibilitychange listener\n    this.onVisibilityChange();\n    // Log Navigation Timing\n    this.logData('navigationTiming', this.getNavigationTiming());\n    // Log Network Information\n    this.logData('networkInformation', this.getNetworkInformation());\n  }\n\n  /**\n   * Start performance measurement\n   */\n  start(markName: string): void {\n    if (!this.isPerformanceSupported()) {\n      return;\n    }\n    if (this.metrics[markName]) {\n      this.logWarn(`${this.logPrefixRecording} started.`);\n      return;\n    }\n    this.metrics[markName] = true;\n    // Creates a timestamp in the browser's performance entry buffer\n    this.wp.mark(`mark_${markName}_start`);\n    // Reset hidden value\n    this.isHidden = false;\n  }\n\n  /**\n   * End performance measurement\n   */\n  end(markName: string, customProperties = {}): void {\n    if (!this.isPerformanceSupported()) {\n      return;\n    }\n    if (!this.metrics[markName]) {\n      this.logWarn(`${this.logPrefixRecording} stopped.`);\n      return;\n    }\n    // End Performance Mark\n    this.wp.mark(`mark_${markName}_end`);\n    // Get duration and change it to a two decimal value\n    const durationByMetric = this.performanceMeasure(markName);\n    const duration2Decimal = parseFloat(durationByMetric.toFixed(2));\n    delete this.metrics[markName];\n    this.pushTask(() => {\n      const navigatorInfo = this.getNavigatorInfo();\n      navigatorInfo.isLowEndDevice = this.isLowEndDevice;\n      navigatorInfo.isLowEndExperience = this.isLowEndExperience;\n      const options = {\n        measureName: markName,\n        data: duration2Decimal,\n        duration: duration2Decimal,\n        customProperties,\n        navigatorInfo,\n      };\n      // Log to console, delete metric and send to analytics tracker\n      this.log(options);\n      this.sendTiming(options);\n    });\n  }\n\n  /**\n   * End performance measurement after first paint from the beging of it\n   */\n  endPaint(markName: string, customProperties?: object): void {\n    setTimeout(() => {\n      this.end(markName, customProperties);\n    });\n  }\n\n  clear(markName: string): void {\n    this.wp.clearMarks(`mark_${markName}_start`);\n    this.wp.clearMarks(`mark_${markName}_end`);\n    delete this.metrics[markName];\n  }\n\n  private didVisibilityChange = () => {\n    if (this.d.hidden) {\n      this.isHidden = this.d.hidden;\n    }\n  };\n\n  private digestFirstInputDelayEntries(\n    performanceEntries: IPerformanceEntry[],\n  ): void {\n    this.performanceObserverCb({\n      performanceEntries,\n      measureName: 'firstInputDelay',\n      valueLog: 'duration',\n    });\n    this.disconnectPerfObservers();\n    this.disconnectDataConsumption();\n  }\n\n  private disconnectDataConsumption(): void {\n    if (!this.dataConsumptionTimeout) {\n      return;\n    }\n    clearTimeout(this.dataConsumptionTimeout);\n    this.dataConsumptionTimeout = undefined;\n    this.logData('dataConsumption', this.perfResourceTiming);\n  }\n\n  private disconnectPerfObservers(): void {\n    if (this.perfObservers.lcp && this.lcpDuration) {\n      this.logMetric(this.lcpDuration, 'largestContentfulPaint');\n      this.perfObservers.lcp.disconnect();\n    }\n    if (this.perfObservers.cls && this.cumulativeLayoutShiftScore > 0) {\n      this.perfObservers.cls.takeRecords();\n      this.logMetric(\n        this.cumulativeLayoutShiftScore,\n        'cumulativeLayoutShiftScore',\n        '',\n      );\n      this.perfObservers.cls.disconnect();\n    }\n  }\n\n  private initFirstInputDelay(): void {\n    this.perfObservers.fid = this.performanceObserver(\n      'first-input',\n      this.digestFirstInputDelayEntries.bind(this),\n    );\n  }\n\n  /**\n   * First Paint is essentially the paint after which\n   * the biggest above-the-fold layout change has happened.\n   */\n  private initFirstPaint(): void {\n    this.perfObservers.fcp = this.performanceObserver(\n      'paint',\n      (performanceEntries: IPerformanceEntry[]) => {\n        this.performanceObserverCb({\n          performanceEntries,\n          entryName: 'first-paint',\n          measureName: 'firstPaint',\n          valueLog: 'startTime',\n        });\n        this.performanceObserverCb({\n          performanceEntries,\n          entryName: 'first-contentful-paint',\n          measureName: 'firstContentfulPaint',\n          valueLog: 'startTime',\n        });\n      },\n    );\n  }\n\n  private initLargestContentfulPaint(): void {\n    this.perfObservers.lcp = this.performanceObserver(\n      'largest-contentful-paint',\n      (performanceEntries: IPerformanceEntry[]) => {\n        const lastEntry = performanceEntries.pop();\n        if (lastEntry) {\n          this.lcpDuration = lastEntry.renderTime || lastEntry.loadTime;\n        }\n      },\n    );\n  }\n\n  /**\n   * Detects new layout shift occurrences and updates the\n   * `cumulativeLayoutShiftScore` variable.\n   */\n  private initLayoutShift(): void {\n    this.perfObservers.cls = this.performanceObserver(\n      'layout-shift',\n      (performanceEntries: IPerformanceEntry[]) => {\n        const lastEntry = performanceEntries.pop();\n        // Only count layout shifts without recent user input.\n        if (lastEntry && !lastEntry.hadRecentInput && lastEntry.value) {\n          this.cumulativeLayoutShiftScore += lastEntry.value;\n        }\n      },\n    );\n  }\n\n  private initPerformanceObserver(): void {\n    this.initFirstPaint();\n    // FID needs to be initialized as soon as Perfume is available\n    // DataConsumption resolves after FID is triggered\n    this.initFirstInputDelay();\n    this.initLargestContentfulPaint();\n    // Collects KB information related to resources on the page\n    if (this.config.resourceTiming || this.config.dataConsumption) {\n      this.initResourceTiming();\n    }\n    this.initLayoutShift();\n  }\n\n  private initResourceTiming(): void {\n    this.performanceObserver(\n      'resource',\n      (performanceEntries: IPerformanceEntry[]) => {\n        this.performanceObserverResourceCb({\n          performanceEntries,\n        });\n      },\n    );\n    this.dataConsumptionTimeout = setTimeout(() => {\n      this.disconnectDataConsumption();\n    }, 15000);\n  }\n\n  /**\n   * True if the browser supports the Navigation Timing API,\n   * User Timing API and the PerformanceObserver Interface.\n   * In Safari, the User Timing API (performance.mark()) is not available,\n   * so the DevTools timeline will not be annotated with marks.\n   * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n   * Support: developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n   * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n   */\n  private isPerformanceSupported(): boolean {\n    return (\n      this.wp && !!this.wp.getEntriesByType && !!this.wp.now && !!this.wp.mark\n    );\n  }\n\n  /**\n   * For now only Chrome fully support the PerformanceObserver interface\n   * and the entryType \"paint\".\n   * Firefox 58: https://bugzilla.mozilla.org/show_bug.cgi?id=1403027\n   */\n  private isPerformanceObserverSupported(): boolean {\n    return (this.w as any).chrome && 'PerformanceObserver' in this.w;\n  }\n\n  /**\n   * Get the duration of the timing metric or -1 if there a measurement has\n   * not been made by the User Timing API\n   */\n  private getDurationByMetric(measureName: string): number {\n    const performanceEntries = this.wp.getEntriesByName(measureName);\n    const entry = performanceEntries[performanceEntries.length - 1];\n    if (entry && entry.entryType === 'measure') {\n      return entry.duration;\n    }\n    return -1;\n  }\n\n  /**\n   * Information coming from window.navigator:\n   * 1. Device Memory\n   * 2. Hardware Concurency\n   * 3. Status of the service worker:\n   *     - controlled: a service worker is controlling the page\n   *     - supported: the browser supports service worker\n   *     - unsupported: the user's browser does not support service worker\n   */\n  private getNavigatorInfo(): INavigatorInfo {\n    if (this.wn) {\n      return {\n        deviceMemory: (this.wn as any).deviceMemory\n          ? (this.wn as any).deviceMemory\n          : 0,\n        hardwareConcurrency: (this.wn as any).hardwareConcurrency\n          ? (this.wn as any).hardwareConcurrency\n          : 0,\n        serviceWorkerStatus:\n          'serviceWorker' in this.wn\n            ? this.wn.serviceWorker.controller\n              ? 'controlled'\n              : 'supported'\n            : 'unsupported',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * Navigation Timing API provides performance metrics for HTML documents.\n   * w3c.github.io/navigation-timing/\n   * developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\n   */\n  private getNavigationTiming(): IPerfumeNavigationTiming {\n    if (!this.isPerformanceSupported()) {\n      return {};\n    }\n    // There is an open issue to type correctly getEntriesByType\n    // github.com/microsoft/TypeScript/issues/33866\n    const n = performance.getEntriesByType('navigation')[0] as any;\n    // In Safari version 11.2 Navigation Timing isn't supported yet\n    if (!n) {\n      return {};\n    }\n    const responseStart = n.responseStart;\n    const responseEnd = n.responseEnd;\n    // We cache the navigation time for future times\n    return {\n      // fetchStart marks when the browser starts to fetch a resource\n      // responseEnd is when the last byte of the response arrives\n      fetchTime: responseEnd - n.fetchStart,\n      // Service worker time plus response time\n      workerTime: n.workerStart > 0 ? responseEnd - n.workerStart : 0,\n      // Request plus response time (network only)\n      totalTime: responseEnd - n.requestStart,\n      // Response time only (download)\n      downloadTime: responseEnd - responseStart,\n      // Time to First Byte (TTFB)\n      timeToFirstByte: responseStart - n.requestStart,\n      // HTTP header size\n      headerSize: n.transferSize - n.encodedBodySize || 0,\n      // Measuring DNS lookup time\n      dnsLookupTime: n.domainLookupEnd - n.domainLookupStart,\n    };\n  }\n\n  private getNetworkInformation(): IPerfumeNetworkInformation {\n    if ('connection' in this.wn) {\n      const dataConnection = (this.wn as any).connection;\n      if (typeof dataConnection !== 'object') {\n        return {};\n      }\n      this.et = dataConnection.effectiveType;\n      this.sd = !!dataConnection.saveData;\n      return {\n        downlink: dataConnection.downlink,\n        effectiveType: dataConnection.effectiveType,\n        rtt: dataConnection.rtt,\n        saveData: !!dataConnection.saveData,\n      };\n    }\n    return {};\n  }\n\n  private logData(measureName: string, data: any): void {\n    Object.keys(data).forEach(key => {\n      if (typeof data[key] === 'number') {\n        data[key] = parseFloat(data[key].toFixed(2));\n      }\n    });\n    const navigatorInfo = this.getNavigatorInfo();\n    navigatorInfo.isLowEndDevice = this.isLowEndDevice;\n    navigatorInfo.isLowEndExperience = this.isLowEndExperience;\n    this.pushTask(() => {\n      // Logs the metric in the internal console.log\n      this.log({ measureName, data, navigatorInfo });\n      // Sends the metric to an external tracking service\n      this.sendTiming({ measureName, data, navigatorInfo });\n    });\n  }\n\n  /**\n   * Dispatches the metric duration into internal logs\n   * and the external time tracking service.\n   */\n  private logMetric(\n    duration: number,\n    measureName: string,\n    suffix: string = 'ms',\n  ): void {\n    const duration2Decimal = parseFloat(duration.toFixed(2));\n    // Stop Analytics and Logging for false negative metrics\n    if (\n      duration2Decimal > this.config.maxMeasureTime ||\n      duration2Decimal <= 0\n    ) {\n      return;\n    }\n    const navigatorInfo = this.getNavigatorInfo();\n    navigatorInfo.isLowEndDevice = this.isLowEndDevice;\n    navigatorInfo.isLowEndExperience = this.isLowEndExperience;\n    this.pushTask(() => {\n      // Logs the metric in the internal console.log\n      this.log({\n        measureName,\n        data: `${duration2Decimal} ${suffix}`,\n        navigatorInfo,\n      });\n      // Sends the metric to an external tracking service\n      this.sendTiming({\n        measureName,\n        duration: duration2Decimal,\n        navigatorInfo,\n      });\n    });\n  }\n\n  /**\n   * Coloring Text in Browser Console\n   */\n  private log(options: ILogOptions): void {\n    // Don't log when page is hidden or has disabled logging\n    if (this.isHidden || !this.config.logging) {\n      return;\n    }\n    const style = 'color:#ff6d00;font-size:11px;';\n    this.c.log(\n      `%c ${this.config.logPrefix} ${options.measureName} `,\n      style,\n      options.data,\n      options.navigatorInfo,\n    );\n  }\n\n  /**\n   * Ensures console.warn exist and logging is enable for\n   * warning messages\n   */\n  private logWarn(message: string): void {\n    if (!this.config.logging) {\n      return;\n    }\n    this.c.warn(this.config.logPrefix, message);\n  }\n\n  /**\n   * From visibilitychange listener it saves only when\n   * the page gets hidden, because it's important to not\n   * use the wrong \"hidden\" value when send timing or logging.\n   */\n  private onVisibilityChange() {\n    if (typeof this.d.hidden !== 'undefined') {\n      // Opera 12.10 and Firefox 18 and later support\n      this.d.addEventListener('visibilitychange', this.didVisibilityChange);\n    }\n  }\n\n  private performanceMeasure(measureName: string): number {\n    const startMark = `mark_${measureName}_start`;\n    const endMark = `mark_${measureName}_end`;\n    this.wp.measure(measureName, startMark, endMark);\n    return this.getDurationByMetric(measureName);\n  }\n\n  /**\n   * PerformanceObserver subscribes to performance events as they happen\n   * and respond to them asynchronously.\n   */\n  private performanceObserver(\n    eventType: IPerformanceObserverType,\n    cb: (performanceEntries: any[]) => void,\n  ): IPerformanceObserver {\n    this.perfObserver = new PerformanceObserver(\n      (entryList: IPerformanceObserverEntryList) => {\n        const performanceEntries = entryList.getEntries();\n        cb(performanceEntries);\n      },\n    );\n    // Retrieve buffered events and subscribe to newer events for Paint Timing\n    this.perfObserver.observe({ type: eventType, buffered: true });\n    return this.perfObserver;\n  }\n\n  /**\n   * Logging Performance Paint Timing\n   */\n  private performanceObserverCb(options: {\n    performanceEntries: IPerformanceEntry[];\n    entryName?: string;\n    measureName: IPerfumeMetrics;\n    valueLog: 'duration' | 'startTime';\n  }): void {\n    options.performanceEntries.forEach(\n      (performanceEntry: IPerformanceEntry) => {\n        if (\n          !options.entryName ||\n          (options.entryName && performanceEntry.name === options.entryName)\n        ) {\n          this.logMetric(\n            performanceEntry[options.valueLog],\n            options.measureName,\n          );\n        }\n        if (\n          this.perfObservers.fcp &&\n          performanceEntry.name === 'first-contentful-paint'\n        ) {\n          this.perfObservers.fcp.disconnect();\n        }\n      },\n    );\n    if (this.perfObservers.fid && options.measureName === 'firstInputDelay') {\n      this.perfObservers.fid.disconnect();\n    }\n  }\n\n  private performanceObserverResourceCb(options: {\n    performanceEntries: IPerformanceEntry[];\n  }): void {\n    options.performanceEntries.forEach(\n      (performanceEntry: IPerformanceEntry) => {\n        if (this.config.resourceTiming) {\n          this.logData('resourceTiming', performanceEntry);\n        }\n        if (\n          this.config.dataConsumption &&\n          performanceEntry.decodedBodySize &&\n          performanceEntry.initiatorType\n        ) {\n          const bodySize = performanceEntry.decodedBodySize / 1000;\n          this.perfResourceTiming[performanceEntry.initiatorType] += bodySize;\n          this.perfResourceTiming.total += bodySize;\n        }\n      },\n    );\n  }\n\n  /**\n   * PushTask to requestIdleCallback\n   */\n  private pushTask(cb: any): void {\n    if ('requestIdleCallback' in this.w) {\n      (this.w as any).requestIdleCallback(cb, { timeout: 3000 });\n    } else {\n      cb();\n    }\n  }\n\n  /**\n   * Sends the User timing measure to analyticsTracker\n   */\n  private sendTiming(options: ISendTimingOptions): void {\n    // Doesn't send timing when page is hidden\n    if (this.isHidden) {\n      return;\n    }\n    const {\n      measureName,\n      data,\n      duration,\n      customProperties,\n      navigatorInfo,\n    } = options;\n    const eventProperties = customProperties ? customProperties : {};\n    // Send metric to custom Analytics service\n    this.config.analyticsTracker({\n      metricName: measureName,\n      data,\n      duration,\n      eventProperties,\n      navigatorInformation: navigatorInfo,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}