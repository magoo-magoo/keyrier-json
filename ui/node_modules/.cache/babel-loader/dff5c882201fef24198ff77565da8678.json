{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bottom = bottom;\nexports.cloneLayout = cloneLayout;\nexports.cloneLayoutItem = cloneLayoutItem;\nexports.childrenEqual = childrenEqual;\nexports.fastPositionEqual = fastPositionEqual;\nexports.collides = collides;\nexports.compact = compact;\nexports.compactItem = compactItem;\nexports.correctBounds = correctBounds;\nexports.getLayoutItem = getLayoutItem;\nexports.getFirstCollision = getFirstCollision;\nexports.getAllCollisions = getAllCollisions;\nexports.getStatics = getStatics;\nexports.moveElement = moveElement;\nexports.moveElementAwayFromCollision = moveElementAwayFromCollision;\nexports.perc = perc;\nexports.setTransform = setTransform;\nexports.setTopLeft = setTopLeft;\nexports.sortLayoutItems = sortLayoutItems;\nexports.sortLayoutItemsByRowCol = sortLayoutItemsByRowCol;\nexports.sortLayoutItemsByColRow = sortLayoutItemsByColRow;\nexports.synchronizeLayoutWithChildren = synchronizeLayoutWithChildren;\nexports.validateLayout = validateLayout;\nexports.compactType = compactType;\nexports.autoBindHandlers = autoBindHandlers;\nexports.noop = exports.fastRGLPropsEqual = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.isequal\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar isProduction = process.env.NODE_ENV === \"production\";\nvar DEBUG = false;\n/**\n * Return the bottom coordinate of the layout.\n *\n * @param  {Array} layout Layout array.\n * @return {Number}       Bottom coordinate.\n */\n\nfunction bottom(layout\n/*: Layout*/\n)\n/*: number*/\n{\n  var max = 0,\n      bottomY;\n\n  for (var i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h;\n    if (bottomY > max) max = bottomY;\n  }\n\n  return max;\n}\n\nfunction cloneLayout(layout\n/*: Layout*/\n)\n/*: Layout*/\n{\n  var newLayout = Array(layout.length);\n\n  for (var i = 0, len = layout.length; i < len; i++) {\n    newLayout[i] = cloneLayoutItem(layout[i]);\n  }\n\n  return newLayout;\n} // Fast path to cloning, since this is monomorphic\n\n\nfunction cloneLayoutItem(layoutItem\n/*: LayoutItem*/\n)\n/*: LayoutItem*/\n{\n  return {\n    w: layoutItem.w,\n    h: layoutItem.h,\n    x: layoutItem.x,\n    y: layoutItem.y,\n    i: layoutItem.i,\n    minW: layoutItem.minW,\n    maxW: layoutItem.maxW,\n    minH: layoutItem.minH,\n    maxH: layoutItem.maxH,\n    moved: Boolean(layoutItem.moved),\n    static: Boolean(layoutItem.static),\n    // These can be null\n    isDraggable: layoutItem.isDraggable,\n    isResizable: layoutItem.isResizable\n  };\n}\n/**\n * Comparing React `children` is a bit difficult. This is a good way to compare them.\n * This will catch differences in keys, order, and length.\n */\n\n\nfunction childrenEqual(a\n/*: ReactChildren*/\n, b\n/*: ReactChildren*/\n)\n/*: boolean*/\n{\n  return (0, _lodash.default)(_react.default.Children.map(a, function (c) {\n    return c.key;\n  }), _react.default.Children.map(b, function (c) {\n    return c.key;\n  }));\n}\n/**\n * See `fastRGLPropsEqual.js`.\n * We want this to run as fast as possible - it is called often - and to be\n * resilient to new props that we add. So rather than call lodash.isEqual,\n * which isn't suited to comparing props very well, we use this specialized\n * function in conjunction with preval to generate the fastest possible comparison\n * function, tuned for exactly our props.\n */\n\n/*:: type FastRGLPropsEqual = (Object, Object, Function) => boolean;*/\n\n\nvar fastRGLPropsEqual\n/*: FastRGLPropsEqual*/\n= require(\"./fastRGLPropsEqual\"); // Like the above, but a lot simpler.\n\n\nexports.fastRGLPropsEqual = fastRGLPropsEqual;\n\nfunction fastPositionEqual(a\n/*: Position*/\n, b\n/*: Position*/\n) {\n  return a.left === b.left && a.top === b.top && a.width === b.width && a.height === b.height;\n}\n/**\n * Given two layoutitems, check if they collide.\n */\n\n\nfunction collides(l1\n/*: LayoutItem*/\n, l2\n/*: LayoutItem*/\n)\n/*: boolean*/\n{\n  if (l1.i === l2.i) return false; // same element\n\n  if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\n\n  if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\n\n  if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\n\n  if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\n\n  return true; // boxes overlap\n}\n/**\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\n * between items.\n *\n * Does not modify layout items (clones). Creates a new layout array.\n *\n * @param  {Array} layout Layout.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}       Compacted Layout.\n */\n\n\nfunction compact(layout\n/*: Layout*/\n, compactType\n/*: CompactType*/\n, cols\n/*: number*/\n)\n/*: Layout*/\n{\n  // Statics go in the compareWith array right away so items flow around them.\n  var compareWith = getStatics(layout); // We go through the items by row and column.\n\n  var sorted = sortLayoutItems(layout, compactType); // Holding for new items.\n\n  var out = Array(layout.length);\n\n  for (var i = 0, len = sorted.length; i < len; i++) {\n    var l = cloneLayoutItem(sorted[i]); // Don't move static elements\n\n    if (!l.static) {\n      l = compactItem(compareWith, l, compactType, cols, sorted); // Add to comparison array. We only collide with items before this one.\n      // Statics are already in this array.\n\n      compareWith.push(l);\n    } // Add to output array to make sure they still come out in the right order.\n\n\n    out[layout.indexOf(sorted[i])] = l; // Clear moved flag, if it exists.\n\n    l.moved = false;\n  }\n\n  return out;\n}\n\nvar heightWidth = {\n  x: \"w\",\n  y: \"h\"\n};\n/**\n * Before moving item down, it will check if the movement will cause collisions and move those items down before.\n */\n\nfunction resolveCompactionCollision(layout\n/*: Layout*/\n, item\n/*: LayoutItem*/\n, moveToCoord\n/*: number*/\n, axis\n/*: \"x\" | \"y\"*/\n) {\n  var sizeProp = heightWidth[axis];\n  item[axis] += 1;\n  var itemIndex = layout.map(function (layoutItem) {\n    return layoutItem.i;\n  }).indexOf(item.i); // Go through each item we collide with.\n\n  for (var i = itemIndex + 1; i < layout.length; i++) {\n    var otherItem = layout[i]; // Ignore static items\n\n    if (otherItem.static) continue; // Optimization: we can break early if we know we're past this el\n    // We can do this b/c it's a sorted layout\n\n    if (otherItem.y > item.y + item.h) break;\n\n    if (collides(item, otherItem)) {\n      resolveCompactionCollision(layout, otherItem, moveToCoord + item[sizeProp], axis);\n    }\n  }\n\n  item[axis] = moveToCoord;\n}\n/**\n * Compact an item in the layout.\n *\n * Modifies item.\n *\n */\n\n\nfunction compactItem(compareWith\n/*: Layout*/\n, l\n/*: LayoutItem*/\n, compactType\n/*: CompactType*/\n, cols\n/*: number*/\n, fullLayout\n/*: Layout*/\n)\n/*: LayoutItem*/\n{\n  var compactV = compactType === \"vertical\";\n  var compactH = compactType === \"horizontal\";\n\n  if (compactV) {\n    // Bottom 'y' possible is the bottom of the layout.\n    // This allows you to do nice stuff like specify {y: Infinity}\n    // This is here because the layout must be sorted in order to get the correct bottom `y`.\n    l.y = Math.min(bottom(compareWith), l.y); // Move the element up as far as it can go without colliding.\n\n    while (l.y > 0 && !getFirstCollision(compareWith, l)) {\n      l.y--;\n    }\n  } else if (compactH) {\n    l.y = Math.min(bottom(compareWith), l.y); // Move the element left as far as it can go without colliding.\n\n    while (l.x > 0 && !getFirstCollision(compareWith, l)) {\n      l.x--;\n    }\n  } // Move it down, and keep moving it down if it's colliding.\n\n\n  var collides;\n\n  while (collides = getFirstCollision(compareWith, l)) {\n    if (compactH) {\n      resolveCompactionCollision(fullLayout, l, collides.x + collides.w, \"x\");\n    } else {\n      resolveCompactionCollision(fullLayout, l, collides.y + collides.h, \"y\");\n    } // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\n\n\n    if (compactH && l.x + l.w > cols) {\n      l.x = cols - l.w;\n      l.y++;\n    }\n  }\n\n  return l;\n}\n/**\n * Given a layout, make sure all elements fit within its bounds.\n *\n * Modifies layout items.\n *\n * @param  {Array} layout Layout array.\n * @param  {Number} bounds Number of columns.\n */\n\n\nfunction correctBounds(layout\n/*: Layout*/\n, bounds\n/*: { cols: number }*/\n)\n/*: Layout*/\n{\n  var collidesWith = getStatics(layout);\n\n  for (var i = 0, len = layout.length; i < len; i++) {\n    var l = layout[i]; // Overflows right\n\n    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w; // Overflows left\n\n    if (l.x < 0) {\n      l.x = 0;\n      l.w = bounds.cols;\n    }\n\n    if (!l.static) collidesWith.push(l);else {\n      // If this is static and collides with other statics, we must move it down.\n      // We have to do something nicer than just letting them overlap.\n      while (getFirstCollision(collidesWith, l)) {\n        l.y++;\n      }\n    }\n  }\n\n  return layout;\n}\n/**\n * Get a layout item by ID. Used so we can override later on if necessary.\n *\n * @param  {Array}  layout Layout array.\n * @param  {String} id     ID\n * @return {LayoutItem}    Item at ID.\n */\n\n\nfunction getLayoutItem(layout\n/*: Layout*/\n, id\n/*: string*/\n)\n/*: ?LayoutItem*/\n{\n  for (var i = 0, len = layout.length; i < len; i++) {\n    if (layout[i].i === id) return layout[i];\n  }\n}\n/**\n * Returns the first item this layout collides with.\n * It doesn't appear to matter which order we approach this from, although\n * perhaps that is the wrong thing to do.\n *\n * @param  {Object} layoutItem Layout item.\n * @return {Object|undefined}  A colliding layout item, or undefined.\n */\n\n\nfunction getFirstCollision(layout\n/*: Layout*/\n, layoutItem\n/*: LayoutItem*/\n)\n/*: ?LayoutItem*/\n{\n  for (var i = 0, len = layout.length; i < len; i++) {\n    if (collides(layout[i], layoutItem)) return layout[i];\n  }\n}\n\nfunction getAllCollisions(layout\n/*: Layout*/\n, layoutItem\n/*: LayoutItem*/\n)\n/*: Array<LayoutItem>*/\n{\n  return layout.filter(function (l) {\n    return collides(l, layoutItem);\n  });\n}\n/**\n * Get all static elements.\n * @param  {Array} layout Array of layout objects.\n * @return {Array}        Array of static layout items..\n */\n\n\nfunction getStatics(layout\n/*: Layout*/\n)\n/*: Array<LayoutItem>*/\n{\n  return layout.filter(function (l) {\n    return l.static;\n  });\n}\n/**\n * Move an element. Responsible for doing cascading movements of other elements.\n *\n * Modifies layout items.\n *\n * @param  {Array}      layout            Full layout to modify.\n * @param  {LayoutItem} l                 element to move.\n * @param  {Number}     [x]               X position in grid units.\n * @param  {Number}     [y]               Y position in grid units.\n */\n\n\nfunction moveElement(layout\n/*: Layout*/\n, l\n/*: LayoutItem*/\n, x\n/*: ?number*/\n, y\n/*: ?number*/\n, isUserAction\n/*: ?boolean*/\n, preventCollision\n/*: ?boolean*/\n, compactType\n/*: CompactType*/\n, cols\n/*: number*/\n)\n/*: Layout*/\n{\n  // If this is static and not explicitly enabled as draggable,\n  // no move is possible, so we can short-circuit this immediately.\n  if (l.static && l.isDraggable !== true) return layout; // Short-circuit if nothing to do.\n\n  if (l.y === y && l.x === x) return layout;\n  log(\"Moving element \".concat(l.i, \" to [\").concat(String(x), \",\").concat(String(y), \"] from [\").concat(l.x, \",\").concat(l.y, \"]\"));\n  var oldX = l.x;\n  var oldY = l.y; // This is quite a bit faster than extending the object\n\n  if (typeof x === \"number\") l.x = x;\n  if (typeof y === \"number\") l.y = y;\n  l.moved = true; // If this collides with anything, move it.\n  // When doing this comparison, we have to sort the items we compare with\n  // to ensure, in the case of multiple collisions, that we're getting the\n  // nearest collision.\n\n  var sorted = sortLayoutItems(layout, compactType);\n  var movingUp = compactType === \"vertical\" && typeof y === \"number\" ? oldY >= y : compactType === \"horizontal\" && typeof x === \"number\" ? oldX >= x : false; // $FlowIgnore acceptable modification of read-only array as it was recently cloned\n\n  if (movingUp) sorted = sorted.reverse();\n  var collisions = getAllCollisions(sorted, l); // There was a collision; abort\n\n  if (preventCollision && collisions.length) {\n    log(\"Collision prevented on \".concat(l.i, \", reverting.\"));\n    l.x = oldX;\n    l.y = oldY;\n    l.moved = false;\n    return layout;\n  } // Move each item that collides away from this element.\n\n\n  for (var i = 0, len = collisions.length; i < len; i++) {\n    var collision = collisions[i];\n    log(\"Resolving collision between \".concat(l.i, \" at [\").concat(l.x, \",\").concat(l.y, \"] and \").concat(collision.i, \" at [\").concat(collision.x, \",\").concat(collision.y, \"]\")); // Short circuit so we can't infinite loop\n\n    if (collision.moved) continue; // Don't move static items - we have to move *this* element away\n\n    if (collision.static) {\n      layout = moveElementAwayFromCollision(layout, collision, l, isUserAction, compactType, cols);\n    } else {\n      layout = moveElementAwayFromCollision(layout, l, collision, isUserAction, compactType, cols);\n    }\n  }\n\n  return layout;\n}\n/**\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\n * We attempt to move it up if there's room, otherwise it goes below.\n *\n * @param  {Array} layout            Full layout to modify.\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\n */\n\n\nfunction moveElementAwayFromCollision(layout\n/*: Layout*/\n, collidesWith\n/*: LayoutItem*/\n, itemToMove\n/*: LayoutItem*/\n, isUserAction\n/*: ?boolean*/\n, compactType\n/*: CompactType*/\n, cols\n/*: number*/\n)\n/*: Layout*/\n{\n  var compactH = compactType === \"horizontal\"; // Compact vertically if not set to horizontal\n\n  var compactV = compactType !== \"horizontal\";\n  var preventCollision = collidesWith.static; // we're already colliding (not for static items)\n  // If there is enough space above the collision to put this element, move it there.\n  // We only do this on the main collision as this can get funky in cascades and cause\n  // unwanted swapping behavior.\n\n  if (isUserAction) {\n    // Reset isUserAction flag because we're not in the main collision anymore.\n    isUserAction = false; // Make a mock item so we don't modify the item here, only modify in moveElement.\n\n    var fakeItem\n    /*: LayoutItem*/\n    = {\n      x: compactH ? Math.max(collidesWith.x - itemToMove.w, 0) : itemToMove.x,\n      y: compactV ? Math.max(collidesWith.y - itemToMove.h, 0) : itemToMove.y,\n      w: itemToMove.w,\n      h: itemToMove.h,\n      i: \"-1\"\n    }; // No collision? If so, we can go up there; otherwise, we'll end up moving down as normal\n\n    if (!getFirstCollision(layout, fakeItem)) {\n      log(\"Doing reverse collision on \".concat(itemToMove.i, \" up to [\").concat(fakeItem.x, \",\").concat(fakeItem.y, \"].\"));\n      return moveElement(layout, itemToMove, compactH ? fakeItem.x : undefined, compactV ? fakeItem.y : undefined, isUserAction, preventCollision, compactType, cols);\n    }\n  }\n\n  return moveElement(layout, itemToMove, compactH ? itemToMove.x + 1 : undefined, compactV ? itemToMove.y + 1 : undefined, isUserAction, preventCollision, compactType, cols);\n}\n/**\n * Helper to convert a number to a percentage string.\n *\n * @param  {Number} num Any number\n * @return {String}     That number as a percentage.\n */\n\n\nfunction perc(num\n/*: number*/\n)\n/*: string*/\n{\n  return num * 100 + \"%\";\n}\n\nfunction setTransform(_ref)\n/*: Object*/\n{\n  var top = _ref.top,\n      left = _ref.left,\n      width = _ref.width,\n      height = _ref.height; // Replace unitless items with px\n\n  var translate = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: \"\".concat(width, \"px\"),\n    height: \"\".concat(height, \"px\"),\n    position: \"absolute\"\n  };\n}\n\nfunction setTopLeft(_ref2)\n/*: Object*/\n{\n  var top = _ref2.top,\n      left = _ref2.left,\n      width = _ref2.width,\n      height = _ref2.height;\n  return {\n    top: \"\".concat(top, \"px\"),\n    left: \"\".concat(left, \"px\"),\n    width: \"\".concat(width, \"px\"),\n    height: \"\".concat(height, \"px\"),\n    position: \"absolute\"\n  };\n}\n/**\n * Get layout items sorted from top left to right and down.\n *\n * @return {Array} Array of layout objects.\n * @return {Array}        Layout, sorted static items first.\n */\n\n\nfunction sortLayoutItems(layout\n/*: Layout*/\n, compactType\n/*: CompactType*/\n)\n/*: Layout*/\n{\n  if (compactType === \"horizontal\") return sortLayoutItemsByColRow(layout);else return sortLayoutItemsByRowCol(layout);\n}\n/**\n * Sort layout items by row ascending and column ascending.\n *\n * Does not modify Layout.\n */\n\n\nfunction sortLayoutItemsByRowCol(layout\n/*: Layout*/\n)\n/*: Layout*/\n{\n  // Slice to clone array as sort modifies\n  return layout.slice(0).sort(function (a, b) {\n    if (a.y > b.y || a.y === b.y && a.x > b.x) {\n      return 1;\n    } else if (a.y === b.y && a.x === b.x) {\n      // Without this, we can get different sort results in IE vs. Chrome/FF\n      return 0;\n    }\n\n    return -1;\n  });\n}\n/**\n * Sort layout items by column ascending then row ascending.\n *\n * Does not modify Layout.\n */\n\n\nfunction sortLayoutItemsByColRow(layout\n/*: Layout*/\n)\n/*: Layout*/\n{\n  return layout.slice(0).sort(function (a, b) {\n    if (a.x > b.x || a.x === b.x && a.y > b.y) {\n      return 1;\n    }\n\n    return -1;\n  });\n}\n/**\n * Generate a layout using the initialLayout and children as a template.\n * Missing entries will be added, extraneous ones will be truncated.\n *\n * Does not modify initialLayout.\n *\n * @param  {Array}  initialLayout Layout passed in through props.\n * @param  {String} breakpoint    Current responsive breakpoint.\n * @param  {?String} compact      Compaction option.\n * @return {Array}                Working layout.\n */\n\n\nfunction synchronizeLayoutWithChildren(initialLayout\n/*: Layout*/\n, children\n/*: ReactChildren*/\n, cols\n/*: number*/\n, compactType\n/*: CompactType*/\n)\n/*: Layout*/\n{\n  initialLayout = initialLayout || []; // Generate one layout item per child.\n\n  var layout\n  /*: LayoutItem[]*/\n  = [];\n\n  _react.default.Children.forEach(children, function (child\n  /*: ReactElement<any>*/\n  , i\n  /*: number*/\n  ) {\n    // Don't overwrite if it already exists.\n    var exists = getLayoutItem(initialLayout, String(child.key));\n\n    if (exists) {\n      layout[i] = cloneLayoutItem(exists);\n    } else {\n      if (!isProduction && child.props._grid) {\n        console.warn(\"`_grid` properties on children have been deprecated as of React 15.2. \" + // eslint-disable-line\n        \"Please use `data-grid` or add your properties directly to the `layout`.\");\n      }\n\n      var g = child.props[\"data-grid\"] || child.props._grid; // Hey, this item has a data-grid property, use it.\n\n      if (g) {\n        if (!isProduction) {\n          validateLayout([g], \"ReactGridLayout.children\");\n        }\n\n        layout[i] = cloneLayoutItem(_objectSpread({}, g, {\n          i: child.key\n        }));\n      } else {\n        // Nothing provided: ensure this is added to the bottom\n        layout[i] = cloneLayoutItem({\n          w: 1,\n          h: 1,\n          x: 0,\n          y: bottom(layout),\n          i: String(child.key)\n        });\n      }\n    }\n  }); // Correct the layout.\n\n\n  var correctedLayout = correctBounds(layout, {\n    cols: cols\n  });\n  return compact(correctedLayout, compactType, cols);\n}\n/**\n * Validate a layout. Throws errors.\n *\n * @param  {Array}  layout        Array of layout items.\n * @param  {String} [contextName] Context name for errors.\n * @throw  {Error}                Validation error.\n */\n\n\nfunction validateLayout(layout\n/*: Layout*/\n)\n/*: void*/\n{\n  var contextName\n  /*: string*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Layout\";\n  var subProps = [\"x\", \"y\", \"w\", \"h\"];\n  if (!Array.isArray(layout)) throw new Error(contextName + \" must be an array!\");\n\n  for (var i = 0, len = layout.length; i < len; i++) {\n    var item = layout[i];\n\n    for (var j = 0; j < subProps.length; j++) {\n      if (typeof item[subProps[j]] !== \"number\") {\n        throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + i + \"].\" + subProps[j] + \" must be a number!\");\n      }\n    }\n\n    if (item.i && typeof item.i !== \"string\") {\n      throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + i + \"].i must be a string!\");\n    }\n\n    if (item.static !== undefined && typeof item.static !== \"boolean\") {\n      throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + i + \"].static must be a boolean!\");\n    }\n  }\n} // Legacy support for verticalCompact: false\n\n\nfunction compactType(props\n/*: ?{ verticalCompact: boolean, compactType: CompactType }*/\n)\n/*: CompactType*/\n{\n  var _ref3 = props || {},\n      verticalCompact = _ref3.verticalCompact,\n      compactType = _ref3.compactType;\n\n  return verticalCompact === false ? null : compactType;\n} // Flow can't really figure this out, so we just use Object\n\n\nfunction autoBindHandlers(el\n/*: Object*/\n, fns\n/*: Array<string>*/\n)\n/*: void*/\n{\n  fns.forEach(function (key) {\n    return el[key] = el[key].bind(el);\n  });\n}\n\nfunction log() {\n  var _console;\n\n  if (!DEBUG) return; // eslint-disable-next-line no-console\n\n  (_console = console).log.apply(_console, arguments);\n}\n\nvar noop = function noop() {};\n\nexports.noop = noop;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-grid-layout/build/utils.js"],"names":["Object","defineProperty","exports","value","bottom","cloneLayout","cloneLayoutItem","childrenEqual","fastPositionEqual","collides","compact","compactItem","correctBounds","getLayoutItem","getFirstCollision","getAllCollisions","getStatics","moveElement","moveElementAwayFromCollision","perc","setTransform","setTopLeft","sortLayoutItems","sortLayoutItemsByRowCol","sortLayoutItemsByColRow","synchronizeLayoutWithChildren","validateLayout","compactType","autoBindHandlers","noop","fastRGLPropsEqual","_lodash","_interopRequireDefault","require","_react","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","isProduction","process","env","NODE_ENV","DEBUG","layout","max","bottomY","len","y","h","newLayout","Array","layoutItem","w","x","minW","maxW","minH","maxH","moved","Boolean","static","isDraggable","isResizable","a","b","Children","map","c","left","top","width","height","l1","l2","cols","compareWith","sorted","out","l","indexOf","heightWidth","resolveCompactionCollision","item","moveToCoord","axis","sizeProp","itemIndex","otherItem","fullLayout","compactV","compactH","Math","min","bounds","collidesWith","id","isUserAction","preventCollision","log","concat","String","oldX","oldY","movingUp","reverse","collisions","collision","itemToMove","fakeItem","undefined","num","_ref","translate","transform","WebkitTransform","MozTransform","msTransform","OTransform","position","_ref2","slice","sort","initialLayout","children","child","exists","props","_grid","console","warn","g","correctedLayout","contextName","subProps","isArray","Error","j","_ref3","verticalCompact","el","fns","bind","_console"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bottom = bottom;\nexports.cloneLayout = cloneLayout;\nexports.cloneLayoutItem = cloneLayoutItem;\nexports.childrenEqual = childrenEqual;\nexports.fastPositionEqual = fastPositionEqual;\nexports.collides = collides;\nexports.compact = compact;\nexports.compactItem = compactItem;\nexports.correctBounds = correctBounds;\nexports.getLayoutItem = getLayoutItem;\nexports.getFirstCollision = getFirstCollision;\nexports.getAllCollisions = getAllCollisions;\nexports.getStatics = getStatics;\nexports.moveElement = moveElement;\nexports.moveElementAwayFromCollision = moveElementAwayFromCollision;\nexports.perc = perc;\nexports.setTransform = setTransform;\nexports.setTopLeft = setTopLeft;\nexports.sortLayoutItems = sortLayoutItems;\nexports.sortLayoutItemsByRowCol = sortLayoutItemsByRowCol;\nexports.sortLayoutItemsByColRow = sortLayoutItemsByColRow;\nexports.synchronizeLayoutWithChildren = synchronizeLayoutWithChildren;\nexports.validateLayout = validateLayout;\nexports.compactType = compactType;\nexports.autoBindHandlers = autoBindHandlers;\nexports.noop = exports.fastRGLPropsEqual = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.isequal\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar isProduction = process.env.NODE_ENV === \"production\";\nvar DEBUG = false;\n/**\n * Return the bottom coordinate of the layout.\n *\n * @param  {Array} layout Layout array.\n * @return {Number}       Bottom coordinate.\n */\n\nfunction bottom(layout\n/*: Layout*/\n)\n/*: number*/\n{\n  var max = 0,\n      bottomY;\n\n  for (var i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h;\n    if (bottomY > max) max = bottomY;\n  }\n\n  return max;\n}\n\nfunction cloneLayout(layout\n/*: Layout*/\n)\n/*: Layout*/\n{\n  var newLayout = Array(layout.length);\n\n  for (var i = 0, len = layout.length; i < len; i++) {\n    newLayout[i] = cloneLayoutItem(layout[i]);\n  }\n\n  return newLayout;\n} // Fast path to cloning, since this is monomorphic\n\n\nfunction cloneLayoutItem(layoutItem\n/*: LayoutItem*/\n)\n/*: LayoutItem*/\n{\n  return {\n    w: layoutItem.w,\n    h: layoutItem.h,\n    x: layoutItem.x,\n    y: layoutItem.y,\n    i: layoutItem.i,\n    minW: layoutItem.minW,\n    maxW: layoutItem.maxW,\n    minH: layoutItem.minH,\n    maxH: layoutItem.maxH,\n    moved: Boolean(layoutItem.moved),\n    static: Boolean(layoutItem.static),\n    // These can be null\n    isDraggable: layoutItem.isDraggable,\n    isResizable: layoutItem.isResizable\n  };\n}\n/**\n * Comparing React `children` is a bit difficult. This is a good way to compare them.\n * This will catch differences in keys, order, and length.\n */\n\n\nfunction childrenEqual(a\n/*: ReactChildren*/\n, b\n/*: ReactChildren*/\n)\n/*: boolean*/\n{\n  return (0, _lodash.default)(_react.default.Children.map(a, function (c) {\n    return c.key;\n  }), _react.default.Children.map(b, function (c) {\n    return c.key;\n  }));\n}\n/**\n * See `fastRGLPropsEqual.js`.\n * We want this to run as fast as possible - it is called often - and to be\n * resilient to new props that we add. So rather than call lodash.isEqual,\n * which isn't suited to comparing props very well, we use this specialized\n * function in conjunction with preval to generate the fastest possible comparison\n * function, tuned for exactly our props.\n */\n\n/*:: type FastRGLPropsEqual = (Object, Object, Function) => boolean;*/\n\n\nvar fastRGLPropsEqual\n/*: FastRGLPropsEqual*/\n= require(\"./fastRGLPropsEqual\"); // Like the above, but a lot simpler.\n\n\nexports.fastRGLPropsEqual = fastRGLPropsEqual;\n\nfunction fastPositionEqual(a\n/*: Position*/\n, b\n/*: Position*/\n) {\n  return a.left === b.left && a.top === b.top && a.width === b.width && a.height === b.height;\n}\n/**\n * Given two layoutitems, check if they collide.\n */\n\n\nfunction collides(l1\n/*: LayoutItem*/\n, l2\n/*: LayoutItem*/\n)\n/*: boolean*/\n{\n  if (l1.i === l2.i) return false; // same element\n\n  if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\n\n  if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\n\n  if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\n\n  if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\n\n  return true; // boxes overlap\n}\n/**\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\n * between items.\n *\n * Does not modify layout items (clones). Creates a new layout array.\n *\n * @param  {Array} layout Layout.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}       Compacted Layout.\n */\n\n\nfunction compact(layout\n/*: Layout*/\n, compactType\n/*: CompactType*/\n, cols\n/*: number*/\n)\n/*: Layout*/\n{\n  // Statics go in the compareWith array right away so items flow around them.\n  var compareWith = getStatics(layout); // We go through the items by row and column.\n\n  var sorted = sortLayoutItems(layout, compactType); // Holding for new items.\n\n  var out = Array(layout.length);\n\n  for (var i = 0, len = sorted.length; i < len; i++) {\n    var l = cloneLayoutItem(sorted[i]); // Don't move static elements\n\n    if (!l.static) {\n      l = compactItem(compareWith, l, compactType, cols, sorted); // Add to comparison array. We only collide with items before this one.\n      // Statics are already in this array.\n\n      compareWith.push(l);\n    } // Add to output array to make sure they still come out in the right order.\n\n\n    out[layout.indexOf(sorted[i])] = l; // Clear moved flag, if it exists.\n\n    l.moved = false;\n  }\n\n  return out;\n}\n\nvar heightWidth = {\n  x: \"w\",\n  y: \"h\"\n};\n/**\n * Before moving item down, it will check if the movement will cause collisions and move those items down before.\n */\n\nfunction resolveCompactionCollision(layout\n/*: Layout*/\n, item\n/*: LayoutItem*/\n, moveToCoord\n/*: number*/\n, axis\n/*: \"x\" | \"y\"*/\n) {\n  var sizeProp = heightWidth[axis];\n  item[axis] += 1;\n  var itemIndex = layout.map(function (layoutItem) {\n    return layoutItem.i;\n  }).indexOf(item.i); // Go through each item we collide with.\n\n  for (var i = itemIndex + 1; i < layout.length; i++) {\n    var otherItem = layout[i]; // Ignore static items\n\n    if (otherItem.static) continue; // Optimization: we can break early if we know we're past this el\n    // We can do this b/c it's a sorted layout\n\n    if (otherItem.y > item.y + item.h) break;\n\n    if (collides(item, otherItem)) {\n      resolveCompactionCollision(layout, otherItem, moveToCoord + item[sizeProp], axis);\n    }\n  }\n\n  item[axis] = moveToCoord;\n}\n/**\n * Compact an item in the layout.\n *\n * Modifies item.\n *\n */\n\n\nfunction compactItem(compareWith\n/*: Layout*/\n, l\n/*: LayoutItem*/\n, compactType\n/*: CompactType*/\n, cols\n/*: number*/\n, fullLayout\n/*: Layout*/\n)\n/*: LayoutItem*/\n{\n  var compactV = compactType === \"vertical\";\n  var compactH = compactType === \"horizontal\";\n\n  if (compactV) {\n    // Bottom 'y' possible is the bottom of the layout.\n    // This allows you to do nice stuff like specify {y: Infinity}\n    // This is here because the layout must be sorted in order to get the correct bottom `y`.\n    l.y = Math.min(bottom(compareWith), l.y); // Move the element up as far as it can go without colliding.\n\n    while (l.y > 0 && !getFirstCollision(compareWith, l)) {\n      l.y--;\n    }\n  } else if (compactH) {\n    l.y = Math.min(bottom(compareWith), l.y); // Move the element left as far as it can go without colliding.\n\n    while (l.x > 0 && !getFirstCollision(compareWith, l)) {\n      l.x--;\n    }\n  } // Move it down, and keep moving it down if it's colliding.\n\n\n  var collides;\n\n  while (collides = getFirstCollision(compareWith, l)) {\n    if (compactH) {\n      resolveCompactionCollision(fullLayout, l, collides.x + collides.w, \"x\");\n    } else {\n      resolveCompactionCollision(fullLayout, l, collides.y + collides.h, \"y\");\n    } // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\n\n\n    if (compactH && l.x + l.w > cols) {\n      l.x = cols - l.w;\n      l.y++;\n    }\n  }\n\n  return l;\n}\n/**\n * Given a layout, make sure all elements fit within its bounds.\n *\n * Modifies layout items.\n *\n * @param  {Array} layout Layout array.\n * @param  {Number} bounds Number of columns.\n */\n\n\nfunction correctBounds(layout\n/*: Layout*/\n, bounds\n/*: { cols: number }*/\n)\n/*: Layout*/\n{\n  var collidesWith = getStatics(layout);\n\n  for (var i = 0, len = layout.length; i < len; i++) {\n    var l = layout[i]; // Overflows right\n\n    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w; // Overflows left\n\n    if (l.x < 0) {\n      l.x = 0;\n      l.w = bounds.cols;\n    }\n\n    if (!l.static) collidesWith.push(l);else {\n      // If this is static and collides with other statics, we must move it down.\n      // We have to do something nicer than just letting them overlap.\n      while (getFirstCollision(collidesWith, l)) {\n        l.y++;\n      }\n    }\n  }\n\n  return layout;\n}\n/**\n * Get a layout item by ID. Used so we can override later on if necessary.\n *\n * @param  {Array}  layout Layout array.\n * @param  {String} id     ID\n * @return {LayoutItem}    Item at ID.\n */\n\n\nfunction getLayoutItem(layout\n/*: Layout*/\n, id\n/*: string*/\n)\n/*: ?LayoutItem*/\n{\n  for (var i = 0, len = layout.length; i < len; i++) {\n    if (layout[i].i === id) return layout[i];\n  }\n}\n/**\n * Returns the first item this layout collides with.\n * It doesn't appear to matter which order we approach this from, although\n * perhaps that is the wrong thing to do.\n *\n * @param  {Object} layoutItem Layout item.\n * @return {Object|undefined}  A colliding layout item, or undefined.\n */\n\n\nfunction getFirstCollision(layout\n/*: Layout*/\n, layoutItem\n/*: LayoutItem*/\n)\n/*: ?LayoutItem*/\n{\n  for (var i = 0, len = layout.length; i < len; i++) {\n    if (collides(layout[i], layoutItem)) return layout[i];\n  }\n}\n\nfunction getAllCollisions(layout\n/*: Layout*/\n, layoutItem\n/*: LayoutItem*/\n)\n/*: Array<LayoutItem>*/\n{\n  return layout.filter(function (l) {\n    return collides(l, layoutItem);\n  });\n}\n/**\n * Get all static elements.\n * @param  {Array} layout Array of layout objects.\n * @return {Array}        Array of static layout items..\n */\n\n\nfunction getStatics(layout\n/*: Layout*/\n)\n/*: Array<LayoutItem>*/\n{\n  return layout.filter(function (l) {\n    return l.static;\n  });\n}\n/**\n * Move an element. Responsible for doing cascading movements of other elements.\n *\n * Modifies layout items.\n *\n * @param  {Array}      layout            Full layout to modify.\n * @param  {LayoutItem} l                 element to move.\n * @param  {Number}     [x]               X position in grid units.\n * @param  {Number}     [y]               Y position in grid units.\n */\n\n\nfunction moveElement(layout\n/*: Layout*/\n, l\n/*: LayoutItem*/\n, x\n/*: ?number*/\n, y\n/*: ?number*/\n, isUserAction\n/*: ?boolean*/\n, preventCollision\n/*: ?boolean*/\n, compactType\n/*: CompactType*/\n, cols\n/*: number*/\n)\n/*: Layout*/\n{\n  // If this is static and not explicitly enabled as draggable,\n  // no move is possible, so we can short-circuit this immediately.\n  if (l.static && l.isDraggable !== true) return layout; // Short-circuit if nothing to do.\n\n  if (l.y === y && l.x === x) return layout;\n  log(\"Moving element \".concat(l.i, \" to [\").concat(String(x), \",\").concat(String(y), \"] from [\").concat(l.x, \",\").concat(l.y, \"]\"));\n  var oldX = l.x;\n  var oldY = l.y; // This is quite a bit faster than extending the object\n\n  if (typeof x === \"number\") l.x = x;\n  if (typeof y === \"number\") l.y = y;\n  l.moved = true; // If this collides with anything, move it.\n  // When doing this comparison, we have to sort the items we compare with\n  // to ensure, in the case of multiple collisions, that we're getting the\n  // nearest collision.\n\n  var sorted = sortLayoutItems(layout, compactType);\n  var movingUp = compactType === \"vertical\" && typeof y === \"number\" ? oldY >= y : compactType === \"horizontal\" && typeof x === \"number\" ? oldX >= x : false; // $FlowIgnore acceptable modification of read-only array as it was recently cloned\n\n  if (movingUp) sorted = sorted.reverse();\n  var collisions = getAllCollisions(sorted, l); // There was a collision; abort\n\n  if (preventCollision && collisions.length) {\n    log(\"Collision prevented on \".concat(l.i, \", reverting.\"));\n    l.x = oldX;\n    l.y = oldY;\n    l.moved = false;\n    return layout;\n  } // Move each item that collides away from this element.\n\n\n  for (var i = 0, len = collisions.length; i < len; i++) {\n    var collision = collisions[i];\n    log(\"Resolving collision between \".concat(l.i, \" at [\").concat(l.x, \",\").concat(l.y, \"] and \").concat(collision.i, \" at [\").concat(collision.x, \",\").concat(collision.y, \"]\")); // Short circuit so we can't infinite loop\n\n    if (collision.moved) continue; // Don't move static items - we have to move *this* element away\n\n    if (collision.static) {\n      layout = moveElementAwayFromCollision(layout, collision, l, isUserAction, compactType, cols);\n    } else {\n      layout = moveElementAwayFromCollision(layout, l, collision, isUserAction, compactType, cols);\n    }\n  }\n\n  return layout;\n}\n/**\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\n * We attempt to move it up if there's room, otherwise it goes below.\n *\n * @param  {Array} layout            Full layout to modify.\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\n */\n\n\nfunction moveElementAwayFromCollision(layout\n/*: Layout*/\n, collidesWith\n/*: LayoutItem*/\n, itemToMove\n/*: LayoutItem*/\n, isUserAction\n/*: ?boolean*/\n, compactType\n/*: CompactType*/\n, cols\n/*: number*/\n)\n/*: Layout*/\n{\n  var compactH = compactType === \"horizontal\"; // Compact vertically if not set to horizontal\n\n  var compactV = compactType !== \"horizontal\";\n  var preventCollision = collidesWith.static; // we're already colliding (not for static items)\n  // If there is enough space above the collision to put this element, move it there.\n  // We only do this on the main collision as this can get funky in cascades and cause\n  // unwanted swapping behavior.\n\n  if (isUserAction) {\n    // Reset isUserAction flag because we're not in the main collision anymore.\n    isUserAction = false; // Make a mock item so we don't modify the item here, only modify in moveElement.\n\n    var fakeItem\n    /*: LayoutItem*/\n    = {\n      x: compactH ? Math.max(collidesWith.x - itemToMove.w, 0) : itemToMove.x,\n      y: compactV ? Math.max(collidesWith.y - itemToMove.h, 0) : itemToMove.y,\n      w: itemToMove.w,\n      h: itemToMove.h,\n      i: \"-1\"\n    }; // No collision? If so, we can go up there; otherwise, we'll end up moving down as normal\n\n    if (!getFirstCollision(layout, fakeItem)) {\n      log(\"Doing reverse collision on \".concat(itemToMove.i, \" up to [\").concat(fakeItem.x, \",\").concat(fakeItem.y, \"].\"));\n      return moveElement(layout, itemToMove, compactH ? fakeItem.x : undefined, compactV ? fakeItem.y : undefined, isUserAction, preventCollision, compactType, cols);\n    }\n  }\n\n  return moveElement(layout, itemToMove, compactH ? itemToMove.x + 1 : undefined, compactV ? itemToMove.y + 1 : undefined, isUserAction, preventCollision, compactType, cols);\n}\n/**\n * Helper to convert a number to a percentage string.\n *\n * @param  {Number} num Any number\n * @return {String}     That number as a percentage.\n */\n\n\nfunction perc(num\n/*: number*/\n)\n/*: string*/\n{\n  return num * 100 + \"%\";\n}\n\nfunction setTransform(_ref)\n/*: Object*/\n{\n  var top = _ref.top,\n      left = _ref.left,\n      width = _ref.width,\n      height = _ref.height;\n  // Replace unitless items with px\n  var translate = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: \"\".concat(width, \"px\"),\n    height: \"\".concat(height, \"px\"),\n    position: \"absolute\"\n  };\n}\n\nfunction setTopLeft(_ref2)\n/*: Object*/\n{\n  var top = _ref2.top,\n      left = _ref2.left,\n      width = _ref2.width,\n      height = _ref2.height;\n  return {\n    top: \"\".concat(top, \"px\"),\n    left: \"\".concat(left, \"px\"),\n    width: \"\".concat(width, \"px\"),\n    height: \"\".concat(height, \"px\"),\n    position: \"absolute\"\n  };\n}\n/**\n * Get layout items sorted from top left to right and down.\n *\n * @return {Array} Array of layout objects.\n * @return {Array}        Layout, sorted static items first.\n */\n\n\nfunction sortLayoutItems(layout\n/*: Layout*/\n, compactType\n/*: CompactType*/\n)\n/*: Layout*/\n{\n  if (compactType === \"horizontal\") return sortLayoutItemsByColRow(layout);else return sortLayoutItemsByRowCol(layout);\n}\n/**\n * Sort layout items by row ascending and column ascending.\n *\n * Does not modify Layout.\n */\n\n\nfunction sortLayoutItemsByRowCol(layout\n/*: Layout*/\n)\n/*: Layout*/\n{\n  // Slice to clone array as sort modifies\n  return layout.slice(0).sort(function (a, b) {\n    if (a.y > b.y || a.y === b.y && a.x > b.x) {\n      return 1;\n    } else if (a.y === b.y && a.x === b.x) {\n      // Without this, we can get different sort results in IE vs. Chrome/FF\n      return 0;\n    }\n\n    return -1;\n  });\n}\n/**\n * Sort layout items by column ascending then row ascending.\n *\n * Does not modify Layout.\n */\n\n\nfunction sortLayoutItemsByColRow(layout\n/*: Layout*/\n)\n/*: Layout*/\n{\n  return layout.slice(0).sort(function (a, b) {\n    if (a.x > b.x || a.x === b.x && a.y > b.y) {\n      return 1;\n    }\n\n    return -1;\n  });\n}\n/**\n * Generate a layout using the initialLayout and children as a template.\n * Missing entries will be added, extraneous ones will be truncated.\n *\n * Does not modify initialLayout.\n *\n * @param  {Array}  initialLayout Layout passed in through props.\n * @param  {String} breakpoint    Current responsive breakpoint.\n * @param  {?String} compact      Compaction option.\n * @return {Array}                Working layout.\n */\n\n\nfunction synchronizeLayoutWithChildren(initialLayout\n/*: Layout*/\n, children\n/*: ReactChildren*/\n, cols\n/*: number*/\n, compactType\n/*: CompactType*/\n)\n/*: Layout*/\n{\n  initialLayout = initialLayout || []; // Generate one layout item per child.\n\n  var layout\n  /*: LayoutItem[]*/\n  = [];\n\n  _react.default.Children.forEach(children, function (child\n  /*: ReactElement<any>*/\n  , i\n  /*: number*/\n  ) {\n    // Don't overwrite if it already exists.\n    var exists = getLayoutItem(initialLayout, String(child.key));\n\n    if (exists) {\n      layout[i] = cloneLayoutItem(exists);\n    } else {\n      if (!isProduction && child.props._grid) {\n        console.warn(\"`_grid` properties on children have been deprecated as of React 15.2. \" + // eslint-disable-line\n        \"Please use `data-grid` or add your properties directly to the `layout`.\");\n      }\n\n      var g = child.props[\"data-grid\"] || child.props._grid; // Hey, this item has a data-grid property, use it.\n\n      if (g) {\n        if (!isProduction) {\n          validateLayout([g], \"ReactGridLayout.children\");\n        }\n\n        layout[i] = cloneLayoutItem(_objectSpread({}, g, {\n          i: child.key\n        }));\n      } else {\n        // Nothing provided: ensure this is added to the bottom\n        layout[i] = cloneLayoutItem({\n          w: 1,\n          h: 1,\n          x: 0,\n          y: bottom(layout),\n          i: String(child.key)\n        });\n      }\n    }\n  }); // Correct the layout.\n\n\n  var correctedLayout = correctBounds(layout, {\n    cols: cols\n  });\n  return compact(correctedLayout, compactType, cols);\n}\n/**\n * Validate a layout. Throws errors.\n *\n * @param  {Array}  layout        Array of layout items.\n * @param  {String} [contextName] Context name for errors.\n * @throw  {Error}                Validation error.\n */\n\n\nfunction validateLayout(layout\n/*: Layout*/\n)\n/*: void*/\n{\n  var contextName\n  /*: string*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Layout\";\n  var subProps = [\"x\", \"y\", \"w\", \"h\"];\n  if (!Array.isArray(layout)) throw new Error(contextName + \" must be an array!\");\n\n  for (var i = 0, len = layout.length; i < len; i++) {\n    var item = layout[i];\n\n    for (var j = 0; j < subProps.length; j++) {\n      if (typeof item[subProps[j]] !== \"number\") {\n        throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + i + \"].\" + subProps[j] + \" must be a number!\");\n      }\n    }\n\n    if (item.i && typeof item.i !== \"string\") {\n      throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + i + \"].i must be a string!\");\n    }\n\n    if (item.static !== undefined && typeof item.static !== \"boolean\") {\n      throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + i + \"].static must be a boolean!\");\n    }\n  }\n} // Legacy support for verticalCompact: false\n\n\nfunction compactType(props\n/*: ?{ verticalCompact: boolean, compactType: CompactType }*/\n)\n/*: CompactType*/\n{\n  var _ref3 = props || {},\n      verticalCompact = _ref3.verticalCompact,\n      compactType = _ref3.compactType;\n\n  return verticalCompact === false ? null : compactType;\n} // Flow can't really figure this out, so we just use Object\n\n\nfunction autoBindHandlers(el\n/*: Object*/\n, fns\n/*: Array<string>*/\n)\n/*: void*/\n{\n  fns.forEach(function (key) {\n    return el[key] = el[key].bind(el);\n  });\n}\n\nfunction log() {\n  var _console;\n\n  if (!DEBUG) return; // eslint-disable-next-line no-console\n\n  (_console = console).log.apply(_console, arguments);\n}\n\nvar noop = function noop() {};\n\nexports.noop = noop;"]},"metadata":{},"sourceType":"script"}