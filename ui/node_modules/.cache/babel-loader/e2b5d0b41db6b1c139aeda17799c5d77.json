{"ast":null,"code":"ace.define(\"ace/mode/zeek_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var ZeekHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.line\",\n        regex: \"#.*$\"\n      }, {\n        token: \"string.double\",\n        regex: /\"/,\n        next: \"string-state\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"(/)(?=.*/)\",\n        next: \"pattern-state\"\n      }, {\n        token: [\"keyword.other\", \"meta.preprocessor\"],\n        regex: /(@(?:load-plugin|load-sigs|load|unload))(.*$)/\n      }, {\n        token: \"keyword.other\",\n        regex: /@(?:DEBUG|DIR|FILENAME|deprecated|if|ifdef|ifndef|else|endif)/\n      }, {\n        token: [\"keyword.other\", \"meta.preprocessor\", \"keyword.operator\", \"meta.preprocessor\"],\n        regex: /(@prefixes)(\\s*)(\\+?=)(.*$)/\n      }, {\n        token: \"storage.modifier.attribute\",\n        regex: /\\&\\b(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|error_handler|type_column|deprecated)\\b/\n      }, {\n        token: \"constant.language\",\n        regex: /\\b(?:T|F)\\b/\n      }, {\n        token: \"constant.numeric.port\",\n        regex: /\\b\\d{1,5}\\/(?:udp|tcp|icmp|unknown)\\b/\n      }, {\n        token: \"constant.numeric.addr\",\n        regex: /\\b(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\b/,\n        comment: \"IPv4 address\"\n      }, {\n        token: \"constant.numeric.addr\",\n        regex: /\\[(?:[0-9a-fA-F]{0,4}:){2,7}(?:[0-9a-fA-F]{0,4})?(?:(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2}))?\\]/,\n        comment: \"IPv6 address\"\n      }, {\n        token: \"constant.numeric.float.decimal.interval\",\n        regex: /(?:(?:\\d*\\.\\d*(?:[eE][+-]?\\d+)?|\\d*[eE][+-]?\\d+|\\d*\\.\\d*)|\\d+)\\s*(?:day|hr|min|msec|usec|sec)s?/\n      }, {\n        token: \"constant.numeric.float.decimal\",\n        regex: /\\d*\\.\\d*(?:[eE][+-]?\\d+)?|\\d*[eE][+-]?\\d+|\\d*\\.\\d*/\n      }, {\n        token: \"constant.numeric.hostname\",\n        regex: /\\b[A-Za-z0-9][A-Za-z0-9\\-]*(?:\\.[A-Za-z0-9][A-Za-z0-9\\-]*)+\\b/\n      }, {\n        token: \"constant.numeric.integer.hexadecimal\",\n        regex: /\\b0x[0-9a-fA-F]+\\b/\n      }, {\n        token: \"constant.numeric.integer.decimal\",\n        regex: /\\b\\d+\\b/\n      }, {\n        token: \"keyword.operator\",\n        regex: /==|!=|<=|<|>=|>/\n      }, {\n        token: \"keyword.operator\",\n        regex: /(&&)|(\\|\\|)|(!)/\n      }, {\n        token: \"keyword.operator\",\n        regex: /=|\\+=|-=/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\+\\+|\\+|--|-|\\*|\\/|%/\n      }, {\n        token: \"keyword.operator\",\n        regex: /&|\\||\\^|~/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\b(?:in|as|is)\\b/\n      }, {\n        token: \"punctuation.terminator\",\n        regex: /;/\n      }, {\n        token: \"punctuation.accessor\",\n        regex: /\\??\\$/\n      }, {\n        token: \"punctuation.accessor\",\n        regex: /::/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\?/\n      }, {\n        token: \"punctuation.separator\",\n        regex: /:/\n      }, {\n        token: \"punctuation.separator\",\n        regex: /,/\n      }, {\n        token: [\"keyword.other\", \"meta.namespace\", \"entity.name.namespace\"],\n        regex: /(module)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)/\n      }, {\n        token: \"keyword.other\",\n        regex: /\\bexport\\b/\n      }, {\n        token: \"keyword.control.conditional\",\n        regex: /\\b(?:if|else)\\b/\n      }, {\n        token: \"keyword.control\",\n        regex: /\\b(?:for|while)\\b/\n      }, {\n        token: \"keyword.control\",\n        regex: /\\b(?:return|break|next|continue|fallthrough)\\b/\n      }, {\n        token: \"keyword.control\",\n        regex: /\\b(?:switch|default|case)\\b/\n      }, {\n        token: \"keyword.other\",\n        regex: /\\b(?:add|delete)\\b/\n      }, {\n        token: \"keyword.other\",\n        regex: /\\bprint\\b/\n      }, {\n        token: \"keyword.control\",\n        regex: /\\b(?:when|timeout|schedule)\\b/\n      }, {\n        token: [\"keyword.other\", \"meta.struct.record\", \"entity.name.struct.record\", \"meta.struct.record\", \"punctuation.separator\", \"meta.struct.record\", \"storage.type.struct.record\"],\n        regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)(\\s*\\b)(record)\\b/\n      }, {\n        token: [\"keyword.other\", \"meta.enum\", \"entity.name.enum\", \"meta.enum\", \"punctuation.separator\", \"meta.enum\", \"storage.type.enum\"],\n        regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)(\\s*\\b)(enum)\\b/\n      }, {\n        token: [\"keyword.other\", \"meta.type\", \"entity.name.type\", \"meta.type\", \"punctuation.separator\"],\n        regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)/\n      }, {\n        token: [\"keyword.other\", \"meta.struct.record\", \"storage.type.struct.record\", \"meta.struct.record\", \"entity.name.struct.record\"],\n        regex: /\\b(redef)(\\s+)(record)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n      }, {\n        token: [\"keyword.other\", \"meta.enum\", \"storage.type.enum\", \"meta.enum\", \"entity.name.enum\"],\n        regex: /\\b(redef)(\\s+)(enum)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function.event\"],\n        regex: /\\b(event)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function.hook\"],\n        regex: /\\b(hook)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function\"],\n        regex: /\\b(function)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n      }, {\n        token: \"keyword.other\",\n        regex: /\\bredef\\b/\n      }, {\n        token: \"storage.type\",\n        regex: /\\bany\\b/\n      }, {\n        token: \"storage.type\",\n        regex: /\\b(?:enum|record|set|table|vector)\\b/\n      }, {\n        token: [\"storage.type\", \"text\", \"keyword.operator\", \"text\", \"storage.type\"],\n        regex: /\\b(opaque)(\\s+)(of)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\bof\\b/\n      }, {\n        token: \"storage.type\",\n        regex: /\\b(?:addr|bool|count|double|file|int|interval|pattern|port|string|subnet|time)\\b/\n      }, {\n        token: \"storage.type\",\n        regex: /\\b(?:function|hook|event)\\b/\n      }, {\n        token: \"storage.modifier\",\n        regex: /\\b(?:global|local|const|option)\\b/\n      }, {\n        token: \"entity.name.function.call\",\n        regex: /\\b[A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*(?=s*\\()/\n      }, {\n        token: \"punctuation.section.block.begin\",\n        regex: /\\{/\n      }, {\n        token: \"punctuation.section.block.end\",\n        regex: /\\}/\n      }, {\n        token: \"punctuation.section.brackets.begin\",\n        regex: /\\[/\n      }, {\n        token: \"punctuation.section.brackets.end\",\n        regex: /\\]/\n      }, {\n        token: \"punctuation.section.parens.begin\",\n        regex: /\\(/\n      }, {\n        token: \"punctuation.section.parens.end\",\n        regex: /\\)/\n      }],\n      // state: start\n      \"string-state\": [{\n        token: \"constant.character.escape\",\n        regex: /\\\\./\n      }, {\n        token: \"string.double\",\n        regex: /\"/,\n        next: \"start\"\n      }, {\n        token: \"constant.other.placeholder\",\n        regex: /%-?[0-9]*(\\.[0-9]+)?[DTdxsefg]/\n      }, {\n        token: \"string.double\",\n        regex: \".\"\n      }],\n      // state: string-state\n      \"pattern-state\": [{\n        token: \"constant.character.escape\",\n        regex: /\\\\./\n      }, {\n        token: \"string.regexp\",\n        regex: \"/\",\n        next: \"start\"\n      }, {\n        token: \"string.regexp\",\n        regex: \".\"\n      }] // state: pattern-state\n\n    };\n    this.normalizeRules();\n  };\n\n  ZeekHighlightRules.metaData = {\n    fileTypes: [\"bro\", \"zeek\"],\n    name: \"Zeek\",\n    scopeName: \"source.zeek\"\n  };\n  oop.inherits(ZeekHighlightRules, TextHighlightRules);\n  exports.ZeekHighlightRules = ZeekHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/zeek\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/zeek_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var ZeekHighlightRules = require(\"./zeek_highlight_rules\").ZeekHighlightRules;\n\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = ZeekHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/zeek\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/zeek\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-zeek.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","ZeekHighlightRules","$rules","token","regex","next","comment","normalizeRules","metaData","fileTypes","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","lineCommentStart","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/zeek_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar ZeekHighlightRules = function() {\n\n    this.$rules = {\n        \"start\": [\n            {\n            token: \"comment.line\",\n            regex: \"#.*$\"\n            },\n            {\n            token: \"string.double\",\n            regex: /\"/,\n            next: \"string-state\"\n            },\n            {\n            token: \"string.regexp\",\n            regex: \"(/)(?=.*/)\",\n            next: \"pattern-state\"\n            },\n            {\n            token: [\"keyword.other\", \"meta.preprocessor\"],\n            regex: /(@(?:load-plugin|load-sigs|load|unload))(.*$)/\n            },\n            {\n            token: \"keyword.other\",\n            regex: /@(?:DEBUG|DIR|FILENAME|deprecated|if|ifdef|ifndef|else|endif)/\n            },\n            {\n            token: [\n                \"keyword.other\",\n                \"meta.preprocessor\",\n                \"keyword.operator\",\n                \"meta.preprocessor\"\n            ],\n            regex: /(@prefixes)(\\s*)(\\+?=)(.*$)/\n            },\n            {\n            token: \"storage.modifier.attribute\",\n            regex: /\\&\\b(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|error_handler|type_column|deprecated)\\b/\n            },\n            {\n            token: \"constant.language\",\n            regex: /\\b(?:T|F)\\b/\n            },\n            {\n            token: \"constant.numeric.port\",\n            regex: /\\b\\d{1,5}\\/(?:udp|tcp|icmp|unknown)\\b/\n            },\n            {\n            token: \"constant.numeric.addr\",\n            regex: /\\b(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\b/,\n            comment: \"IPv4 address\"\n            },\n            {\n            token: \"constant.numeric.addr\",\n            regex: /\\[(?:[0-9a-fA-F]{0,4}:){2,7}(?:[0-9a-fA-F]{0,4})?(?:(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2}))?\\]/,\n            comment: \"IPv6 address\"\n            },\n            {\n            token: \"constant.numeric.float.decimal.interval\",\n            regex: /(?:(?:\\d*\\.\\d*(?:[eE][+-]?\\d+)?|\\d*[eE][+-]?\\d+|\\d*\\.\\d*)|\\d+)\\s*(?:day|hr|min|msec|usec|sec)s?/\n            },\n            {\n            token: \"constant.numeric.float.decimal\",\n            regex: /\\d*\\.\\d*(?:[eE][+-]?\\d+)?|\\d*[eE][+-]?\\d+|\\d*\\.\\d*/\n            },\n            {\n            token: \"constant.numeric.hostname\",\n            regex: /\\b[A-Za-z0-9][A-Za-z0-9\\-]*(?:\\.[A-Za-z0-9][A-Za-z0-9\\-]*)+\\b/\n            },\n            {\n            token: \"constant.numeric.integer.hexadecimal\",\n            regex: /\\b0x[0-9a-fA-F]+\\b/\n            },\n            {\n            token: \"constant.numeric.integer.decimal\",\n            regex: /\\b\\d+\\b/\n            },\n            {\n            token: \"keyword.operator\",\n            regex: /==|!=|<=|<|>=|>/\n            },\n            {\n            token: \"keyword.operator\",\n            regex: /(&&)|(\\|\\|)|(!)/\n            },\n            {\n            token: \"keyword.operator\",\n            regex: /=|\\+=|-=/\n            },\n            {\n            token: \"keyword.operator\",\n            regex: /\\+\\+|\\+|--|-|\\*|\\/|%/\n            },\n            {\n            token: \"keyword.operator\",\n            regex: /&|\\||\\^|~/\n            },\n            {\n            token: \"keyword.operator\",\n            regex: /\\b(?:in|as|is)\\b/\n            },\n            {\n            token: \"punctuation.terminator\",\n            regex: /;/\n            },\n            {\n            token: \"punctuation.accessor\",\n            regex: /\\??\\$/\n            },\n            {\n            token: \"punctuation.accessor\",\n            regex: /::/\n            },\n            {\n            token: \"keyword.operator\",\n            regex: /\\?/\n            },\n            {\n            token: \"punctuation.separator\",\n            regex: /:/\n            },\n            {\n            token: \"punctuation.separator\",\n            regex: /,/\n            },\n            {\n            token: [\n                \"keyword.other\",\n                \"meta.namespace\",\n                \"entity.name.namespace\"\n            ],\n            regex: /(module)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)/\n            },\n            {\n            token: \"keyword.other\",\n            regex: /\\bexport\\b/\n            },\n            {\n            token: \"keyword.control.conditional\",\n            regex: /\\b(?:if|else)\\b/\n            },\n            {\n            token: \"keyword.control\",\n            regex: /\\b(?:for|while)\\b/\n            },\n            {\n            token: \"keyword.control\",\n            regex: /\\b(?:return|break|next|continue|fallthrough)\\b/\n            },\n            {\n            token: \"keyword.control\",\n            regex: /\\b(?:switch|default|case)\\b/\n            },\n            {\n            token: \"keyword.other\",\n            regex: /\\b(?:add|delete)\\b/\n            },\n            {\n            token: \"keyword.other\",\n            regex: /\\bprint\\b/\n            },\n            {\n            token: \"keyword.control\",\n            regex: /\\b(?:when|timeout|schedule)\\b/\n            },\n            {\n            token: [\n                \"keyword.other\",\n                \"meta.struct.record\",\n                \"entity.name.struct.record\",\n                \"meta.struct.record\",\n                \"punctuation.separator\",\n                \"meta.struct.record\",\n                \"storage.type.struct.record\"\n            ],\n            regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)(\\s*\\b)(record)\\b/\n            },\n            {\n            token: [\n                \"keyword.other\",\n                \"meta.enum\",\n                \"entity.name.enum\",\n                \"meta.enum\",\n                \"punctuation.separator\",\n                \"meta.enum\",\n                \"storage.type.enum\"\n            ],\n            regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)(\\s*\\b)(enum)\\b/\n            },\n            {\n            token: [\n                \"keyword.other\",\n                \"meta.type\",\n                \"entity.name.type\",\n                \"meta.type\",\n                \"punctuation.separator\"\n            ],\n            regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)/\n            },\n            {\n            token: [\n                \"keyword.other\",\n                \"meta.struct.record\",\n                \"storage.type.struct.record\",\n                \"meta.struct.record\",\n                \"entity.name.struct.record\"\n            ],\n            regex: /\\b(redef)(\\s+)(record)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n            },\n            {\n            token: [\n                \"keyword.other\",\n                \"meta.enum\",\n                \"storage.type.enum\",\n                \"meta.enum\",\n                \"entity.name.enum\"\n            ],\n            regex: /\\b(redef)(\\s+)(enum)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n            },\n            {\n            token: [\n                \"storage.type\",\n                \"text\",\n                \"entity.name.function.event\"\n            ],\n            regex: /\\b(event)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n            },\n            {\n            token: [\n                \"storage.type\",\n                \"text\",\n                \"entity.name.function.hook\"\n            ],\n            regex: /\\b(hook)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n            },\n            {\n            token: [\n                \"storage.type\",\n                \"text\",\n                \"entity.name.function\"\n            ],\n            regex: /\\b(function)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n            },\n            {\n            token: \"keyword.other\",\n            regex: /\\bredef\\b/\n            },\n            {\n            token: \"storage.type\",\n            regex: /\\bany\\b/\n            },\n            {\n            token: \"storage.type\",\n            regex: /\\b(?:enum|record|set|table|vector)\\b/\n            },\n            {\n            token: [\n                \"storage.type\",\n                \"text\",\n                \"keyword.operator\",\n                \"text\",\n                \"storage.type\"\n            ],\n            regex: /\\b(opaque)(\\s+)(of)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n            },\n            {\n            token: \"keyword.operator\",\n            regex: /\\bof\\b/\n            },\n            {\n            token: \"storage.type\",\n            regex: /\\b(?:addr|bool|count|double|file|int|interval|pattern|port|string|subnet|time)\\b/\n            },\n            {\n            token: \"storage.type\",\n            regex: /\\b(?:function|hook|event)\\b/\n            },\n            {\n            token: \"storage.modifier\",\n            regex: /\\b(?:global|local|const|option)\\b/\n            },\n            {\n            token: \"entity.name.function.call\",\n            regex: /\\b[A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*(?=s*\\()/\n            },\n            {\n            token: \"punctuation.section.block.begin\",\n            regex: /\\{/\n            },\n            {\n            token: \"punctuation.section.block.end\",\n            regex: /\\}/\n            },\n            {\n            token: \"punctuation.section.brackets.begin\",\n            regex: /\\[/\n            },\n            {\n            token: \"punctuation.section.brackets.end\",\n            regex: /\\]/\n            },\n            {\n            token: \"punctuation.section.parens.begin\",\n            regex: /\\(/\n            },\n            {\n            token: \"punctuation.section.parens.end\",\n            regex: /\\)/\n            }\n\n        ], // state: start\n\n        \"string-state\": [\n            {\n            token: \"constant.character.escape\",\n            regex: /\\\\./\n            },\n            {\n            token: \"string.double\",\n            regex: /\"/,\n            next: \"start\"\n            },\n            {\n            token: \"constant.other.placeholder\",\n            regex: /%-?[0-9]*(\\.[0-9]+)?[DTdxsefg]/\n            },\n            {\n            token: \"string.double\",\n            regex: \".\"\n            }\n        ], // state: string-state\n\n        \"pattern-state\": [\n            {\n            token: \"constant.character.escape\",\n            regex: /\\\\./\n            },\n            {\n            token: \"string.regexp\",\n            regex: \"/\",\n            next: \"start\"\n            },\n            {\n            token: \"string.regexp\",\n            regex: \".\"\n            }\n        ] // state: pattern-state\n\n    };\n\n    this.normalizeRules();\n};\n\nZeekHighlightRules.metaData = {\n    fileTypes: [\"bro\", \"zeek\"],\n    name: \"Zeek\",\n    scopeName: \"source.zeek\"\n};\n\n\noop.inherits(ZeekHighlightRules, TextHighlightRules);\n\nexports.ZeekHighlightRules = ZeekHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/zeek\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/zeek_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar ZeekHighlightRules = require(\"./zeek_highlight_rules\").ZeekHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = ZeekHighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/zeek\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/zeek\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}