{"ast":null,"code":"/* eslint-disable */\nimport { useEffect, useRef } from 'react';\nimport { isClient, off, on } from './util';\nimport useMountedState from './useMountedState';\nimport useSetState from './useSetState';\n\nvar noop = function () {};\n\nvar useSlider = function (ref, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var isMounted = useMountedState();\n  var isSliding = useRef(false);\n  var frame = useRef(0);\n\n  var _a = useSetState({\n    isSliding: false,\n    value: 0\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  useEffect(function () {\n    if (isClient) {\n      var styles = options.styles === undefined ? true : options.styles;\n      var reverse_1 = options.reverse === undefined ? false : options.reverse;\n\n      if (ref.current && styles) {\n        ref.current.style.userSelect = 'none';\n      }\n\n      var startScrubbing_1 = function () {\n        if (!isSliding.current && isMounted()) {\n          (options.onScrubStart || noop)();\n          isSliding.current = true;\n          setState({\n            isSliding: true\n          });\n          bindEvents_1();\n        }\n      };\n\n      var stopScrubbing_1 = function () {\n        if (isSliding.current && isMounted()) {\n          (options.onScrubStop || noop)();\n          isSliding.current = false;\n          setState({\n            isSliding: false\n          });\n          unbindEvents_1();\n        }\n      };\n\n      var onMouseDown_1 = function (event) {\n        startScrubbing_1();\n        onMouseMove_1(event);\n      };\n\n      var onMouseMove_1 = options.vertical ? function (event) {\n        return onScrub_1(event.clientY);\n      } : function (event) {\n        return onScrub_1(event.clientX);\n      };\n\n      var onTouchStart_1 = function (event) {\n        startScrubbing_1();\n        onTouchMove_1(event);\n      };\n\n      var onTouchMove_1 = options.vertical ? function (event) {\n        return onScrub_1(event.changedTouches[0].clientY);\n      } : function (event) {\n        return onScrub_1(event.changedTouches[0].clientX);\n      };\n\n      var bindEvents_1 = function () {\n        on(document, 'mousemove', onMouseMove_1);\n        on(document, 'mouseup', stopScrubbing_1);\n        on(document, 'touchmove', onTouchMove_1);\n        on(document, 'touchend', stopScrubbing_1);\n      };\n\n      var unbindEvents_1 = function () {\n        off(document, 'mousemove', onMouseMove_1);\n        off(document, 'mouseup', stopScrubbing_1);\n        off(document, 'touchmove', onTouchMove_1);\n        off(document, 'touchend', stopScrubbing_1);\n      };\n\n      var onScrub_1 = function (clientXY) {\n        cancelAnimationFrame(frame.current);\n        frame.current = requestAnimationFrame(function () {\n          if (isMounted() && ref.current) {\n            var rect = ref.current.getBoundingClientRect();\n            var pos = options.vertical ? rect.top : rect.left;\n            var length_1 = options.vertical ? rect.height : rect.width; // Prevent returning 0 when element is hidden by CSS\n\n            if (!length_1) {\n              return;\n            }\n\n            var value = (clientXY - pos) / length_1;\n\n            if (value > 1) {\n              value = 1;\n            } else if (value < 0) {\n              value = 0;\n            }\n\n            if (reverse_1) {\n              value = 1 - value;\n            }\n\n            setState({\n              value: value\n            });\n            (options.onScrub || noop)(value);\n          }\n        });\n      };\n\n      on(ref.current, 'mousedown', onMouseDown_1);\n      on(ref.current, 'touchstart', onTouchStart_1);\n      return function () {\n        off(ref.current, 'mousedown', onMouseDown_1);\n        off(ref.current, 'touchstart', onTouchStart_1);\n      };\n    } else {\n      return undefined;\n    }\n  }, [ref, options.vertical]);\n  return state;\n};\n\nexport default useSlider;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useSlider.js"],"names":["useEffect","useRef","isClient","off","on","useMountedState","useSetState","noop","useSlider","ref","options","isMounted","isSliding","frame","_a","value","state","setState","styles","undefined","reverse_1","reverse","current","style","userSelect","startScrubbing_1","onScrubStart","bindEvents_1","stopScrubbing_1","onScrubStop","unbindEvents_1","onMouseDown_1","event","onMouseMove_1","vertical","onScrub_1","clientY","clientX","onTouchStart_1","onTouchMove_1","changedTouches","document","clientXY","cancelAnimationFrame","requestAnimationFrame","rect","getBoundingClientRect","pos","top","left","length_1","height","width","onScrub"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { useEffect, useRef } from 'react';\nimport { isClient, off, on } from './util';\nimport useMountedState from './useMountedState';\nimport useSetState from './useSetState';\nvar noop = function () { };\nvar useSlider = function (ref, options) {\n    if (options === void 0) { options = {}; }\n    var isMounted = useMountedState();\n    var isSliding = useRef(false);\n    var frame = useRef(0);\n    var _a = useSetState({\n        isSliding: false,\n        value: 0,\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        if (isClient) {\n            var styles = options.styles === undefined ? true : options.styles;\n            var reverse_1 = options.reverse === undefined ? false : options.reverse;\n            if (ref.current && styles) {\n                ref.current.style.userSelect = 'none';\n            }\n            var startScrubbing_1 = function () {\n                if (!isSliding.current && isMounted()) {\n                    (options.onScrubStart || noop)();\n                    isSliding.current = true;\n                    setState({ isSliding: true });\n                    bindEvents_1();\n                }\n            };\n            var stopScrubbing_1 = function () {\n                if (isSliding.current && isMounted()) {\n                    (options.onScrubStop || noop)();\n                    isSliding.current = false;\n                    setState({ isSliding: false });\n                    unbindEvents_1();\n                }\n            };\n            var onMouseDown_1 = function (event) {\n                startScrubbing_1();\n                onMouseMove_1(event);\n            };\n            var onMouseMove_1 = options.vertical\n                ? function (event) { return onScrub_1(event.clientY); }\n                : function (event) { return onScrub_1(event.clientX); };\n            var onTouchStart_1 = function (event) {\n                startScrubbing_1();\n                onTouchMove_1(event);\n            };\n            var onTouchMove_1 = options.vertical\n                ? function (event) { return onScrub_1(event.changedTouches[0].clientY); }\n                : function (event) { return onScrub_1(event.changedTouches[0].clientX); };\n            var bindEvents_1 = function () {\n                on(document, 'mousemove', onMouseMove_1);\n                on(document, 'mouseup', stopScrubbing_1);\n                on(document, 'touchmove', onTouchMove_1);\n                on(document, 'touchend', stopScrubbing_1);\n            };\n            var unbindEvents_1 = function () {\n                off(document, 'mousemove', onMouseMove_1);\n                off(document, 'mouseup', stopScrubbing_1);\n                off(document, 'touchmove', onTouchMove_1);\n                off(document, 'touchend', stopScrubbing_1);\n            };\n            var onScrub_1 = function (clientXY) {\n                cancelAnimationFrame(frame.current);\n                frame.current = requestAnimationFrame(function () {\n                    if (isMounted() && ref.current) {\n                        var rect = ref.current.getBoundingClientRect();\n                        var pos = options.vertical ? rect.top : rect.left;\n                        var length_1 = options.vertical ? rect.height : rect.width;\n                        // Prevent returning 0 when element is hidden by CSS\n                        if (!length_1) {\n                            return;\n                        }\n                        var value = (clientXY - pos) / length_1;\n                        if (value > 1) {\n                            value = 1;\n                        }\n                        else if (value < 0) {\n                            value = 0;\n                        }\n                        if (reverse_1) {\n                            value = 1 - value;\n                        }\n                        setState({\n                            value: value,\n                        });\n                        (options.onScrub || noop)(value);\n                    }\n                });\n            };\n            on(ref.current, 'mousedown', onMouseDown_1);\n            on(ref.current, 'touchstart', onTouchStart_1);\n            return function () {\n                off(ref.current, 'mousedown', onMouseDown_1);\n                off(ref.current, 'touchstart', onTouchStart_1);\n            };\n        }\n        else {\n            return undefined;\n        }\n    }, [ref, options.vertical]);\n    return state;\n};\nexport default useSlider;\n"]},"metadata":{},"sourceType":"module"}