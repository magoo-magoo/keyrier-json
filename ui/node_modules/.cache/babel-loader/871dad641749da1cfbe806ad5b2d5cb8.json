{"ast":null,"code":"ace.define(\"ace/mode/mushcode_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var MushCodeRules = function () {\n    var keywords = \"@if|\" + \"@ifelse|\" + \"@switch|\" + \"@halt|\" + \"@dolist|\" + \"@create|\" + \"@scent|\" + \"@sound|\" + \"@touch|\" + \"@ataste|\" + \"@osound|\" + \"@ahear|\" + \"@aahear|\" + \"@amhear|\" + \"@otouch|\" + \"@otaste|\" + \"@drop|\" + \"@odrop|\" + \"@adrop|\" + \"@dropfail|\" + \"@odropfail|\" + \"@smell|\" + \"@oemit|\" + \"@emit|\" + \"@pemit|\" + \"@parent|\" + \"@clone|\" + \"@taste|\" + \"whisper|\" + \"page|\" + \"say|\" + \"pose|\" + \"semipose|\" + \"teach|\" + \"touch|\" + \"taste|\" + \"smell|\" + \"listen|\" + \"look|\" + \"move|\" + \"go|\" + \"home|\" + \"follow|\" + \"unfollow|\" + \"desert|\" + \"dismiss|\" + \"@tel\";\n    var builtinConstants = \"=#0\";\n    var builtinFunctions = \"default|\" + \"edefault|\" + \"eval|\" + \"get_eval|\" + \"get|\" + \"grep|\" + \"grepi|\" + \"hasattr|\" + \"hasattrp|\" + \"hasattrval|\" + \"hasattrpval|\" + \"lattr|\" + \"nattr|\" + \"poss|\" + \"udefault|\" + \"ufun|\" + \"u|\" + \"v|\" + \"uldefault|\" + \"xget|\" + \"zfun|\" + \"band|\" + \"bnand|\" + \"bnot|\" + \"bor|\" + \"bxor|\" + \"shl|\" + \"shr|\" + \"and|\" + \"cand|\" + \"cor|\" + \"eq|\" + \"gt|\" + \"gte|\" + \"lt|\" + \"lte|\" + \"nand|\" + \"neq|\" + \"nor|\" + \"not|\" + \"or|\" + \"t|\" + \"xor|\" + \"con|\" + \"entrances|\" + \"exit|\" + \"followers|\" + \"home|\" + \"lcon|\" + \"lexits|\" + \"loc|\" + \"locate|\" + \"lparent|\" + \"lsearch|\" + \"next|\" + \"num|\" + \"owner|\" + \"parent|\" + \"pmatch|\" + \"rloc|\" + \"rnum|\" + \"room|\" + \"where|\" + \"zone|\" + \"worn|\" + \"held|\" + \"carried|\" + \"acos|\" + \"asin|\" + \"atan|\" + \"ceil|\" + \"cos|\" + \"e|\" + \"exp|\" + \"fdiv|\" + \"fmod|\" + \"floor|\" + \"log|\" + \"ln|\" + \"pi|\" + \"power|\" + \"round|\" + \"sin|\" + \"sqrt|\" + \"tan|\" + \"aposs|\" + \"andflags|\" + \"conn|\" + \"commandssent|\" + \"controls|\" + \"doing|\" + \"elock|\" + \"findable|\" + \"flags|\" + \"fullname|\" + \"hasflag|\" + \"haspower|\" + \"hastype|\" + \"hidden|\" + \"idle|\" + \"isbaker|\" + \"lock|\" + \"lstats|\" + \"money|\" + \"who|\" + \"name|\" + \"nearby|\" + \"obj|\" + \"objflags|\" + \"photo|\" + \"poll|\" + \"powers|\" + \"pendingtext|\" + \"receivedtext|\" + \"restarts|\" + \"restarttime|\" + \"subj|\" + \"shortestpath|\" + \"tmoney|\" + \"type|\" + \"visible|\" + \"cat|\" + \"element|\" + \"elements|\" + \"extract|\" + \"filter|\" + \"filterbool|\" + \"first|\" + \"foreach|\" + \"fold|\" + \"grab|\" + \"graball|\" + \"index|\" + \"insert|\" + \"itemize|\" + \"items|\" + \"iter|\" + \"last|\" + \"ldelete|\" + \"map|\" + \"match|\" + \"matchall|\" + \"member|\" + \"mix|\" + \"munge|\" + \"pick|\" + \"remove|\" + \"replace|\" + \"rest|\" + \"revwords|\" + \"setdiff|\" + \"setinter|\" + \"setunion|\" + \"shuffle|\" + \"sort|\" + \"sortby|\" + \"splice|\" + \"step|\" + \"wordpos|\" + \"words|\" + \"add|\" + \"lmath|\" + \"max|\" + \"mean|\" + \"median|\" + \"min|\" + \"mul|\" + \"percent|\" + \"sign|\" + \"stddev|\" + \"sub|\" + \"val|\" + \"bound|\" + \"abs|\" + \"inc|\" + \"dec|\" + \"dist2d|\" + \"dist3d|\" + \"div|\" + \"floordiv|\" + \"mod|\" + \"modulo|\" + \"remainder|\" + \"vadd|\" + \"vdim|\" + \"vdot|\" + \"vmag|\" + \"vmax|\" + \"vmin|\" + \"vmul|\" + \"vsub|\" + \"vunit|\" + \"regedit|\" + \"regeditall|\" + \"regeditalli|\" + \"regediti|\" + \"regmatch|\" + \"regmatchi|\" + \"regrab|\" + \"regraball|\" + \"regraballi|\" + \"regrabi|\" + \"regrep|\" + \"regrepi|\" + \"after|\" + \"alphamin|\" + \"alphamax|\" + \"art|\" + \"before|\" + \"brackets|\" + \"capstr|\" + \"case|\" + \"caseall|\" + \"center|\" + \"containsfansi|\" + \"comp|\" + \"decompose|\" + \"decrypt|\" + \"delete|\" + \"edit|\" + \"encrypt|\" + \"escape|\" + \"if|\" + \"ifelse|\" + \"lcstr|\" + \"left|\" + \"lit|\" + \"ljust|\" + \"merge|\" + \"mid|\" + \"ostrlen|\" + \"pos|\" + \"repeat|\" + \"reverse|\" + \"right|\" + \"rjust|\" + \"scramble|\" + \"secure|\" + \"space|\" + \"spellnum|\" + \"squish|\" + \"strcat|\" + \"strmatch|\" + \"strinsert|\" + \"stripansi|\" + \"stripfansi|\" + \"strlen|\" + \"switch|\" + \"switchall|\" + \"table|\" + \"tr|\" + \"trim|\" + \"ucstr|\" + \"unsafe|\" + \"wrap|\" + \"ctitle|\" + \"cwho|\" + \"channels|\" + \"clock|\" + \"cflags|\" + \"ilev|\" + \"itext|\" + \"inum|\" + \"convsecs|\" + \"convutcsecs|\" + \"convtime|\" + \"ctime|\" + \"etimefmt|\" + \"isdaylight|\" + \"mtime|\" + \"secs|\" + \"msecs|\" + \"starttime|\" + \"time|\" + \"timefmt|\" + \"timestring|\" + \"utctime|\" + \"atrlock|\" + \"clone|\" + \"create|\" + \"cook|\" + \"dig|\" + \"emit|\" + \"lemit|\" + \"link|\" + \"oemit|\" + \"open|\" + \"pemit|\" + \"remit|\" + \"set|\" + \"tel|\" + \"wipe|\" + \"zemit|\" + \"fbcreate|\" + \"fbdestroy|\" + \"fbwrite|\" + \"fbclear|\" + \"fbcopy|\" + \"fbcopyto|\" + \"fbclip|\" + \"fbdump|\" + \"fbflush|\" + \"fbhset|\" + \"fblist|\" + \"fbstats|\" + \"qentries|\" + \"qentry|\" + \"play|\" + \"ansi|\" + \"break|\" + \"c|\" + \"asc|\" + \"die|\" + \"isdbref|\" + \"isint|\" + \"isnum|\" + \"isletters|\" + \"linecoords|\" + \"localize|\" + \"lnum|\" + \"nameshort|\" + \"null|\" + \"objeval|\" + \"r|\" + \"rand|\" + \"s|\" + \"setq|\" + \"setr|\" + \"soundex|\" + \"soundslike|\" + \"valid|\" + \"vchart|\" + \"vchart2|\" + \"vlabel|\" + \"@@|\" + \"bakerdays|\" + \"bodybuild|\" + \"box|\" + \"capall|\" + \"catalog|\" + \"children|\" + \"ctrailer|\" + \"darttime|\" + \"debt|\" + \"detailbar|\" + \"exploredroom|\" + \"fansitoansi|\" + \"fansitoxansi|\" + \"fullbar|\" + \"halfbar|\" + \"isdarted|\" + \"isnewbie|\" + \"isword|\" + \"lambda|\" + \"lobjects|\" + \"lplayers|\" + \"lthings|\" + \"lvexits|\" + \"lvobjects|\" + \"lvplayers|\" + \"lvthings|\" + \"newswrap|\" + \"numsuffix|\" + \"playerson|\" + \"playersthisweek|\" + \"randomad|\" + \"randword|\" + \"realrandword|\" + \"replacechr|\" + \"second|\" + \"splitamount|\" + \"strlenall|\" + \"text|\" + \"third|\" + \"tofansi|\" + \"totalac|\" + \"unique|\" + \"getaddressroom|\" + \"listpropertycomm|\" + \"listpropertyres|\" + \"lotowner|\" + \"lotrating|\" + \"lotratingcount|\" + \"lotvalue|\" + \"boughtproduct|\" + \"companyabb|\" + \"companyicon|\" + \"companylist|\" + \"companyname|\" + \"companyowners|\" + \"companyvalue|\" + \"employees|\" + \"invested|\" + \"productlist|\" + \"productname|\" + \"productowners|\" + \"productrating|\" + \"productratingcount|\" + \"productsoldat|\" + \"producttype|\" + \"ratedproduct|\" + \"soldproduct|\" + \"topproducts|\" + \"totalspentonproduct|\" + \"totalstock|\" + \"transfermoney|\" + \"uniquebuyercount|\" + \"uniqueproductsbought|\" + \"validcompany|\" + \"deletepicture|\" + \"fbsave|\" + \"getpicturesecurity|\" + \"haspicture|\" + \"listpictures|\" + \"picturesize|\" + \"replacecolor|\" + \"rgbtocolor|\" + \"savepicture|\" + \"setpicturesecurity|\" + \"showpicture|\" + \"piechart|\" + \"piechartlabel|\" + \"createmaze|\" + \"drawmaze|\" + \"drawwireframe\";\n    var keywordMapper = this.createKeywordMapper({\n      \"invalid.deprecated\": \"debugger\",\n      \"support.function\": builtinFunctions,\n      \"constant.language\": builtinConstants,\n      \"keyword\": keywords\n    }, \"identifier\");\n    var strPre = \"(?:r|u|ur|R|U|UR|Ur|uR)?\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    this.$rules = {\n      \"start\": [{\n        token: \"variable\",\n        // mush substitution register\n        regex: \"%[0-9]{1}\"\n      }, {\n        token: \"variable\",\n        // mush substitution register\n        regex: \"%q[0-9A-Za-z]{1}\"\n      }, {\n        token: \"variable\",\n        // mush special character register\n        regex: \"%[a-zA-Z]{1}\"\n      }, {\n        token: \"variable.language\",\n        regex: \"%[a-z0-9-_]+\"\n      }, {\n        token: \"constant.numeric\",\n        // imaginary\n        regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // long integer\n        regex: integer + \"[lL]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|#|%|<<|>>|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }]\n    };\n  };\n\n  oop.inherits(MushCodeRules, TextHighlightRules);\n  exports.MushCodeRules = MushCodeRules;\n});\nace.define(\"ace/mode/folding/pythonic\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (markers) {\n    this.foldingStartMarker = new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\" + markers + \")(?:\\\\s*)(?:#.*)?$\");\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, match.index);\n        if (match[2]) return this.indentationBlock(session, row, match.index + match[2].length);\n        return this.indentationBlock(session, row);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/mushcode\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/mushcode_highlight_rules\", \"ace/mode/folding/pythonic\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var MushCodeRules = require(\"./mushcode_highlight_rules\").MushCodeRules;\n\n  var PythonFoldMode = require(\"./folding/pythonic\").FoldMode;\n\n  var Range = require(\"../range\").Range;\n\n  var Mode = function () {\n    this.HighlightRules = MushCodeRules;\n    this.foldingRules = new PythonFoldMode(\"\\\\:\");\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    var outdents = {\n      \"pass\": 1,\n      \"return\": 1,\n      \"raise\": 1,\n      \"break\": 1,\n      \"continue\": 1\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\") return false;\n      var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n      if (!tokens) return false;\n\n      do {\n        var last = tokens.pop();\n      } while (last && (last.type == \"comment\" || last.type == \"text\" && last.value.match(/^\\s+$/)));\n\n      if (!last) return false;\n      return last.type == \"keyword\" && outdents[last.value];\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      row += 1;\n      var indent = this.$getIndent(doc.getLine(row));\n      var tab = doc.getTabString();\n      if (indent.slice(-tab.length) == tab) doc.remove(new Range(row, indent.length - tab.length, row, indent.length));\n    };\n\n    this.$id = \"ace/mode/mushcode\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/mushcode\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/ace-builds/src-noconflict/mode-mushcode.js"],"names":["ace","define","require","exports","module","oop","TextHighlightRules","MushCodeRules","keywords","builtinConstants","builtinFunctions","keywordMapper","createKeywordMapper","strPre","decimalInteger","octInteger","hexInteger","binInteger","integer","exponent","fraction","intPart","pointFloat","exponentFloat","floatNumber","$rules","token","regex","inherits","BaseFoldMode","FoldMode","markers","foldingStartMarker","RegExp","getFoldWidgetRange","session","foldStyle","row","line","getLine","match","openingBracketBlock","index","indentationBlock","length","call","prototype","TextMode","Mode","PythonFoldMode","Range","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","getNextLineIndent","state","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","type","outdents","checkOutdent","input","trim","last","pop","value","autoOutdent","doc","getTabString","slice","remove","$id","m"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/mushcode_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar MushCodeRules = function() {\n\n\n    var keywords = (\n \"@if|\"+\n \"@ifelse|\"+\n \"@switch|\"+\n \"@halt|\"+\n \"@dolist|\"+\n \"@create|\"+\n \"@scent|\"+\n \"@sound|\"+\n \"@touch|\"+\n \"@ataste|\"+\n \"@osound|\"+\n \"@ahear|\"+\n \"@aahear|\"+\n \"@amhear|\"+\n \"@otouch|\"+\n \"@otaste|\"+\n \"@drop|\"+\n \"@odrop|\"+\n \"@adrop|\"+\n \"@dropfail|\"+\n \"@odropfail|\"+\n \"@smell|\"+\n \"@oemit|\"+\n \"@emit|\"+\n \"@pemit|\"+\n \"@parent|\"+\n \"@clone|\"+\n \"@taste|\"+\n \"whisper|\"+\n \"page|\"+\n \"say|\"+\n \"pose|\"+\n \"semipose|\"+\n \"teach|\"+\n \"touch|\"+\n \"taste|\"+\n \"smell|\"+\n \"listen|\"+\n \"look|\"+\n \"move|\"+\n \"go|\"+\n \"home|\"+\n \"follow|\"+\n \"unfollow|\"+\n \"desert|\"+\n \"dismiss|\"+\n \"@tel\"\n    );\n\n    var builtinConstants = (\n        \"=#0\"\n    );\n\n    var builtinFunctions = (\n \"default|\"+\n \"edefault|\"+\n \"eval|\"+\n \"get_eval|\"+\n \"get|\"+\n \"grep|\"+\n \"grepi|\"+\n \"hasattr|\"+\n \"hasattrp|\"+\n \"hasattrval|\"+\n \"hasattrpval|\"+\n \"lattr|\"+\n \"nattr|\"+\n \"poss|\"+\n \"udefault|\"+\n \"ufun|\"+\n \"u|\"+\n \"v|\"+\n \"uldefault|\"+\n \"xget|\"+\n \"zfun|\"+\n \"band|\"+\n \"bnand|\"+\n \"bnot|\"+\n \"bor|\"+\n \"bxor|\"+\n \"shl|\"+\n \"shr|\"+\n \"and|\"+\n \"cand|\"+\n \"cor|\"+\n \"eq|\"+\n \"gt|\"+\n \"gte|\"+\n \"lt|\"+\n \"lte|\"+\n \"nand|\"+\n \"neq|\"+\n \"nor|\"+\n \"not|\"+\n \"or|\"+\n \"t|\"+\n \"xor|\"+\n \"con|\"+\n \"entrances|\"+\n \"exit|\"+\n \"followers|\"+\n \"home|\"+\n \"lcon|\"+\n \"lexits|\"+\n \"loc|\"+\n \"locate|\"+\n \"lparent|\"+\n \"lsearch|\"+\n \"next|\"+\n \"num|\"+\n \"owner|\"+\n \"parent|\"+\n \"pmatch|\"+\n \"rloc|\"+\n \"rnum|\"+\n \"room|\"+\n \"where|\"+\n \"zone|\"+\n \"worn|\"+\n \"held|\"+\n \"carried|\"+\n \"acos|\"+\n \"asin|\"+\n \"atan|\"+\n \"ceil|\"+\n \"cos|\"+\n \"e|\"+\n \"exp|\"+\n \"fdiv|\"+\n \"fmod|\"+\n \"floor|\"+\n \"log|\"+\n \"ln|\"+\n \"pi|\"+\n \"power|\"+\n \"round|\"+\n \"sin|\"+\n \"sqrt|\"+\n \"tan|\"+\n \"aposs|\"+\n \"andflags|\"+\n \"conn|\"+\n \"commandssent|\"+\n \"controls|\"+\n \"doing|\"+\n \"elock|\"+\n \"findable|\"+\n \"flags|\"+\n \"fullname|\"+\n \"hasflag|\"+\n \"haspower|\"+\n \"hastype|\"+\n \"hidden|\"+\n \"idle|\"+\n \"isbaker|\"+\n \"lock|\"+\n \"lstats|\"+\n \"money|\"+\n \"who|\"+\n \"name|\"+\n \"nearby|\"+\n \"obj|\"+\n \"objflags|\"+\n \"photo|\"+\n \"poll|\"+\n \"powers|\"+\n \"pendingtext|\"+\n \"receivedtext|\"+\n \"restarts|\"+\n \"restarttime|\"+\n \"subj|\"+\n \"shortestpath|\"+\n \"tmoney|\"+\n \"type|\"+\n \"visible|\"+\n \"cat|\"+\n \"element|\"+\n \"elements|\"+\n \"extract|\"+\n \"filter|\"+\n \"filterbool|\"+\n \"first|\"+\n \"foreach|\"+\n \"fold|\"+\n \"grab|\"+\n \"graball|\"+\n \"index|\"+\n \"insert|\"+\n \"itemize|\"+\n \"items|\"+\n \"iter|\"+\n \"last|\"+\n \"ldelete|\"+\n \"map|\"+\n \"match|\"+\n \"matchall|\"+\n \"member|\"+\n \"mix|\"+\n \"munge|\"+\n \"pick|\"+\n \"remove|\"+\n \"replace|\"+\n \"rest|\"+\n \"revwords|\"+\n \"setdiff|\"+\n \"setinter|\"+\n \"setunion|\"+\n \"shuffle|\"+\n \"sort|\"+\n \"sortby|\"+\n \"splice|\"+\n \"step|\"+\n \"wordpos|\"+\n \"words|\"+\n \"add|\"+\n \"lmath|\"+\n \"max|\"+\n \"mean|\"+\n \"median|\"+\n \"min|\"+\n \"mul|\"+\n \"percent|\"+\n \"sign|\"+\n \"stddev|\"+\n \"sub|\"+\n \"val|\"+\n \"bound|\"+\n \"abs|\"+\n \"inc|\"+\n \"dec|\"+\n \"dist2d|\"+\n \"dist3d|\"+\n \"div|\"+\n \"floordiv|\"+\n \"mod|\"+\n \"modulo|\"+\n \"remainder|\"+\n \"vadd|\"+\n \"vdim|\"+\n \"vdot|\"+\n \"vmag|\"+\n \"vmax|\"+\n \"vmin|\"+\n \"vmul|\"+\n \"vsub|\"+\n \"vunit|\"+\n \"regedit|\"+\n \"regeditall|\"+\n \"regeditalli|\"+\n \"regediti|\"+\n \"regmatch|\"+\n \"regmatchi|\"+\n \"regrab|\"+\n \"regraball|\"+\n \"regraballi|\"+\n \"regrabi|\"+\n \"regrep|\"+\n \"regrepi|\"+\n \"after|\"+\n \"alphamin|\"+\n \"alphamax|\"+\n \"art|\"+\n \"before|\"+\n \"brackets|\"+\n \"capstr|\"+\n \"case|\"+\n \"caseall|\"+\n \"center|\"+\n \"containsfansi|\"+\n \"comp|\"+\n \"decompose|\"+\n \"decrypt|\"+\n \"delete|\"+\n \"edit|\"+\n \"encrypt|\"+\n \"escape|\"+\n \"if|\"+\n \"ifelse|\"+\n \"lcstr|\"+\n \"left|\"+\n \"lit|\"+\n \"ljust|\"+\n \"merge|\"+\n \"mid|\"+\n \"ostrlen|\"+\n \"pos|\"+\n \"repeat|\"+\n \"reverse|\"+\n \"right|\"+\n \"rjust|\"+\n \"scramble|\"+\n \"secure|\"+\n \"space|\"+\n \"spellnum|\"+\n \"squish|\"+\n \"strcat|\"+\n \"strmatch|\"+\n \"strinsert|\"+\n \"stripansi|\"+\n \"stripfansi|\"+\n \"strlen|\"+\n \"switch|\"+\n \"switchall|\"+\n \"table|\"+\n \"tr|\"+\n \"trim|\"+\n \"ucstr|\"+\n \"unsafe|\"+\n \"wrap|\"+\n \"ctitle|\"+\n \"cwho|\"+\n \"channels|\"+\n \"clock|\"+\n \"cflags|\"+\n \"ilev|\"+\n \"itext|\"+\n \"inum|\"+\n \"convsecs|\"+\n \"convutcsecs|\"+\n \"convtime|\"+\n \"ctime|\"+\n \"etimefmt|\"+\n \"isdaylight|\"+\n \"mtime|\"+\n \"secs|\"+\n \"msecs|\"+\n \"starttime|\"+\n \"time|\"+\n \"timefmt|\"+\n \"timestring|\"+\n \"utctime|\"+\n \"atrlock|\"+\n \"clone|\"+\n \"create|\"+\n \"cook|\"+\n \"dig|\"+\n \"emit|\"+\n \"lemit|\"+\n \"link|\"+\n \"oemit|\"+\n \"open|\"+\n \"pemit|\"+\n \"remit|\"+\n \"set|\"+\n \"tel|\"+\n \"wipe|\"+\n \"zemit|\"+\n \"fbcreate|\"+\n \"fbdestroy|\"+\n \"fbwrite|\"+\n \"fbclear|\"+\n \"fbcopy|\"+\n \"fbcopyto|\"+\n \"fbclip|\"+\n \"fbdump|\"+\n \"fbflush|\"+\n \"fbhset|\"+\n \"fblist|\"+\n \"fbstats|\"+\n \"qentries|\"+\n \"qentry|\"+\n \"play|\"+\n \"ansi|\"+\n \"break|\"+\n \"c|\"+\n \"asc|\"+\n \"die|\"+\n \"isdbref|\"+\n \"isint|\"+\n \"isnum|\"+\n \"isletters|\"+\n \"linecoords|\"+\n \"localize|\"+\n \"lnum|\"+\n \"nameshort|\"+\n \"null|\"+\n \"objeval|\"+\n \"r|\"+\n \"rand|\"+\n \"s|\"+\n \"setq|\"+\n \"setr|\"+\n \"soundex|\"+\n \"soundslike|\"+\n \"valid|\"+\n \"vchart|\"+\n \"vchart2|\"+\n \"vlabel|\"+\n \"@@|\"+\n \"bakerdays|\"+\n \"bodybuild|\"+\n \"box|\"+\n \"capall|\"+\n \"catalog|\"+\n \"children|\"+\n \"ctrailer|\"+\n \"darttime|\"+\n \"debt|\"+\n \"detailbar|\"+\n \"exploredroom|\"+\n \"fansitoansi|\"+\n \"fansitoxansi|\"+\n \"fullbar|\"+\n \"halfbar|\"+\n \"isdarted|\"+\n \"isnewbie|\"+\n \"isword|\"+\n \"lambda|\"+\n \"lobjects|\"+\n \"lplayers|\"+\n \"lthings|\"+\n \"lvexits|\"+\n \"lvobjects|\"+\n \"lvplayers|\"+\n \"lvthings|\"+\n \"newswrap|\"+\n \"numsuffix|\"+\n \"playerson|\"+\n \"playersthisweek|\"+\n \"randomad|\"+\n \"randword|\"+\n \"realrandword|\"+\n \"replacechr|\"+\n \"second|\"+\n \"splitamount|\"+\n \"strlenall|\"+\n \"text|\"+\n \"third|\"+\n \"tofansi|\"+\n \"totalac|\"+\n \"unique|\"+\n \"getaddressroom|\"+\n \"listpropertycomm|\"+\n \"listpropertyres|\"+\n \"lotowner|\"+\n \"lotrating|\"+\n \"lotratingcount|\"+\n \"lotvalue|\"+\n \"boughtproduct|\"+\n \"companyabb|\"+\n \"companyicon|\"+\n \"companylist|\"+\n \"companyname|\"+\n \"companyowners|\"+\n \"companyvalue|\"+\n \"employees|\"+\n \"invested|\"+\n \"productlist|\"+\n \"productname|\"+\n \"productowners|\"+\n \"productrating|\"+\n \"productratingcount|\"+\n \"productsoldat|\"+\n \"producttype|\"+\n \"ratedproduct|\"+\n \"soldproduct|\"+\n \"topproducts|\"+\n \"totalspentonproduct|\"+\n \"totalstock|\"+\n \"transfermoney|\"+\n \"uniquebuyercount|\"+\n \"uniqueproductsbought|\"+\n \"validcompany|\"+\n \"deletepicture|\"+\n \"fbsave|\"+\n \"getpicturesecurity|\"+\n \"haspicture|\"+\n \"listpictures|\"+\n \"picturesize|\"+\n \"replacecolor|\"+\n \"rgbtocolor|\"+\n \"savepicture|\"+\n \"setpicturesecurity|\"+\n \"showpicture|\"+\n \"piechart|\"+\n \"piechartlabel|\"+\n \"createmaze|\"+\n \"drawmaze|\"+\n \"drawwireframe\"\n    );\n    var keywordMapper = this.createKeywordMapper({\n        \"invalid.deprecated\": \"debugger\",\n        \"support.function\": builtinFunctions,\n        \"constant.language\": builtinConstants,\n        \"keyword\": keywords\n    }, \"identifier\");\n\n    var strPre = \"(?:r|u|ur|R|U|UR|Ur|uR)?\";\n\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" +  intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n\n    this.$rules = {\n        \"start\" : [\n         {\n                token : \"variable\", // mush substitution register\n                regex : \"%[0-9]{1}\"\n         },\n         {\n                token : \"variable\", // mush substitution register\n                regex : \"%q[0-9A-Za-z]{1}\"\n         },\n         {\n                token : \"variable\", // mush special character register\n                regex : \"%[a-zA-Z]{1}\"\n         },\n         {\n                token: \"variable.language\",\n                regex: \"%[a-z0-9-_]+\"\n         },\n        {\n            token : \"constant.numeric\", // imaginary\n            regex : \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : floatNumber\n        }, {\n            token : \"constant.numeric\", // long integer\n            regex : integer + \"[lL]\\\\b\"\n        }, {\n            token : \"constant.numeric\", // integer\n            regex : integer + \"\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|#|%|<<|>>|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n        }, {\n            token : \"paren.lparen\",\n            regex : \"[\\\\[\\\\(\\\\{]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\]\\\\)\\\\}]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        } ]\n    };\n};\n\noop.inherits(MushCodeRules, TextHighlightRules);\n\nexports.MushCodeRules = MushCodeRules;\n});\n\nace.define(\"ace/mode/folding/pythonic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(markers) {\n    this.foldingStartMarker = new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\" + markers + \")(?:\\\\s*)(?:#.*)?$\");\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, match.index);\n            if (match[2])\n                return this.indentationBlock(session, row, match.index + match[2].length);\n            return this.indentationBlock(session, row);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/mushcode\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/mushcode_highlight_rules\",\"ace/mode/folding/pythonic\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar MushCodeRules = require(\"./mushcode_highlight_rules\").MushCodeRules;\nvar PythonFoldMode = require(\"./folding/pythonic\").FoldMode;\nvar Range = require(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = MushCodeRules;\n    this.foldingRules = new PythonFoldMode(\"\\\\:\");\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n   var outdents = {\n        \"pass\": 1,\n        \"return\": 1,\n        \"raise\": 1,\n        \"break\": 1,\n        \"continue\": 1\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\")\n            return false;\n\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n\n        if (!tokens)\n            return false;\n        do {\n            var last = tokens.pop();\n        } while (last && (last.type == \"comment\" || (last.type == \"text\" && last.value.match(/^\\s+$/))));\n\n        if (!last)\n            return false;\n\n        return (last.type == \"keyword\" && outdents[last.value]);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n\n        row += 1;\n        var indent = this.$getIndent(doc.getLine(row));\n        var tab = doc.getTabString();\n        if (indent.slice(-tab.length) == tab)\n            doc.remove(new Range(row, indent.length-tab.length, row, indent.length));\n    };\n\n    this.$id = \"ace/mode/mushcode\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/mushcode\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "]},"metadata":{},"sourceType":"script"}