{"ast":null,"code":"import { __assign, __spreadArrays } from \"tslib\";\n/* eslint-disable */\n\nimport { useState, useMemo, useCallback } from 'react';\n\nvar useSet = function (initialSet) {\n  if (initialSet === void 0) {\n    initialSet = new Set();\n  }\n\n  var _a = useState(initialSet),\n      set = _a[0],\n      setSet = _a[1];\n\n  var stableActions = useMemo(function () {\n    var add = function (item) {\n      return setSet(function (prevSet) {\n        return new Set(__spreadArrays(Array.from(prevSet), [item]));\n      });\n    };\n\n    var remove = function (item) {\n      return setSet(function (prevSet) {\n        return new Set(Array.from(prevSet).filter(function (i) {\n          return i !== item;\n        }));\n      });\n    };\n\n    var toggle = function (item) {\n      return setSet(function (prevSet) {\n        return prevSet.has(item) ? new Set(Array.from(prevSet).filter(function (i) {\n          return i !== item;\n        })) : new Set(__spreadArrays(Array.from(prevSet), [item]));\n      });\n    };\n\n    return {\n      add: add,\n      remove: remove,\n      toggle: toggle,\n      reset: function () {\n        return setSet(initialSet);\n      }\n    };\n  }, [setSet]);\n\n  var utils = __assign({\n    has: useCallback(function (item) {\n      return set.has(item);\n    }, [set])\n  }, stableActions);\n\n  return [set, utils];\n};\n\nexport default useSet;","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/node_modules/react-use/esm/useSet.js"],"names":["__assign","__spreadArrays","useState","useMemo","useCallback","useSet","initialSet","Set","_a","set","setSet","stableActions","add","item","prevSet","Array","from","remove","filter","i","toggle","has","reset","utils"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,OAAzC;AACA;;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,WAA5B,QAA+C,OAA/C;;AACA,IAAIC,MAAM,GAAG,UAAUC,UAAV,EAAsB;AAC/B,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,IAAAA,UAAU,GAAG,IAAIC,GAAJ,EAAb;AAAyB;;AACtD,MAAIC,EAAE,GAAGN,QAAQ,CAACI,UAAD,CAAjB;AAAA,MAA+BG,GAAG,GAAGD,EAAE,CAAC,CAAD,CAAvC;AAAA,MAA4CE,MAAM,GAAGF,EAAE,CAAC,CAAD,CAAvD;;AACA,MAAIG,aAAa,GAAGR,OAAO,CAAC,YAAY;AACpC,QAAIS,GAAG,GAAG,UAAUC,IAAV,EAAgB;AAAE,aAAOH,MAAM,CAAC,UAAUI,OAAV,EAAmB;AAAE,eAAO,IAAIP,GAAJ,CAAQN,cAAc,CAACc,KAAK,CAACC,IAAN,CAAWF,OAAX,CAAD,EAAsB,CAACD,IAAD,CAAtB,CAAtB,CAAP;AAA8D,OAApF,CAAb;AAAqG,KAAjI;;AACA,QAAII,MAAM,GAAG,UAAUJ,IAAV,EAAgB;AAAE,aAAOH,MAAM,CAAC,UAAUI,OAAV,EAAmB;AAAE,eAAO,IAAIP,GAAJ,CAAQQ,KAAK,CAACC,IAAN,CAAWF,OAAX,EAAoBI,MAApB,CAA2B,UAAUC,CAAV,EAAa;AAAE,iBAAOA,CAAC,KAAKN,IAAb;AAAoB,SAA9D,CAAR,CAAP;AAAkF,OAAxG,CAAb;AAAyH,KAAxJ;;AACA,QAAIO,MAAM,GAAG,UAAUP,IAAV,EAAgB;AACzB,aAAOH,MAAM,CAAC,UAAUI,OAAV,EAAmB;AAC7B,eAAOA,OAAO,CAACO,GAAR,CAAYR,IAAZ,IACD,IAAIN,GAAJ,CAAQQ,KAAK,CAACC,IAAN,CAAWF,OAAX,EAAoBI,MAApB,CAA2B,UAAUC,CAAV,EAAa;AAAE,iBAAOA,CAAC,KAAKN,IAAb;AAAoB,SAA9D,CAAR,CADC,GAED,IAAIN,GAAJ,CAAQN,cAAc,CAACc,KAAK,CAACC,IAAN,CAAWF,OAAX,CAAD,EAAsB,CAACD,IAAD,CAAtB,CAAtB,CAFN;AAGH,OAJY,CAAb;AAKH,KAND;;AAOA,WAAO;AAAED,MAAAA,GAAG,EAAEA,GAAP;AAAYK,MAAAA,MAAM,EAAEA,MAApB;AAA4BG,MAAAA,MAAM,EAAEA,MAApC;AAA4CE,MAAAA,KAAK,EAAE,YAAY;AAAE,eAAOZ,MAAM,CAACJ,UAAD,CAAb;AAA4B;AAA7F,KAAP;AACH,GAX0B,EAWxB,CAACI,MAAD,CAXwB,CAA3B;;AAYA,MAAIa,KAAK,GAAGvB,QAAQ,CAAC;AAAEqB,IAAAA,GAAG,EAAEjB,WAAW,CAAC,UAAUS,IAAV,EAAgB;AAAE,aAAOJ,GAAG,CAACY,GAAJ,CAAQR,IAAR,CAAP;AAAuB,KAA1C,EAA4C,CAACJ,GAAD,CAA5C;AAAlB,GAAD,EAAyEE,aAAzE,CAApB;;AACA,SAAO,CAACF,GAAD,EAAMc,KAAN,CAAP;AACH,CAjBD;;AAkBA,eAAelB,MAAf","sourcesContent":["import { __assign, __spreadArrays } from \"tslib\";\n/* eslint-disable */\nimport { useState, useMemo, useCallback } from 'react';\nvar useSet = function (initialSet) {\n    if (initialSet === void 0) { initialSet = new Set(); }\n    var _a = useState(initialSet), set = _a[0], setSet = _a[1];\n    var stableActions = useMemo(function () {\n        var add = function (item) { return setSet(function (prevSet) { return new Set(__spreadArrays(Array.from(prevSet), [item])); }); };\n        var remove = function (item) { return setSet(function (prevSet) { return new Set(Array.from(prevSet).filter(function (i) { return i !== item; })); }); };\n        var toggle = function (item) {\n            return setSet(function (prevSet) {\n                return prevSet.has(item)\n                    ? new Set(Array.from(prevSet).filter(function (i) { return i !== item; }))\n                    : new Set(__spreadArrays(Array.from(prevSet), [item]));\n            });\n        };\n        return { add: add, remove: remove, toggle: toggle, reset: function () { return setSet(initialSet); } };\n    }, [setSet]);\n    var utils = __assign({ has: useCallback(function (item) { return set.has(item); }, [set]) }, stableActions);\n    return [set, utils];\n};\nexport default useSet;\n"]},"metadata":{},"sourceType":"module"}