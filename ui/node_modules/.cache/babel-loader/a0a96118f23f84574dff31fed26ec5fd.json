{"ast":null,"code":"var _jsxFileName = \"/home/magoo/projects/keyrier-json/ui/src/components/output/TableDetailModal.tsx\";\nimport Loading from 'components/common/Loading';\nimport * as React from 'react';\nimport { Suspense } from 'react';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap';\nconst ReactJson = React.lazy(() => import(\n/* webpackChunkName: \"react-json-view\" */\n'react-json-view'));\nexport const TableDetailModal = ({\n  value,\n  onClose\n}) => /*#__PURE__*/React.createElement(Modal, {\n  isOpen: !!value,\n  toggle: onClose,\n  size: \"lg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ModalHeader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, \"Details\"), /*#__PURE__*/React.createElement(ModalBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, typeof value === 'object' ? /*#__PURE__*/React.createElement(Suspense, {\n  fallback: /*#__PURE__*/React.createElement(Loading, {\n    componentName: \"ReactJson\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 37\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(ReactJson, {\n  src: value ? value : {},\n  name: \"data\",\n  iconStyle: \"triangle\",\n  indentWidth: 8,\n  onAdd: () => null,\n  onDelete: () => null,\n  onEdit: () => null,\n  onSelect: () => null,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }\n})) : value));","map":{"version":3,"sources":["/home/magoo/projects/keyrier-json/ui/src/components/output/TableDetailModal.tsx"],"names":["Loading","React","Suspense","Modal","ModalBody","ModalHeader","ReactJson","lazy","TableDetailModal","value","onClose"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,2BAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAaC,QAAb,QAA6B,OAA7B;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,QAA0D,YAA1D;AAGA,MAAMC,SAAS,GAAGL,KAAK,CAACM,IAAN,CAAW,MAAM;AAAO;AAA0C,iBAAjD,CAAjB,CAAlB;AAOA,OAAO,MAAMC,gBAAsC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBAClD,oBAAC,KAAD;AAAmB,EAAA,MAAM,EAAE,CAAC,CAACD,KAA7B;AAAoC,EAAA,MAAM,EAAEC,OAA5C;AAAqD,EAAA,IAAI,EAAC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,OAAOD,KAAP,KAAiB,QAAjB,gBACG,oBAAC,QAAD;AAAU,EAAA,QAAQ,eAAE,oBAAC,OAAD;AAAS,IAAA,aAAa,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,SAAD;AACI,EAAA,GAAG,EAAEA,KAAK,GAAGA,KAAH,GAAW,EADzB;AAEI,EAAA,IAAI,EAAC,MAFT;AAGI,EAAA,SAAS,EAAC,UAHd;AAII,EAAA,WAAW,EAAE,CAJjB;AAKI,EAAA,KAAK,EAAE,MAAM,IALjB;AAMI,EAAA,QAAQ,EAAE,MAAM,IANpB;AAOI,EAAA,MAAM,EAAE,MAAM,IAPlB;AAQI,EAAA,QAAQ,EAAE,MAAM,IARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADH,GAcGA,KAfR,CAFJ,CADG","sourcesContent":["import Loading from 'components/common/Loading'\nimport * as React from 'react'\nimport { FC, Suspense } from 'react'\nimport { Modal, ModalBody, ModalHeader, ModalProps } from 'reactstrap'\nimport { itemType } from 'state/State'\n\nconst ReactJson = React.lazy(() => import(/* webpackChunkName: \"react-json-view\" */ 'react-json-view'))\n\nexport type DetailModalProps = {\n    value: itemType\n    onClose: () => void\n}\n\nexport const TableDetailModal: FC<DetailModalProps> = ({ value, onClose }) => (\n    <Modal<ModalProps> isOpen={!!value} toggle={onClose} size=\"lg\">\n        <ModalHeader>Details</ModalHeader>\n        <ModalBody>\n            {typeof value === 'object' ? (\n                <Suspense fallback={<Loading componentName=\"ReactJson\" />}>\n                    <ReactJson\n                        src={value ? value : {}}\n                        name=\"data\"\n                        iconStyle=\"triangle\"\n                        indentWidth={8}\n                        onAdd={() => null}\n                        onDelete={() => null}\n                        onEdit={() => null}\n                        onSelect={() => null}\n                    />\n                </Suspense>\n            ) : (\n                value\n            )}\n        </ModalBody>\n    </Modal>\n)\n"]},"metadata":{},"sourceType":"module"}